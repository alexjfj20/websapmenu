{"version":3,"file":"js/987.71b11cd9.js","mappings":"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","sources":["webpack://websap/./src/components/admin/AdminUsers.vue","webpack://websap/./src/components/admin/AdminUsers.vue?d7db","webpack://websap/./src/components/admin/AdminBackups.vue","webpack://websap/./src/services/backupService.js","webpack://websap/./src/components/admin/AdminBackups.vue?729c","webpack://websap/./src/components/admin/AdminInventory.vue","webpack://websap/./src/components/admin/AdminInventory.vue?f710","webpack://websap/./src/services/adminService.js","webpack://websap/./src/components/admin/AdminLogs.vue","webpack://websap/./src/components/admin/AdminLogs.vue?af13","webpack://websap/./src/components/admin/AdminDashboard.vue","webpack://websap/./src/components/admin/AdminDashboard.vue?60de"],"sourcesContent":["<template>\n  <div class=\"users-container\">\n    <h2 class=\"section-title\">Gestión de Usuarios</h2>\n    \n    <!-- Controles de búsqueda y filtros -->\n    <div class=\"users-controls\">\n      <div class=\"search-container\">\n        <input \n          v-model=\"searchTerm\" \n          placeholder=\"Buscar usuario...\" \n          class=\"search-input\"\n          @input=\"handleSearchInput\"\n        />\n      </div>\n      \n      <div class=\"filters\">\n        <select v-model=\"roleFilter\" @change=\"fetchUsers\" class=\"filter-select\">\n          <option value=\"\">Todos los roles</option>\n          <option \n            v-for=\"role in roles\" \n            :key=\"role.id\" \n            :value=\"role.nombre\"\n          >\n            {{ role.nombre }}\n          </option>\n        </select>\n        \n        <select v-model=\"statusFilter\" @change=\"fetchUsers\" class=\"filter-select\">\n          <option value=\"\">Todos los estados</option>\n          <option value=\"activo\">Activos</option>\n          <option value=\"inactivo\">Inactivos</option>\n        </select>\n      </div>\n      \n      <div class=\"actions\">\n        <button @click=\"showCreateForm\" class=\"create-user-btn\">\n          <span class=\"btn-icon\">➕</span> Nuevo Usuario\n        </button>\n      </div>\n    </div>\n    \n    <!-- Tabla de usuarios -->\n    <div v-if=\"loading\" class=\"loading-container\">\n      <div class=\"spinner\"></div>\n      <p>Cargando usuarios...</p>\n    </div>\n    \n    <div v-else-if=\"error\" class=\"error-container\">\n      <p class=\"error-message\">{{ error }}</p>\n      <button @click=\"fetchUsers\" class=\"retry-btn\">Reintentar</button>\n    </div>\n    \n    <div v-else-if=\"users.length === 0\" class=\"empty-state\">\n      <div class=\"empty-icon\">👥</div>\n      <p class=\"empty-title\">No se encontraron usuarios</p>\n      <p class=\"empty-description\">No hay usuarios que coincidan con los criterios de búsqueda</p>\n      <button @click=\"resetFilters\" class=\"reset-filters-btn\">Limpiar filtros</button>\n    </div>\n    \n    <div v-else class=\"users-table-container\">\n      <table class=\"users-table\">\n        <thead>\n          <tr>\n            <th>Nombre</th>\n            <th>Email</th>\n            <th>Teléfono</th>\n            <th>Rol</th>\n            <th>Estado</th>\n            <th>Fecha de registro</th>\n            <th>Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"user in users\" :key=\"user.id\" :class=\"{'inactive-user': user.estado === 'inactivo'}\">\n            <td>{{ user.nombre }}</td>\n            <td>{{ user.email }}</td>\n            <td>{{ user.telefono || '-' }}</td>\n            <td>\n              <div class=\"roles-list\">\n                <span \n                  v-for=\"(role, index) in user.roles\" \n                  :key=\"index\" \n                  class=\"role-badge\"\n                  :class=\"{'admin-role': role === 'Administrador', 'superadmin-role': role === 'Superadministrador'}\"\n                >\n                  {{ role }}\n                </span>\n              </div>\n            </td>\n            <td>\n              <span \n                class=\"status-badge\" \n                :class=\"user.estado === 'activo' ? 'active-status' : 'inactive-status'\"\n              >\n                {{ user.estado === 'activo' ? 'Activo' : 'Inactivo' }}\n              </span>\n            </td>\n            <td>{{ formatDate(user.fecha_creacion) }}</td>\n            <td>\n              <div class=\"action-buttons\">\n                <button @click=\"editUser(user)\" class=\"edit-btn\" title=\"Editar\">\n                  <span class=\"btn-icon\">✏️</span>\n                </button>\n                <button \n                  v-if=\"user.estado === 'activo'\" \n                  @click=\"deactivateUser(user)\" \n                  class=\"deactivate-btn\" \n                  title=\"Desactivar\"\n                >\n                  <span class=\"btn-icon\">🔴</span>\n                </button>\n                <button \n                  v-else \n                  @click=\"activateUser(user)\" \n                  class=\"activate-btn\" \n                  title=\"Activar\"\n                >\n                  <span class=\"btn-icon\">🟢</span>\n                </button>\n                <button @click=\"deleteUser(user)\" class=\"delete-btn\" title=\"Eliminar\">\n                  <span class=\"btn-icon\">❌</span>\n                </button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    \n    <!-- Form Modal -->\n    <div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\n      <div class=\"modal-container\">\n        <div class=\"modal-header\">\n          <h3>{{ isEditing ? 'Editar Usuario' : 'Crear Nuevo Usuario' }}</h3>\n          <button @click=\"closeModal\" class=\"close-btn\">&times;</button>\n        </div>\n        \n        <div class=\"modal-body\">\n          <!-- Mensaje de error -->\n          <div v-if=\"error\" class=\"alert alert-danger mb-3\">\n            {{ error }}\n          </div>\n          \n          <form @submit.prevent=\"saveUser\" class=\"user-form\">\n            <div class=\"form-group\">\n              <label for=\"nombre\">Nombre completo</label>\n              <input\n                type=\"text\"\n                id=\"nombre\"\n                v-model=\"formData.nombre\"\n                required\n                placeholder=\"Ej: Juan Pérez\"\n              >\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"email\">Correo electrónico</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                v-model=\"formData.email\"\n                required\n                placeholder=\"ejemplo@correo.com\"\n                :disabled=\"isEditing\"\n              >\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"telefono\">Teléfono</label>\n              <input\n                type=\"tel\"\n                id=\"telefono\"\n                v-model=\"formData.telefono\"\n                placeholder=\"Ej: 3001234567\"\n              >\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"password\">Contraseña {{ isEditing ? '(dejar en blanco para mantener actual)' : '' }}</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                v-model=\"formData.password\"\n                :required=\"!isEditing\"\n                placeholder=\"Contraseña segura\"\n                autocomplete=\"new-password\"\n              >\n            </div>\n            \n            <div class=\"form-group\">\n              <label>Roles</label>\n              <div class=\"roles-checkboxes\">\n                <div \n                  v-for=\"role in availableRoles\" \n                  :key=\"role.id\" \n                  class=\"role-checkbox\"\n                >\n                  <input \n                    type=\"checkbox\" \n                    :id=\"'role-' + role.id\" \n                    :value=\"role.nombre\" \n                    v-model=\"formData.roles\"\n                  >\n                  <label :for=\"'role-' + role.id\">{{ role.nombre }}</label>\n                </div>\n              </div>\n            </div>\n            \n            <div v-if=\"isEditing\" class=\"form-group\">\n              <label for=\"estado\">Estado</label>\n              <select id=\"estado\" v-model=\"formData.estado\">\n                <option value=\"activo\">Activo</option>\n                <option value=\"inactivo\">Inactivo</option>\n              </select>\n            </div>\n            \n            <div class=\"form-buttons\">\n              <button type=\"button\" @click=\"closeModal\" class=\"cancel-btn\">Cancelar</button>\n              <button type=\"submit\" class=\"save-btn\">{{ isEditing ? 'Actualizar' : 'Crear' }}</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue';\nimport { alert, confirm } from '../../services/dialogService';\nimport * as adminService from '../../services/adminService';\nimport { hasRole, getCurrentUser } from '../../services/authService';\n\nexport default {\n  name: 'AdminUsers',\n  emits: ['user-created'], // Declarar los eventos que emite el componente\n  setup(props, { emit }) { // Obtener emit desde el contexto\n    const allUsers = ref([]); // Almacena todos los usuarios sin filtrar\n    const users = ref([]); // Usuarios filtrados para mostrar\n    const roles = ref([]);\n    const loading = ref(true);\n    const error = ref(null);\n    \n    // Filtros\n    const searchTerm = ref('');\n    const roleFilter = ref('');\n    const statusFilter = ref('');\n    \n    // Formulario\n    const showModal = ref(false);\n    const isEditing = ref(false);\n    const formData = ref({\n      id: null,\n      nombre: '',\n      email: '',\n      telefono: '',\n      password: '',\n      roles: [],\n      estado: 'activo'\n    });\n    \n    // Obtener referencias a las funciones del servicio admin\n    const { \n      getUsers, \n      getRoles, \n      createUser, \n      updateUser, \n      cambiarEstadoUsuario, \n      deleteUser: removeUser \n    } = adminService;\n    \n    // Búsqueda con debounce\n    let searchTimeout = null;\n    \n    // Obtener si el usuario actual es Administrador (no Superadministrador)\n    const isOnlyAdmin = computed(() => {\n      return hasRole('Administrador') && !hasRole('Superadministrador');\n    });\n\n    // Obtener si el usuario actual es Superadministrador\n    const isSuperAdmin = computed(() => {\n      return hasRole('Superadministrador');\n    });\n\n    // Filtrar roles disponibles según el rol del usuario actual\n    const availableRoles = computed(() => {\n      if (isOnlyAdmin.value) {\n        // Si es solo Administrador, mostrar solo el rol de Empleado\n        return roles.value.filter(role => role.nombre === 'Empleado');\n      }\n      // Si es Superadministrador, mostrar todos los roles\n      return roles.value;\n    });\n\n    // Filtrar usuarios según el rol del usuario actual\n    const filteredUsers = computed(() => {\n      // Obtener el usuario actual\n      const currentUser = getCurrentUser();\n      \n      // Filtrar usuarios\n      return allUsers.value.filter(user => {\n        // Si el usuario actual es el mismo que estamos revisando, siempre mostrarlo\n        if (currentUser && user.email === currentUser.email) {\n          return true;\n        }\n        \n        // Ocultar el Super Administrador (superadmin@example.com) solo si el usuario actual NO es Superadministrador\n        if (user.email === 'superadmin@example.com' && !isSuperAdmin.value) {\n          return false;\n        }\n        \n        // Si es solo Administrador, ocultar usuarios con rol de Superadministrador\n        if (isOnlyAdmin.value) {\n          if (user.roles && Array.isArray(user.roles) && user.roles.includes('Superadministrador')) {\n            return false;\n          }\n        }\n        \n        // Los usuarios ya vienen filtrados desde el backend según quién los creó\n        // Esta función solo aplica filtros adicionales de UI\n        \n        // Aplicar filtros adicionales\n        if (roleFilter.value && (!user.roles || !user.roles.includes(roleFilter.value))) {\n          return false;\n        }\n        \n        if (statusFilter.value && user.estado !== statusFilter.value) {\n          return false;\n        }\n        \n        if (searchTerm.value && searchTerm.value.length >= 2) {\n          const term = searchTerm.value.toLowerCase();\n          const matchesName = user.nombre && user.nombre.toLowerCase().includes(term);\n          const matchesEmail = user.email && user.email.toLowerCase().includes(term);\n          \n          return matchesName || matchesEmail;\n        }\n        \n        return true;\n      });\n    });\n    \n    onMounted(async () => {\n      try {\n        console.log(\"AdminUsers componente montado - inicializando...\");\n        // Inicializar la lista de usuarios vacía\n        allUsers.value = [];\n        users.value = [];\n        // Cargar datos\n        await Promise.all([\n          fetchUsers(),\n          fetchRoles()\n        ]);\n        console.log(\"Inicialización completa, usuarios cargados:\", users.value.length);\n      } catch (initError) {\n        console.error(\"Error durante la inicialización:\", initError);\n        error.value = `Error durante la inicialización: ${initError.message}`;\n      }\n    });\n    \n    // Obtener usuarios con filtros aplicados\n    const fetchUsers = async () => {\n      try {\n        loading.value = true;\n        error.value = '';\n        \n        // Limpiar la lista de usuarios actual para evitar datos residuales\n        allUsers.value = [];\n        users.value = [];\n        \n        try {\n          console.log('Obteniendo usuarios con filtros:', {\n            searchTerm: searchTerm.value,\n            role: roleFilter.value,\n            status: statusFilter.value\n          });\n          \n          const response = await getUsers({\n            searchTerm: searchTerm.value,\n            role: roleFilter.value,\n            status: statusFilter.value\n          });\n          \n          if (response && response.success) {\n            console.log(`Recibidos ${response.data.length} usuarios de la API`);\n            \n            // Guardar usuarios en la lista local\n            allUsers.value = response.data;\n            \n            // Aplicar filtro para ocultar superadministradores y superadmin@example.com\n            users.value = filteredUsers.value;\n            return; // Salir de la función si todo fue exitoso\n          }\n          \n          // Si llegamos aquí, hubo algún problema con la respuesta\n          console.warn(\"Respuesta no exitosa de la API o formato incorrecto:\", response);\n          throw new Error(response?.message || 'Error al cargar usuarios');\n          \n        } catch (apiError) {\n          console.error(\"Error al llamar a la API:\", apiError);\n          throw apiError; // Propagar el error para que se maneje en el bloque catch externo\n        }\n        \n      } catch (err) {\n        console.error('Error general al cargar usuarios:', err);\n        error.value = `Error al cargar usuarios: ${err.message || 'Error desconocido'}`;\n        // Inicializar arrays vacíos para evitar errores\n        allUsers.value = [];\n        users.value = [];\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Obtener roles disponibles\n    const fetchRoles = async () => {\n      try {\n        try {\n          const response = await getRoles();\n          \n          if (response && response.success) {\n            roles.value = Array.isArray(response.data) ? response.data : [];\n            return; // Salir si todo fue exitoso\n          }\n          \n          // Si llegamos aquí, hubo algún problema con la respuesta\n          console.warn(\"Respuesta no exitosa de la API de roles:\", response);\n          throw new Error(response?.message || 'Error al cargar roles');\n          \n        } catch (apiError) {\n          console.error(\"Error al llamar a la API de roles:\", apiError);\n          \n          // Usar roles básicos cuando la API falla para mantener la funcionalidad\n          roles.value = [\n            { id: 1, nombre: 'Superadministrador', descripcion: 'Control total del sistema' },\n            { id: 2, nombre: 'Administrador', descripcion: 'Gestión de usuarios y configuración' },\n            { id: 3, nombre: 'Empleado', descripcion: 'Operaciones básicas' }\n          ];\n          \n          console.log(\"Usando roles básicos para mantener la funcionalidad:\", roles.value.length);\n        }\n      } catch (err) {\n        console.error('Error general al cargar roles:', err);\n        // Inicializar con roles básicos para evitar errores\n        roles.value = [\n          { id: 1, nombre: 'Superadministrador' },\n          { id: 2, nombre: 'Administrador' },\n          { id: 3, nombre: 'Empleado' }\n        ];\n      }\n    };\n    \n    // Manejar cambios en el campo de búsqueda con debounce\n    const handleSearchInput = () => {\n      clearTimeout(searchTimeout);\n      searchTimeout = setTimeout(() => {\n        // Si la búsqueda está vacía o tiene al menos 2 caracteres, realizar la búsqueda\n        if (searchTerm.value === '' || searchTerm.value.length >= 2) {\n          fetchUsers();\n        }\n      }, 300);\n    };\n    \n    // Resetear filtros\n    const resetFilters = () => {\n      searchTerm.value = '';\n      roleFilter.value = '';\n      statusFilter.value = '';\n      fetchUsers();\n    };\n    \n    // Mostrar formulario de creación\n    const showCreateForm = () => {\n      isEditing.value = false;\n      formData.value = {\n        id: null,\n        nombre: '',\n        email: '',\n        telefono: '',\n        password: '',\n        roles: ['Empleado'], // Rol por defecto\n        estado: 'activo'\n      };\n      showModal.value = true;\n    };\n    \n    // Editar usuario\n    const editUser = (user) => {\n      // No permitir editar usuarios superadministradores si el usuario actual es solo administrador\n      if (isOnlyAdmin.value && user.roles && Array.isArray(user.roles) && user.roles.includes('Superadministrador')) {\n        alert('No tienes permisos para editar usuarios con rol de Superadministrador');\n        return;\n      }\n\n      isEditing.value = true;\n      formData.value = {\n        id: user.id,\n        nombre: user.nombre,\n        email: user.email,\n        telefono: user.telefono || '',\n        password: '', // Dejamos vacío para mantener la contraseña actual\n        roles: [...user.roles],\n        estado: user.estado\n      };\n      showModal.value = true;\n    };\n    \n    // Guardar usuario (crear o actualizar)\n    const saveUser = async () => {\n      try {\n        loading.value = true;\n        error.value = ''; // Limpiar errores previos\n        \n        // Validar que al menos se seleccionó un rol\n        if (!formData.value.roles.length) {\n          await alert('Debe seleccionar al menos un rol para el usuario');\n          loading.value = false;\n          return;\n        }\n\n        // Validar que un Administrador no asigne roles superiores\n        if (isOnlyAdmin.value) {\n          // Filtrar los roles para mantener solo el de Empleado\n          formData.value.roles = formData.value.roles.filter(role => role === 'Empleado');\n          \n          // Si después del filtro no queda ningún rol, añadimos Empleado\n          if (formData.value.roles.length === 0) {\n            formData.value.roles = ['Empleado'];\n          }\n        }\n        \n        if (isEditing.value) {\n          // Filtrar para enviar solo los campos necesarios\n          const userData = {\n            nombre: formData.value.nombre,\n            telefono: formData.value.telefono,\n            roles: formData.value.roles,\n            estado: formData.value.estado\n          };\n          \n          // Si se proporciona una contraseña, incluirla\n          if (formData.value.password) {\n            userData.password = formData.value.password;\n          }\n          \n          const response = await updateUser(formData.value.id, userData);\n          \n          if (response && response.success) {\n            await alert(response.message || 'Usuario actualizado exitosamente');\n            \n            // Actualizar el usuario en la lista local\n            const index = allUsers.value.findIndex(u => u.id === formData.value.id);\n            if (index !== -1) {\n              allUsers.value[index] = { ...allUsers.value[index], ...userData };\n              // Refrescar la lista de usuarios filtrados\n              users.value = filteredUsers.value;\n            } else {\n              // Si no se encuentra el usuario, refrescar toda la lista\n              await fetchUsers();\n            }\n          } else {\n            throw new Error(response?.message || 'Error al actualizar usuario');\n          }\n        } else {\n          // Crear nuevo usuario\n          const userData = {\n            nombre: formData.value.nombre,\n            email: formData.value.email,\n            password: formData.value.password,\n            telefono: formData.value.telefono,\n            roles: formData.value.roles,\n            fecha_creacion: new Date().toISOString() // Añadir fecha de creación\n          };\n          \n          try {\n            console.log(\"Llamando a createUser con:\", userData);\n            const response = await createUser(userData);\n            \n            if (response && response.success) {\n              await alert(response.message || 'Usuario creado exitosamente');\n              showModal.value = false; // Cerrar el modal después de crear exitosamente\n              \n              // Añadir directamente el usuario creado a la lista local\n              if (response.data) {\n                // Asegurarse de que el usuario tenga fecha de creación\n                const newUser = {\n                  ...response.data,\n                  fecha_creacion: response.data.fecha_creacion || new Date().toISOString()\n                };\n                allUsers.value = [newUser, ...allUsers.value];\n                // Refrescar la lista de usuarios filtrados\n                users.value = filteredUsers.value;\n              } else {\n                // Si no tenemos los datos del usuario creado, refrescar toda la lista\n                await fetchUsers();\n              }\n              \n              // Emitir evento para refrescar estadísticas en el dashboard\n              emit('user-created');\n            } else {\n              throw new Error(response?.message || 'Error al crear usuario');\n            }\n          } catch (createError) {\n            console.error('Error al crear usuario:', createError);\n            error.value = createError.message || 'Error al crear usuario';\n            // No cerrar el modal para permitir corregir el error\n          }\n        }\n      } catch (err) {\n        console.error('Error al guardar el usuario:', err);\n        error.value = err.message || 'Error al guardar el usuario';\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Activar usuario\n    const activateUser = async (user) => {\n      // No permitir activar usuarios superadministradores si el usuario actual es solo administrador\n      if (isOnlyAdmin.value && user.roles && Array.isArray(user.roles) && user.roles.includes('Superadministrador')) {\n        alert('No tienes permisos para modificar usuarios con rol de Superadministrador');\n        return;\n      }\n\n      try {\n        const confirmed = await confirm(\n          `¿Estás seguro de que deseas activar el usuario ${user.nombre}?`,\n          { \n            title: 'Confirmar activación',\n            confirmText: 'Activar',\n            cancelText: 'Cancelar' \n          }\n        );\n        \n        if (confirmed) {\n          loading.value = true;\n          \n          console.log(`Activando usuario con ID: ${user.id}`);\n          const response = await cambiarEstadoUsuario(user.id, 'activo');\n          \n          if (response && response.success) {\n            await alert(response.message || 'Usuario activado exitosamente');\n            \n            // Actualizar estado del usuario localmente en la lista\n            const index = allUsers.value.findIndex(u => u.id === user.id);\n            if (index !== -1) {\n              allUsers.value[index].estado = 'activo';\n              // Refrescar la lista de usuarios filtrados\n              users.value = filteredUsers.value;\n            }\n          } else {\n            throw new Error(response?.message || 'Error al activar usuario');\n          }\n        }\n      } catch (err) {\n        console.error('Error al activar usuario:', err);\n        await alert(`Error al activar usuario: ${err.message || 'Error desconocido'}`);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Desactivar usuario\n    const deactivateUser = async (user) => {\n      // No permitir desactivar usuarios superadministradores si el usuario actual es solo administrador\n      if (isOnlyAdmin.value && user.roles && Array.isArray(user.roles) && user.roles.includes('Superadministrador')) {\n        alert('No tienes permisos para modificar usuarios con rol de Superadministrador');\n        return;\n      }\n\n      try {\n        const confirmed = await confirm(\n          `¿Estás seguro de que deseas desactivar el usuario ${user.nombre}? No podrá acceder al sistema mientras esté inactivo.`,\n          { title: 'Confirmar desactivación' }\n        );\n        \n        if (confirmed) {\n          loading.value = true;\n          \n          console.log(`Desactivando usuario con ID: ${user.id}`);\n          const response = await cambiarEstadoUsuario(user.id, 'inactivo');\n          \n          if (response && response.success) {\n            await alert(response.message || 'Usuario desactivado exitosamente');\n            \n            // Actualizar estado del usuario localmente en la lista\n            const index = allUsers.value.findIndex(u => u.id === user.id);\n            if (index !== -1) {\n              allUsers.value[index].estado = 'inactivo';\n              // Refrescar la lista de usuarios filtrados\n              users.value = filteredUsers.value;\n            }\n          } else {\n            throw new Error(response?.message || 'Error al desactivar usuario');\n          }\n        }\n      } catch (err) {\n        console.error('Error al desactivar usuario:', err);\n        await alert(`Error al desactivar usuario: ${err.message || 'Error desconocido'}`);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Eliminar usuario\n    const deleteUser = async (user) => {\n      // No permitir eliminar usuarios superadministradores si el usuario actual es solo administrador\n      if (isOnlyAdmin.value && user.roles && Array.isArray(user.roles) && user.roles.includes('Superadministrador')) {\n        alert('No tienes permisos para eliminar usuarios con rol de Superadministrador');\n        return;\n      }\n\n      try {\n        const confirmed = await confirm(\n          `¿Estás seguro de que deseas eliminar permanentemente el usuario ${user.nombre}? Esta acción no se puede deshacer.`,\n          { \n            title: 'Confirmar eliminación',\n            confirmText: 'Eliminar',\n            cancelText: 'Cancelar' \n          }\n        );\n        \n        if (confirmed) {\n          loading.value = true;\n          \n          console.log(`Eliminando usuario con ID: ${user.id}`);\n          const response = await removeUser(user.id);\n          \n          if (response && response.success) {\n            await alert(response.message || 'Usuario eliminado exitosamente');\n            \n            // Eliminar usuario de la lista local\n            allUsers.value = allUsers.value.filter(u => u.id !== user.id);\n            // Refrescar la lista de usuarios filtrados\n            users.value = filteredUsers.value;\n          } else {\n            throw new Error(response?.message || 'Error al eliminar usuario');\n          }\n        }\n      } catch (err) {\n        console.error('Error al eliminar usuario:', err);\n        await alert(`Error al eliminar usuario: ${err.message || 'Error desconocido'}`);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Cerrar modal\n    const closeModal = () => {\n      showModal.value = false;\n    };\n    \n    // Formatear fecha\n    const formatDate = (dateStr) => {\n      // Si no hay fecha, usar la fecha actual en lugar de mostrar N/A\n      if (!dateStr) {\n        dateStr = new Date().toISOString();\n      }\n      \n      try {\n        const date = new Date(dateStr);\n        if (isNaN(date.getTime())) return 'Fecha inválida';\n        \n        return new Intl.DateTimeFormat('es-ES', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        }).format(date);\n      } catch (e) {\n        return 'Fecha inválida';\n      }\n    };\n    \n    return {\n      users,\n      roles,\n      loading,\n      error,\n      searchTerm,\n      roleFilter,\n      statusFilter,\n      showModal,\n      isEditing,\n      formData,\n      fetchUsers,\n      handleSearchInput,\n      resetFilters,\n      showCreateForm,\n      editUser,\n      saveUser,\n      activateUser,\n      deactivateUser,\n      deleteUser,\n      closeModal,\n      formatDate,\n      availableRoles,\n      isOnlyAdmin,\n      filteredUsers\n    };\n  }\n}\n</script>\n\n<style scoped>\n.users-container {\n  padding: 0;\n}\n\n.section-title {\n  font-size: 24px;\n  margin-bottom: 30px;\n  color: #333;\n  border-bottom: 2px solid #4CAF50;\n  padding-bottom: 10px;\n}\n\n/* Controles y filtros */\n.users-controls {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin-bottom: 30px;\n}\n\n.search-container {\n  flex-grow: 1;\n  min-width: 250px;\n}\n\n.search-input {\n  width: 100%;\n  padding: 10px 15px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n}\n\n.filters {\n  display: flex;\n  gap: 10px;\n}\n\n.filter-select {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: white;\n}\n\n.actions {\n  margin-left: auto;\n}\n\n.create-user-btn {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  transition: background-color 0.3s;\n}\n\n.create-user-btn:hover {\n  background-color: #45a049;\n}\n\n.btn-icon {\n  font-size: 16px;\n}\n\n/* Estados de carga y error */\n.loading-container, .error-container, .empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 50px 20px;\n  text-align: center;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  margin: 20px 0;\n}\n\n.spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  border-left-color: #4CAF50;\n  animation: spin 1s linear infinite;\n  margin-bottom: 15px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.error-message {\n  color: #f44336;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n\n.retry-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.retry-btn:hover {\n  background-color: #0b7dda;\n}\n\n.empty-icon {\n  font-size: 48px;\n  color: #ccc;\n  margin-bottom: 10px;\n}\n\n.empty-title {\n  font-size: 20px;\n  color: #666;\n  margin-bottom: 10px;\n}\n\n.empty-description {\n  color: #888;\n  margin-bottom: 20px;\n}\n\n.reset-filters-btn {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.reset-filters-btn:hover {\n  background-color: #45a049;\n}\n\n/* Tabla de usuarios */\n.users-table-container {\n  overflow-x: auto;\n  margin-top: 20px;\n}\n\n.users-table {\n  width: 100%;\n  border-collapse: collapse;\n  box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.users-table th, .users-table td {\n  padding: 15px;\n  text-align: left;\n}\n\n.users-table th {\n  background-color: #4CAF50;\n  color: white;\n  font-weight: normal;\n}\n\n.users-table tr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\n.users-table tr:hover {\n  background-color: #f1f1f1;\n}\n\n.inactive-user {\n  opacity: 0.7;\n  background-color: #f5f5f5 !important;\n}\n\n/* Badges */\n.roles-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n}\n\n.role-badge {\n  padding: 3px 8px;\n  border-radius: 20px;\n  font-size: 12px;\n  background-color: #e0e0e0;\n  color: #333;\n}\n\n.admin-role {\n  background-color: #2196F3;\n  color: white;\n}\n\n.superadmin-role {\n  background-color: #673AB7;\n  color: white;\n}\n\n.status-badge {\n  padding: 3px 8px;\n  border-radius: 20px;\n  font-size: 12px;\n}\n\n.active-status {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.inactive-status {\n  background-color: #f44336;\n  color: white;\n}\n\n/* Botones de acción */\n.action-buttons {\n  display: flex;\n  gap: 5px;\n}\n\n.edit-btn, .activate-btn, .deactivate-btn, .delete-btn {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s;\n}\n\n.edit-btn {\n  background-color: #2196F3;\n  color: white;\n}\n\n.edit-btn:hover {\n  background-color: #0b7dda;\n}\n\n.activate-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.activate-btn:hover {\n  background-color: #45a049;\n}\n\n.deactivate-btn {\n  background-color: #FF9800;\n  color: white;\n}\n\n.deactivate-btn:hover {\n  background-color: #e68a00;\n}\n\n.delete-btn {\n  background-color: #f44336;\n  color: white;\n}\n\n.delete-btn:hover {\n  background-color: #d32f2f;\n}\n\n/* Modal */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.modal-container {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  animation: modalFadeIn 0.3s;\n}\n\n@keyframes modalFadeIn {\n  from { opacity: 0; transform: translateY(-20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  border-bottom: 1px solid #eee;\n}\n\n.modal-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #999;\n}\n\n.close-btn:hover {\n  color: #666;\n}\n\n.modal-body {\n  padding: 20px;\n}\n\n/* Formulario */\n.user-form {\n  display: grid;\n  gap: 15px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.form-group label {\n  color: #666;\n  font-weight: 600;\n}\n\n.form-group input, .form-group select {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.form-group input:focus, .form-group select:focus {\n  outline: none;\n  border-color: #4CAF50;\n}\n\n.form-group input:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n.roles-checkboxes {\n  display: grid;\n  gap: 10px;\n}\n\n.role-checkbox {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.role-checkbox input[type=\"checkbox\"] {\n  width: auto;\n  margin: 0;\n}\n\n.form-buttons {\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.cancel-btn, .save-btn {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  flex: 1;\n}\n\n.cancel-btn {\n  background-color: #f1f1f1;\n  color: #333;\n}\n\n.cancel-btn:hover {\n  background-color: #e1e1e1;\n}\n\n.save-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.save-btn:hover {\n  background-color: #45a049;\n}\n\n@media (max-width: 768px) {\n  .users-controls {\n    flex-direction: column;\n  }\n  \n  .actions {\n    margin-left: 0;\n    width: 100%;\n  }\n  \n  .create-user-btn {\n    width: 100%;\n  }\n}\n</style>\n","import { render } from \"./AdminUsers.vue?vue&type=template&id=a39eb1fc&scoped=true\"\nimport script from \"./AdminUsers.vue?vue&type=script&lang=js\"\nexport * from \"./AdminUsers.vue?vue&type=script&lang=js\"\n\nimport \"./AdminUsers.vue?vue&type=style&index=0&id=a39eb1fc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a39eb1fc\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"backups-container\">\r\n    <h2 class=\"section-title\">Gestión de Respaldos</h2>\r\n    \r\n    <div class=\"backups-actions\">\r\n      <button @click=\"createNewBackup\" class=\"create-backup-btn\" :disabled=\"creating\">\r\n        <span v-if=\"creating\">\r\n          <span class=\"loading-spinner\"></span> Creando respaldo...\r\n        </span>\r\n        <span v-else>\r\n          <span class=\"action-icon\">💾</span> Crear respaldo ahora\r\n        </span>\r\n      </button>\r\n    </div>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando respaldos...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"backups.length === 0\" class=\"empty-state\">\r\n      <div class=\"empty-icon\">📂</div>\r\n      <p>No hay respaldos disponibles</p>\r\n      <p class=\"empty-desc\">Crea tu primer respaldo haciendo clic en el botón \"Crear respaldo ahora\"</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"backups-grid\">\r\n      <div v-for=\"backup in backups\" :key=\"backup.id\" class=\"backup-card\">\r\n        <div class=\"backup-icon\">💾</div>\r\n        <div class=\"backup-info\">\r\n          <h3>{{ backup.archivo }}</h3>\r\n          <p class=\"backup-date\">Fecha: {{ formatDate(backup.fecha) }}</p>\r\n          <p class=\"backup-size\">Tamaño: {{ backup.tamano }}</p>\r\n        </div>\r\n        <div class=\"backup-actions\">\r\n          <button @click=\"restoreBackup(backup)\" class=\"restore-btn\" :disabled=\"restoring === backup.id\">\r\n            <span v-if=\"restoring === backup.id\">Restaurando...</span>\r\n            <span v-else>Restaurar</span>\r\n          </button>\r\n          <button @click=\"downloadBackup(backup)\" class=\"download-btn\">Descargar</button>\r\n          <button @click=\"deleteBackup(backup)\" class=\"delete-btn\" :disabled=\"deleting === backup.id\">\r\n            <span v-if=\"deleting === backup.id\">Eliminando...</span>\r\n            <span v-else>Eliminar</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Modal de confirmación para restaurar respaldo -->\r\n    <div v-if=\"showRestoreModal\" class=\"modal-overlay\" @click.self=\"cancelRestore\">\r\n      <div class=\"modal-container\">\r\n        <div class=\"modal-header\">\r\n          <h3>Confirmar restauración</h3>\r\n          <button @click=\"cancelRestore\" class=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p class=\"warning-text\">\r\n            <span class=\"warning-icon\">⚠️</span>\r\n            Estás a punto de restaurar el sistema a partir del respaldo seleccionado. Esta acción sobrescribirá los datos actuales.\r\n          </p>\r\n          <p>¿Estás seguro de que deseas continuar?</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"cancelRestore\" class=\"cancel-btn\">Cancelar</button>\r\n          <button @click=\"confirmRestore\" class=\"confirm-btn\">Confirmar restauración</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { getBackups, createBackup, restoreBackup, deleteBackup as deleteBackupFromDB } from '../../services/backupService';\r\nimport { confirm, alert } from '../../services/dialogService';\r\n\r\nexport default {\r\n  name: 'AdminBackups',\r\n  setup() {\r\n    const backups = ref([]);\r\n    const loading = ref(true);\r\n    const creating = ref(false);\r\n    const restoring = ref(null);\r\n    const deleting = ref(null);\r\n    const selectedBackup = ref(null);\r\n    const showRestoreModal = ref(false);\r\n    \r\n    // Cargar respaldos al montar el componente\r\n    onMounted(async () => {\r\n      await fetchBackups();\r\n    });\r\n    \r\n    // Obtener respaldos\r\n    const fetchBackups = async () => {\r\n      try {\r\n        loading.value = true;\r\n        const response = await getBackups();\r\n        \r\n        if (response && response.success) {\r\n          backups.value = response.data || [];\r\n          \r\n          // Ordenar por fecha (más reciente primero)\r\n          backups.value.sort((a, b) => new Date(b.fecha) - new Date(a.fecha));\r\n        } else {\r\n          throw new Error('Error al cargar respaldos');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener respaldos:', error);\r\n        await alert('Error al cargar los respaldos: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Formatear fecha\r\n    const formatDate = (dateStr) => {\r\n      if (!dateStr) return 'N/A';\r\n      \r\n      try {\r\n        const date = new Date(dateStr);\r\n        if (isNaN(date.getTime())) return 'Fecha inválida';\r\n        \r\n        return new Intl.DateTimeFormat('es-ES', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit'\r\n        }).format(date);\r\n      } catch (e) {\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Crear nuevo respaldo\r\n    const createNewBackup = async () => {\r\n      try {\r\n        creating.value = true;\r\n        const result = await createBackup();\r\n        \r\n        if (result && result.success) {\r\n          // Agregar el nuevo respaldo a la lista\r\n          backups.value.unshift(result.data);\r\n          await alert('Respaldo creado correctamente');\r\n        } else {\r\n          throw new Error('Error al crear el respaldo');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al crear respaldo:', error);\r\n        await alert('Error al crear respaldo: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        creating.value = false;\r\n      }\r\n    };\r\n    \r\n    // Iniciar proceso de restauración\r\n    const restoreBackup = (backup) => {\r\n      selectedBackup.value = backup;\r\n      showRestoreModal.value = true;\r\n    };\r\n    \r\n    // Cancelar restauración\r\n    const cancelRestore = () => {\r\n      showRestoreModal.value = false;\r\n      selectedBackup.value = null;\r\n    };\r\n    \r\n    // Confirmar restauración\r\n    const confirmRestore = async () => {\r\n      try {\r\n        if (!selectedBackup.value) return;\r\n        \r\n        showRestoreModal.value = false;\r\n        restoring.value = selectedBackup.value.id;\r\n        \r\n        const result = await restoreBackup(selectedBackup.value.id);\r\n        \r\n        if (result && result.success) {\r\n          await alert('Respaldo restaurado correctamente. Se recargará la página para aplicar los cambios.');\r\n          // Recargar la página\r\n          window.location.reload();\r\n        } else {\r\n          throw new Error('Error al restaurar el respaldo');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al restaurar respaldo:', error);\r\n        await alert('Error al restaurar respaldo: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        restoring.value = null;\r\n        selectedBackup.value = null;\r\n      }\r\n    };\r\n    \r\n    // Descargar respaldo\r\n    const downloadBackup = async (backup) => {\r\n      try {\r\n        // En una implementación real, esto descargaría el archivo del servidor\r\n        // Para el prototipo, simulamos la descarga\r\n        const element = document.createElement('a');\r\n        element.setAttribute('href', 'data:application/zip;charset=utf-8,' + encodeURIComponent('Contenido simulado de respaldo'));\r\n        element.setAttribute('download', backup.archivo);\r\n        \r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        \r\n        element.click();\r\n        \r\n        document.body.removeChild(element);\r\n        \r\n        await alert('Respaldo descargado correctamente');\r\n      } catch (error) {\r\n        console.error('Error al descargar respaldo:', error);\r\n        await alert('Error al descargar respaldo: ' + (error.message || 'Error desconocido'));\r\n      }\r\n    };\r\n    \r\n    // Eliminar respaldo\r\n    const deleteBackup = async (backup) => {\r\n      try {\r\n        const confirmed = await confirm(`¿Estás seguro de eliminar el respaldo \"${backup.archivo}\"?`, {\r\n          title: 'Confirmar eliminación',\r\n          confirmText: 'Eliminar',\r\n          cancelText: 'Cancelar'\r\n        });\r\n        \r\n        if (confirmed) {\r\n          deleting.value = backup.id;\r\n          const result = await deleteBackupFromDB(backup.id);\r\n          \r\n          if (result && result.success) {\r\n            // Eliminar el respaldo de la lista\r\n            backups.value = backups.value.filter(b => b.id !== backup.id);\r\n            await alert('Respaldo eliminado correctamente');\r\n          } else {\r\n            throw new Error('Error al eliminar el respaldo');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al eliminar respaldo:', error);\r\n        await alert('Error al eliminar respaldo: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        deleting.value = null;\r\n      }\r\n    };\r\n    \r\n    return {\r\n      backups,\r\n      loading,\r\n      creating,\r\n      restoring,\r\n      deleting,\r\n      selectedBackup,\r\n      showRestoreModal,\r\n      formatDate,\r\n      createNewBackup,\r\n      restoreBackup,\r\n      cancelRestore,\r\n      confirmRestore,\r\n      downloadBackup,\r\n      deleteBackup\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.backups-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.backups-actions {\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.create-backup-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 12px 20px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.create-backup-btn:hover:not(:disabled) {\r\n  background-color: #45a049;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.create-backup-btn:disabled {\r\n  background-color: #a5d6a7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.action-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 300px;\r\n  gap: 15px;\r\n}\r\n\r\n.spinner, .loading-spinner {\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  border: 3px solid rgba(255,255,255,0.3);\r\n  border-top: 3px solid white;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid #f3f3f3;\r\n  border-top: 3px solid #4CAF50;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 50px 20px;\r\n  color: #666;\r\n  text-align: center;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  border: 1px dashed #ddd;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n  opacity: 0.5;\r\n}\r\n\r\n.empty-desc {\r\n  font-style: italic;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n  color: #888;\r\n}\r\n\r\n.backups-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.backup-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.backup-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n}\r\n\r\n.backup-icon {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n  height: 80px;\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.backup-info {\r\n  padding: 15px;\r\n}\r\n\r\n.backup-info h3 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 16px;\r\n  color: #333;\r\n  word-break: break-all;\r\n}\r\n\r\n.backup-date, .backup-size {\r\n  margin: 5px 0;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.backup-actions {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 8px;\r\n  padding: 15px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.backup-actions button {\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.restore-btn {\r\n  grid-column: 1 / 3;\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.restore-btn:hover:not(:disabled) {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.download-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.download-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\n.delete-btn:hover:not(:disabled) {\r\n  background-color: #d32f2f;\r\n}\r\n\r\n.restore-btn:disabled,\r\n.delete-btn:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Modal styles */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-container {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.3);\r\n  animation: fadeIn 0.3s;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(-20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #666;\r\n}\r\n\r\n.modal-body {\r\n  padding: 20px;\r\n}\r\n\r\n.warning-text {\r\n  background-color: #fff3e0;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n}\r\n\r\n.warning-icon {\r\n  font-size: 20px;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.cancel-btn, .confirm-btn {\r\n  padding: 8px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #f1f1f1;\r\n  color: #333;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background-color: #e1e1f1;\r\n}\r\n\r\n.confirm-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.confirm-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .backups-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .backup-actions {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .restore-btn {\r\n    grid-column: auto;\r\n  }\r\n}\r\n</style>\r\n","/**\r\n * Servicio para gestión de respaldos del sistema\r\n */\r\n\r\n/**\r\n * Obtiene la lista de respaldos disponibles\r\n * @returns {Promise<Object>} Respuesta con los respaldos\r\n */\r\nexport async function getBackups() {\r\n  // En una implementación real, esto llamaría a una API\r\n  // Por ahora, simulamos datos para desarrollo\r\n  \r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        data: [\r\n          {\r\n            id: 1,\r\n            fecha: new Date().toISOString(),\r\n            archivo: 'backup_' + formatDateForFilename(new Date()) + '.zip',\r\n            tamano: '2.5 MB'\r\n          },\r\n          {\r\n            id: 2,\r\n            fecha: new Date(Date.now() - 86400000).toISOString(), // 1 día atrás\r\n            archivo: 'backup_' + formatDateForFilename(new Date(Date.now() - 86400000)) + '.zip',\r\n            tamano: '2.3 MB'\r\n          },\r\n          {\r\n            id: 3,\r\n            fecha: new Date(Date.now() - 86400000 * 7).toISOString(), // 7 días atrás\r\n            archivo: 'backup_' + formatDateForFilename(new Date(Date.now() - 86400000 * 7)) + '.zip',\r\n            tamano: '2.1 MB'\r\n          }\r\n        ]\r\n      });\r\n    }, 1000);\r\n  });\r\n}\r\n\r\n/**\r\n * Crea un nuevo respaldo del sistema\r\n * @returns {Promise<Object>} Respuesta con información del respaldo creado\r\n */\r\nexport async function createBackup() {\r\n  // Simulación de creación de respaldo\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      const now = new Date();\r\n      resolve({\r\n        success: true,\r\n        data: {\r\n          id: Date.now(),\r\n          fecha: now.toISOString(),\r\n          archivo: 'backup_' + formatDateForFilename(now) + '.zip',\r\n          tamano: '2.4 MB'\r\n        },\r\n        message: 'Respaldo creado exitosamente'\r\n      });\r\n    }, 2000);\r\n  });\r\n}\r\n\r\n/**\r\n * Restaura un respaldo específico\r\n * @param {number} backupId ID del respaldo a restaurar\r\n * @returns {Promise<Object>} Resultado de la operación\r\n */\r\nexport async function restoreBackup(backupId) {\r\n  // Simulación de restauración\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        message: 'Respaldo restaurado exitosamente'\r\n      });\r\n    }, 3000);\r\n  });\r\n}\r\n\r\n/**\r\n * Elimina un respaldo específico\r\n * @param {number} backupId ID del respaldo a eliminar\r\n * @returns {Promise<Object>} Resultado de la operación\r\n */\r\nexport async function deleteBackup(backupId) {\r\n  // Simulación de eliminación\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        message: 'Respaldo eliminado exitosamente'\r\n      });\r\n    }, 1000);\r\n  });\r\n}\r\n\r\n/**\r\n * Formatea una fecha para su uso en nombres de archivo\r\n * @param {Date} date Fecha a formatear\r\n * @returns {string} Fecha formateada como YYYYMMDD_HHMMSS\r\n */\r\nfunction formatDateForFilename(date) {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n  \r\n  return `${year}${month}${day}_${hours}${minutes}${seconds}`;\r\n}\r\n\r\nexport default {\r\n  getBackups,\r\n  createBackup,\r\n  restoreBackup,\r\n  deleteBackup\r\n};\r\n","import { render } from \"./AdminBackups.vue?vue&type=template&id=1ca49867&scoped=true\"\nimport script from \"./AdminBackups.vue?vue&type=script&lang=js\"\nexport * from \"./AdminBackups.vue?vue&type=script&lang=js\"\n\nimport \"./AdminBackups.vue?vue&type=style&index=0&id=1ca49867&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1ca49867\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"inventory-container\">\r\n    <h2 class=\"section-title\">Gestión de Inventario</h2>\r\n    \r\n    <!-- Controles de filtrado y búsqueda -->\r\n    <div class=\"inventory-controls\">\r\n      <div class=\"search-container\">\r\n        <input \r\n          v-model=\"searchTerm\" \r\n          placeholder=\"Buscar producto...\" \r\n          class=\"search-input\"\r\n          @input=\"handleSearchInput\"\r\n        />\r\n      </div>\r\n      \r\n      <div class=\"filters\">\r\n        <select v-model=\"stockFilter\" @change=\"applyFilters\" class=\"filter-select\">\r\n          <option value=\"all\">Todos los productos</option>\r\n          <option value=\"low\">Stock bajo</option>\r\n          <option value=\"out\">Sin stock</option>\r\n        </select>\r\n        \r\n        <select v-model=\"categoryFilter\" @change=\"applyFilters\" class=\"filter-select\">\r\n          <option value=\"\">Todas las categorías</option>\r\n          <option value=\"con_refresco\">Con refresco</option>\r\n          <option value=\"sin_refresco\">Sin refresco</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <div class=\"actions\">\r\n        <button @click=\"refreshInventory\" class=\"refresh-btn\">\r\n          <span class=\"btn-icon\">🔄</span> Actualizar\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Estados de carga y error -->\r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando inventario...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"error-container\">\r\n      <p class=\"error-message\">{{ error }}</p>\r\n      <button @click=\"loadInventory\" class=\"retry-btn\">Reintentar</button>\r\n    </div>\r\n    \r\n    <div v-else-if=\"filteredProducts.length === 0\" class=\"empty-state\">\r\n      <div class=\"empty-icon\">📦</div>\r\n      <p>No se encontraron productos</p>\r\n      <p class=\"empty-desc\">Intenta cambiar los filtros de búsqueda o agrega nuevos productos al inventario</p>\r\n    </div>\r\n    \r\n    <!-- Tabla de inventario -->\r\n    <div v-else class=\"inventory-table-container\">\r\n      <table class=\"inventory-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Categoría</th>\r\n            <th>Stock Actual</th>\r\n            <th>Estado</th>\r\n            <th>Última Actualización</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"product in filteredProducts\" :key=\"product.id\" :class=\"getRowClass(product)\">\r\n            <td>{{ product.name }}</td>\r\n            <td>{{ product.includesDrink ? 'Con refresco' : 'Sin refresco' }}</td>\r\n            <td>{{ product.availableQuantity }}</td>\r\n            <td>\r\n              <span :class=\"getStatusClass(product)\">\r\n                {{ getStatusText(product) }}\r\n              </span>\r\n            </td>\r\n            <td>{{ formatDate(product.lastUpdated) }}</td>\r\n            <td class=\"actions-cell\">\r\n              <button @click=\"openUpdateStockModal(product)\" class=\"update-btn\" title=\"Actualizar stock\">\r\n                📝\r\n              </button>\r\n              <button @click=\"openHistoryModal(product)\" class=\"history-btn\" title=\"Ver historial\">\r\n                📋\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n    <!-- Modal para actualizar stock -->\r\n    <div v-if=\"showUpdateModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-container\">\r\n        <div class=\"modal-header\">\r\n          <h3>Actualizar Stock</h3>\r\n          <button @click=\"closeUpdateModal\" class=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p><strong>Producto:</strong> {{ selectedProduct?.name }}</p>\r\n          <p><strong>Stock actual:</strong> {{ selectedProduct?.availableQuantity || 0 }}</p>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"newStock\">Nuevo stock:</label>\r\n            <input \r\n              type=\"number\" \r\n              id=\"newStock\" \r\n              v-model=\"updateStockForm.newQuantity\" \r\n              min=\"0\" \r\n              class=\"form-input\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"reason\">Motivo del ajuste:</label>\r\n            <textarea \r\n              id=\"reason\" \r\n              v-model=\"updateStockForm.reason\" \r\n              class=\"form-textarea\" \r\n              placeholder=\"Explique el motivo del ajuste de inventario\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"closeUpdateModal\" class=\"cancel-btn\">Cancelar</button>\r\n          <button @click=\"updateStock\" class=\"save-btn\" :disabled=\"updateStockForm.isUpdating\">\r\n            <span v-if=\"updateStockForm.isUpdating\">Actualizando...</span>\r\n            <span v-else>Guardar Cambios</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Modal para ver historial -->\r\n    <div v-if=\"showHistoryModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-container history-modal\">\r\n        <div class=\"modal-header\">\r\n          <h3>Historial de {{ selectedProduct?.name }}</h3>\r\n          <button @click=\"closeHistoryModal\" class=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div v-if=\"productHistory.length === 0\" class=\"empty-history\">\r\n            <p>No hay registros de movimientos para este producto.</p>\r\n          </div>\r\n          <div v-else class=\"history-list\">\r\n            <div v-for=\"(record, index) in productHistory\" :key=\"index\" class=\"history-item\">\r\n              <div class=\"history-date\">{{ formatDate(record.date) }}</div>\r\n              <div class=\"history-details\">\r\n                <span class=\"history-type\" :class=\"record.type\">\r\n                  {{ record.type === 'increase' ? 'Incremento' : record.type === 'decrease' ? 'Reducción' : 'Ajuste' }}\r\n                </span>\r\n                <span class=\"history-quantity\">\r\n                  {{ record.type === 'increase' ? '+' : '' }}{{ record.change }}\r\n                </span>\r\n                <span class=\"history-stock\">\r\n                  Stock resultante: {{ record.newQuantity }}\r\n                </span>\r\n              </div>\r\n              <div class=\"history-reason\">\r\n                {{ record.reason || 'Sin motivo especificado' }}\r\n              </div>\r\n              <div class=\"history-user\">\r\n                Por: {{ record.userName || 'Sistema' }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"closeHistoryModal\" class=\"cancel-btn\">Cerrar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { getMenuItems, updateItemStock } from '../../services/adminService';\r\nimport { alert, confirm } from '../../services/dialogService';\r\nimport { getCurrentUser } from '../../services/authService';\r\n\r\nexport default {\r\n  name: 'AdminInventory',\r\n  setup() {\r\n    // Estados\r\n    const products = ref([]);\r\n    const loading = ref(true);\r\n    const error = ref(null);\r\n    const searchTerm = ref('');\r\n    const stockFilter = ref('all');\r\n    const categoryFilter = ref('');\r\n    \r\n    // Estados para modales\r\n    const showUpdateModal = ref(false);\r\n    const showHistoryModal = ref(false);\r\n    const selectedProduct = ref(null);\r\n    const productHistory = ref([]);\r\n    \r\n    // Formulario para actualizar stock\r\n    const updateStockForm = ref({\r\n      newQuantity: 0,\r\n      reason: '',\r\n      isUpdating: false\r\n    });\r\n    \r\n    // Cargar productos al montar el componente\r\n    onMounted(() => {\r\n      loadInventory();\r\n    });\r\n    \r\n    // Cargar inventario de productos\r\n    const loadInventory = async () => {\r\n      try {\r\n        loading.value = true;\r\n        error.value = null;\r\n        \r\n        const response = await getMenuItems();\r\n        \r\n        if (response.success) {\r\n          // Asegurar que cada producto tiene propiedades relacionadas con el inventario\r\n          products.value = response.data.map(item => ({\r\n            ...item,\r\n            availableQuantity: item.availableQuantity || 0,\r\n            lastUpdated: item.lastUpdated || new Date().toISOString(),\r\n            stockHistory: item.stockHistory || []\r\n          }));\r\n          \r\n          console.log('Inventario cargado:', products.value);\r\n        } else {\r\n          throw new Error(response.message || 'Error al cargar el inventario');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error al cargar inventario:', err);\r\n        error.value = `Error al cargar inventario: ${err.message || 'Error desconocido'}`;\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Refrescar inventario\r\n    const refreshInventory = () => {\r\n      loadInventory();\r\n    };\r\n    \r\n    // Función para manejar la búsqueda\r\n    const handleSearchInput = () => {\r\n      // La búsqueda se aplica automáticamente a través del computed filteredProducts\r\n    };\r\n    \r\n    // Aplicar filtros\r\n    const applyFilters = () => {\r\n      // Los filtros se aplican automáticamente a través del computed filteredProducts\r\n    };\r\n    \r\n    // Productos filtrados\r\n    const filteredProducts = computed(() => {\r\n      let result = [...products.value];\r\n      \r\n      // Aplicar búsqueda por término\r\n      if (searchTerm.value) {\r\n        const term = searchTerm.value.toLowerCase();\r\n        result = result.filter(product => \r\n          product.name?.toLowerCase().includes(term)\r\n        );\r\n      }\r\n      \r\n      // Aplicar filtro por estado de stock\r\n      if (stockFilter.value !== 'all') {\r\n        if (stockFilter.value === 'low') {\r\n          result = result.filter(product => \r\n            product.availableQuantity > 0 && product.availableQuantity <= 5\r\n          );\r\n        } else if (stockFilter.value === 'out') {\r\n          result = result.filter(product => \r\n            product.availableQuantity === 0\r\n          );\r\n        }\r\n      }\r\n      \r\n      // Aplicar filtro por categoría\r\n      if (categoryFilter.value) {\r\n        if (categoryFilter.value === 'con_refresco') {\r\n          result = result.filter(product => product.includesDrink);\r\n        } else if (categoryFilter.value === 'sin_refresco') {\r\n          result = result.filter(product => !product.includesDrink);\r\n        }\r\n      }\r\n      \r\n      return result;\r\n    });\r\n    \r\n    // Obtener clase para la fila según el estado del stock\r\n    const getRowClass = (product) => {\r\n      if (product.availableQuantity === 0) {\r\n        return 'out-of-stock-row';\r\n      } else if (product.availableQuantity <= 5) {\r\n        return 'low-stock-row';\r\n      }\r\n      return '';\r\n    };\r\n    \r\n    // Obtener clase para el estado\r\n    const getStatusClass = (product) => {\r\n      if (product.availableQuantity === 0) {\r\n        return 'status-badge out-of-stock';\r\n      } else if (product.availableQuantity <= 5) {\r\n        return 'status-badge low-stock';\r\n      }\r\n      return 'status-badge in-stock';\r\n    };\r\n    \r\n    // Obtener texto de estado\r\n    const getStatusText = (product) => {\r\n      if (product.availableQuantity === 0) {\r\n        return 'Sin stock';\r\n      } else if (product.availableQuantity <= 5) {\r\n        return 'Stock bajo';\r\n      }\r\n      return 'Disponible';\r\n    };\r\n    \r\n    // Formatear fecha\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return 'N/A';\r\n      \r\n      try {\r\n        const date = new Date(dateString);\r\n        return new Intl.DateTimeFormat('es-ES', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        }).format(date);\r\n      } catch (err) {\r\n        console.error('Error al formatear fecha:', err);\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Abrir modal para actualizar stock\r\n    const openUpdateStockModal = (product) => {\r\n      selectedProduct.value = { ...product };\r\n      updateStockForm.value = {\r\n        newQuantity: product.availableQuantity,\r\n        reason: '',\r\n        isUpdating: false\r\n      };\r\n      showUpdateModal.value = true;\r\n    };\r\n    \r\n    // Cerrar modal de actualización\r\n    const closeUpdateModal = () => {\r\n      showUpdateModal.value = false;\r\n      selectedProduct.value = null;\r\n    };\r\n    \r\n    // Actualizar stock\r\n    const updateStock = async () => {\r\n      if (!selectedProduct.value) return;\r\n      \r\n      // Validar datos\r\n      if (isNaN(updateStockForm.value.newQuantity) || updateStockForm.value.newQuantity < 0) {\r\n        await alert('Por favor ingrese una cantidad válida (mayor o igual a 0)');\r\n        return;\r\n      }\r\n      \r\n      if (!updateStockForm.value.reason.trim()) {\r\n        await alert('Por favor ingrese un motivo para el ajuste de inventario');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        updateStockForm.value.isUpdating = true;\r\n        \r\n        // Determinar el tipo de movimiento\r\n        const currentQuantity = selectedProduct.value.availableQuantity;\r\n        const newQuantity = parseInt(updateStockForm.value.newQuantity);\r\n        const difference = newQuantity - currentQuantity;\r\n        const type = difference > 0 ? 'increase' : difference < 0 ? 'decrease' : 'adjustment';\r\n        \r\n        // Crear registro de historial\r\n        const currentUser = getCurrentUser();\r\n        const historyRecord = {\r\n          date: new Date().toISOString(),\r\n          type,\r\n          change: Math.abs(difference),\r\n          previousQuantity: currentQuantity,\r\n          newQuantity,\r\n          reason: updateStockForm.value.reason,\r\n          userId: currentUser?.id,\r\n          userName: currentUser?.nombre || 'Usuario'\r\n        };\r\n        \r\n        // Actualizar en base de datos\r\n        await updateItemStock(\r\n          selectedProduct.value.id, \r\n          newQuantity, \r\n          historyRecord\r\n        );\r\n        \r\n        // Actualizar en estado local\r\n        const productIndex = products.value.findIndex(p => p.id === selectedProduct.value.id);\r\n        if (productIndex !== -1) {\r\n          products.value[productIndex].availableQuantity = newQuantity;\r\n          products.value[productIndex].lastUpdated = new Date().toISOString();\r\n          \r\n          // Añadir al historial\r\n          if (!products.value[productIndex].stockHistory) {\r\n            products.value[productIndex].stockHistory = [];\r\n          }\r\n          products.value[productIndex].stockHistory.push(historyRecord);\r\n        }\r\n        \r\n        // Mostrar confirmación\r\n        await alert('Stock actualizado correctamente', { title: 'Actualización Exitosa' });\r\n        \r\n        // Cerrar modal\r\n        closeUpdateModal();\r\n      } catch (err) {\r\n        console.error('Error al actualizar stock:', err);\r\n        await alert(`Error al actualizar stock: ${err.message || 'Error desconocido'}`);\r\n      } finally {\r\n        updateStockForm.value.isUpdating = false;\r\n      }\r\n    };\r\n    \r\n    // Abrir modal de historial\r\n    const openHistoryModal = (product) => {\r\n      selectedProduct.value = { ...product };\r\n      \r\n      // Obtener historial del producto\r\n      productHistory.value = product.stockHistory || [];\r\n      \r\n      showHistoryModal.value = true;\r\n    };\r\n    \r\n    // Cerrar modal de historial\r\n    const closeHistoryModal = () => {\r\n      showHistoryModal.value = false;\r\n      selectedProduct.value = null;\r\n      productHistory.value = [];\r\n    };\r\n    \r\n    return {\r\n      products,\r\n      loading,\r\n      error,\r\n      searchTerm,\r\n      stockFilter,\r\n      categoryFilter,\r\n      filteredProducts,\r\n      showUpdateModal,\r\n      showHistoryModal,\r\n      selectedProduct,\r\n      productHistory,\r\n      updateStockForm,\r\n      loadInventory,\r\n      refreshInventory,\r\n      handleSearchInput,\r\n      applyFilters,\r\n      getRowClass,\r\n      getStatusClass,\r\n      getStatusText,\r\n      formatDate,\r\n      openUpdateStockModal,\r\n      closeUpdateModal,\r\n      updateStock,\r\n      openHistoryModal,\r\n      closeHistoryModal\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.inventory-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n/* Controles y filtros */\r\n.inventory-controls {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.search-container {\r\n  flex-grow: 1;\r\n  min-width: 250px;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.filter-select {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n}\r\n\r\n.actions {\r\n  margin-left: auto;\r\n}\r\n\r\n.refresh-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.refresh-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 16px;\r\n}\r\n\r\n/* Estados de carga y error */\r\n.loading-container, .error-container, .empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 50px 20px;\r\n  text-align: center;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  margin: 20px 0;\r\n}\r\n\r\n.spinner {\r\n  border: 4px solid rgba(0, 0, 0, 0.1);\r\n  border-radius: 50%;\r\n  border-top: 4px solid #4CAF50;\r\n  width: 30px;\r\n  height: 30px;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.error-message {\r\n  color: #f44336;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.retry-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 8px 15px;\r\n  cursor: pointer;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 15px;\r\n  color: #bbb;\r\n}\r\n\r\n.empty-desc {\r\n  color: #777;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n}\r\n\r\n/* Tabla de inventario */\r\n.inventory-table-container {\r\n  overflow-x: auto;\r\n  margin-top: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n.inventory-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.inventory-table th,\r\n.inventory-table td {\r\n  padding: 12px 15px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.inventory-table thead {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.inventory-table tbody tr:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.inventory-table .actions-cell {\r\n  white-space: nowrap;\r\n  text-align: center;\r\n}\r\n\r\n/* Clases para estados de stock */\r\n.out-of-stock-row {\r\n  background-color: #ffebee;\r\n}\r\n\r\n.low-stock-row {\r\n  background-color: #fff8e1;\r\n}\r\n\r\n.status-badge {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n}\r\n\r\n.in-stock {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.low-stock {\r\n  background-color: #FFC107;\r\n  color: #333;\r\n}\r\n\r\n.out-of-stock {\r\n  background-color: #F44336;\r\n  color: white;\r\n}\r\n\r\n/* Botones de acción */\r\n.update-btn, .history-btn {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  margin: 0 2px;\r\n}\r\n\r\n.update-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.update-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.history-btn {\r\n  background-color: #9E9E9E;\r\n  color: white;\r\n}\r\n\r\n.history-btn:hover {\r\n  background-color: #757575;\r\n}\r\n\r\n/* Modales */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-container {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n  width: 90%;\r\n  max-width: 500px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  animation: modalFadeIn 0.3s;\r\n}\r\n\r\n.history-modal {\r\n  max-width: 700px;\r\n}\r\n\r\n@keyframes modalFadeIn {\r\n  from { opacity: 0; transform: translateY(-20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #777;\r\n}\r\n\r\n.modal-body {\r\n  padding: 20px;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 15px 20px;\r\n  border-top: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n/* Formulario */\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\n.form-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.form-textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  min-height: 100px;\r\n  resize: vertical;\r\n}\r\n\r\n/* Botones modal */\r\n.cancel-btn, .save-btn {\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  border: none;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.save-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.save-btn:disabled {\r\n  background-color: #9E9E9E;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Historial */\r\n.history-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.history-item {\r\n  padding: 12px;\r\n  border-bottom: 1px solid #eee;\r\n  position: relative;\r\n}\r\n\r\n.history-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.history-date {\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.history-details {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 5px;\r\n  align-items: center;\r\n}\r\n\r\n.history-type {\r\n  display: inline-block;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n}\r\n\r\n.history-type.increase {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.history-type.decrease {\r\n  background-color: #F44336;\r\n  color: white;\r\n}\r\n\r\n.history-type.adjustment {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.history-quantity {\r\n  font-weight: bold;\r\n}\r\n\r\n.history-reason {\r\n  margin-top: 5px;\r\n  font-style: italic;\r\n  color: #555;\r\n}\r\n\r\n.history-user {\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n  color: #777;\r\n  text-align: right;\r\n}\r\n\r\n.empty-history {\r\n  padding: 30px;\r\n  text-align: center;\r\n  color: #777;\r\n  font-style: italic;\r\n}\r\n\r\n/* Responsive */\r\n@media (max-width: 768px) {\r\n  .inventory-controls {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .search-container, .filters, .actions {\r\n    width: 100%;\r\n  }\r\n  \r\n  .actions {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .inventory-table th,\r\n  .inventory-table td {\r\n    padding: 8px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style> ","import { render } from \"./AdminInventory.vue?vue&type=template&id=55f4fd9a&scoped=true\"\nimport script from \"./AdminInventory.vue?vue&type=script&lang=js\"\nexport * from \"./AdminInventory.vue?vue&type=script&lang=js\"\n\nimport \"./AdminInventory.vue?vue&type=style&index=0&id=55f4fd9a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55f4fd9a\"]])\n\nexport default __exports__","/**\n * Servicio para gestionar las operaciones administrativas\n */\nimport * as storageService from './storageService';\nimport apiService from './apiService';\n\n// Lista local de usuarios para mantener estado entre llamadas\nlet localUsers = [];\n\n/**\n * Obtiene estadísticas para el dashboard de administrador\n * @returns {Promise<Object>} Estadísticas del sistema\n */\nexport async function getDashboardStats() {\n  try {\n    // En desarrollo, devolver datos simulados pero con lógica para actualizarlos\n    if (process.env.NODE_ENV === 'development') {\n      // Obtener usuarios actuales para tener un conteo real\n      const usersResponse = await getUsers();\n      \n      const userCount = (usersResponse && usersResponse.success && Array.isArray(usersResponse.data)) \n        ? usersResponse.data.length \n        : 45; // Valor por defecto si no podemos obtener el conteo real\n\n      // Calcular usuarios activos/inactivos\n      const activeUsers = usersResponse && usersResponse.success && Array.isArray(usersResponse.data)\n        ? usersResponse.data.filter(user => user.estado === 'activo').length\n        : Math.floor(userCount * 0.75); // Aproximadamente 75% activos por defecto\n        \n      const inactiveUsers = userCount - activeUsers;\n\n      console.log(`Estadísticas actualizadas: ${userCount} usuarios totales (${activeUsers} activos, ${inactiveUsers} inactivos)`);\n\n      return {\n        success: true,\n        data: {\n          totalUsers: userCount,\n          activeUsers: activeUsers,\n          inactiveUsers: inactiveUsers,\n          activePayments: 28,\n          pendingPayments: 8,\n          overduePayments: 3,\n          totalIncome: 15750000,\n          status: 'Normal',\n          lastBackup: new Date().toISOString(),\n          recentActivity: [\n            // Añadir actividad reciente de creación de usuario si se ha creado uno recientemente\n            {\n              tipo: 'user_login',\n              usuario_nombre: 'Admin',\n              accion: 'inició sesión en el sistema',\n              fecha: new Date().toISOString()\n            },\n            {\n              tipo: 'system',\n              usuario_nombre: 'Sistema',\n              accion: 'realizó una sincronización de datos',\n              fecha: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()\n            }\n          ]\n        }\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.get('/admin/dashboard');\n    return response;\n  } catch (error) {\n    console.error('Error al obtener estadísticas del dashboard:', error);\n    \n    // En caso de error, devolver datos simulados básicos\n    return {\n      success: true,\n      data: {\n        totalUsers: 45,\n        activeUsers: 38,\n        inactiveUsers: 7,\n        activePayments: 28,\n        pendingPayments: 8,\n        overduePayments: 3,\n        totalIncome: 15750000,\n        status: 'Normal',\n        lastBackup: new Date().toISOString(),\n        recentActivity: [\n          {\n            tipo: 'system',\n            usuario_nombre: 'Sistema',\n            accion: 'inició en modo de respaldo',\n            fecha: new Date().toISOString()\n          }\n        ]\n      }\n    };\n  }\n}\n\n/**\n * Obtiene los elementos del menú\n * @returns {Promise<Object>} Lista de elementos del menú\n */\nexport async function getMenuItems() {\n  try {\n    // En desarrollo, simular llamada a la API\n    if (process.env.NODE_ENV === 'development') {\n      // Obtener datos del servicio de almacenamiento\n      const menuItems = await storageService.getMenuItems();\n      return {\n        success: true,\n        data: menuItems,\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.get('/admin/menu-items');\n    return response;\n  } catch (error) {\n    console.error('Error al obtener elementos del menú:', error);\n    return {\n      success: false,\n      error: error.message || 'Error al obtener elementos del menú'\n    };\n  }\n}\n\n/**\n * Obtiene los elementos vendidos para el inventario\n * @returns {Promise<Object>} Lista de elementos vendidos\n */\nexport async function getSoldItems() {\n  try {\n    // En desarrollo, simular llamada a la API\n    if (process.env.NODE_ENV === 'development') {\n      return {\n        success: true,\n        data: [\n          { id: 1, name: 'Hamburguesa Clásica', quantity: 45, price: 12000 },\n          { id: 2, name: 'Pizza Margherita', quantity: 38, price: 18000 },\n          { id: 3, name: 'Ensalada César', quantity: 22, price: 9000 },\n          { id: 4, name: 'Pasta Carbonara', quantity: 30, price: 15000 },\n          { id: 5, name: 'Sushi Variado', quantity: 15, price: 25000 }\n        ]\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.get('/admin/sold-items');\n    return response;\n  } catch (error) {\n    console.error('Error al obtener elementos vendidos:', error);\n    return {\n      success: false,\n      error: error.message || 'Error al obtener elementos vendidos'\n    };\n  }\n}\n\n/**\n * Obtiene los usuarios del sistema\n * @param {Object} options Opciones de filtrado y paginación\n * @returns {Promise<Array>} Lista de usuarios\n */\nexport async function getUsers(options = {}) {\n  try {\n    // Construir la URL con los parámetros de consulta\n    let url = '/admin/users';\n    const queryParams = [];\n    \n    if (options.searchTerm) {\n      queryParams.push(`search=${encodeURIComponent(options.searchTerm)}`);\n    }\n    \n    if (options.role) {\n      queryParams.push(`role=${encodeURIComponent(options.role)}`);\n    }\n    \n    if (options.status) {\n      queryParams.push(`status=${encodeURIComponent(options.status)}`);\n    }\n    \n    if (queryParams.length > 0) {\n      url += `?${queryParams.join('&')}`;\n    }\n    \n    console.log('Solicitando usuarios a la API:', url);\n    \n    // Realizar la petición a la API\n    const response = await apiService.get(url);\n    \n    // Verificar si la respuesta es válida\n    if (response && response.success) {\n      console.log(`Recibidos ${response.data.length} usuarios de la API`);\n      \n      // Guardar los usuarios en la variable local para uso futuro\n      localUsers = response.data;\n      \n      return {\n        success: true,\n        data: response.data\n      };\n    }\n    \n    throw new Error(response?.message || 'Error al obtener usuarios');\n  } catch (error) {\n    console.error('Error al obtener usuarios:', error);\n    \n    // Si hay un error, devolver los usuarios locales si existen\n    if (localUsers.length > 0) {\n      console.log('Usando usuarios en caché:', localUsers.length);\n      return {\n        success: true,\n        data: localUsers\n      };\n    }\n    \n    // Si no hay datos en caché, mostrar error pero no usar datos simulados\n    return {\n      success: false,\n      message: `Error al obtener usuarios: ${error.message}`,\n      data: []\n    };\n  }\n}\n\n/**\n * Obtiene los roles disponibles en el sistema\n * @returns {Promise<Object>} Lista de roles\n */\nexport async function getRoles() {\n  try {\n    // Realizar la petición a la API\n    const response = await apiService.get('/admin/roles');\n    \n    if (response && response.success) {\n      return response;\n    }\n    \n    throw new Error(response?.message || 'Error al obtener roles');\n  } catch (error) {\n    console.error('Error al obtener roles:', error);\n    \n    // En caso de error, devolver una lista básica de roles para mantener la funcionalidad\n    return {\n      success: false,\n      message: error.message,\n      data: [\n        { id: 1, nombre: 'Superadministrador', descripcion: 'Control total del sistema' },\n        { id: 2, nombre: 'Administrador', descripcion: 'Gestión de usuarios y configuración' },\n        { id: 3, nombre: 'Empleado', descripcion: 'Operaciones básicas' }\n      ]\n    };\n  }\n}\n\n/**\n * Crea un nuevo usuario\n * @param {Object} userData - Datos del nuevo usuario\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function createUser(userData) {\n  try {\n    // Validar datos mínimos\n    if (!userData.nombre || !userData.email || !userData.password) {\n      return {\n        success: false,\n        message: 'Faltan datos obligatorios'\n      };\n    }\n    \n    console.log('Enviando solicitud para crear usuario:', userData.email);\n    \n    // Realizar la petición a la API\n    const response = await apiService.post('/admin/users', userData);\n    \n    if (response && response.success) {\n      console.log('Usuario creado exitosamente:', response.data?.email);\n      \n      // Usar los datos devueltos por el backend\n      const newUser = response.data || {\n        id: Date.now(), // ID temporal si no hay uno real\n        nombre: userData.nombre,\n        email: userData.email,\n        telefono: userData.telefono || '',\n        roles: userData.roles,\n        estado: 'activo',\n        fecha_creacion: new Date().toISOString()\n      };\n      \n      // Actualizar la lista local de usuarios\n      localUsers = [newUser, ...localUsers];\n      \n      return {\n        success: true,\n        message: response.message || 'Usuario creado correctamente',\n        data: newUser\n      };\n    }\n    \n    throw new Error(response?.message || 'Error al crear usuario');\n  } catch (error) {\n    console.error('Error al crear usuario:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al crear usuario'\n    };\n  }\n}\n\n/**\n * Actualiza un usuario existente\n * @param {number} userId - ID del usuario a actualizar\n * @param {Object} userData - Nuevos datos del usuario\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function updateUser(userId, userData) {\n  try {\n    console.log(`Actualizando usuario ${userId}:`, userData);\n    \n    // Realizar la petición a la API\n    const response = await apiService.put(`/admin/users/${userId}`, userData);\n    \n    if (response && response.success) {\n      console.log('Usuario actualizado exitosamente');\n      \n      // Actualizar el usuario en la lista local\n      const userIndex = localUsers.findIndex(u => u.id === userId);\n      if (userIndex !== -1) {\n        localUsers[userIndex] = {\n          ...localUsers[userIndex],\n          ...userData,\n          // Mantener el email y el ID original\n          id: userId,\n          email: localUsers[userIndex].email\n        };\n      }\n      \n      return {\n        success: true,\n        message: response.message || 'Usuario actualizado correctamente',\n        data: response.user\n      };\n    }\n    \n    throw new Error(response?.message || 'Error al actualizar usuario');\n  } catch (error) {\n    console.error('Error al actualizar usuario:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al actualizar usuario'\n    };\n  }\n}\n\n/**\n * Cambia el estado de un usuario (activo/inactivo)\n * @param {number} userId - ID del usuario\n * @param {string} estado - Nuevo estado ('activo' o 'inactivo')\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function cambiarEstadoUsuario(userId, estado) {\n  try {\n    // Validar estado\n    if (estado !== 'activo' && estado !== 'inactivo') {\n      return {\n        success: false,\n        message: 'Estado inválido'\n      };\n    }\n    \n    console.log(`Cambiando estado de usuario ${userId} a ${estado}`);\n    \n    // Convertir estado a valor numérico para la API (1 = activo, 0 = inactivo)\n    const activo = estado === 'activo' ? 1 : 0;\n    \n    // Realizar la petición a la API\n    const response = await apiService.put(`/admin/users/${userId}`, { \n      activo \n    });\n    \n    if (response && response.success) {\n      console.log(`Estado de usuario cambiado exitosamente a ${estado}`);\n      \n      // Actualizar el usuario en la lista local\n      const userIndex = localUsers.findIndex(u => u.id === userId);\n      if (userIndex !== -1) {\n        localUsers[userIndex].estado = estado;\n      }\n      \n      return {\n        success: true,\n        message: `Usuario ${estado === 'activo' ? 'activado' : 'desactivado'} correctamente`,\n        data: {\n          id: userId,\n          estado\n        }\n      };\n    }\n    \n    throw new Error(response?.message || `Error al ${estado === 'activo' ? 'activar' : 'desactivar'} usuario`);\n  } catch (error) {\n    console.error(`Error al cambiar estado de usuario a ${estado}:`, error);\n    return {\n      success: false,\n      message: error.message || `Error al ${estado === 'activo' ? 'activar' : 'desactivar'} usuario`\n    };\n  }\n}\n\n/**\n * Elimina un usuario\n * @param {number} userId - ID del usuario a eliminar\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function deleteUser(userId) {\n  try {\n    console.log(`Eliminando usuario ${userId}`);\n    \n    // Realizar la petición a la API\n    const response = await apiService.delete(`/admin/users/${userId}`);\n    \n    if (response && response.success) {\n      console.log('Usuario eliminado exitosamente');\n      \n      // Eliminar el usuario de la lista local\n      localUsers = localUsers.filter(u => u.id !== userId);\n      \n      return {\n        success: true,\n        message: response.message || 'Usuario eliminado correctamente'\n      };\n    }\n    \n    throw new Error(response?.message || 'Error al eliminar usuario');\n  } catch (error) {\n    console.error('Error al eliminar usuario:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al eliminar usuario'\n    };\n  }\n}\n\n/**\n * Obtiene los registros del sistema\n * @returns {Promise<Object>} Lista de logs\n */\nexport async function getLogs() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        success: true,\n        data: [\n          {\n            id: 1,\n            timestamp: new Date().toISOString(),\n            type: 'info',\n            user: 'Admin',\n            message: 'Inicio de sesión exitoso',\n            details: { ip: '192.168.1.1', userAgent: 'Chrome/96.0' }\n          },\n          {\n            id: 2,\n            timestamp: new Date(Date.now() - 3600000).toISOString(), // 1 hora atrás\n            type: 'warning',\n            user: 'Sistema',\n            message: 'Intento de acceso fallido',\n            details: { ip: '203.0.113.1', userAgent: 'Edge/96.0', attempts: 3 }\n          },\n          {\n            id: 3,\n            timestamp: new Date(Date.now() - 7200000).toISOString(), // 2 horas atrás\n            type: 'error',\n            user: 'Sistema',\n            message: 'Error en la creación de backup',\n            details: { error: 'Espacio insuficiente', code: 'E0023' }\n          },\n          {\n            id: 4,\n            timestamp: new Date(Date.now() - 86400000).toISOString(), // 1 día atrás\n            type: 'success',\n            user: 'Juan Pérez',\n            message: 'Nuevo usuario creado',\n            details: { newUser: 'carlos@ejemplo.com' }\n          }\n        ]\n      });\n    }, 500);\n  });\n}\n\n/**\n * Descarga los registros del sistema en formato CSV\n * @returns {Promise<Object>} Resultado de la operación con datos CSV\n */\nexport async function downloadLogsCSV() {\n  try {\n    // Primero obtenemos los logs\n    const logsResponse = await getLogs();\n    \n    if (!logsResponse.success || !Array.isArray(logsResponse.data)) {\n      throw new Error('No se pudieron obtener los logs para descargar');\n    }\n    \n    // Convertir los logs a formato CSV\n    const logs = logsResponse.data;\n    \n    // Cabeceras del CSV\n    const headers = ['ID', 'Fecha', 'Tipo', 'Usuario', 'Mensaje', 'Detalles'];\n    \n    // Filas de datos\n    const rows = logs.map(log => [\n      log.id || '',\n      log.timestamp || '',\n      log.type || '',\n      log.user || 'Sistema',\n      log.message || '',\n      log.details ? JSON.stringify(log.details) : ''\n    ]);\n    \n    // Combinar cabeceras y filas\n    const csvContent = [\n      headers.join(','),\n      ...rows.map(row => row.map(cell => `\"${String(cell).replace(/\"/g, '\"\"')}\"`).join(','))\n    ].join('\\n');\n    \n    return {\n      success: true,\n      data: csvContent,\n      message: 'Logs descargados correctamente'\n    };\n  } catch (error) {\n    console.error('Error al descargar logs en CSV:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al descargar logs'\n    };\n  }\n}\n\n/**\n * Obtiene un elemento del menú por su ID\n * @param {string} itemId - ID del elemento a obtener\n * @returns {Promise<Object>} Elemento del menú\n */\nexport async function getMenuItem(itemId) {\n  try {\n    // En desarrollo, usar el servicio de almacenamiento local\n    if (process.env.NODE_ENV === 'development') {\n      const menuItems = await storageService.getMenuItems();\n      const item = menuItems.find(item => item.id === itemId);\n      \n      if (!item) {\n        return {\n          success: false,\n          message: 'Elemento no encontrado'\n        };\n      }\n      \n      return {\n        success: true,\n        data: item\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.get(`/admin/menu-items/${itemId}`);\n    return response;\n  } catch (error) {\n    console.error(`Error al obtener elemento del menú con ID ${itemId}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Actualiza el stock de un elemento del inventario\n * @param {string} itemId - ID del elemento a actualizar\n * @param {number} newStock - Nuevo valor de stock\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function updateItemStock(itemId, newStock) {\n  try {\n    // Realizar la petición a la API\n    const response = await apiService.put(`/admin/menu-items/${itemId}/stock`, { stock: newStock });\n    \n    if (response && response.success) {\n      return {\n        success: true,\n        message: 'Stock actualizado correctamente',\n        data: response.data\n      };\n    }\n    \n    throw new Error(response?.message || 'Error al actualizar stock');\n  } catch (error) {\n    console.error('Error al actualizar stock:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al actualizar stock'\n    };\n  }\n}\n\n/**\n * Realiza un respaldo del sistema\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function createBackup() {\n  try {\n    // En desarrollo, simular respaldo\n    if (process.env.NODE_ENV === 'development') {\n      // Simular tiempo de procesamiento\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      const backupId = Date.now().toString();\n      const backupDate = new Date().toISOString();\n      \n      console.log(`Respaldo creado: ${backupId} (${backupDate})`);\n      \n      return {\n        success: true,\n        message: 'Respaldo creado correctamente',\n        data: {\n          id: backupId,\n          fecha: backupDate,\n          tamaño: '2.3 MB',\n          estado: 'Completado'\n        }\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.post('/admin/backups');\n    return response;\n  } catch (error) {\n    console.error('Error al crear respaldo:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al crear respaldo'\n    };\n  }\n}\n\n/**\n * Obtiene la lista de respaldos\n * @returns {Promise<Object>} Lista de respaldos\n */\nexport async function getBackups() {\n  try {\n    // En desarrollo, devolver respaldos simulados\n    if (process.env.NODE_ENV === 'development') {\n      const now = Date.now();\n      \n      return {\n        success: true,\n        data: [\n          {\n            id: '1',\n            fecha: new Date(now - 3600000).toISOString(), // 1 hora atrás\n            tamaño: '2.3 MB',\n            usuario: 'Admin',\n            estado: 'Completado',\n            tipo: 'Manual'\n          },\n          {\n            id: '2',\n            fecha: new Date(now - 86400000).toISOString(), // 1 día atrás\n            tamaño: '2.1 MB',\n            usuario: 'Sistema',\n            estado: 'Completado',\n            tipo: 'Automático'\n          },\n          {\n            id: '3',\n            fecha: new Date(now - 172800000).toISOString(), // 2 días atrás\n            tamaño: '2.0 MB',\n            usuario: 'Sistema',\n            estado: 'Completado',\n            tipo: 'Automático'\n          }\n        ]\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.get('/admin/backups');\n    return response;\n  } catch (error) {\n    console.error('Error al obtener respaldos:', error);\n    return {\n      success: false,\n      message: error.message,\n      data: []\n    };\n  }\n}\n\n/**\n * Restaura el sistema desde un respaldo\n * @param {string} backupId - ID del respaldo a restaurar\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function restoreBackup(backupId) {\n  try {\n    // En desarrollo, simular restauración\n    if (process.env.NODE_ENV === 'development') {\n      // Simular tiempo de procesamiento\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      console.log(`Restauración desde respaldo ${backupId} completada`);\n      \n      return {\n        success: true,\n        message: 'Sistema restaurado correctamente'\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.post(`/admin/backups/${backupId}/restore`);\n    return response;\n  } catch (error) {\n    console.error('Error al restaurar desde respaldo:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al restaurar desde respaldo'\n    };\n  }\n}\n\n/**\n * Elimina un respaldo\n * @param {string} backupId - ID del respaldo a eliminar\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function deleteBackup(backupId) {\n  try {\n    // En desarrollo, simular eliminación\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`Respaldo ${backupId} eliminado`);\n      \n      return {\n        success: true,\n        message: 'Respaldo eliminado correctamente'\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.delete(`/admin/backups/${backupId}`);\n    return response;\n  } catch (error) {\n    console.error('Error al eliminar respaldo:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al eliminar respaldo'\n    };\n  }\n}\n","<template>\r\n  <div class=\"logs-container\">\r\n    <h2 class=\"section-title\">Registros del Sistema</h2>\r\n    \r\n    <div class=\"logs-controls\">\r\n      <div class=\"search-box\">\r\n        <input \r\n          type=\"text\" \r\n          v-model=\"searchTerm\" \r\n          placeholder=\"Buscar en registros...\" \r\n          class=\"search-input\"\r\n          @input=\"debounceSearch\"\r\n        />\r\n        <button class=\"search-btn\">🔍</button>\r\n      </div>\r\n      \r\n      <div class=\"filters\">\r\n        <select v-model=\"typeFilter\" class=\"filter-select\" @change=\"applyFilters\">\r\n          <option value=\"\">Todos los tipos</option>\r\n          <option value=\"info\">Información</option>\r\n          <option value=\"warning\">Advertencia</option>\r\n          <option value=\"error\">Error</option>\r\n          <option value=\"success\">Éxito</option>\r\n        </select>\r\n        \r\n        <select v-model=\"dateFilter\" class=\"filter-select\" @change=\"applyFilters\">\r\n          <option value=\"\">Todas las fechas</option>\r\n          <option value=\"today\">Hoy</option>\r\n          <option value=\"yesterday\">Ayer</option>\r\n          <option value=\"week\">Esta semana</option>\r\n          <option value=\"month\">Este mes</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <div class=\"actions\">\r\n        <button @click=\"refreshLogs\" class=\"refresh-btn\">\r\n          <span class=\"btn-icon\">🔄</span> Actualizar\r\n        </button>\r\n        <button @click=\"downloadLogs\" class=\"download-btn\">\r\n          <span class=\"btn-icon\">⬇️</span> Descargar\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando registros...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"filteredLogs.length === 0\" class=\"empty-state\">\r\n      <div class=\"empty-icon\">📝</div>\r\n      <p>No se encontraron registros</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"logs-table-wrapper\">\r\n      <table class=\"logs-table\">\r\n        <thead>\r\n          <tr>\r\n            <th class=\"timestamp-col\">Fecha y Hora</th>\r\n            <th class=\"type-col\">Tipo</th>\r\n            <th class=\"user-col\">Usuario</th>\r\n            <th class=\"message-col\">Mensaje</th>\r\n            <th class=\"actions-col\">Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"log in filteredLogs\" :key=\"log.id\" :class=\"'log-row ' + log.type\">\r\n            <td>{{ formatDate(log.timestamp) }}</td>\r\n            <td>\r\n              <span class=\"log-type\" :class=\"log.type\">\r\n                {{ getTypeLabel(log.type) }}\r\n              </span>\r\n            </td>\r\n            <td>{{ log.user || 'Sistema' }}</td>\r\n            <td class=\"message-cell\">{{ log.message }}</td>\r\n            <td>\r\n              <button @click=\"viewLogDetails(log)\" class=\"detail-btn\">\r\n                <span>👁️</span>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n    <div v-if=\"filteredLogs.length > 0\" class=\"pagination\">\r\n      <button \r\n        @click=\"changePage(currentPage - 1)\" \r\n        :disabled=\"currentPage === 1\"\r\n        class=\"pagination-btn\"\r\n      >\r\n        &lt; Anterior\r\n      </button>\r\n      \r\n      <div class=\"page-numbers\">\r\n        <button \r\n          v-for=\"page in displayedPages\" \r\n          :key=\"page\" \r\n          @click=\"changePage(page)\"\r\n          :class=\"['page-number', { active: currentPage === page }]\"\r\n        >\r\n          {{ page }}\r\n        </button>\r\n      </div>\r\n      \r\n      <button \r\n        @click=\"changePage(currentPage + 1)\" \r\n        :disabled=\"currentPage === totalPages\"\r\n        class=\"pagination-btn\"\r\n      >\r\n        Siguiente &gt;\r\n      </button>\r\n    </div>\r\n    \r\n    <!-- Modal para ver detalles de un log -->\r\n    <div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\r\n      <div class=\"modal-container\">\r\n        <div class=\"modal-header\">\r\n          <h3>Detalles del Registro</h3>\r\n          <button @click=\"closeModal\" class=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"log-detail-item\">\r\n            <span class=\"detail-label\">Fecha y Hora:</span>\r\n            <span class=\"detail-value\">{{ formatDate(selectedLog.timestamp) }}</span>\r\n          </div>\r\n          <div class=\"log-detail-item\">\r\n            <span class=\"detail-label\">Tipo:</span>\r\n            <span class=\"detail-value\">\r\n              <span class=\"log-type\" :class=\"selectedLog.type\">\r\n                {{ getTypeLabel(selectedLog.type) }}\r\n              </span>\r\n            </span>\r\n          </div>\r\n          <div class=\"log-detail-item\">\r\n            <span class=\"detail-label\">Usuario:</span>\r\n            <span class=\"detail-value\">{{ selectedLog.user || 'Sistema' }}</span>\r\n          </div>\r\n          <div class=\"log-detail-item\">\r\n            <span class=\"detail-label\">Mensaje:</span>\r\n            <span class=\"detail-value\">{{ selectedLog.message }}</span>\r\n          </div>\r\n          <div class=\"log-detail-item\">\r\n            <span class=\"detail-label\">Detalles adicionales:</span>\r\n            <pre class=\"detail-value detail-json\">{{ JSON.stringify(selectedLog.details, null, 2) }}</pre>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"closeModal\" class=\"close-btn\">Cerrar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { getLogs, downloadLogsCSV } from '../../services/adminService';\r\nimport { alert } from '../../services/dialogService';\r\n\r\nexport default {\r\n  name: 'AdminLogs',\r\n  setup() {\r\n    const logs = ref([]);\r\n    const loading = ref(true);\r\n    const searchTerm = ref('');\r\n    const typeFilter = ref('');\r\n    const dateFilter = ref('');\r\n    const currentPage = ref(1);\r\n    const pageSize = ref(10);\r\n    \r\n    // Modal para detalles\r\n    const showModal = ref(false);\r\n    const selectedLog = ref({});\r\n    \r\n    // Variable para setTimeout de búsqueda\r\n    let searchTimeout = null;\r\n    \r\n    onMounted(async () => {\r\n      await fetchLogs();\r\n    });\r\n    \r\n    // Obtener logs\r\n    const fetchLogs = async () => {\r\n      try {\r\n        loading.value = true;\r\n        \r\n        const response = await getLogs();\r\n        \r\n        if (response && response.success) {\r\n          logs.value = response.data || [];\r\n        } else {\r\n          throw new Error('Error al cargar logs');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener logs:', error);\r\n        await alert('Error al cargar los logs: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Formatear fecha\r\n    const formatDate = (dateStr) => {\r\n      if (!dateStr) return 'N/A';\r\n      \r\n      try {\r\n        const date = new Date(dateStr);\r\n        if (isNaN(date.getTime())) return 'Fecha inválida';\r\n        \r\n        return new Intl.DateTimeFormat('es-ES', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit'\r\n        }).format(date);\r\n      } catch (e) {\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Obtener etiqueta para el tipo de log\r\n    const getTypeLabel = (type) => {\r\n      switch (type) {\r\n        case 'info': return 'Información';\r\n        case 'warning': return 'Advertencia';\r\n        case 'error': return 'Error';\r\n        case 'success': return 'Éxito';\r\n        default: return type;\r\n      }\r\n    };\r\n    \r\n    // Filtrar logs\r\n    const filteredLogs = computed(() => {\r\n      let result = [...logs.value];\r\n      \r\n      // Filtrar por término de búsqueda\r\n      if (searchTerm.value) {\r\n        const term = searchTerm.value.toLowerCase();\r\n        result = result.filter(log => \r\n          (log.message && log.message.toLowerCase().includes(term)) ||\r\n          (log.user && log.user.toLowerCase().includes(term))\r\n        );\r\n      }\r\n      \r\n      // Filtrar por tipo\r\n      if (typeFilter.value) {\r\n        result = result.filter(log => log.type === typeFilter.value);\r\n      }\r\n      \r\n      // Filtrar por fecha\r\n      if (dateFilter.value) {\r\n        const now = new Date();\r\n        const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n        \r\n        switch (dateFilter.value) {\r\n          case 'today':\r\n            result = result.filter(log => {\r\n              const logDate = new Date(log.timestamp);\r\n              return logDate >= today;\r\n            });\r\n            break;\r\n          case 'yesterday':\r\n            const yesterday = new Date(today);\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            result = result.filter(log => {\r\n              const logDate = new Date(log.timestamp);\r\n              return logDate >= yesterday && logDate < today;\r\n            });\r\n            break;\r\n          case 'week':\r\n            const lastWeek = new Date(today);\r\n            lastWeek.setDate(lastWeek.getDate() - 7);\r\n            result = result.filter(log => {\r\n              const logDate = new Date(log.timestamp);\r\n              return logDate >= lastWeek;\r\n            });\r\n            break;\r\n          case 'month':\r\n            const lastMonth = new Date(today);\r\n            lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n            result = result.filter(log => {\r\n              const logDate = new Date(log.timestamp);\r\n              return logDate >= lastMonth;\r\n            });\r\n            break;\r\n        }\r\n      }\r\n      \r\n      return result;\r\n    });\r\n    \r\n    // Paginación\r\n    const totalPages = computed(() => {\r\n      return Math.ceil(filteredLogs.value.length / pageSize.value);\r\n    });\r\n    \r\n    const displayedPages = computed(() => {\r\n      const pages = [];\r\n      const maxVisiblePages = 5;\r\n      \r\n      if (totalPages.value <= maxVisiblePages) {\r\n        for (let i = 1; i <= totalPages.value; i++) {\r\n          pages.push(i);\r\n        }\r\n      } else {\r\n        let startPage = Math.max(1, currentPage.value - Math.floor(maxVisiblePages / 2));\r\n        const endPage = Math.min(totalPages.value, startPage + maxVisiblePages - 1);\r\n        \r\n        if (endPage - startPage + 1 < maxVisiblePages) {\r\n          startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n        }\r\n        \r\n        for (let i = startPage; i <= endPage; i++) {\r\n          pages.push(i);\r\n        }\r\n      }\r\n      \r\n      return pages;\r\n    });\r\n    \r\n    const paginatedLogs = computed(() => {\r\n      const startIdx = (currentPage.value - 1) * pageSize.value;\r\n      return filteredLogs.value.slice(startIdx, startIdx + pageSize.value);\r\n    });\r\n    \r\n    // Cambiar página\r\n    const changePage = (page) => {\r\n      if (page >= 1 && page <= totalPages.value) {\r\n        currentPage.value = page;\r\n      }\r\n    };\r\n    \r\n    // Debounce para la búsqueda\r\n    const debounceSearch = () => {\r\n      clearTimeout(searchTimeout);\r\n      searchTimeout = setTimeout(() => {\r\n        currentPage.value = 1;\r\n      }, 300);\r\n    };\r\n    \r\n    // Aplicar filtros\r\n    const applyFilters = () => {\r\n      currentPage.value = 1;\r\n    };\r\n    \r\n    // Actualizar logs\r\n    const refreshLogs = async () => {\r\n      await fetchLogs();\r\n      await alert('Registros actualizados correctamente');\r\n    };\r\n    \r\n    // Descargar logs\r\n    const downloadLogs = async () => {\r\n      try {\r\n        loading.value = true;\r\n        const result = await downloadLogsCSV();\r\n        \r\n        if (result && result.success) {\r\n          // En una implementación real, esto descargaría un archivo\r\n          const blob = new Blob([result.data], { type: 'text/csv;charset=utf-8;' });\r\n          const link = document.createElement('a');\r\n          const url = URL.createObjectURL(blob);\r\n          \r\n          link.setAttribute('href', url);\r\n          link.setAttribute('download', `logs_${new Date().toISOString().split('T')[0]}.csv`);\r\n          link.style.visibility = 'hidden';\r\n          \r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          \r\n          await alert('Logs descargados correctamente');\r\n        } else {\r\n          throw new Error('Error al descargar logs');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al descargar logs:', error);\r\n        await alert('Error al descargar logs: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Ver detalles de log\r\n    const viewLogDetails = (log) => {\r\n      selectedLog.value = log;\r\n      showModal.value = true;\r\n    };\r\n    \r\n    // Cerrar modal\r\n    const closeModal = () => {\r\n      showModal.value = false;\r\n    };\r\n    \r\n    return {\r\n      logs,\r\n      loading,\r\n      searchTerm,\r\n      typeFilter,\r\n      dateFilter,\r\n      currentPage,\r\n      totalPages,\r\n      displayedPages,\r\n      filteredLogs,\r\n      showModal,\r\n      selectedLog,\r\n      formatDate,\r\n      getTypeLabel,\r\n      debounceSearch,\r\n      applyFilters,\r\n      refreshLogs,\r\n      downloadLogs,\r\n      changePage,\r\n      viewLogDetails,\r\n      closeModal\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.logs-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.logs-controls {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-box {\r\n  position: relative;\r\n  flex: 1;\r\n  min-width: 200px;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 40px 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 50px;\r\n  font-size: 15px;\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.05);\r\n}\r\n\r\n.search-btn {\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: none;\r\n  border: none;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.filter-select {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  min-width: 150px;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.refresh-btn, \r\n.download-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.refresh-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.refresh-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.download-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.download-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 16px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 300px;\r\n  gap: 15px;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  border: 3px solid #f3f3f3;\r\n  border-top: 3px solid #4CAF50;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 50px 20px;\r\n  color: #666;\r\n  font-style: italic;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  border: 1px dashed #ddd;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n  opacity: 0.5;\r\n}\r\n\r\n.logs-table-wrapper {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.logs-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.logs-table th, \r\n.logs-table td {\r\n  padding: 15px;\r\n  text-align: left;\r\n}\r\n\r\n.logs-table th {\r\n  background-color: #f5f5f5;\r\n  font-weight: 600;\r\n}\r\n\r\n.logs-table td {\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.logs-table tr:hover td {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.timestamp-col {\r\n  width: 180px;\r\n}\r\n\r\n.type-col {\r\n  width: 120px;\r\n}\r\n\r\n.user-col {\r\n  width: 150px;\r\n}\r\n\r\n.actions-col {\r\n  width: 80px;\r\n  text-align: center;\r\n}\r\n\r\n.message-cell {\r\n  max-width: 400px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.log-type {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 50px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n}\r\n\r\n.log-type.info {\r\n  background-color: #e3f2fd;\r\n  color: #1976d2;\r\n}\r\n\r\n.log-type.warning {\r\n  background-color: #fff3e0;\r\n  color: #f57c00;\r\n}\r\n\r\n.log-type.error {\r\n  background-color: #ffebee;\r\n  color: #d32f2f;\r\n}\r\n\r\n.log-type.success {\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.detail-btn {\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  opacity: 0.7;\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.detail-btn:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n  align-items: center;\r\n}\r\n\r\n.pagination-btn {\r\n  background-color: #f1f1f1;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.pagination-btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.pagination-btn:not(:disabled):hover {\r\n  background-color: #e1e1e1;\r\n}\r\n\r\n.page-numbers {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.page-number {\r\n  background-color: #f1f1f1;\r\n  border: none;\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.page-number.active {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.page-number:not(.active):hover {\r\n  background-color: #e1e1e1;\r\n}\r\n\r\n/* Modal de detalles */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-container {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 600px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.3);\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #666;\r\n}\r\n\r\n.modal-body {\r\n  padding: 20px;\r\n}\r\n\r\n.log-detail-item {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.detail-label {\r\n  font-weight: bold;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #333;\r\n}\r\n\r\n.detail-value {\r\n  display: block;\r\n  color: #666;\r\n}\r\n\r\n.detail-json {\r\n  background-color: #f5f5f5;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  font-family: monospace;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 15px 20px;\r\n  border-top: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.modal-footer button {\r\n  padding: 8px 15px;\r\n  background-color: #f1f1f1;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-footer button:hover {\r\n  background-color: #e1e1e1;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .logs-controls {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .search-box, .filters, .actions {\r\n    width: 100%;\r\n  }\r\n  \r\n  .filters {\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .filter-select {\r\n    flex: 1;\r\n    min-width: 100px;\r\n  }\r\n  \r\n  .actions {\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .logs-table .timestamp-col,\r\n  .logs-table .user-col {\r\n    display: none;\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./AdminLogs.vue?vue&type=template&id=4dbe11f6&scoped=true\"\nimport script from \"./AdminLogs.vue?vue&type=script&lang=js\"\nexport * from \"./AdminLogs.vue?vue&type=script&lang=js\"\n\nimport \"./AdminLogs.vue?vue&type=style&index=0&id=4dbe11f6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4dbe11f6\"]])\n\nexport default __exports__","<template>\n  <div class=\"dashboard-container\">\n    <h2 class=\"section-title\">Dashboard</h2>\n    \n    <div v-if=\"loading\" class=\"loading-spinner-container\">\n      <div class=\"spinner\"></div>\n      <p>Cargando datos...</p>\n    </div>\n    \n    <div v-else-if=\"error\" class=\"error-container\">\n      <p class=\"error-message\">{{ error }}</p>\n      <button @click=\"loadStats\" class=\"retry-button\">Reintentar</button>\n    </div>\n    \n    <div v-else class=\"dashboard-content\">\n      <!-- Tarjetas de estadísticas -->\n      <div class=\"stats-cards\">\n        <div class=\"stat-card users\">\n          <div class=\"stat-icon\">👥</div>\n          <div class=\"stat-info\">\n            <h3>{{ stats.totalUsers }}</h3>\n            <p>Usuarios Registrados</p>\n          </div>\n        </div>\n        \n        <div class=\"stat-card menu\">\n          <div class=\"stat-icon\">🍽️</div>\n          <div class=\"stat-info\">\n            <h3>{{ stats.activePayments }}</h3>\n            <p>Pagos Activos</p>\n          </div>\n        </div>\n        \n        <div class=\"stat-card sales\">\n          <div class=\"stat-icon\">💰</div>\n          <div class=\"stat-info\">\n            <h3>{{ formatCurrency(stats.totalIncome) }}</h3>\n            <p>Ingresos Totales</p>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Actividad Reciente -->\n      <div class=\"recent-activity\">\n        <h3>Actividad Reciente</h3>\n        <div v-if=\"stats.recentActivity && stats.recentActivity.length > 0\" class=\"activity-list\">\n          <div v-for=\"(activity, index) in stats.recentActivity\" :key=\"index\" class=\"activity-item\">\n            <div class=\"activity-icon\" :class=\"activity.tipo\">\n              <span v-if=\"activity.tipo === 'user_login'\">👤</span>\n              <span v-else-if=\"activity.tipo === 'system'\">📝</span>\n              <span v-else>📝</span>\n            </div>\n            <div class=\"activity-content\">\n              <p><strong>{{ activity.usuario_nombre }}</strong> {{ activity.accion }}</p>\n              <span class=\"activity-time\">{{ formatDate(activity.fecha) }}</span>\n            </div>\n          </div>\n        </div>\n        <p v-else class=\"no-activity\">No hay actividad reciente registrada</p>\n      </div>\n      \n      <!-- Estado del Sistema -->\n      <div class=\"system-status\">\n        <h3>Estado del Sistema</h3>\n        <div class=\"status-info\">\n          <p><strong>Estado:</strong> <span :class=\"'status-' + stats.status.toLowerCase()\">{{ stats.status }}</span></p>\n          <p><strong>Último respaldo:</strong> {{ formatDate(stats.lastBackup) }}</p>\n          <p><strong>Usuarios activos:</strong> {{ stats.activeUsers }}</p>\n          <p><strong>Usuarios inactivos:</strong> {{ stats.inactiveUsers }}</p>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Botón para refrescar -->\n    <button @click=\"loadStats\" class=\"refresh-button\">\n      <span class=\"refresh-icon\">🔄</span> Actualizar Datos\n    </button>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { getDashboardStats } from '../../services/adminService';\n\nexport default {\n  name: 'AdminDashboard',\n  setup() {\n    const stats = ref({\n      totalUsers: 0,\n      activeUsers: 0,\n      inactiveUsers: 0,\n      activePayments: 0,\n      pendingPayments: 0,\n      overduePayments: 0,\n      totalIncome: 0,\n      status: 'Normal',\n      lastBackup: null,\n      recentActivity: []\n    });\n    const loading = ref(true);\n    const error = ref(null);\n\n    // Cargar estadísticas del dashboard\n    const loadStats = async () => {\n      loading.value = true;\n      error.value = null;\n      \n      try {\n        console.log('Cargando estadísticas del dashboard...');\n        \n        // Intentar obtener los datos del servicio\n        const response = await getDashboardStats();\n        \n        if (response && response.success && response.data) {\n          console.log('Estadísticas cargadas correctamente:', response.data);\n          stats.value = response.data;\n        } else {\n          // Si hay un error en la respuesta, usar datos de respaldo\n          console.warn('Error en la respuesta del servicio, usando datos de respaldo');\n          error.value = response.error || 'Error al cargar las estadísticas';\n          \n          // Mantener los datos actuales si ya teníamos algunos\n          if (stats.value.totalUsers === 0) {\n            // Si no teníamos datos, usar valores por defecto\n            stats.value = {\n              totalUsers: 4,\n              activeUsers: 3,\n              inactiveUsers: 1,\n              activePayments: 28,\n              pendingPayments: 8,\n              overduePayments: 3,\n              totalIncome: 15750000,\n              status: 'Normal',\n              lastBackup: new Date().toISOString(),\n              recentActivity: [\n                {\n                  tipo: 'user_login',\n                  usuario_nombre: 'Admin',\n                  accion: 'inició sesión en el sistema',\n                  fecha: new Date().toISOString()\n                },\n                {\n                  tipo: 'system',\n                  usuario_nombre: 'Sistema',\n                  accion: 'realizó una sincronización de datos',\n                  fecha: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()\n                }\n              ]\n            };\n          }\n        }\n      } catch (e) {\n        console.error('Error al cargar estadísticas:', e);\n        error.value = e.message || 'Error al cargar las estadísticas';\n        \n        // Usar datos de respaldo en caso de error\n        if (stats.value.totalUsers === 0) {\n          stats.value = {\n            totalUsers: 4,\n            activeUsers: 3,\n            inactiveUsers: 1,\n            activePayments: 28,\n            pendingPayments: 8,\n            overduePayments: 3,\n            totalIncome: 15750000,\n            status: 'Normal',\n            lastBackup: new Date().toISOString(),\n            recentActivity: [\n              {\n                tipo: 'system',\n                usuario_nombre: 'Sistema',\n                accion: 'inició en modo de respaldo',\n                fecha: new Date().toISOString()\n              }\n            ]\n          };\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Formatear fecha\n    const formatDate = (dateString) => {\n      if (!dateString) return 'No disponible';\n      \n      try {\n        const date = new Date(dateString);\n        return date.toLocaleString('es-ES', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (e) {\n        console.error('Error al formatear fecha:', e);\n        return dateString;\n      }\n    };\n\n    // Formatear moneda\n    const formatCurrency = (value) => {\n      return new Intl.NumberFormat('es-CO', {\n        style: 'currency',\n        currency: 'COP',\n        minimumFractionDigits: 0\n      }).format(value);\n    };\n\n    // Cargar datos al montar el componente\n    onMounted(() => {\n      loadStats();\n    });\n\n    return {\n      stats,\n      loading,\n      error,\n      loadStats,\n      formatDate,\n      formatCurrency\n    };\n  }\n};\n</script>\n\n<style scoped>\n.dashboard-container {\n  padding: 0;\n}\n\n.section-title {\n  font-size: 24px;\n  margin-bottom: 30px;\n  color: #333;\n  border-bottom: 2px solid #4CAF50;\n  padding-bottom: 10px;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.stat-card {\n  background-color: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.stat-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 6px 15px rgba(0,0,0,0.15);\n}\n\n.stat-icon {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n}\n\n.stat-icon.users {\n  background-color: #e3f2fd;\n  color: #1976d2;\n}\n\n.stat-icon.menus {\n  background-color: #e8f5e9;\n  color: #388e3c;\n}\n\n.stat-icon.sales {\n  background-color: #fff8e1;\n  color: #ffa000;\n}\n\n.stat-icon.system {\n  background-color: #f3e5f5;\n  color: #7b1fa2;\n}\n\n.stat-content h3 {\n  font-size: 24px;\n  margin: 0 0 5px 0;\n  color: #333;\n}\n\n.stat-content p {\n  margin: 0;\n  color: #666;\n  font-size: 14px;\n}\n\n.dashboard-actions {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 15px;\n  margin-top: 30px;\n}\n\n.action-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  padding: 15px 20px;\n  cursor: pointer;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  transition: all 0.3s ease;\n}\n\n.action-button:hover {\n  background-color: #45a049;\n  transform: translateY(-3px);\n  box-shadow: 0 4px 10px rgba(0,0,0,0.2);\n}\n\n.action-icon {\n  font-size: 20px;\n}\n</style>\n","import { render } from \"./AdminDashboard.vue?vue&type=template&id=4ace1a92&scoped=true\"\nimport script from \"./AdminDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./AdminDashboard.vue?vue&type=script&lang=js\"\n\nimport \"./AdminDashboard.vue?vue&type=style&index=0&id=4ace1a92&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4ace1a92\"]])\n\nexport default __exports__"],"names":["class","key","for","type","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_cache","$event","$setup","searchTerm","placeholder","onInput","args","handleSearchInput","_hoisted_4","roleFilter","onChange","fetchUsers","value","_Fragment","_renderList","roles","role","id","nombre","_hoisted_5","statusFilter","_hoisted_6","onClick","showCreateForm","_createTextVNode","loading","_hoisted_7","error","_hoisted_8","_hoisted_9","_toDisplayString","users","length","_hoisted_10","resetFilters","_hoisted_11","_hoisted_12","user","_normalizeClass","estado","email","telefono","_hoisted_13","index","formatDate","fecha_creacion","_hoisted_14","editUser","title","_hoisted_15","deactivateUser","_hoisted_16","activateUser","_hoisted_17","deleteUser","_hoisted_18","showModal","_withModifiers","closeModal","_hoisted_19","_hoisted_20","isEditing","_hoisted_21","_hoisted_22","_createCommentVNode","onSubmit","saveUser","_hoisted_23","formData","required","_hoisted_24","disabled","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","password","autocomplete","_hoisted_29","_hoisted_30","_hoisted_31","availableRoles","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","name","emits","setup","props","emit","allUsers","ref","getUsers","getRoles","createUser","updateUser","cambiarEstadoUsuario","removeUser","adminService","searchTimeout","isOnlyAdmin","computed","hasRole","isSuperAdmin","filter","filteredUsers","currentUser","getCurrentUser","Array","isArray","includes","term","toLowerCase","matchesName","matchesEmail","onMounted","async","console","log","Promise","all","fetchRoles","initError","message","status","response","success","data","warn","Error","apiError","err","descripcion","clearTimeout","setTimeout","alert","userData","findIndex","u","Date","toISOString","newUser","createError","confirmed","confirm","confirmText","cancelText","dateStr","date","isNaN","getTime","Intl","DateTimeFormat","day","month","year","hour","minute","format","e","__exports__","render","createNewBackup","creating","backups","backup","archivo","fecha","tamano","restoreBackup","restoring","downloadBackup","deleteBackup","deleting","showRestoreModal","cancelRestore","confirmRestore","getBackups","resolve","formatDateForFilename","now","createBackup","backupId","getFullYear","String","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","selectedBackup","fetchBackups","sort","a","b","second","result","unshift","window","location","reload","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","deleteBackupFromDB","stockFilter","applyFilters","categoryFilter","refreshInventory","loadInventory","filteredProducts","product","getRowClass","includesDrink","availableQuantity","getStatusClass","getStatusText","lastUpdated","openUpdateStockModal","openHistoryModal","showUpdateModal","closeUpdateModal","selectedProduct","updateStockForm","newQuantity","min","reason","updateStock","isUpdating","showHistoryModal","closeHistoryModal","productHistory","record","change","userName","_hoisted_37","products","getMenuItems","map","item","stockHistory","dateString","trim","currentQuantity","parseInt","difference","historyRecord","Math","abs","previousQuantity","userId","updateItemStock","productIndex","p","push","localUsers","getDashboardStats","process","apiService","get","totalUsers","activeUsers","inactiveUsers","activePayments","pendingPayments","overduePayments","totalIncome","lastBackup","recentActivity","tipo","usuario_nombre","accion","options","url","queryParams","join","post","put","userIndex","activo","delete","getLogs","timestamp","details","ip","userAgent","attempts","code","downloadLogsCSV","logsResponse","logs","headers","rows","JSON","stringify","csvContent","row","cell","replace","itemId","newStock","stock","debounceSearch","typeFilter","_createStaticVNode","dateFilter","refreshLogs","downloadLogs","filteredLogs","getTypeLabel","viewLogDetails","changePage","currentPage","displayedPages","page","active","totalPages","selectedLog","pageSize","fetchLogs","today","logDate","yesterday","setDate","lastWeek","lastMonth","setMonth","ceil","pages","maxVisiblePages","i","startPage","max","floor","endPage","startIdx","slice","blob","Blob","link","URL","createObjectURL","split","visibility","loadStats","stats","formatCurrency","activity","toLocaleString","NumberFormat","currency","minimumFractionDigits"],"sourceRoot":""}