{"version":3,"file":"js/platos.23cb5a5b.js","mappings":"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","sources":["webpack://websap/./src/views/PlatosView.vue","webpack://websap/./src/components/PlatoForm.vue","webpack://websap/./src/components/PlatoForm.vue?4a40","webpack://websap/./src/components/DeletePlatoButton.vue","webpack://websap/./src/components/DeletePlatoButton.vue?a94f","webpack://websap/./src/components/DirectDeleteButton.vue","webpack://websap/./src/components/DirectDeleteButton.vue?0a6f","webpack://websap/./src/components/utils/IndexedDBBackup.vue","webpack://websap/./src/scripts/extractIndexedDBImages.js","webpack://websap/./src/components/utils/IndexedDBBackup.vue?f53b","webpack://websap/./src/components/utils/SyncSettings.vue","webpack://websap/./src/components/utils/SyncSettings.vue?2e74","webpack://websap/./src/views/PlatosView.vue?17e9"],"sourcesContent":["<template>\n  <div class=\"platos-view\">\n    <h2>Gestión de Platos</h2>\n    \n    <div class=\"actions-container\">\n      <button @click=\"showForm = !showForm\" class=\"btn toggle-form-btn\">\n        {{ showForm ? 'Ocultar Formulario' : 'Crear Nuevo Plato' }}\n      </button>\n      \n      <!-- Componente de respaldo de IndexedDB -->\n      <IndexedDBBackup class=\"backup-component\" />\n    </div>\n    \n    <!-- Componente de configuración de sincronización -->\n    <SyncSettings class=\"sync-settings-component\" />\n    \n    <div v-if=\"showForm\" class=\"form-container\">\n      <PlatoForm \n        :edit-plato=\"platoToEdit\" \n        @plato-saved=\"onPlatoSaved\" \n        @plato-updated=\"onPlatoUpdated\" \n        @cancel=\"onFormCancel\"\n      />\n    </div>\n    \n    <div class=\"platos-list\">\n      <h3>Lista de Platos ({{ platos.length }})</h3>\n      \n      <div v-if=\"isLoading\" class=\"loading\">\n        Cargando platos...\n      </div>\n      \n      <div v-else-if=\"platos.length === 0\" class=\"empty-state\">\n        No hay platos disponibles. ¡Crea el primero!\n      </div>\n      \n      <div v-else class=\"platos-grid\">\n        <div v-for=\"plato in platos\" :key=\"plato.id\" class=\"plato-card\">\n          <div class=\"plato-image\" :style=\"{ backgroundImage: `url(${plato.image_url || '/placeholder-food.jpg'})` }\"></div>\n          <div class=\"plato-content\">\n            <h4>{{ plato.name }}</h4>\n            <p class=\"price\">${{ plato.price.toFixed(2) }}</p>\n            <p class=\"category\">{{ plato.category || 'Sin categoría' }}</p>\n            <p class=\"description\">{{ plato.description || 'Sin descripción' }}</p>\n            <div class=\"availability\" :class=\"{ available: plato.is_available }\">\n              {{ plato.is_available ? 'Disponible' : 'No disponible' }}\n            </div>\n          </div>\n          <div class=\"plato-actions\">\n            <button @click=\"editPlato(plato)\" class=\"btn btn-edit\">Editar</button>\n            <DeletePlatoButton \n              :plato-id=\"plato.id\" \n              :plato-name=\"plato.name\"\n              @deleted=\"onPlatoDeleted\"\n              @error=\"onDeleteError\"\n            />\n            <DirectDeleteButton\n              :plato-id=\"plato.id\"\n              :plato-name=\"plato.name\"\n              @deleted=\"onPlatoDeleted\"\n              @error=\"onDeleteError\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"error\" class=\"error-container\">\n      <p>{{ error }}</p>\n      <button @click=\"loadPlatos\" class=\"btn retry-btn\">Reintentar</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport PlatoForm from '@/components/PlatoForm.vue';\nimport DeletePlatoButton from '@/components/DeletePlatoButton.vue';\nimport DirectDeleteButton from '@/components/DirectDeleteButton.vue';\nimport IndexedDBBackup from '@/components/utils/IndexedDBBackup.vue';\nimport SyncSettings from '@/components/utils/SyncSettings.vue';\nimport { getAllPlatos } from '@/services/indexedDBService';\n\nexport default {\n  name: 'PlatosView',\n  \n  components: {\n    PlatoForm,\n    DeletePlatoButton,\n    DirectDeleteButton,\n    IndexedDBBackup,\n    SyncSettings\n  },\n  \n  setup() {\n    const platos = ref([]);\n    const isLoading = ref(true);\n    const error = ref('');\n    const showForm = ref(false);\n    const platoToEdit = ref(null);\n    \n    // Cargar todos los platos al montar el componente\n    onMounted(() => {\n      loadPlatos();\n    });\n    \n    // Función para cargar platos\n    const loadPlatos = async () => {\n      isLoading.value = true;\n      error.value = '';\n      \n      try {\n        const result = await getAllPlatos();\n        platos.value = result;\n        console.log('Platos cargados:', platos.value);\n      } catch (err) {\n        console.error('Error al cargar platos:', err);\n        error.value = `Error al cargar platos: ${err.message || 'Error desconocido'}`;\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    \n    // Manejadores de eventos del formulario\n    const onPlatoSaved = (savedPlato) => {\n      console.log('Plato guardado en la vista:', savedPlato);\n      platos.value.push(savedPlato);\n      showForm.value = false;\n    };\n    \n    const onPlatoUpdated = (updatedPlato) => {\n      console.log('Plato actualizado en la vista:', updatedPlato);\n      \n      const index = platos.value.findIndex(p => p.id === updatedPlato.id);\n      if (index !== -1) {\n        platos.value[index] = { ...updatedPlato };\n      }\n      \n      platoToEdit.value = null;\n      showForm.value = false;\n    };\n    \n    const onFormCancel = () => {\n      platoToEdit.value = null;\n      showForm.value = false;\n    };\n    \n    // Funciones para editar y eliminar platos\n    const editPlato = (plato) => {\n      platoToEdit.value = { ...plato };\n      showForm.value = true;\n    };\n    \n    const onPlatoDeleted = (id) => {\n      platos.value = platos.value.filter(plato => plato.id !== id);\n    };\n    \n    const onDeleteError = (err) => {\n      console.error('Error al eliminar plato:', err);\n      error.value = `Error al eliminar plato: ${err.message || 'Error desconocido'}`;\n    };\n    \n    return {\n      platos,\n      isLoading,\n      error,\n      showForm,\n      platoToEdit,\n      loadPlatos,\n      onPlatoSaved,\n      onPlatoUpdated,\n      onFormCancel,\n      editPlato,\n      onPlatoDeleted,\n      onDeleteError\n    };\n  }\n};\n</script>\n\n<style scoped>\n.platos-view {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.actions-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.toggle-form-btn {\n  margin-bottom: 20px;\n  background-color: #2196F3;\n  color: white;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.backup-component {\n  margin-left: 20px;\n}\n\n.sync-settings-component {\n  margin-bottom: 20px;\n}\n\n.form-container {\n  margin-bottom: 30px;\n}\n\n.platos-list {\n  margin-top: 30px;\n}\n\n.loading, .empty-state {\n  padding: 20px;\n  text-align: center;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n}\n\n.platos-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.plato-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n}\n\n.plato-image {\n  height: 200px;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-color: #f5f5f5;\n}\n\n.plato-content {\n  padding: 15px;\n  flex-grow: 1;\n}\n\n.plato-content h4 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 18px;\n}\n\n.price {\n  font-weight: bold;\n  font-size: 16px;\n  color: #4CAF50;\n  margin: 5px 0;\n}\n\n.category {\n  font-size: 14px;\n  color: #757575;\n  margin: 5px 0;\n}\n\n.description {\n  font-size: 14px;\n  margin: 10px 0;\n  color: #333;\n}\n\n.availability {\n  display: inline-block;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 12px;\n  background-color: #FFEBEE;\n  color: #D32F2F;\n}\n\n.availability.available {\n  background-color: #E8F5E9;\n  color: #2E7D32;\n}\n\n.plato-actions {\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n  border-top: 1px solid #eee;\n}\n\n.btn {\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.btn-edit {\n  background-color: #2196F3;\n  color: white;\n}\n\n.error-container {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #FFEBEE;\n  border-radius: 4px;\n  color: #C62828;\n}\n\n.retry-btn {\n  margin-top: 10px;\n  background-color: #9E9E9E;\n  color: white;\n}\n</style>\n","<template>\r\n  <div class=\"plato-form\">\r\n    <h3>{{ isEditing ? 'Editar Plato' : 'Crear Nuevo Plato' }}</h3>\r\n    \r\n    <form @submit.prevent=\"handleSubmit\" class=\"form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Nombre del Plato *</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"name\" \r\n          v-model=\"form.name\" \r\n          required\r\n          class=\"form-control\"\r\n        />\r\n        <div v-if=\"errors.name\" class=\"error-text\">{{ errors.name }}</div>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"description\">Descripción</label>\r\n        <textarea \r\n          id=\"description\" \r\n          v-model=\"form.description\"\r\n          class=\"form-control\"\r\n        ></textarea>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"price\">Precio *</label>\r\n        <input \r\n          type=\"number\" \r\n          id=\"price\" \r\n          v-model.number=\"form.price\" \r\n          min=\"0\" \r\n          step=\"0.01\" \r\n          required\r\n          class=\"form-control\"\r\n        />\r\n        <div v-if=\"errors.price\" class=\"error-text\">{{ errors.price }}</div>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"category\">Categoría</label>\r\n        <select\r\n          id=\"category\"\r\n          v-model=\"form.category\"\r\n          class=\"form-control\"\r\n        >\r\n          <option value=\"\">Seleccionar categoría</option>\r\n          <option value=\"Entradas\">Entradas</option>\r\n          <option value=\"Platos Principales\">Platos Principales</option>\r\n          <option value=\"Postres\">Postres</option>\r\n          <option value=\"Bebidas\">Bebidas</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label class=\"checkbox-label\">\r\n          <input \r\n            type=\"checkbox\" \r\n            v-model=\"form.is_available\"\r\n          />\r\n          <span>Disponible</span>\r\n        </label>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"image_url\">URL de Imagen</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"image_url\" \r\n          v-model=\"form.image_url\"\r\n          class=\"form-control\"\r\n          placeholder=\"http://ejemplo.com/imagen.jpg\"\r\n        />\r\n      </div>\r\n      \r\n      <div class=\"actions\">\r\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isSubmitting\">\r\n          {{ isSubmitting ? 'Guardando...' : (isEditing ? 'Actualizar' : 'Guardar') }}\r\n        </button>\r\n        <button type=\"button\" @click=\"resetForm\" class=\"btn btn-secondary\" :disabled=\"isSubmitting\">\r\n          Cancelar\r\n        </button>\r\n      </div>\r\n    </form>\r\n    \r\n    <div v-if=\"success\" class=\"success-message\">\r\n      {{ success }}\r\n    </div>\r\n    \r\n    <div v-if=\"errorMessage\" class=\"error-message\">\r\n      {{ errorMessage }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\nimport { createPlato } from '@/services/indexedDBService';\r\n\r\nexport default {\r\n  name: 'PlatoForm',\r\n  \r\n  props: {\r\n    editPlato: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  \r\n  emits: ['plato-saved', 'plato-updated', 'cancel'],\r\n  \r\n  setup(props, { emit }) {\r\n    // Estado del formulario\r\n    const form = reactive({\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      category: '',\r\n      is_available: true,\r\n      image_url: ''\r\n    });\r\n    \r\n    // Estados para validación y UI\r\n    const errors = reactive({\r\n      name: '',\r\n      price: ''\r\n    });\r\n    const isSubmitting = ref(false);\r\n    const errorMessage = ref('');\r\n    const success = ref('');\r\n    \r\n    // Determinar si estamos editando o creando\r\n    const isEditing = computed(() => !!props.editPlato);\r\n    \r\n    // Inicializar el formulario con datos si estamos editando\r\n    onMounted(() => {\r\n      if (props.editPlato) {\r\n        Object.assign(form, props.editPlato);\r\n      }\r\n    });\r\n    \r\n    // Validar el formulario\r\n    const validateForm = () => {\r\n      let isValid = true;\r\n      \r\n      // Validar nombre\r\n      if (!form.name.trim()) {\r\n        errors.name = 'El nombre del plato es obligatorio';\r\n        isValid = false;\r\n      } else {\r\n        errors.name = '';\r\n      }\r\n      \r\n      // Validar precio\r\n      if (form.price === null || form.price === undefined || isNaN(form.price)) {\r\n        errors.price = 'El precio debe ser un número válido';\r\n        isValid = false;\r\n      } else if (form.price < 0) {\r\n        errors.price = 'El precio no puede ser negativo';\r\n        isValid = false;\r\n      } else {\r\n        errors.price = '';\r\n      }\r\n      \r\n      return isValid;\r\n    };\r\n    \r\n    // Manejar el envío del formulario\r\n    const handleSubmit = async () => {\r\n      console.log('Enviando formulario', form);\r\n      \r\n      // Reiniciar mensajes\r\n      success.value = '';\r\n      errorMessage.value = '';\r\n      \r\n      // Validar formulario\r\n      if (!validateForm()) {\r\n        console.log('Formulario inválido', errors);\r\n        return;\r\n      }\r\n      \r\n      isSubmitting.value = true;\r\n      \r\n      try {\r\n        if (isEditing.value) {\r\n          // Lógica para edición (a implementar)\r\n          // Por ahora solo emitimos el evento\r\n          emit('plato-updated', form);\r\n          success.value = 'Plato actualizado correctamente';\r\n        } else {\r\n          // Crear nuevo plato usando la función createPlato\r\n          console.log('Llamando a createPlato con:', form);\r\n          const savedPlato = await createPlato({\r\n            ...form,\r\n            price: Number(form.price) // Asegurar que price es un número\r\n          });\r\n          \r\n          console.log('Plato guardado exitosamente:', savedPlato);\r\n          success.value = 'Plato guardado correctamente';\r\n          \r\n          // Emitir evento con el plato guardado\r\n          emit('plato-saved', savedPlato);\r\n          \r\n          // Resetear el formulario\r\n          resetForm();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al guardar el plato:', error);\r\n        errorMessage.value = `Error al guardar el plato: ${error.message || 'Error desconocido'}`;\r\n      } finally {\r\n        isSubmitting.value = false;\r\n      }\r\n    };\r\n    \r\n    // Resetear el formulario\r\n    const resetForm = () => {\r\n      // Si estamos editando, mantener los valores originales\r\n      if (isEditing.value && props.editPlato) {\r\n        Object.assign(form, props.editPlato);\r\n      } else {\r\n        // Si estamos creando, limpiar todos los campos\r\n        form.name = '';\r\n        form.description = '';\r\n        form.price = 0;\r\n        form.category = '';\r\n        form.is_available = true;\r\n        form.image_url = '';\r\n      }\r\n      \r\n      // Limpiar errores\r\n      errors.name = '';\r\n      errors.price = '';\r\n      \r\n      // Limpiar mensajes\r\n      errorMessage.value = '';\r\n      success.value = '';\r\n      \r\n      // Emitir evento de cancelación\r\n      emit('cancel');\r\n    };\r\n    \r\n    return {\r\n      form,\r\n      errors,\r\n      isSubmitting,\r\n      errorMessage,\r\n      success,\r\n      isEditing,\r\n      handleSubmit,\r\n      resetForm\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.plato-form {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\n.form-control {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.checkbox-label {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.btn {\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n  background-color: #388E3C;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #9E9E9E;\r\n  color: white;\r\n}\r\n\r\n.btn-secondary:hover:not(:disabled) {\r\n  background-color: #757575;\r\n}\r\n\r\n.error-text {\r\n  color: #F44336;\r\n  font-size: 14px;\r\n  margin-top: 4px;\r\n}\r\n\r\n.success-message {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  background-color: #E8F5E9;\r\n  color: #2E7D32;\r\n  border: 1px solid #81C784;\r\n}\r\n\r\n.error-message {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  background-color: #FFEBEE;\r\n  color: #C62828;\r\n  border: 1px solid #EF9A9A;\r\n}\r\n</style>\r\n","import { render } from \"./PlatoForm.vue?vue&type=template&id=19264ebf&scoped=true\"\nimport script from \"./PlatoForm.vue?vue&type=script&lang=js\"\nexport * from \"./PlatoForm.vue?vue&type=script&lang=js\"\n\nimport \"./PlatoForm.vue?vue&type=style&index=0&id=19264ebf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-19264ebf\"]])\n\nexport default __exports__","// src/components/DeletePlatoButton.vue\n\n<template>\n  <button \n    @click=\"confirmDelete\" \n    class=\"delete-button\"\n    :disabled=\"isDeleting\"\n  >\n    {{ isDeleting ? 'Eliminando...' : 'Eliminar' }}\n  </button>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'DeletePlatoButton',\n  \n  props: {\n    platoId: {\n      type: String,\n      required: true\n    },\n    platoName: {\n      type: String,\n      default: 'este plato'\n    }\n  },\n  \n  emits: ['deleted', 'error'],\n  \n  setup(props, { emit }) {\n    const isDeleting = ref(false);\n    \n    const confirmDelete = async () => {\n      if (confirm(`¿Estás seguro de que deseas eliminar ${props.platoName}?`)) {\n        await deletePlato();\n      }\n    };\n    \n    const deletePlato = async () => {\n      isDeleting.value = true;\n      \n      try {\n        console.log(`Iniciando eliminación directa del plato ID: ${props.platoId}`);\n        \n        // Usar fetch directamente para eliminar el plato\n        const response = await fetch('http://localhost:3000/api/sync/platos', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: props.platoId,\n            operation: 'delete'\n          })\n        });\n        \n        console.log(`Respuesta del servidor: ${response.status}`);\n        \n        if (response.ok) {\n          const data = await response.json();\n          console.log('Respuesta del servidor:', data);\n          \n          // Notificar que el plato fue eliminado\n          emit('deleted', props.platoId);\n          \n          // Mostrar mensaje de éxito\n          alert(`El plato \"${props.platoName}\" ha sido eliminado correctamente.`);\n        } else {\n          // Si hay un error, intentar eliminar directamente con el script\n          console.error(`Error al eliminar plato: ${response.status}`);\n          const errorText = await response.text();\n          console.error('Detalles del error:', errorText);\n          \n          // Notificar el error\n          emit('error', {\n            id: props.platoId,\n            status: response.status,\n            message: errorText\n          });\n          \n          // Sugerir usar el script directo\n          alert(`Error al eliminar el plato. Por favor, utiliza el script directo:\\n\\nnode delete-plato.js ${props.platoId}`);\n        }\n      } catch (error) {\n        console.error('Error al eliminar plato:', error);\n        \n        // Notificar el error\n        emit('error', {\n          id: props.platoId,\n          message: error.message\n        });\n        \n        // Sugerir usar el script directo\n        alert(`Error al eliminar el plato: ${error.message}\\n\\nPor favor, utiliza el script directo:\\n\\nnode delete-plato.js ${props.platoId}`);\n      } finally {\n        isDeleting.value = false;\n      }\n    };\n    \n    return {\n      isDeleting,\n      confirmDelete\n    };\n  }\n};\n</script>\n\n<style scoped>\n.delete-button {\n  background-color: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 6px 12px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.delete-button:hover {\n  background-color: #c82333;\n}\n\n.delete-button:disabled {\n  background-color: #6c757d;\n  cursor: not-allowed;\n}\n</style>\n","import { render } from \"./DeletePlatoButton.vue?vue&type=template&id=988cd296&scoped=true\"\nimport script from \"./DeletePlatoButton.vue?vue&type=script&lang=js\"\nexport * from \"./DeletePlatoButton.vue?vue&type=script&lang=js\"\n\nimport \"./DeletePlatoButton.vue?vue&type=style&index=0&id=988cd296&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-988cd296\"]])\n\nexport default __exports__","// src/components/DirectDeleteButton.vue\n\n<template>\n  <div class=\"direct-delete-container\">\n    <button \n      @click=\"showConfirmation = true\" \n      class=\"direct-delete-button\"\n      :disabled=\"isDeleting\"\n    >\n      {{ isDeleting ? 'Eliminando...' : 'Eliminar Directamente' }}\n    </button>\n    \n    <div v-if=\"showConfirmation\" class=\"confirmation-dialog\">\n      <div class=\"confirmation-content\">\n        <h3>Confirmar Eliminación</h3>\n        <p>¿Estás seguro de que deseas eliminar el plato <strong>{{ platoName }}</strong>?</p>\n        <p>Esta acción eliminará el plato directamente de la base de datos MySQL y no se puede deshacer.</p>\n        \n        <div class=\"confirmation-actions\">\n          <button @click=\"showConfirmation = false\" class=\"cancel-button\">Cancelar</button>\n          <button @click=\"executeDelete\" class=\"confirm-button\" :disabled=\"isDeleting\">\n            {{ isDeleting ? 'Eliminando...' : 'Confirmar Eliminación' }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'DirectDeleteButton',\n  \n  props: {\n    platoId: {\n      type: String,\n      required: true\n    },\n    platoName: {\n      type: String,\n      default: 'este plato'\n    }\n  },\n  \n  emits: ['deleted', 'error'],\n  \n  setup(props, { emit }) {\n    const isDeleting = ref(false);\n    const showConfirmation = ref(false);\n    const deleteStatus = ref('');\n    \n    const executeDelete = async () => {\n      isDeleting.value = true;\n      deleteStatus.value = 'Iniciando eliminación...';\n      \n      try {\n        // Usar el endpoint de eliminación directa mejorado\n        const response = await fetch(`http://localhost:3000/direct-delete?id=${encodeURIComponent(props.platoId)}`, {\n          method: 'GET',\n          headers: {\n            'Cache-Control': 'no-cache'\n          }\n        });\n        \n        console.log(`Respuesta del servidor: Status ${response.status}`);\n        \n        if (response.ok) {\n          const result = await response.json();\n          console.log('Respuesta completa:', result);\n          \n          if (result.success) {\n            deleteStatus.value = 'Plato eliminado con éxito';\n            emit('deleted', props.platoId);\n            showConfirmation.value = false;\n            \n            // También eliminar de IndexedDB para mantener todo sincronizado\n            try {\n              const db = await window.indexedDB.open('websap', 3);\n              db.onsuccess = function(event) {\n                const database = event.target.result;\n                const transaction = database.transaction(['platos'], 'readwrite');\n                const store = transaction.objectStore('platos');\n                store.delete(props.platoId);\n                \n                transaction.oncomplete = function() {\n                  console.log(`Plato ${props.platoId} también eliminado de IndexedDB`);\n                };\n              };\n            } catch (localDbError) {\n              console.warn('No se pudo eliminar de IndexedDB, pero se eliminó de MySQL:', localDbError);\n            }\n            \n            alert(`El plato \"${props.platoName}\" ha sido eliminado correctamente de la base de datos MySQL.`);\n          } else {\n            deleteStatus.value = `Error: ${result.message}`;\n            emit('error', { id: props.platoId, message: result.message });\n            alert(`Error al eliminar el plato: ${result.message}`);\n          }\n        } else {\n          const errorText = await response.text();\n          deleteStatus.value = `Error: ${response.status} - ${errorText}`;\n          emit('error', { id: props.platoId, status: response.status, message: errorText });\n          alert(`Error al eliminar el plato. Status: ${response.status}\\n${errorText}`);\n        }\n      } catch (error) {\n        deleteStatus.value = `Error: ${error.message}`;\n        emit('error', { id: props.platoId, message: error.message });\n        alert(`Error al eliminar el plato: ${error.message}`);\n      } finally {\n        isDeleting.value = false;\n      }\n    };\n    \n    return {\n      isDeleting,\n      showConfirmation,\n      deleteStatus,\n      executeDelete\n    };\n  }\n};\n</script>\n\n<style scoped>\n.direct-delete-button {\n  background-color: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.3s;\n  margin-top: 10px;\n  width: 100%;\n}\n\n.direct-delete-button:hover {\n  background-color: #c82333;\n}\n\n.direct-delete-button:disabled {\n  background-color: #6c757d;\n  cursor: not-allowed;\n}\n\n.confirmation-dialog {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.confirmation-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.confirmation-content h3 {\n  margin-top: 0;\n  color: #dc3545;\n}\n\n.confirmation-actions {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n  gap: 10px;\n}\n\n.cancel-button {\n  background-color: #6c757d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n}\n\n.confirm-button {\n  background-color: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.confirm-button:disabled {\n  background-color: #6c757d;\n  cursor: not-allowed;\n}\n</style>\n","import { render } from \"./DirectDeleteButton.vue?vue&type=template&id=39d68c72&scoped=true\"\nimport script from \"./DirectDeleteButton.vue?vue&type=script&lang=js\"\nexport * from \"./DirectDeleteButton.vue?vue&type=script&lang=js\"\n\nimport \"./DirectDeleteButton.vue?vue&type=style&index=0&id=39d68c72&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-39d68c72\"]])\n\nexport default __exports__","// src/components/utils/IndexedDBBackup.vue\n\n<template>\n  <div class=\"indexeddb-backup\">\n    <button @click=\"backupIndexedDB\" class=\"backup-button\" :disabled=\"isBackingUp\">\n      {{ isBackingUp ? 'Procesando...' : 'Sincronizar imágenes originales' }}\n    </button>\n    <div v-if=\"message\" :class=\"['backup-message', messageType]\">\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { extractIndexedDBImages } from '@/scripts/extractIndexedDBImages';\nimport { optimizeImageForSync } from '@/services/imageService';\n\nexport default {\n  name: 'IndexedDBBackup',\n  setup() {\n    const isBackingUp = ref(false);\n    const message = ref('');\n    const messageType = ref('info');\n\n    // Función para hacer respaldo de IndexedDB\n    const backupIndexedDB = async () => {\n      try {\n        isBackingUp.value = true;\n        message.value = 'Recuperando y optimizando imágenes originales...';\n        messageType.value = 'info';\n        \n        // Extraer imágenes de IndexedDB y sincronizarlas con MySQL\n        const result = await extractIndexedDBImages();\n        \n        if (result.success) {\n          message.value = result.message;\n          messageType.value = 'success';\n        } else {\n          message.value = result.message;\n          messageType.value = 'error';\n        }\n      } catch (error) {\n        console.error('Error al recuperar imágenes originales:', error);\n        message.value = 'Error al recuperar imágenes originales: ' + error.message;\n        messageType.value = 'error';\n      } finally {\n        isBackingUp.value = false;\n        \n        // Limpiar el mensaje después de 10 segundos\n        setTimeout(() => {\n          message.value = '';\n        }, 10000);\n      }\n    };\n\n    return {\n      isBackingUp,\n      message,\n      messageType,\n      backupIndexedDB\n    };\n  }\n};\n</script>\n\n<style scoped>\n.indexeddb-backup {\n  margin: 20px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.backup-button {\n  padding: 10px 15px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.backup-button:hover {\n  background-color: #45a049;\n}\n\n.backup-button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.backup-message {\n  margin-top: 10px;\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 14px;\n  max-width: 400px;\n  text-align: center;\n}\n\n.backup-message.info {\n  background-color: #e7f3fe;\n  border: 1px solid #b6d4fe;\n  color: #084298;\n}\n\n.backup-message.success {\n  background-color: #d1e7dd;\n  border: 1px solid #badbcc;\n  color: #0f5132;\n}\n\n.backup-message.warning {\n  background-color: #fff3cd;\n  border: 1px solid #ffecb5;\n  color: #664d03;\n}\n\n.backup-message.error {\n  background-color: #f8d7da;\n  border: 1px solid #f5c2c7;\n  color: #842029;\n}\n</style>\n","// src/scripts/extractIndexedDBImages.js\n\nimport { getAllPlatos } from '../services/indexedDBService';\nimport apiService from '../services/apiService';\nimport { optimizeImageForSync } from '../services/imageService';\n\n/**\n * Función para extraer las imágenes de los platos desde IndexedDB y enviarlas al servidor\n */\nexport async function extractIndexedDBImages() {\n  try {\n    console.log('Extrayendo imágenes de IndexedDB...');\n    \n    // Obtener todos los platos de IndexedDB\n    const platos = await getAllPlatos();\n    \n    if (!platos || platos.length === 0) {\n      console.warn('No hay platos en IndexedDB para extraer imágenes');\n      return {\n        success: false,\n        message: 'No hay platos en IndexedDB para extraer imágenes'\n      };\n    }\n    \n    console.log(`Se encontraron ${platos.length} platos en IndexedDB`);\n    \n    // Filtrar solo los platos que tienen imagen\n    const platosConImagen = platos.filter(plato => plato.image && plato.image.length > 0);\n    \n    console.log(`${platosConImagen.length} platos tienen imágenes en IndexedDB`);\n    \n    if (platosConImagen.length === 0) {\n      console.warn('Ninguno de los platos tiene imágenes en IndexedDB');\n      return {\n        success: false,\n        message: 'Ninguno de los platos tiene imágenes en IndexedDB'\n      };\n    }\n    \n    // Optimizar las imágenes antes de enviarlas\n    console.log('Optimizando imágenes antes de enviarlas...');\n    const platosOptimizados = [];\n    \n    for (const plato of platosConImagen) {\n      try {\n        // Crear una copia del plato para no modificar el original\n        const platoOptimizado = { ...plato };\n        \n        // Optimizar la imagen\n        platoOptimizado.image = await optimizeImageForSync(plato.image);\n        \n        platosOptimizados.push(platoOptimizado);\n      } catch (error) {\n        console.warn(`Error al optimizar imagen del plato ${plato.name}:`, error);\n        // Incluir el plato con la imagen original en caso de error\n        platosOptimizados.push(plato);\n      }\n    }\n    \n    console.log(`${platosOptimizados.length} platos con imágenes optimizadas listos para enviar`);\n    \n    // Enviar los platos con imágenes optimizadas al servidor\n    const response = await apiService.post('/indexeddb/backup', { platos: platosOptimizados });\n    \n    if (response && response.success) {\n      console.log('Imágenes extraídas y enviadas al servidor con éxito');\n      \n      // Sincronizar las imágenes con MySQL\n      try {\n        const syncResponse = await apiService.post('/indexeddb/sync-images');\n        \n        if (syncResponse && syncResponse.success) {\n          console.log('Imágenes sincronizadas con MySQL con éxito');\n          return {\n            success: true,\n            message: `Imágenes extraídas y sincronizadas con éxito. ${syncResponse.data.actualizados} platos actualizados.`\n          };\n        } else {\n          console.error('Error al sincronizar imágenes con MySQL:', syncResponse?.message || 'Error desconocido');\n          return {\n            success: false,\n            message: 'Error al sincronizar imágenes con MySQL: ' + (syncResponse?.message || 'Error desconocido')\n          };\n        }\n      } catch (syncError) {\n        console.error('Error al sincronizar imágenes con MySQL:', syncError);\n        return {\n          success: false,\n          message: 'Error al sincronizar imágenes con MySQL: ' + syncError.message\n        };\n      }\n    } else {\n      console.error('Error al enviar imágenes al servidor:', response?.message || 'Error desconocido');\n      return {\n        success: false,\n        message: 'Error al enviar imágenes al servidor: ' + (response?.message || 'Error desconocido')\n      };\n    }\n  } catch (error) {\n    console.error('Error al extraer imágenes de IndexedDB:', error);\n    return {\n      success: false,\n      message: 'Error al extraer imágenes de IndexedDB: ' + error.message\n    };\n  }\n}\n","import { render } from \"./IndexedDBBackup.vue?vue&type=template&id=4e991565&scoped=true\"\nimport script from \"./IndexedDBBackup.vue?vue&type=script&lang=js\"\nexport * from \"./IndexedDBBackup.vue?vue&type=script&lang=js\"\n\nimport \"./IndexedDBBackup.vue?vue&type=style&index=0&id=4e991565&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e991565\"]])\n\nexport default __exports__","// src/components/utils/SyncSettings.vue\n\n<template>\n  <div class=\"sync-settings\">\n    <h3>Configuración de Sincronización</h3>\n    \n    <div class=\"settings-form\">\n      <div class=\"form-group\">\n        <label for=\"autoSyncImages\">\n          <input \n            type=\"checkbox\" \n            id=\"autoSyncImages\" \n            v-model=\"settings.autoSyncImages\"\n            @change=\"saveSettings\"\n          />\n          Sincronizar imágenes automáticamente\n        </label>\n        <div class=\"help-text\">\n          Cuando está activado, las imágenes se sincronizarán automáticamente con el servidor\n        </div>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"compressImages\">\n          <input \n            type=\"checkbox\" \n            id=\"compressImages\" \n            v-model=\"settings.compressImages\"\n            @change=\"saveSettings\"\n          />\n          Comprimir imágenes antes de sincronizar\n        </label>\n        <div class=\"help-text\">\n          Reduce el tamaño de las imágenes para mejorar la velocidad de sincronización\n        </div>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"maxImageSize\">Tamaño máximo de imagen (KB):</label>\n        <input \n          type=\"number\" \n          id=\"maxImageSize\" \n          v-model.number=\"settings.maxImageSize\"\n          min=\"100\" \n          max=\"2000\"\n          @change=\"saveSettings\"\n        />\n        <div class=\"help-text\">\n          Las imágenes más grandes que este valor serán comprimidas automáticamente\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"sync-actions\">\n      <button \n        @click=\"syncAllImages\" \n        class=\"sync-button\"\n        :disabled=\"isSyncing\"\n      >\n        {{ isSyncing ? 'Sincronizando...' : 'Sincronizar todas las imágenes ahora' }}\n      </button>\n      \n      <div v-if=\"message\" :class=\"['sync-message', messageType]\">\n        {{ message }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue';\nimport { extractIndexedDBImages } from '@/scripts/extractIndexedDBImages';\n\n// Clave para almacenar la configuración en localStorage\nconst STORAGE_KEY = 'websap_sync_settings';\n\nexport default {\n  name: 'SyncSettings',\n  setup() {\n    // Estado de sincronización\n    const isSyncing = ref(false);\n    const message = ref('');\n    const messageType = ref('info');\n    \n    // Configuración por defecto\n    const defaultSettings = {\n      autoSyncImages: true,\n      compressImages: true,\n      maxImageSize: 500 // KB\n    };\n    \n    // Cargar configuración desde localStorage o usar valores por defecto\n    const settings = reactive(loadSettings());\n    \n    // Función para cargar la configuración\n    function loadSettings() {\n      try {\n        const savedSettings = localStorage.getItem(STORAGE_KEY);\n        if (savedSettings) {\n          return JSON.parse(savedSettings);\n        }\n      } catch (error) {\n        console.error('Error al cargar configuración de sincronización:', error);\n      }\n      return { ...defaultSettings };\n    }\n    \n    // Función para guardar la configuración\n    function saveSettings() {\n      try {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(settings));\n        showMessage('Configuración guardada', 'success');\n      } catch (error) {\n        console.error('Error al guardar configuración de sincronización:', error);\n        showMessage('Error al guardar configuración', 'error');\n      }\n    }\n    \n    // Función para sincronizar todas las imágenes\n    async function syncAllImages() {\n      try {\n        isSyncing.value = true;\n        showMessage('Sincronizando imágenes...', 'info');\n        \n        const result = await extractIndexedDBImages();\n        \n        if (result.success) {\n          showMessage(result.message, 'success');\n        } else {\n          showMessage(result.message, 'error');\n        }\n      } catch (error) {\n        console.error('Error al sincronizar imágenes:', error);\n        showMessage('Error al sincronizar imágenes: ' + error.message, 'error');\n      } finally {\n        isSyncing.value = false;\n      }\n    }\n    \n    // Función para mostrar mensajes\n    function showMessage(text, type = 'info') {\n      message.value = text;\n      messageType.value = type;\n      \n      // Limpiar el mensaje después de 5 segundos\n      setTimeout(() => {\n        message.value = '';\n      }, 5000);\n    }\n    \n    // Cargar configuración al montar el componente\n    onMounted(() => {\n      // Si no hay configuración guardada, guardar la configuración por defecto\n      if (!localStorage.getItem(STORAGE_KEY)) {\n        saveSettings();\n      }\n    });\n    \n    return {\n      settings,\n      isSyncing,\n      message,\n      messageType,\n      saveSettings,\n      syncAllImages\n    };\n  }\n};\n</script>\n\n<style scoped>\n.sync-settings {\n  margin: 20px 0;\n  padding: 15px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n}\n\nh3 {\n  margin-top: 0;\n  margin-bottom: 15px;\n  color: #333;\n}\n\n.settings-form {\n  margin-bottom: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  margin-bottom: 5px;\n}\n\ninput[type=\"checkbox\"] {\n  margin-right: 8px;\n}\n\ninput[type=\"number\"] {\n  width: 100px;\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.help-text {\n  font-size: 12px;\n  color: #666;\n  margin-top: 3px;\n  margin-left: 24px;\n}\n\n.sync-actions {\n  margin-top: 20px;\n}\n\n.sync-button {\n  padding: 10px 15px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.sync-button:hover {\n  background-color: #45a049;\n}\n\n.sync-button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.sync-message {\n  margin-top: 10px;\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.sync-message.info {\n  background-color: #e7f3fe;\n  border: 1px solid #b6d4fe;\n  color: #084298;\n}\n\n.sync-message.success {\n  background-color: #d1e7dd;\n  border: 1px solid #badbcc;\n  color: #0f5132;\n}\n\n.sync-message.warning {\n  background-color: #fff3cd;\n  border: 1px solid #ffecb5;\n  color: #664d03;\n}\n\n.sync-message.error {\n  background-color: #f8d7da;\n  border: 1px solid #f5c2c7;\n  color: #842029;\n}\n</style>\n","import { render } from \"./SyncSettings.vue?vue&type=template&id=8a790240&scoped=true\"\nimport script from \"./SyncSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SyncSettings.vue?vue&type=script&lang=js\"\n\nimport \"./SyncSettings.vue?vue&type=style&index=0&id=8a790240&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8a790240\"]])\n\nexport default __exports__","import { render } from \"./PlatosView.vue?vue&type=template&id=075cd5d8&scoped=true\"\nimport script from \"./PlatosView.vue?vue&type=script&lang=js\"\nexport * from \"./PlatosView.vue?vue&type=script&lang=js\"\n\nimport \"./PlatosView.vue?vue&type=style&index=0&id=075cd5d8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-075cd5d8\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","$setup","showForm","_createVNode","_component_IndexedDBBackup","_component_SyncSettings","_hoisted_3","_component_PlatoForm","platoToEdit","onPlatoSaved","onPlatoUpdated","onCancel","onFormCancel","_createCommentVNode","_hoisted_4","_toDisplayString","platos","length","isLoading","_hoisted_5","_hoisted_6","_hoisted_7","_Fragment","_renderList","plato","id","style","_normalizeStyle","backgroundImage","image_url","_hoisted_8","name","_hoisted_9","price","toFixed","_hoisted_10","category","_hoisted_11","description","_normalizeClass","available","is_available","_hoisted_12","editPlato","_hoisted_13","_component_DeletePlatoButton","onDeleted","onPlatoDeleted","onError","onDeleteError","_component_DirectDeleteButton","error","_hoisted_14","args","loadPlatos","isEditing","onSubmit","_withModifiers","handleSubmit","for","type","form","required","errors","min","step","number","_createStaticVNode","placeholder","disabled","isSubmitting","resetForm","success","errorMessage","_hoisted_15","props","Object","default","emits","setup","emit","reactive","ref","computed","onMounted","assign","validateForm","isValid","trim","undefined","isNaN","async","console","log","value","savedPlato","createPlato","Number","message","__exports__","confirmDelete","isDeleting","platoId","String","platoName","confirm","deletePlato","response","fetch","method","headers","body","JSON","stringify","operation","status","ok","data","json","alert","errorText","text","showConfirmation","_createTextVNode","$props","executeDelete","deleteStatus","encodeURIComponent","result","db","window","indexedDB","open","onsuccess","event","database","target","transaction","store","objectStore","delete","oncomplete","localDbError","warn","backupIndexedDB","isBackingUp","messageType","extractIndexedDBImages","getAllPlatos","platosConImagen","filter","image","platosOptimizados","platoOptimizado","optimizeImageForSync","push","apiService","post","syncResponse","actualizados","syncError","setTimeout","settings","autoSyncImages","onChange","saveSettings","compressImages","maxImageSize","max","syncAllImages","isSyncing","STORAGE_KEY","defaultSettings","loadSettings","savedSettings","localStorage","getItem","parse","setItem","showMessage","components","PlatoForm","DeletePlatoButton","DirectDeleteButton","IndexedDBBackup","SyncSettings","err","updatedPlato","index","findIndex","p","render"],"sourceRoot":""}