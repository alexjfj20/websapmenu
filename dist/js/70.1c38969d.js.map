{"version":3,"file":"js/70.1c38969d.js","mappings":"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","sources":["webpack://websap/./src/services/businessInfoService.js","webpack://websap/./src/components/admin/SyncBusinessInfo.vue","webpack://websap/./src/components/admin/SyncBusinessInfo.vue?9654"],"sourcesContent":["// src/services/businessInfoService.js\n\nimport apiService from './apiService';\nimport { getBusinessInfo, saveBusinessInfo } from './storageService';\nimport eventBus from '../utils/eventBus';\n\n// Constantes para la sincronización\nconst SYNC_INTERVAL = 30000; // 30 segundos\nconst CACHE_DURATION = 300000; // 5 minutos\nlet syncIntervalId = null;\nlet lastSyncTimestamp = 0;\nlet lastFetchTimestamp = 0;\nlet businessInfoCache = null;\nlet isInitialized = false;\n\n/**\n * Sincroniza la información del negocio guardada en IndexedDB con el backend\n * @returns {Promise<Object>} - Resultado de la sincronización\n */\nexport async function syncBusinessInfoWithBackend() {\n  try {\n    // Obtener la información del negocio desde IndexedDB\n    const businessInfo = await getBusinessInfo();\n    \n    if (!businessInfo || Object.keys(businessInfo).length === 0) {\n      console.log('No hay información del negocio para sincronizar');\n      return {\n        success: false,\n        message: 'No hay información del negocio para sincronizar'\n      };\n    }\n    \n    console.log('Sincronizando información del negocio con el backend:', businessInfo);\n    \n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    // Obtener el ID del restaurante del usuario actual\n    const userResponse = await apiService.get('/auth/me');\n    if (!userResponse || !userResponse.success || !userResponse.user || !userResponse.user.restaurante_id) {\n      console.warn('No se pudo obtener el restaurante del usuario actual');\n      return {\n        success: false,\n        message: 'No se pudo obtener el restaurante del usuario actual'\n      };\n    }\n    \n    const restauranteId = userResponse.user.restaurante_id;\n    \n    // Preparar los datos para actualizar el restaurante\n    const restauranteData = {\n      nombre: businessInfo.name,\n      descripcion: businessInfo.description,\n      direccion: businessInfo.address,\n      telefono: businessInfo.contact,\n      logo: businessInfo.logo,\n      // Guardar la información de pago como un campo JSON\n      informacion_pago: JSON.stringify(businessInfo.paymentInfo || {})\n    };\n    \n    // Actualizar el restaurante en el backend\n    const response = await apiService.put(`/restaurantes/${restauranteId}`, restauranteData);\n    \n    if (response && response.success) {\n      console.log('Información del negocio sincronizada con éxito');\n      lastSyncTimestamp = Date.now();\n      \n      // Notificar a todos los componentes que la información ha sido sincronizada\n      eventBus.emit('business-info-updated', businessInfo);\n      \n      return {\n        success: true,\n        message: 'Información del negocio sincronizada con éxito',\n        timestamp: lastSyncTimestamp\n      };\n    } else {\n      console.warn('Error al sincronizar información del negocio:', response);\n      return {\n        success: false,\n        message: response.message || 'Error al sincronizar información del negocio'\n      };\n    }\n  } catch (error) {\n    console.error('Error al sincronizar información del negocio:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al sincronizar información del negocio'\n    };\n  }\n}\n\n/**\n * Obtiene la información del negocio desde el backend y la guarda en IndexedDB\n * @param {boolean} forceUpdate - Forzar la actualización aunque esté en caché\n * @returns {Promise<Object>} - Información del negocio\n */\nexport async function fetchBusinessInfoFromBackend(forceUpdate = false) {\n  try {\n    // Si tenemos información en caché y no ha pasado el tiempo de caché, usarla\n    const now = Date.now();\n    if (businessInfoCache && !forceUpdate && (now - lastFetchTimestamp) < CACHE_DURATION) {\n      console.log('Usando información de negocio en caché');\n      return businessInfoCache;\n    }\n    \n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    // Obtener el ID del restaurante del usuario actual\n    const userResponse = await apiService.get('/auth/me');\n    if (!userResponse || !userResponse.success || !userResponse.user || !userResponse.user.restaurante_id) {\n      console.warn('No se pudo obtener el restaurante del usuario actual');\n      throw new Error('No se pudo obtener el restaurante del usuario actual');\n    }\n    \n    const restauranteId = userResponse.user.restaurante_id;\n    \n    // Obtener el restaurante del backend\n    const response = await apiService.get(`/restaurantes/${restauranteId}`);\n    \n    if (response && response.success && response.restaurante) {\n      const restaurante = response.restaurante;\n      \n      // Convertir la información a formato de negocio\n      let paymentInfo = {};\n      try {\n        if (restaurante.informacion_pago) {\n          paymentInfo = JSON.parse(restaurante.informacion_pago);\n        }\n      } catch (e) {\n        console.warn('Error al parsear información de pago:', e);\n      }\n      \n      const businessInfo = {\n        name: restaurante.nombre,\n        description: restaurante.descripcion,\n        address: restaurante.direccion,\n        contact: restaurante.telefono,\n        logo: restaurante.logo,\n        paymentInfo\n      };\n      \n      // Guardar en IndexedDB\n      await saveBusinessInfo(businessInfo);\n      \n      // Actualizar caché y timestamp\n      businessInfoCache = businessInfo;\n      lastFetchTimestamp = now;\n      \n      // Notificar a todos los componentes que la información ha sido actualizada\n      eventBus.emit('business-info-updated', businessInfo);\n      \n      console.log('Información del negocio obtenida con éxito:', businessInfo);\n      return businessInfo;\n    } else {\n      console.warn('Error al obtener información del negocio:', response);\n      throw new Error(response?.message || 'Error al obtener información del negocio');\n    }\n  } catch (error) {\n    console.error('Error al obtener información del negocio desde el backend:', error);\n    \n    // Si hay un error, intentar obtener la información desde IndexedDB\n    try {\n      const businessInfo = await getBusinessInfo();\n      if (businessInfo) {\n        return businessInfo;\n      }\n    } catch (localError) {\n      console.error('Error al obtener información local:', localError);\n    }\n    \n    throw error;\n  }\n}\n\n/**\n * Actualiza la información del negocio en IndexedDB y la sincroniza con el backend\n * @param {Object} businessInfo - Nueva información del negocio\n * @returns {Promise<Object>} - Resultado de la actualización\n */\nexport async function updateBusinessInfo(businessInfo) {\n  try {\n    // Guardar en IndexedDB\n    await saveBusinessInfo(businessInfo);\n    \n    // Actualizar caché y timestamp\n    businessInfoCache = businessInfo;\n    lastFetchTimestamp = Date.now();\n    \n    // Notificar a todos los componentes que la información ha sido actualizada\n    eventBus.emit('business-info-updated', businessInfo);\n    \n    // Sincronizar con el backend\n    const syncResult = await syncBusinessInfoWithBackend();\n    \n    return {\n      success: true,\n      message: 'Información del negocio actualizada con éxito',\n      syncResult\n    };\n  } catch (error) {\n    console.error('Error al actualizar información del negocio:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al actualizar información del negocio'\n    };\n  }\n}\n\n/**\n * Verifica si hay cambios en la información del negocio\n * @returns {Promise<boolean>} - True si hay cambios, false si no\n */\nexport async function checkForBusinessInfoChanges() {\n  try {\n    // Obtener información actual desde IndexedDB\n    const localInfo = await getBusinessInfo();\n    \n    // Obtener información desde el backend\n    const backendInfo = await fetchBusinessInfoFromBackend(true);\n    \n    // Comparar ambas informaciones\n    const localString = JSON.stringify(localInfo);\n    const backendString = JSON.stringify(backendInfo);\n    \n    const hasChanges = localString !== backendString;\n    \n    if (hasChanges) {\n      console.log('Se detectaron cambios en la información del negocio');\n      \n      // Actualizar la información local con la del backend\n      await saveBusinessInfo(backendInfo);\n      \n      // Notificar a todos los componentes\n      eventBus.emit('business-info-updated', backendInfo);\n    }\n    \n    return hasChanges;\n  } catch (error) {\n    console.error('Error al verificar cambios en información del negocio:', error);\n    return false;\n  }\n}\n\n/**\n * Inicia la verificación periódica de cambios en la información del negocio\n * @param {boolean} disableSync - Si es true, la sincronización se desactiva (útil para vistas compartidas)\n */\nexport function startBusinessInfoSyncInterval(disableSync = false) {\n  // Si se solicita deshabilitar la sincronización (por ejemplo, en vistas compartidas), salir\n  if (disableSync) {\n    console.log('Sincronización de información del negocio desactivada (modo vista compartida)');\n    return;\n  }\n\n  if (syncIntervalId) {\n    clearInterval(syncIntervalId);\n  }\n  \n  // Inicializar con una primera sincronización\n  if (!isInitialized) {\n    fetchBusinessInfoFromBackend()\n      .catch(error => console.error('Error en sincronización inicial:', error));\n    isInitialized = true;\n  }\n  \n  syncIntervalId = setInterval(() => {\n    checkForBusinessInfoChanges()\n      .catch(error => console.error('Error en verificación periódica:', error));\n  }, SYNC_INTERVAL);\n  \n  console.log('Verificación periódica de información del negocio iniciada');\n}\n\n/**\n * Detiene la verificación periódica\n */\nexport function stopBusinessInfoSyncInterval() {\n  if (syncIntervalId) {\n    clearInterval(syncIntervalId);\n    syncIntervalId = null;\n    console.log('Verificación periódica de información del negocio detenida');\n  }\n}\n\n/**\n * Ejecuta la migración para añadir la columna informacion_pago a la tabla restaurantes\n * @returns {Promise<Object>} - Resultado de la migración\n */\nexport async function runAddInformacionPagoMigration() {\n  try {\n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    const response = await apiService.get('/restaurantes/migrate/add-informacion-pago');\n    \n    if (response && response.success) {\n      console.log('Migración ejecutada con éxito:', response.message);\n      return {\n        success: true,\n        message: response.message || 'Migración ejecutada con éxito'\n      };\n    } else {\n      console.warn('Error al ejecutar migración:', response);\n      return {\n        success: false,\n        message: response.message || 'Error al ejecutar migración'\n      };\n    }\n  } catch (error) {\n    console.error('Error al ejecutar migración:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al ejecutar migración'\n    };\n  }\n}\n\n/**\n * Limpia la caché y fuerza una nueva carga desde el backend\n */\nexport function invalidateBusinessInfoCache() {\n  businessInfoCache = null;\n  lastFetchTimestamp = 0;\n}\n\nexport default {\n  syncBusinessInfoWithBackend,\n  fetchBusinessInfoFromBackend,\n  updateBusinessInfo,\n  checkForBusinessInfoChanges,\n  startBusinessInfoSyncInterval,\n  stopBusinessInfoSyncInterval,\n  runAddInformacionPagoMigration,\n  invalidateBusinessInfoCache\n};\n","<template>\n  <div class=\"sync-business-info\">\n    <h2>Sincronización de Información del Negocio</h2>\n    \n    <div v-if=\"message\" class=\"alert\" :class=\"{ 'alert-success': success, 'alert-danger': !success && message }\">\n      {{ message }}\n    </div>\n    \n    <div class=\"status-info\">\n      <div class=\"status-item\">\n        <strong>Estado de sincronización:</strong> \n        <span :class=\"isAutoSyncEnabled ? 'status-active' : 'status-inactive'\">\n          {{ isAutoSyncEnabled ? 'Activa' : 'Inactiva' }}\n        </span>\n      </div>\n      \n      <div class=\"status-item\">\n        <strong>Última sincronización:</strong> \n        <span>{{ lastSyncFormatted }}</span>\n      </div>\n    </div>\n    \n    <div class=\"settings-section\">\n      <h3>Configuración de Sincronización</h3>\n      \n      <div class=\"form-group\">\n        <label class=\"toggle-switch\">\n          <input type=\"checkbox\" v-model=\"isAutoSyncEnabled\" @change=\"toggleAutoSync\">\n          <span class=\"slider\"></span>\n          <span class=\"toggle-label\">Sincronización automática</span>\n        </label>\n      </div>\n      \n      <div class=\"form-group\">\n        <label>Intervalo de verificación:</label>\n        <select v-model=\"syncInterval\" @change=\"updateSyncInterval\" :disabled=\"!isAutoSyncEnabled\">\n          <option value=\"15000\">15 segundos (pruebas)</option>\n          <option value=\"30000\">30 segundos</option>\n          <option value=\"60000\">1 minuto</option>\n          <option value=\"300000\">5 minutos</option>\n        </select>\n      </div>\n    </div>\n    \n    <div class=\"actions\">\n      <button @click=\"runMigration\" class=\"btn btn-primary\" :disabled=\"loading\">\n        <span v-if=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n        Ejecutar Migración\n      </button>\n      \n      <button @click=\"syncBusinessInfo\" class=\"btn btn-success\" :disabled=\"loading\">\n        <span v-if=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n        Sincronizar Ahora\n      </button>\n      \n      <button @click=\"fetchFromBackend\" class=\"btn btn-info\" :disabled=\"loading\">\n        <span v-if=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n        Actualizar desde Servidor\n      </button>\n      \n      <button @click=\"syncAndRefresh\" class=\"btn btn-warning\" :disabled=\"loading\">\n        <span v-if=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n        Sincronizar y Refrescar\n      </button>\n    </div>\n    \n    <div class=\"current-info\" v-if=\"businessInfo\">\n      <h3>Información Actual del Negocio</h3>\n      <div class=\"info-card\">\n        <div class=\"info-header\">\n          <h4>{{ businessInfo.name || 'Sin nombre' }}</h4>\n          <div class=\"info-badge\">{{ lastUpdateFormatted }}</div>\n        </div>\n        <div class=\"info-content\">\n          <div class=\"info-row\">\n            <strong>Descripción:</strong> {{ businessInfo.description || 'Sin descripción' }}\n          </div>\n          <div class=\"info-row\">\n            <strong>Dirección:</strong> {{ businessInfo.address || 'Sin dirección' }}\n          </div>\n          <div class=\"info-row\">\n            <strong>Contacto:</strong> {{ businessInfo.contact || 'Sin contacto' }}\n          </div>\n          <div class=\"info-row logo-preview\" v-if=\"businessInfo.logo\">\n            <strong>Logo:</strong>\n            <img :src=\"businessInfo.logo\" alt=\"Logo\" class=\"logo-thumbnail\">\n          </div>\n          <div class=\"info-row\" v-if=\"businessInfo.paymentInfo\">\n            <strong>Información de Pago:</strong>\n            <div class=\"payment-info\">\n              <div v-if=\"businessInfo.paymentInfo.qrTitle\">QR: {{ businessInfo.paymentInfo.qrTitle }}</div>\n              <div v-if=\"businessInfo.paymentInfo.nequiNumber\">Nequi: {{ businessInfo.paymentInfo.nequiNumber }}</div>\n              <div v-if=\"businessInfo.paymentInfo.bankInfo\">Banco: {{ businessInfo.paymentInfo.bankInfo }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"sync-log\">\n      <h3>Registro de Sincronización</h3>\n      <div class=\"log-container\">\n        <div v-for=\"(log, index) in syncLogs\" :key=\"index\" class=\"log-entry\" :class=\"{'log-success': log.success, 'log-error': !log.success}\">\n          <div class=\"log-timestamp\">{{ formatTimestamp(log.timestamp) }}</div>\n          <div class=\"log-message\">{{ log.message }}</div>\n        </div>\n        <div v-if=\"syncLogs.length === 0\" class=\"log-empty\">\n          No hay registros de sincronización.\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted, computed } from 'vue';\nimport {\n  runAddInformacionPagoMigration,\n  syncBusinessInfoWithBackend,\n  fetchBusinessInfoFromBackend,\n  startBusinessInfoSyncInterval,\n  stopBusinessInfoSyncInterval,\n  checkForBusinessInfoChanges,\n  invalidateBusinessInfoCache\n} from '../../services/businessInfoService';\nimport { getBusinessInfo } from '../../services/storageService';\nimport eventBus from '../../utils/eventBus';\n\nexport default {\n  name: 'SyncBusinessInfo',\n  \n  setup() {\n    const loading = ref(false);\n    const success = ref(false);\n    const message = ref('');\n    const businessInfo = ref(null);\n    const lastSync = ref(null);\n    const lastUpdate = ref(null);\n    const isAutoSyncEnabled = ref(true);\n    const syncInterval = ref('30000');\n    const syncLogs = ref([]);\n    \n    // Formatear la fecha de última sincronización\n    const lastSyncFormatted = computed(() => {\n      if (!lastSync.value) return 'Nunca';\n      return formatTimestamp(lastSync.value);\n    });\n    \n    // Formatear la fecha de última actualización\n    const lastUpdateFormatted = computed(() => {\n      if (!lastUpdate.value) return '';\n      return `Actualizado: ${formatTimestamp(lastUpdate.value)}`;\n    });\n    \n    // Formatear timestamp en fecha legible\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '';\n      const date = new Date(timestamp);\n      return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n    };\n    \n    // Añadir entrada al registro de sincronización\n    const addSyncLog = (logMessage, isSuccess = true) => {\n      syncLogs.value.unshift({\n        message: logMessage,\n        success: isSuccess,\n        timestamp: Date.now()\n      });\n      \n      // Limitar a 10 entradas\n      if (syncLogs.value.length > 10) {\n        syncLogs.value = syncLogs.value.slice(0, 10);\n      }\n    };\n    \n    // Manejar evento de actualización de información\n    const handleBusinessInfoUpdate = (updatedInfo) => {\n      businessInfo.value = updatedInfo;\n      lastUpdate.value = Date.now();\n      addSyncLog('Información del negocio actualizada');\n    };\n    \n    // Cargar la información del negocio al montar el componente\n    onMounted(async () => {\n      try {\n        // Suscribirse al evento de actualización\n        eventBus.on('business-info-updated', handleBusinessInfoUpdate);\n        \n        // Cargar la información del negocio\n        await loadBusinessInfo();\n        \n        // Iniciar sincronización automática\n        if (isAutoSyncEnabled.value) {\n          startBusinessInfoSyncInterval();\n          addSyncLog('Sincronización automática iniciada');\n        }\n      } catch (error) {\n        console.error('Error al montar el componente:', error);\n        message.value = 'Error al cargar información del negocio';\n        success.value = false;\n        addSyncLog('Error al cargar información del negocio', false);\n      }\n    });\n    \n    onUnmounted(() => {\n      // Cancelar suscripción al evento\n      eventBus.off('business-info-updated', handleBusinessInfoUpdate);\n      \n      // Detener sincronización automática\n      stopBusinessInfoSyncInterval();\n    });\n    \n    // Cargar la información del negocio\n    const loadBusinessInfo = async () => {\n      try {\n        loading.value = true;\n        businessInfo.value = await getBusinessInfo();\n        lastUpdate.value = Date.now();\n      } catch (error) {\n        console.error('Error al cargar información del negocio:', error);\n        message.value = 'Error al cargar información del negocio';\n        success.value = false;\n        addSyncLog('Error al cargar información del negocio', false);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Ejecutar la migración para añadir la columna informacion_pago\n    const runMigration = async () => {\n      try {\n        loading.value = true;\n        message.value = 'Ejecutando migración...';\n        \n        const result = await runAddInformacionPagoMigration();\n        \n        success.value = result.success;\n        message.value = result.message;\n        \n        if (result.success) {\n          addSyncLog('Migración ejecutada con éxito');\n        } else {\n          addSyncLog(`Error en migración: ${result.message}`, false);\n        }\n      } catch (error) {\n        console.error('Error al ejecutar migración:', error);\n        success.value = false;\n        message.value = error.message || 'Error al ejecutar migración';\n        addSyncLog(`Error en migración: ${error.message}`, false);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Sincronizar la información del negocio con el backend\n    const syncBusinessInfo = async () => {\n      try {\n        loading.value = true;\n        message.value = 'Sincronizando información...';\n        \n        const result = await syncBusinessInfoWithBackend();\n        \n        success.value = result.success;\n        message.value = result.message;\n        \n        if (result.success) {\n          lastSync.value = result.timestamp || Date.now();\n          await loadBusinessInfo();\n          addSyncLog('Sincronización completada con éxito');\n        } else {\n          addSyncLog(`Error en sincronización: ${result.message}`, false);\n        }\n      } catch (error) {\n        console.error('Error al sincronizar información:', error);\n        success.value = false;\n        message.value = error.message || 'Error al sincronizar información';\n        addSyncLog(`Error en sincronización: ${error.message}`, false);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Obtener la información del negocio desde el backend\n    const fetchFromBackend = async () => {\n      try {\n        loading.value = true;\n        message.value = 'Obteniendo información desde el servidor...';\n        \n        // Invalidar la caché primero\n        invalidateBusinessInfoCache();\n        \n        // Forzar la actualización desde el backend\n        businessInfo.value = await fetchBusinessInfoFromBackend(true);\n        \n        success.value = true;\n        message.value = 'Información actualizada desde el servidor';\n        lastUpdate.value = Date.now();\n        addSyncLog('Información actualizada desde el servidor');\n      } catch (error) {\n        console.error('Error al obtener información desde el servidor:', error);\n        success.value = false;\n        message.value = error.message || 'Error al obtener información desde el servidor';\n        addSyncLog(`Error al obtener información: ${error.message}`, false);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Sincronizar y verificar cambios\n    const syncAndRefresh = async () => {\n      try {\n        loading.value = true;\n        message.value = 'Sincronizando y verificando cambios...';\n        \n        // Sincronizar la información actual con el backend\n        await syncBusinessInfoWithBackend();\n        \n        // Verificar si hay cambios\n        const hasChanges = await checkForBusinessInfoChanges();\n        \n        if (hasChanges) {\n          success.value = true;\n          message.value = 'Se detectaron y aplicaron cambios en la información';\n          addSyncLog('Se detectaron y aplicaron cambios');\n        } else {\n          success.value = true;\n          message.value = 'No se detectaron cambios en la información';\n          addSyncLog('No se detectaron cambios');\n        }\n        \n        // Actualizar la información\n        await loadBusinessInfo();\n        lastSync.value = Date.now();\n      } catch (error) {\n        console.error('Error al sincronizar y verificar cambios:', error);\n        success.value = false;\n        message.value = error.message || 'Error al sincronizar y verificar cambios';\n        addSyncLog(`Error al sincronizar: ${error.message}`, false);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Alternar sincronización automática\n    const toggleAutoSync = () => {\n      if (isAutoSyncEnabled.value) {\n        startBusinessInfoSyncInterval();\n        addSyncLog('Sincronización automática activada');\n      } else {\n        stopBusinessInfoSyncInterval();\n        addSyncLog('Sincronización automática desactivada');\n      }\n    };\n    \n    // Actualizar intervalo de sincronización\n    const updateSyncInterval = () => {\n      // Detener el intervalo actual\n      stopBusinessInfoSyncInterval();\n      \n      // Actualizar SYNC_INTERVAL en businessInfoService.js\n      // Esto es solo visual, ya que no podemos modificar directamente la constante\n      addSyncLog(`Intervalo de sincronización actualizado a ${parseInt(syncInterval.value) / 1000} segundos`);\n      \n      // Reiniciar si está habilitado\n      if (isAutoSyncEnabled.value) {\n        startBusinessInfoSyncInterval();\n      }\n    };\n    \n    return {\n      loading,\n      success,\n      message,\n      businessInfo,\n      lastSync,\n      lastSyncFormatted,\n      lastUpdateFormatted,\n      isAutoSyncEnabled,\n      syncInterval,\n      syncLogs,\n      runMigration,\n      syncBusinessInfo,\n      fetchFromBackend,\n      syncAndRefresh,\n      toggleAutoSync,\n      updateSyncInterval,\n      formatTimestamp\n    };\n  }\n};\n</script>\n\n<style scoped>\n.sync-business-info {\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.05);\n}\n\n.sync-business-info h2 {\n  color: #333;\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #dee2e6;\n}\n\n.alert {\n  padding: 12px;\n  margin: 15px 0;\n  border-radius: 6px;\n}\n\n.alert-success {\n  background-color: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}\n\n.alert-danger {\n  background-color: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n}\n\n.status-info {\n  background: #fff;\n  padding: 15px;\n  border-radius: 6px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  border: 1px solid #e9ecef;\n}\n\n.status-item {\n  padding: 8px 0;\n}\n\n.status-active {\n  color: #28a745;\n  font-weight: bold;\n}\n\n.status-inactive {\n  color: #dc3545;\n  font-weight: bold;\n}\n\n.settings-section {\n  background: #fff;\n  padding: 15px;\n  border-radius: 6px;\n  margin-bottom: 20px;\n  border: 1px solid #e9ecef;\n}\n\n.settings-section h3 {\n  font-size: 1.2rem;\n  margin-bottom: 15px;\n  color: #495057;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: 500;\n}\n\n.form-group select {\n  width: 100%;\n  max-width: 300px;\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px solid #ced4da;\n}\n\n.toggle-switch {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.toggle-switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: relative;\n  cursor: pointer;\n  width: 50px;\n  height: 24px;\n  background-color: #ccc;\n  transition: .4s;\n  border-radius: 24px;\n  margin-right: 10px;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 16px;\n  width: 16px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  transition: .4s;\n  border-radius: 50%;\n}\n\ninput:checked + .slider {\n  background-color: #28a745;\n}\n\ninput:checked + .slider:before {\n  transform: translateX(26px);\n}\n\n.toggle-label {\n  font-weight: 500;\n}\n\n.actions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin: 20px 0;\n}\n\n.current-info {\n  margin-top: 30px;\n}\n\n.info-card {\n  background-color: #fff;\n  border-radius: 6px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  overflow: hidden;\n}\n\n.info-header {\n  background-color: #f8f9fa;\n  padding: 15px;\n  border-bottom: 1px solid #dee2e6;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.info-header h4 {\n  margin: 0;\n  color: #343a40;\n  font-size: 1.2rem;\n}\n\n.info-badge {\n  font-size: 0.85rem;\n  color: #6c757d;\n}\n\n.info-content {\n  padding: 15px;\n}\n\n.info-row {\n  margin-bottom: 12px;\n  border-bottom: 1px solid #f0f0f0;\n  padding-bottom: 12px;\n}\n\n.info-row strong {\n  color: #495057;\n  margin-right: 5px;\n}\n\n.logo-thumbnail {\n  max-width: 100px;\n  max-height: 60px;\n  margin-top: 5px;\n  border-radius: 4px;\n  display: block;\n}\n\n.payment-info {\n  margin-top: 5px;\n  padding-left: 15px;\n  border-left: 2px solid #e9ecef;\n}\n\n.sync-log {\n  margin-top: 30px;\n}\n\n.sync-log h3 {\n  color: #333;\n  margin-bottom: 15px;\n}\n\n.log-container {\n  background-color: #fff;\n  border-radius: 6px;\n  border: 1px solid #dee2e6;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.log-entry {\n  padding: 10px 15px;\n  border-bottom: 1px solid #f0f0f0;\n  display: flex;\n  align-items: center;\n}\n\n.log-success {\n  border-left: 4px solid #28a745;\n}\n\n.log-error {\n  border-left: 4px solid #dc3545;\n}\n\n.log-timestamp {\n  font-size: 0.85rem;\n  color: #6c757d;\n  width: 180px;\n  flex-shrink: 0;\n}\n\n.log-message {\n  flex-grow: 1;\n}\n\n.log-empty {\n  padding: 15px;\n  color: #6c757d;\n  text-align: center;\n  font-style: italic;\n}\n\n.btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 120px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n}\n\n.btn-success {\n  background-color: #28a745;\n  color: white;\n}\n\n.btn-info {\n  background-color: #17a2b8;\n  color: white;\n}\n\n.btn-warning {\n  background-color: #ffc107;\n  color: #212529;\n}\n\n.btn:disabled {\n  opacity: 0.65;\n  cursor: not-allowed;\n}\n\n.spinner-border-sm {\n  display: inline-block;\n  width: 1rem;\n  height: 1rem;\n  border: 0.2em solid currentColor;\n  border-right-color: transparent;\n  border-radius: 50%;\n  animation: spinner-border .75s linear infinite;\n  margin-right: 5px;\n}\n\n@keyframes spinner-border {\n  to { transform: rotate(360deg); }\n}\n\n@media (max-width: 768px) {\n  .actions {\n    flex-direction: column;\n  }\n  \n  .btn {\n    width: 100%;\n  }\n  \n  .status-info {\n    flex-direction: column;\n    gap: 10px;\n  }\n}\n</style>\n","import { render } from \"./SyncBusinessInfo.vue?vue&type=template&id=36ce8d12&scoped=true\"\nimport script from \"./SyncBusinessInfo.vue?vue&type=script&lang=js\"\nexport * from \"./SyncBusinessInfo.vue?vue&type=script&lang=js\"\n\nimport \"./SyncBusinessInfo.vue?vue&type=style&index=0&id=36ce8d12&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-36ce8d12\"]])\n\nexport default __exports__"],"names":["SYNC_INTERVAL","CACHE_DURATION","syncIntervalId","lastSyncTimestamp","lastFetchTimestamp","businessInfoCache","isInitialized","async","syncBusinessInfoWithBackend","businessInfo","getBusinessInfo","Object","keys","length","console","log","success","message","token","localStorage","getItem","apiService","setToken","userResponse","get","user","restaurante_id","warn","restauranteId","restauranteData","nombre","name","descripcion","description","direccion","address","telefono","contact","logo","informacion_pago","JSON","stringify","paymentInfo","response","put","Date","now","eventBus","emit","timestamp","error","fetchBusinessInfoFromBackend","forceUpdate","Error","restaurante","parse","e","saveBusinessInfo","localError","checkForBusinessInfoChanges","localInfo","backendInfo","localString","backendString","hasChanges","startBusinessInfoSyncInterval","disableSync","clearInterval","catch","setInterval","stopBusinessInfoSyncInterval","runAddInformacionPagoMigration","invalidateBusinessInfoCache","class","key","role","_createElementBlock","_hoisted_1","_createElementVNode","$setup","_normalizeClass","_createCommentVNode","_hoisted_2","_hoisted_3","isAutoSyncEnabled","_hoisted_4","_toDisplayString","lastSyncFormatted","_hoisted_5","_hoisted_6","_hoisted_7","type","_cache","$event","onChange","args","toggleAutoSync","_hoisted_8","syncInterval","updateSyncInterval","disabled","value","_hoisted_9","_hoisted_10","onClick","runMigration","loading","_hoisted_12","_createTextVNode","_hoisted_11","syncBusinessInfo","_hoisted_14","_hoisted_13","fetchFromBackend","_hoisted_16","_hoisted_15","syncAndRefresh","_hoisted_18","_hoisted_17","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","lastUpdateFormatted","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","src","alt","_hoisted_28","_hoisted_29","_hoisted_30","qrTitle","_hoisted_31","nequiNumber","_hoisted_32","bankInfo","_hoisted_33","_hoisted_34","_hoisted_35","_Fragment","_renderList","syncLogs","index","_hoisted_36","formatTimestamp","_hoisted_37","_hoisted_38","setup","ref","lastSync","lastUpdate","computed","date","toLocaleDateString","toLocaleTimeString","addSyncLog","logMessage","isSuccess","unshift","slice","handleBusinessInfoUpdate","updatedInfo","onMounted","on","loadBusinessInfo","onUnmounted","off","result","parseInt","__exports__","render"],"sourceRoot":""}