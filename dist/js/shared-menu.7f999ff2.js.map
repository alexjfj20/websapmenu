{"version":3,"file":"js/shared-menu.7f999ff2.js","mappings":"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","sources":["webpack://websap/./src/services/businessInfoService.js","webpack://websap/./src/views/SharedMenuView.vue","webpack://websap/./src/components/reservas/ReservaForm.vue","webpack://websap/./src/components/reservas/ReservaForm.vue?888d","webpack://websap/./src/views/SharedMenuView.vue?e8e7"],"sourcesContent":["// src/services/businessInfoService.js\n\nimport apiService from './apiService';\nimport { getBusinessInfo, saveBusinessInfo } from './storageService';\nimport eventBus from '../utils/eventBus';\n\n// Constantes para la sincronización\nconst SYNC_INTERVAL = 30000; // 30 segundos\nconst CACHE_DURATION = 300000; // 5 minutos\nlet syncIntervalId = null;\nlet lastSyncTimestamp = 0;\nlet lastFetchTimestamp = 0;\nlet businessInfoCache = null;\nlet isInitialized = false;\n\n/**\n * Sincroniza la información del negocio guardada en IndexedDB con el backend\n * @returns {Promise<Object>} - Resultado de la sincronización\n */\nexport async function syncBusinessInfoWithBackend() {\n  try {\n    // Obtener la información del negocio desde IndexedDB\n    const businessInfo = await getBusinessInfo();\n    \n    if (!businessInfo || Object.keys(businessInfo).length === 0) {\n      console.log('No hay información del negocio para sincronizar');\n      return {\n        success: false,\n        message: 'No hay información del negocio para sincronizar'\n      };\n    }\n    \n    console.log('Sincronizando información del negocio con el backend:', businessInfo);\n    \n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    // Obtener el ID del restaurante del usuario actual\n    const userResponse = await apiService.get('/auth/me');\n    if (!userResponse || !userResponse.success || !userResponse.user || !userResponse.user.restaurante_id) {\n      console.warn('No se pudo obtener el restaurante del usuario actual');\n      return {\n        success: false,\n        message: 'No se pudo obtener el restaurante del usuario actual'\n      };\n    }\n    \n    const restauranteId = userResponse.user.restaurante_id;\n    \n    // Preparar los datos para actualizar el restaurante\n    const restauranteData = {\n      nombre: businessInfo.name,\n      descripcion: businessInfo.description,\n      direccion: businessInfo.address,\n      telefono: businessInfo.contact,\n      logo: businessInfo.logo,\n      // Guardar la información de pago como un campo JSON\n      informacion_pago: JSON.stringify(businessInfo.paymentInfo || {})\n    };\n    \n    // Actualizar el restaurante en el backend\n    const response = await apiService.put(`/restaurantes/${restauranteId}`, restauranteData);\n    \n    if (response && response.success) {\n      console.log('Información del negocio sincronizada con éxito');\n      lastSyncTimestamp = Date.now();\n      \n      // Notificar a todos los componentes que la información ha sido sincronizada\n      eventBus.emit('business-info-updated', businessInfo);\n      \n      return {\n        success: true,\n        message: 'Información del negocio sincronizada con éxito',\n        timestamp: lastSyncTimestamp\n      };\n    } else {\n      console.warn('Error al sincronizar información del negocio:', response);\n      return {\n        success: false,\n        message: response.message || 'Error al sincronizar información del negocio'\n      };\n    }\n  } catch (error) {\n    console.error('Error al sincronizar información del negocio:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al sincronizar información del negocio'\n    };\n  }\n}\n\n/**\n * Obtiene la información del negocio desde el backend y la guarda en IndexedDB\n * @param {boolean} forceUpdate - Forzar la actualización aunque esté en caché\n * @returns {Promise<Object>} - Información del negocio\n */\nexport async function fetchBusinessInfoFromBackend(forceUpdate = false) {\n  try {\n    // Si tenemos información en caché y no ha pasado el tiempo de caché, usarla\n    const now = Date.now();\n    if (businessInfoCache && !forceUpdate && (now - lastFetchTimestamp) < CACHE_DURATION) {\n      console.log('Usando información de negocio en caché');\n      return businessInfoCache;\n    }\n    \n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    // Obtener el ID del restaurante del usuario actual\n    const userResponse = await apiService.get('/auth/me');\n    if (!userResponse || !userResponse.success || !userResponse.user || !userResponse.user.restaurante_id) {\n      console.warn('No se pudo obtener el restaurante del usuario actual');\n      throw new Error('No se pudo obtener el restaurante del usuario actual');\n    }\n    \n    const restauranteId = userResponse.user.restaurante_id;\n    \n    // Obtener el restaurante del backend\n    const response = await apiService.get(`/restaurantes/${restauranteId}`);\n    \n    if (response && response.success && response.restaurante) {\n      const restaurante = response.restaurante;\n      \n      // Convertir la información a formato de negocio\n      let paymentInfo = {};\n      try {\n        if (restaurante.informacion_pago) {\n          paymentInfo = JSON.parse(restaurante.informacion_pago);\n        }\n      } catch (e) {\n        console.warn('Error al parsear información de pago:', e);\n      }\n      \n      const businessInfo = {\n        name: restaurante.nombre,\n        description: restaurante.descripcion,\n        address: restaurante.direccion,\n        contact: restaurante.telefono,\n        logo: restaurante.logo,\n        paymentInfo\n      };\n      \n      // Guardar en IndexedDB\n      await saveBusinessInfo(businessInfo);\n      \n      // Actualizar caché y timestamp\n      businessInfoCache = businessInfo;\n      lastFetchTimestamp = now;\n      \n      // Notificar a todos los componentes que la información ha sido actualizada\n      eventBus.emit('business-info-updated', businessInfo);\n      \n      console.log('Información del negocio obtenida con éxito:', businessInfo);\n      return businessInfo;\n    } else {\n      console.warn('Error al obtener información del negocio:', response);\n      throw new Error(response?.message || 'Error al obtener información del negocio');\n    }\n  } catch (error) {\n    console.error('Error al obtener información del negocio desde el backend:', error);\n    \n    // Si hay un error, intentar obtener la información desde IndexedDB\n    try {\n      const businessInfo = await getBusinessInfo();\n      if (businessInfo) {\n        return businessInfo;\n      }\n    } catch (localError) {\n      console.error('Error al obtener información local:', localError);\n    }\n    \n    throw error;\n  }\n}\n\n/**\n * Actualiza la información del negocio en IndexedDB y la sincroniza con el backend\n * @param {Object} businessInfo - Nueva información del negocio\n * @returns {Promise<Object>} - Resultado de la actualización\n */\nexport async function updateBusinessInfo(businessInfo) {\n  try {\n    // Guardar en IndexedDB\n    await saveBusinessInfo(businessInfo);\n    \n    // Actualizar caché y timestamp\n    businessInfoCache = businessInfo;\n    lastFetchTimestamp = Date.now();\n    \n    // Notificar a todos los componentes que la información ha sido actualizada\n    eventBus.emit('business-info-updated', businessInfo);\n    \n    // Sincronizar con el backend\n    const syncResult = await syncBusinessInfoWithBackend();\n    \n    return {\n      success: true,\n      message: 'Información del negocio actualizada con éxito',\n      syncResult\n    };\n  } catch (error) {\n    console.error('Error al actualizar información del negocio:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al actualizar información del negocio'\n    };\n  }\n}\n\n/**\n * Verifica si hay cambios en la información del negocio\n * @returns {Promise<boolean>} - True si hay cambios, false si no\n */\nexport async function checkForBusinessInfoChanges() {\n  try {\n    // Obtener información actual desde IndexedDB\n    const localInfo = await getBusinessInfo();\n    \n    // Obtener información desde el backend\n    const backendInfo = await fetchBusinessInfoFromBackend(true);\n    \n    // Comparar ambas informaciones\n    const localString = JSON.stringify(localInfo);\n    const backendString = JSON.stringify(backendInfo);\n    \n    const hasChanges = localString !== backendString;\n    \n    if (hasChanges) {\n      console.log('Se detectaron cambios en la información del negocio');\n      \n      // Actualizar la información local con la del backend\n      await saveBusinessInfo(backendInfo);\n      \n      // Notificar a todos los componentes\n      eventBus.emit('business-info-updated', backendInfo);\n    }\n    \n    return hasChanges;\n  } catch (error) {\n    console.error('Error al verificar cambios en información del negocio:', error);\n    return false;\n  }\n}\n\n/**\n * Inicia la verificación periódica de cambios en la información del negocio\n * @param {boolean} disableSync - Si es true, la sincronización se desactiva (útil para vistas compartidas)\n */\nexport function startBusinessInfoSyncInterval(disableSync = false) {\n  // Si se solicita deshabilitar la sincronización (por ejemplo, en vistas compartidas), salir\n  if (disableSync) {\n    console.log('Sincronización de información del negocio desactivada (modo vista compartida)');\n    return;\n  }\n\n  if (syncIntervalId) {\n    clearInterval(syncIntervalId);\n  }\n  \n  // Inicializar con una primera sincronización\n  if (!isInitialized) {\n    fetchBusinessInfoFromBackend()\n      .catch(error => console.error('Error en sincronización inicial:', error));\n    isInitialized = true;\n  }\n  \n  syncIntervalId = setInterval(() => {\n    checkForBusinessInfoChanges()\n      .catch(error => console.error('Error en verificación periódica:', error));\n  }, SYNC_INTERVAL);\n  \n  console.log('Verificación periódica de información del negocio iniciada');\n}\n\n/**\n * Detiene la verificación periódica\n */\nexport function stopBusinessInfoSyncInterval() {\n  if (syncIntervalId) {\n    clearInterval(syncIntervalId);\n    syncIntervalId = null;\n    console.log('Verificación periódica de información del negocio detenida');\n  }\n}\n\n/**\n * Ejecuta la migración para añadir la columna informacion_pago a la tabla restaurantes\n * @returns {Promise<Object>} - Resultado de la migración\n */\nexport async function runAddInformacionPagoMigration() {\n  try {\n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    const response = await apiService.get('/restaurantes/migrate/add-informacion-pago');\n    \n    if (response && response.success) {\n      console.log('Migración ejecutada con éxito:', response.message);\n      return {\n        success: true,\n        message: response.message || 'Migración ejecutada con éxito'\n      };\n    } else {\n      console.warn('Error al ejecutar migración:', response);\n      return {\n        success: false,\n        message: response.message || 'Error al ejecutar migración'\n      };\n    }\n  } catch (error) {\n    console.error('Error al ejecutar migración:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al ejecutar migración'\n    };\n  }\n}\n\n/**\n * Limpia la caché y fuerza una nueva carga desde el backend\n */\nexport function invalidateBusinessInfoCache() {\n  businessInfoCache = null;\n  lastFetchTimestamp = 0;\n}\n\nexport default {\n  syncBusinessInfoWithBackend,\n  fetchBusinessInfoFromBackend,\n  updateBusinessInfo,\n  checkForBusinessInfoChanges,\n  startBusinessInfoSyncInterval,\n  stopBusinessInfoSyncInterval,\n  runAddInformacionPagoMigration,\n  invalidateBusinessInfoCache\n};\n","<template>\r\n  <div class=\"shared-menu-container\" :id=\"menuId\">\r\n    <div v-if=\"isLoading\" class=\"loading\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando menú...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"error\">\r\n      <p>{{ error }}</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"menu-content\">\r\n    <!-- Información del negocio -->\r\n      <div v-if=\"menuData?.businessInfo\" class=\"business-info\">\r\n        <div class=\"business-header-banner\" v-if=\"menuData.businessInfo.logo && isValidImage(menuData.businessInfo.logo)\">\r\n          <img :src=\"fixImageFormat(menuData.businessInfo.logo)\" alt=\"Logo\" class=\"business-logo-banner\">\r\n        </div>\r\n        <div class=\"business-content\">\r\n          <h1>{{ menuData.businessInfo.name }}</h1>\r\n          <p class=\"description\">{{ menuData.businessInfo.description }}</p>\r\n          <div class=\"contact-info\" v-if=\"menuData.businessInfo.contact || menuData.businessInfo.address\">\r\n            <p v-if=\"menuData.businessInfo.contact\"><strong>Contacto:</strong> {{ menuData.businessInfo.contact }}</p>\r\n            <p v-if=\"menuData.businessInfo.address\"><strong>Dirección:</strong> {{ menuData.businessInfo.address }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Lista de productos -->\r\n      <div>\r\n        <!-- Platos regulares -->\r\n        <div class=\"menu-list\">\r\n          <h2>Nuestro Menú</h2>\r\n          <div class=\"menu-items\">\r\n            <div v-for=\"(item, index) in regularItems\" :key=\"index\" class=\"menu-item\">\r\n              <div class=\"item-image-container\">\r\n                <img v-if=\"item.image && isValidImage(item.image)\" :src=\"fixImageFormat(item.image)\" alt=\"Imagen del producto\" class=\"item-image\">\r\n                <img v-else src=\"https://via.placeholder.com/150?text=Sin+Imagen\" alt=\"Sin imagen disponible\" class=\"item-image\">\r\n              </div>\r\n              <div class=\"item-details\">\r\n                <h3>{{ item.name }}</h3>\r\n                <p class=\"item-description\">{{ item.description }}</p>\r\n                <p class=\"item-price\">${{ formatPrice(item.price) }}</p>\r\n                <p class=\"includes-drink\" v-if=\"item.includesDrink\">Incluye refresco</p>\r\n                <button \r\n                  @click=\"addToCart(item)\" \r\n                  class=\"add-to-cart-btn\"\r\n                  :disabled=\"!item.realAvailability || item.realAvailability <= 0\"\r\n                  :class=\"{ 'disabled-btn': !item.realAvailability || item.realAvailability <= 0 }\"\r\n                >\r\n                  <span v-if=\"!item.realAvailability || item.realAvailability <= 0\" class=\"btn-icon\">❌</span>\r\n                  <span v-else class=\"btn-icon\">🛒</span>\r\n                  {{ !item.realAvailability || item.realAvailability <= 0 ? 'No disponible' : 'Añadir al pedido' }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Platos especiales (solo se muestra si hay platos especiales) -->\r\n        <div v-if=\"specialItems.length > 0\" class=\"menu-list special-menu-list\">\r\n          <h2>Platos Especiales</h2>\r\n          <div class=\"menu-items\">\r\n            <div v-for=\"(item, index) in specialItems\" :key=\"index\" class=\"menu-item special-item\">\r\n              <div class=\"item-image-container\">\r\n                <img v-if=\"item.image && isValidImage(item.image)\" :src=\"fixImageFormat(item.image)\" alt=\"Imagen del producto\" class=\"item-image\">\r\n                <img v-else src=\"https://via.placeholder.com/150?text=Sin+Imagen\" alt=\"Sin imagen disponible\" class=\"item-image\">\r\n              </div>\r\n              <div class=\"item-details\">\r\n                <h3>{{ item.name }}</h3>\r\n                <p class=\"item-description\">{{ item.description }}</p>\r\n                <p class=\"item-price\">${{ formatPrice(item.price) }}</p>\r\n                <p class=\"includes-drink\" v-if=\"item.includesDrink\">Incluye refresco</p>\r\n                <button \r\n                  @click=\"addToCart(item)\" \r\n                  class=\"add-to-cart-btn special-button\"\r\n                  :disabled=\"!item.realAvailability || item.realAvailability <= 0\"\r\n                  :class=\"{ 'disabled-btn': !item.realAvailability || item.realAvailability <= 0 }\"\r\n                >\r\n                  <span v-if=\"!item.realAvailability || item.realAvailability <= 0\" class=\"btn-icon\">❌</span>\r\n                  <span v-else class=\"btn-icon\">🛒</span>\r\n                  {{ !item.realAvailability || item.realAvailability <= 0 ? 'No disponible' : 'Añadir al pedido' }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Sección de \"Tu Pedido\" - Siempre visible aunque vacía -->\r\n        <div class=\"order-section\" ref=\"orderSection\">\r\n          <h2>Tu Pedido</h2>\r\n          \r\n          <div v-if=\"cartItems.length === 0\" class=\"empty-cart\">\r\n            <p>Tu pedido está vacío</p>\r\n            <p class=\"empty-cart-message\">Añade productos del menú para comenzar tu pedido</p>\r\n          </div>\r\n          \r\n          <div v-else class=\"cart-items\">\r\n            <div v-for=\"(item, index) in cartItems\" :key=\"index\" class=\"cart-item\">\r\n              <div class=\"cart-item-details\">\r\n                <h3>{{ item.name }}</h3>\r\n                <p>${{ formatPrice(item.price) }} x {{ item.quantity }}</p>\r\n              </div>\r\n              <div class=\"cart-item-actions\">\r\n                <button @click=\"decreaseQuantity(index)\" class=\"quantity-btn\">-</button>\r\n                <span class=\"quantity-display\">{{ item.quantity }}</span>\r\n                <button @click=\"increaseQuantity(index)\" class=\"quantity-btn\">+</button>\r\n                <button @click=\"removeFromCart(index)\" class=\"remove-btn\">\r\n                  <span class=\"btn-icon\">🗑️</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"cart-total\">\r\n              <h3>Total: ${{ formatPrice(cartTotal) }}</h3>\r\n              \r\n              <!-- Formulario de datos del cliente -->\r\n              <div class=\"customer-form\">\r\n                <h4>Datos del Cliente</h4>\r\n                <div class=\"form-row\">\r\n                  <input type=\"text\" v-model=\"customerInfo.name\" placeholder=\"Nombres completos\" class=\"form-input\">\r\n                </div>\r\n                <div class=\"form-row\">\r\n                  <input type=\"tel\" v-model=\"customerInfo.phone\" placeholder=\"Teléfono\" class=\"form-input\">\r\n                </div>\r\n                <div class=\"form-row\">\r\n                  <input type=\"email\" v-model=\"customerInfo.email\" placeholder=\"Correo electrónico\" class=\"form-input\">\r\n                </div>\r\n                <div class=\"form-row\">\r\n                  <input type=\"text\" v-model=\"customerInfo.address\" placeholder=\"Dirección de entrega\" class=\"form-input\">\r\n                </div>\r\n                \r\n                <!-- Lista horizontal de métodos de pago -->\r\n                <div class=\"payment-methods-selection\">\r\n                  <h4>Forma de Pago</h4>\r\n                  <div class=\"payment-options\">\r\n                    <label class=\"payment-option\">\r\n                      <input type=\"radio\" v-model=\"selectedPaymentMethod\" value=\"qr\" name=\"paymentMethod\">\r\n                      <span class=\"payment-option-text\">QR</span>\r\n                    </label>\r\n                    <label class=\"payment-option\">\r\n                      <input type=\"radio\" v-model=\"selectedPaymentMethod\" value=\"nequi\" name=\"paymentMethod\">\r\n                      <span class=\"payment-option-text\">Nequi</span>\r\n                    </label>\r\n                    <label class=\"payment-option\">\r\n                      <input type=\"radio\" v-model=\"selectedPaymentMethod\" value=\"cash\" name=\"paymentMethod\">\r\n                      <span class=\"payment-option-text\">Contra entrega</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                \r\n                <!-- Campo de mensaje adicional -->\r\n                <div class=\"form-row\">\r\n                  <textarea v-model=\"additionalMessage\" placeholder=\"Mensaje o instrucciones adicionales\" class=\"form-textarea\"></textarea>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"order-actions\">\r\n                <button @click=\"completeOrder\" class=\"complete-order-btn\">\r\n                  <span class=\"btn-icon\">📱</span> Enviar por WhatsApp\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Botón flotante para ver pedido (visible cuando hay items y se hace scroll) -->\r\n        <div v-if=\"cartItems.length > 0\" class=\"floating-cart-button\" @click=\"scrollToOrder\">\r\n          <span class=\"cart-items-count\">{{ totalItems }}</span>\r\n          <span>Ver Pedido</span>\r\n        </div>\r\n          <!-- Nueva sección: Forma de Pago -->\r\n        <div v-if=\"hasPaymentInfo\" class=\"payment-section\">\r\n          <h2>Forma de Pago</h2>\r\n          <div class=\"payment-methods\">\r\n            <div v-if=\"menuData?.businessInfo?.paymentInfo?.qrImage\" class=\"payment-method qr-payment\">\r\n              <h3>{{ menuData?.businessInfo?.paymentInfo?.qrTitle || 'Escanear para pagar' }}</h3>\r\n              <div class=\"payment-image-container\">\r\n                <img \r\n                  v-if=\"menuData?.businessInfo?.paymentInfo?.qrImage && isValidImage(menuData?.businessInfo?.paymentInfo?.qrImage)\" \r\n                  :src=\"fixImageFormat(menuData?.businessInfo?.paymentInfo?.qrImage)\" \r\n                  alt=\"QR de Pago\" \r\n                  class=\"payment-image\"\r\n                >\r\n              </div>\r\n            </div>\r\n            \r\n            <div v-if=\"menuData?.businessInfo?.paymentInfo?.nequiNumber || menuData?.businessInfo?.paymentInfo?.nequiImage\" class=\"payment-method nequi-payment\">\r\n              <h3>Pago con Nequi</h3>\r\n              <div class=\"payment-image-container\">\r\n                <img \r\n                  v-if=\"menuData?.businessInfo?.paymentInfo?.nequiImage && isValidImage(menuData?.businessInfo?.paymentInfo?.nequiImage)\" \r\n                  :src=\"fixImageFormat(menuData?.businessInfo?.paymentInfo?.nequiImage)\" \r\n                  alt=\"Nequi\" \r\n                  class=\"payment-image\"\r\n                >\r\n              </div>\r\n              <p v-if=\"menuData?.businessInfo?.paymentInfo?.nequiNumber\" class=\"payment-detail\">\r\n                <strong>Número:</strong> {{ menuData?.businessInfo?.paymentInfo?.nequiNumber }}\r\n              </p>\r\n            </div>\r\n            \r\n            <div v-if=\"menuData?.businessInfo?.paymentInfo?.bankInfo\" class=\"payment-method bank-payment\">\r\n              <h3>Pago Bancario</h3>\r\n              <p class=\"payment-detail\">\r\n                <strong>Información Bancaria:</strong> {{ menuData?.businessInfo?.paymentInfo?.bankInfo }}\r\n              </p>\r\n            </div>\r\n            \r\n            <div v-if=\"menuData?.businessInfo?.paymentInfo?.otherPaymentMethods\" class=\"payment-method other-payment\">\r\n              <h3>Otras Formas de Pago</h3>\r\n              <p class=\"payment-detail\">\r\n                <strong>Métodos Adicionales:</strong> {{ menuData?.businessInfo?.paymentInfo?.otherPaymentMethods }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Añadir el componente ReservaForm en una sección visible -->\r\n        <div class=\"reserva-section container mt-5\">\r\n          <h3 class=\"text-center mb-4\">¿Quieres hacer una reserva?</h3>\r\n          <ReservaForm />\r\n        </div>\r\n        \r\n        <!-- Sistema de notificaciones toast -->\r\n        <div v-if=\"toast.visible\" \r\n             class=\"toast-notification\" \r\n             :class=\"toast.type\">\r\n          {{ toast.message }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, reactive, onUnmounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { getSharedMenu } from '../services/menuService';\r\nimport { saveReservation } from '../services/reservaService'; // Importamos el servicio de reservas\r\nimport { getMenuItems, updateItemAvailability } from '../services/storageService'; // Importar funciones necesarias\r\nimport ReservaForm from '../components/reservas/ReservaForm.vue';\r\nimport eventBus from '../utils/eventBus';\r\nimport { \r\n  fetchBusinessInfoFromBackend, \r\n  startBusinessInfoSyncInterval, \r\n  stopBusinessInfoSyncInterval \r\n} from '../services/businessInfoService';\r\n\r\nexport default {\r\n  name: 'SharedMenuView',\r\n  components: {\r\n    ReservaForm,\r\n  },\r\n  props: {\r\n    // Añade id como prop si lo necesitas\r\n    id: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  setup(props) {\r\n    const route = useRoute();\r\n    const menuId = computed(() => props.id || route.params.id);    const menuData = ref({\r\n      items: [],\r\n      businessInfo: null\r\n    });\r\n    const isLoading = ref(true);\r\n    const error = ref(null);\r\n    const cartItems = ref([]);\r\n    const orderRef = ref(null);\r\n    const isProcessingOrder = ref(false);\r\n    const lastBusinessInfoUpdate = ref(null);\r\n    \r\n    console.log(\"SharedMenuView montado, ID del menú:\", route.params.id);\r\n\r\n    // Sistema de notificaciones toast\r\n    const toast = ref({\r\n      visible: false,\r\n      message: '',\r\n      type: 'success', // 'success', 'warning', 'error'\r\n      timeoutId: null\r\n    });\r\n\r\n    // Cargar menú cuando el componente se monte\r\n    onMounted(() => {\r\n      loadMenu();\r\n      \r\n      // Suscribirse al evento de actualización de información del negocio\r\n      eventBus.on('business-info-updated', handleBusinessInfoUpdate);\r\n      \r\n      // Iniciar la sincronización periódica con parámetro true para desactivarla en vista compartida\r\n      startBusinessInfoSyncInterval(true);\r\n    });\r\n    \r\n    // Al desmontar el componente, cancelar suscripciones y detener intervalos\r\n    onUnmounted(() => {\r\n      eventBus.off('business-info-updated', handleBusinessInfoUpdate);\r\n      stopBusinessInfoSyncInterval();\r\n      \r\n      // Limpiar timeout del toast si existe\r\n      if (toast.value.timeoutId) {\r\n        clearTimeout(toast.value.timeoutId);\r\n      }\r\n    });\r\n    \r\n    // Manejar la actualización de información del negocio\r\n    const handleBusinessInfoUpdate = (updatedInfo) => {\r\n      console.log('Nueva información del negocio recibida en SharedMenuView:', updatedInfo);\r\n      \r\n      if (!updatedInfo) return;\r\n      \r\n      // Actualizar la información del negocio en menuData\r\n      menuData.value.businessInfo = {\r\n        ...updatedInfo\r\n      };\r\n      \r\n      lastBusinessInfoUpdate.value = Date.now();\r\n      \r\n      // Mostrar notificación sutil\r\n      showToast('Información del negocio actualizada', 'info');\r\n    };\r\n\r\n    // Cargar el menú desde la API\r\n    async function loadMenu() {\r\n      try {\r\n        isLoading.value = true;\r\n        error.value = null; // Resetear error al inicio\r\n        console.log(\"Cargando menú con ID:\", route.params.id);\r\n        \r\n        if (!route.params.id) {\r\n          error.value = 'ID de menú no especificado';\r\n          isLoading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Intenta cargar desde localStorage primero (por si hay un carrito guardado)\r\n        const savedCart = localStorage.getItem(`cart_${route.params.id}`);\r\n        if (savedCart) {\r\n          try {\r\n            cartItems.value = JSON.parse(savedCart);\r\n            console.log(\"Carrito recuperado de localStorage:\", cartItems.value);\r\n          } catch (e) {\r\n            console.error(\"Error al parsear carrito de localStorage:\", e);\r\n          }\r\n        }\r\n        try {\r\n          // Cargar el menú y los items\r\n          const data = await getSharedMenu(route.params.id);\r\n          if (data && data.items) {\r\n            // Asignar los items al menuData\r\n            menuData.value.items = data.items;\r\n            \r\n            // Primero intentamos cargar la información del negocio desde el backend (mayor prioridad)\r\n            try {\r\n              // Primero asignamos la información del negocio que viene con el menú\r\n              if (data.businessInfo) {\r\n                menuData.value.businessInfo = data.businessInfo;\r\n                console.log(\"Información del negocio cargada del menú:\", data.businessInfo);\r\n              }\r\n              \r\n              // Luego intentamos cargar información adicional desde el backend usando el ID del menú\r\n              const businessInfo = await fetchBusinessInfoFromBackend(false, route.params.id);\r\n              if (businessInfo && Object.keys(businessInfo).length > 0) {\r\n                // Combinar la información del backend con la que ya tenemos\r\n                menuData.value.businessInfo = {\r\n                  ...menuData.value.businessInfo || {},\r\n                  ...businessInfo\r\n                };\r\n                lastBusinessInfoUpdate.value = Date.now();\r\n                console.log(\"Información adicional del negocio cargada del backend con ID:\", route.params.id);\r\n              }\r\n            } catch (businessInfoError) {\r\n              console.warn(\"No se pudo cargar información del negocio desde backend:\", businessInfoError);\r\n              // Si hay error al cargar del backend, usar la que viene con el menú\r\n              if (data.businessInfo) {\r\n                menuData.value.businessInfo = data.businessInfo;\r\n                console.log(\"Información del negocio cargada del menú como respaldo:\", data.businessInfo);\r\n              }\r\n            }\r\n            \r\n            console.log(\"Menú cargado con éxito:\", menuData.value);\r\n            // Inicializar disponibilidad para cada ítem\r\n            menuData.value.items.forEach(item => {\r\n              // Si la disponibilidad es explícitamente 0, mantenerla así\r\n              // Si es undefined o null, usar 0 en lugar de un valor predeterminado de 10\r\n              item.availableQuantity = item.availableQuantity !== undefined ? \r\n                Number(item.availableQuantity) : 0;\r\n              item.realAvailability = item.availableQuantity;\r\n            });\r\n            \r\n            // Actualizar disponibilidad real considerando el carrito\r\n            updateAvailabilityInMenu();\r\n            \r\n            // Guardar en localStorage como respaldo\r\n            try {\r\n              localStorage.setItem(`menu_${route.params.id}`, JSON.stringify(menuData.value));\r\n            } catch (saveError) {\r\n              console.warn('No se pudo guardar el menú en localStorage:', saveError);\r\n            }\r\n          } else {\r\n            throw new Error('Datos de menú no válidos');\r\n          }\r\n        } catch (apiError) {\r\n          console.error(\"Error al cargar el menú desde la API:\", apiError);\r\n          \r\n          // Intentar recuperar desde localStorage como respaldo\r\n          try {\r\n            const cachedMenu = localStorage.getItem(`menu_${route.params.id}`);\r\n            if (cachedMenu) {\r\n              menuData.value = JSON.parse(cachedMenu);\r\n              console.log(\"Menú recuperado desde localStorage:\", menuData.value);\r\n              \r\n              if (menuData.value && menuData.value.items) {\r\n                // Inicializar disponibilidad para cada ítem\r\n                menuData.value.items.forEach(item => {\r\n                  item.availableQuantity = item.availableQuantity !== undefined ? \r\n                    Number(item.availableQuantity) : 0;\r\n                  item.realAvailability = item.availableQuantity;\r\n                });\r\n                \r\n                // Actualizar disponibilidad real considerando el carrito\r\n                updateAvailabilityInMenu();\r\n                \r\n                // Mostrar notificación de que se está usando datos en caché\r\n                showToast('Usando datos almacenados localmente. Algunas funciones pueden estar limitadas.', 'warning');\r\n              } else {\r\n                throw new Error('Datos de menú en caché no válidos');\r\n              }\r\n            } else {\r\n              throw new Error('No se encontró el menú en caché');\r\n            }\r\n          } catch (cacheError) {\r\n            console.error(\"Error al recuperar menú desde caché:\", cacheError);\r\n            error.value = 'No se encontró el menú solicitado. Por favor, verifica el enlace o intenta más tarde.';\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error general al cargar el menú:\", e);\r\n        error.value = e.message || 'Error al cargar el menú';\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    }\r\n\r\n    // Verificar si hay información de pago\r\n    const hasPaymentInfo = computed(() => {\r\n      const paymentInfo = menuData.value?.businessInfo?.paymentInfo;\r\n      \r\n      if (!paymentInfo) return false;\r\n      \r\n      // Verificar si hay al menos un campo de información de pago con datos\r\n      return !!(\r\n        (paymentInfo.qrImage && isValidImage(paymentInfo.qrImage)) || \r\n        paymentInfo.qrTitle || \r\n        paymentInfo.nequiNumber || \r\n        (paymentInfo.nequiImage && isValidImage(paymentInfo.nequiImage)) || \r\n        paymentInfo.bankInfo || \r\n        paymentInfo.otherPaymentMethods\r\n      );\r\n    });\r\n    \r\n    // Contador total de items\r\n    const totalItems = computed(() => {\r\n      return cartItems.value.reduce((total, item) => total + item.quantity, 0);\r\n    });\r\n\r\n    // Total del carrito\r\n    const cartTotal = computed(() => {\r\n      return cartItems.value.reduce((total, item) => {\r\n        return total + (item.price * item.quantity);\r\n      }, 0);\r\n    });\r\n\r\n    // Formatear precio\r\n    function formatPrice(price) {\r\n      if (isNaN(Number(price))) return '0,00';\r\n      \r\n      // Convertir a número y formatear con 2 decimales fijos\r\n      const numero = Number(price).toFixed(2);\r\n      \r\n      // Separar parte entera y decimal\r\n      const [parteEntera, parteDecimal] = numero.split('.');\r\n      \r\n      // Formatear parte entera con puntos como separadores de miles\r\n      const parteEnteraFormateada = parteEntera.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n      \r\n      // Unir con coma como separador decimal\r\n      return `${parteEnteraFormateada},${parteDecimal}`;\r\n    }\r\n\r\n    // Agregar al carrito con verificación de disponibilidad\r\n    async function addToCart(item) {\r\n      // Verificación directa antes de hacer la comprobación completa\r\n      if (Number(item.availableQuantity) <= 0) {\r\n        showToast(`Lo sentimos, \"${item.name}\" no está disponible actualmente. Intente más tarde por favor.`, 'error');\r\n        return;\r\n      }\r\n      \r\n      const isAvailable = await checkAvailability(item);\r\n      if (!isAvailable) return;\r\n      \r\n      const existingItem = cartItems.value.find(i => {\r\n        // Asegurar que ambos items tienen ID y compararlos, o comparar por nombre si no hay ID\r\n        if (item.id && i.id) {\r\n          return i.id === item.id;\r\n        }\r\n        return i.name === item.name;\r\n      });\r\n      \r\n      if (existingItem) {\r\n        existingItem.quantity++;\r\n      } else {\r\n        cartItems.value.push({\r\n          id: item.id || Date.now().toString(),\r\n          name: item.name,\r\n          price: item.price,\r\n          quantity: 1,\r\n          availableQuantity: item.availableQuantity || 0 // Usar 0 como valor por defecto\r\n        });\r\n      }\r\n      \r\n      // Guardar carrito en localStorage\r\n      saveCartToLocalStorage();\r\n      \r\n      // Actualizar la disponibilidad en tiempo real\r\n      updateAvailabilityInMenu();\r\n      \r\n      // Mostrar notificación de éxito\r\n      showToast(`${item.name} añadido al carrito`, 'success');\r\n    }\r\n    \r\n    // Mostrar notificaciones toast\r\n    function showToast(message, type = 'success', duration = 5000) { // Aumentar a 5 segundos\r\n      console.log(`[Toast] Mostrando notificación: ${message} (${type})`);\r\n      \r\n      // Si ya hay un toast visible, limpiamos su timeout\r\n      if (toast.value.timeoutId) {\r\n        clearTimeout(toast.value.timeoutId);\r\n      }\r\n      \r\n      // Configurar el nuevo toast\r\n      toast.value.message = message;\r\n      toast.value.type = type;\r\n      toast.value.visible = true;\r\n      \r\n      // Debug: verificar que el estado del toast cambió\r\n      console.log(`[Toast] Estado: visible=${toast.value.visible}, message=${toast.value.message}`);\r\n      \r\n      // Configurar timeout para ocultar después de la duración\r\n      toast.value.timeoutId = setTimeout(() => {\r\n        console.log(`[Toast] Ocultando notificación después de ${duration}ms`);\r\n        toast.value.visible = false;\r\n      }, duration);\r\n    }\r\n\r\n    // Guardar carrito en localStorage\r\n    function saveCartToLocalStorage() {\r\n      try {\r\n        localStorage.setItem(`cart_${route.params.id}`, JSON.stringify(cartItems.value));\r\n      } catch (e) {\r\n        console.error(\"Error al guardar carrito en localStorage:\", e);\r\n      }\r\n    }\r\n\r\n    // Incrementar cantidad\r\n    function increaseQuantity(index) {\r\n      const item = cartItems.value[index];\r\n      \r\n      // Buscar el ítem en el menú\r\n      const menuItem = menuData.value.items?.find(i => i.id === item.id);\r\n      if (menuItem) {\r\n        // Verificar disponibilidad\r\n        const availableQuantity = menuItem.availableQuantity || 0;\r\n        if (item.quantity >= availableQuantity) {\r\n          showToast(`No hay más unidades disponibles de \"${item.name}\"`, 'warning');\r\n          return;\r\n        }\r\n      }\r\n      \r\n      // Incrementar cantidad\r\n      item.quantity++;\r\n      \r\n      // Guardar carrito y actualizar disponibilidad\r\n      saveCartToLocalStorage();\r\n      updateAvailabilityInMenu();\r\n    }\r\n\r\n    // Reemplazar la función decreaseQuantity (líneas 409-416)\r\n    function decreaseQuantity(index) {\r\n      if (cartItems.value[index].quantity > 1) {\r\n        cartItems.value[index].quantity--;\r\n        saveCartToLocalStorage();\r\n        updateAvailabilityInMenu(); // Actualizar disponibilidad\r\n      } else {\r\n        removeFromCart(index);\r\n      }\r\n    }\r\n\r\n    // Reemplazar la función removeFromCart (líneas 419-422)\r\n    function removeFromCart(index) {\r\n      cartItems.value.splice(index, 1);\r\n      saveCartToLocalStorage();\r\n      updateAvailabilityInMenu(); // Actualizar disponibilidad\r\n    }\r\n    \r\n    // Completar pedido con actualización de inventario\r\n    async function completeOrder() {\r\n      try {\r\n        // Validaciones básicas\r\n        if (cartItems.value.length === 0) {\r\n          showToast('No hay ítems en el pedido', 'error');\r\n          return;\r\n        }\r\n        \r\n        if (!customerInfo.value.name || !customerInfo.value.phone) {\r\n          showToast('Por favor complete su nombre y teléfono', 'error');\r\n          return;\r\n        }\r\n      \r\n        // Indicar que está procesando\r\n        isProcessingOrder.value = true;\r\n        \r\n        // Actualizar inventario - Usar el carrito correcto\r\n        await updateInventory();\r\n        \r\n        // Compartir en WhatsApp\r\n        openWhatsAppShare();\r\n        \r\n        showToast('¡Pedido completado! Gracias por tu compra.', 'success');\r\n        \r\n        // Limpiar carrito y datos del cliente después de completar\r\n        setTimeout(() => {\r\n          // Limpiar carrito\r\n          cartItems.value = [];\r\n          \r\n          // Limpiar localStorage\r\n          localStorage.removeItem(`cart_${route.params.id}`);\r\n          \r\n          // Limpiar datos del cliente\r\n          customerInfo.value = {\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            address: ''\r\n          };\r\n          additionalMessage.value = '';\r\n          isProcessingOrder.value = false;\r\n        }, 2000);\r\n      } catch (error) {\r\n        console.error('Error al completar el pedido:', error);\r\n        showToast('Error al procesar el pedido', 'error');\r\n        isProcessingOrder.value = false;\r\n      }\r\n    }\r\n    \r\n    // Compartir pedido por WhatsApp sin actualizar inventario\r\nfunction shareOrderByWhatsApp() {\r\n  // Validaciones básicas\r\n  if (cartItems.value.length === 0) {\r\n    showToast('No hay ítems en el pedido', 'error');\r\n    return;\r\n  }\r\n\r\n  if (!customerInfo.value.name || !customerInfo.value.phone) {\r\n    showToast('Por favor complete su nombre y teléfono', 'error');\r\n    return;\r\n  }\r\n\r\n  // Compartir directamente en WhatsApp sin actualizar inventario\r\n  openWhatsAppShare();\r\n\r\n  showToast('Pedido compartido por WhatsApp', 'success');\r\n}\r\n\r\nfunction openWhatsAppShare() {\r\n  // Construir mensaje de pedido para WhatsApp\r\n  let whatsappMessage = `🛒 *Pedido de ${customerInfo.value.name}*\\n\\n`;\r\n  whatsappMessage += `📦 *Productos:*\\n`;\r\n\r\n  cartItems.value.forEach(item => {\r\n    const subtotal = (item.price * item.quantity).toFixed(2);\r\n    whatsappMessage += `🍽️ ${item.quantity}x ${item.name} = $${formatPrice(subtotal)}\\n`;\r\n  });\r\n\r\n  whatsappMessage += `\\n💵 *Total:* $${formatPrice(cartTotal.value)}\\n`;\r\n\r\n  if (customerInfo.value.phone) {\r\n    whatsappMessage += `📞 *Teléfono:* ${customerInfo.value.phone}\\n`;\r\n  }\r\n\r\n  if (customerInfo.value.email) {\r\n    whatsappMessage += `✉️ *Email:* ${customerInfo.value.email}\\n`;\r\n  }\r\n\r\n  if (customerInfo.value.address) {\r\n    whatsappMessage += `📍 *Dirección:* ${customerInfo.value.address}\\n`;\r\n  }\r\n\r\n  if (additionalMessage.value) {\r\n    whatsappMessage += `📝 *Notas adicionales:*\\n${additionalMessage.value}\\n`;\r\n  }\r\n\r\n  // Añadir método de pago seleccionado\r\n  const formaPago = selectedPaymentMethod.value === 'qr' ? 'Código QR' :\r\n                    selectedPaymentMethod.value === 'nequi' ? 'Nequi' :\r\n                    'Contra entrega';\r\n\r\n  whatsappMessage += `\\n💳 *Forma de pago:* ${formaPago}`;\r\n\r\n  // Codificar y generar la URL de WhatsApp\r\n  const encodedMessage = encodeURIComponent(whatsappMessage);\r\n  const whatsappUrl = `https://api.whatsapp.com/send?text=${encodedMessage}`;\r\n\r\n  // Abrir WhatsApp en una nueva ventana\r\n  window.open(whatsappUrl, '_blank');\r\n}\r\n\r\n    // Desplazarse a la sección del pedido\r\n    function scrollToOrder() {\r\n      const orderSection = document.querySelector('.order-section');\r\n      if (orderSection) {\r\n        orderSection.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    }\r\n\r\n    // Verificar disponibilidad de inventario\r\n    async function checkAvailability(item) {\r\n      // Obtener la disponibilidad base (valor original del inventario)\r\n      // Importante: asegurarse que sea un número\r\n      const baseAvailability = Number(item.availableQuantity) || 0;\r\n      \r\n      // Verificación directa: si no hay stock, mostrar mensaje de error\r\n      if (baseAvailability <= 0) {\r\n        showToast(`Lo sentimos, \"${item.name}\" no está disponible actualmente. Intente más tarde por favor.`, 'error');\r\n        return false;\r\n      }\r\n      \r\n      // Obtener la cantidad actual en el carrito\r\n      const cartItem = cartItems.value.find(i => i.id === item.id);\r\n      const cartQuantity = cartItem ? cartItem.quantity : 0;\r\n      \r\n      // Calcular disponibilidad real\r\n      const realAvailability = baseAvailability - cartQuantity;\r\n      \r\n      // Verificar la disponibilidad considerando lo que ya está en el carrito\r\n      if (realAvailability <= 0) {\r\n        showToast(`No hay más unidades disponibles de \"${item.name}\"`, 'warning');\r\n        return false;\r\n      } else if (realAvailability <= 5) {\r\n        showToast(`¡Solo quedan ${realAvailability} unidades de \"${item.name}\"!`, 'warning');\r\n      }\r\n      \r\n      return true;\r\n    }\r\n\r\n    // Actualizar inventario al completar pedido\r\n    async function updateInventory() {\r\n      try {\r\n        // Validaciones iniciales\r\n        if (!cartItems.value || cartItems.value.length === 0) {\r\n          console.warn('Intentando actualizar inventario con carrito vacío');\r\n          return;\r\n        }\r\n        \r\n        console.log(`Iniciando actualización de inventario para ${cartItems.value.length} productos...`);\r\n        \r\n        // Obtener los elementos actuales del menú para actualizar cantidades\r\n        const currentMenu = await getMenuItems();\r\n        if (!currentMenu || !Array.isArray(currentMenu)) {\r\n          console.error('No se pudo obtener el menú actual');\r\n          return false;\r\n        }\r\n        \r\n        // Crear una copia profunda del carrito para procesar (evitar modificaciones durante el procesamiento)\r\n        const itemsToProcess = JSON.parse(JSON.stringify(cartItems.value));\r\n        const updateResults = [];\r\n        let hasErrors = false;\r\n        \r\n        // Importar función para guardar elementos vendidos\r\n        const { getSoldItems, saveSoldItems } = await import('../services/storageService');\r\n        \r\n        // Obtener la lista actual de elementos vendidos\r\n        let soldItemsList = [];\r\n        try {\r\n          soldItemsList = await getSoldItems() || [];\r\n          if (!Array.isArray(soldItemsList)) {\r\n            soldItemsList = [];\r\n          }\r\n          console.log('Lista de elementos vendidos obtenida:', soldItemsList.length);\r\n        } catch (soldItemsError) {\r\n          console.warn('Error al obtener elementos vendidos:', soldItemsError);\r\n          soldItemsList = [];\r\n        }\r\n        \r\n        // Procesar cada elemento del carrito de forma secuencial para evitar condiciones de carrera\r\n        for (let i = 0; i < itemsToProcess.length; i++) {\r\n          const cartItem = itemsToProcess[i];\r\n          console.log(`Procesando item ${i+1}/${itemsToProcess.length}: ${cartItem.name} (ID: ${cartItem.id})`);\r\n          \r\n          try {\r\n            // Buscar el ítem correspondiente en el menú actual\r\n            const menuItem = currentMenu.find(item => item.id === cartItem.id);\r\n            \r\n            if (!menuItem) {\r\n              console.warn(`Elemento no encontrado en el menú: ${cartItem.name} (ID: ${cartItem.id})`);\r\n              updateResults.push({\r\n                name: cartItem.name,\r\n                success: false,\r\n                error: 'Elemento no encontrado en el menú'\r\n              });\r\n              continue;\r\n            }\r\n            \r\n            // Garantizar que estamos trabajando con números enteros válidos\r\n            const currentQuantity = parseInt(Number(menuItem.availableQuantity || 0), 10);\r\n            const soldQuantity = parseInt(Number(cartItem.quantity || 0), 10);\r\n            \r\n            if (isNaN(currentQuantity) || isNaN(soldQuantity)) {\r\n              const error = `Cantidades inválidas para ${cartItem.name}: disponible=${menuItem.availableQuantity}, vendido=${cartItem.quantity}`;\r\n              console.error(error);\r\n              updateResults.push({\r\n                name: cartItem.name,\r\n                success: false,\r\n                error: error\r\n              });\r\n              hasErrors = true;\r\n              continue;\r\n            }\r\n            \r\n            // Calcular nueva cantidad exacta como entero\r\n            const newQuantity = Math.max(0, currentQuantity - soldQuantity);\r\n            \r\n            console.log(`Actualizando ${cartItem.name}: ${currentQuantity} - ${soldQuantity} = ${newQuantity} (currentQuantity tipo: ${typeof currentQuantity}, soldQuantity tipo: ${typeof soldQuantity})`);\r\n            \r\n            // Actualizar disponibilidad usando la función mejorada - forzar como número entero\r\n            const updateSuccess = await updateItemAvailability(menuItem.id, newQuantity);\r\n            \r\n            // Registrar resultado detallado\r\n            updateResults.push({\r\n              name: cartItem.name,\r\n              oldQuantity: currentQuantity,\r\n              soldQuantity: soldQuantity,\r\n              newQuantity: newQuantity,\r\n              success: updateSuccess,\r\n              error: updateSuccess ? null : 'Error al actualizar disponibilidad'\r\n            });\r\n            \r\n            if (!updateSuccess) {\r\n              hasErrors = true;\r\n            } else {\r\n              // Registrar en la lista de platos vendidos si la actualización fue exitosa\r\n              const currentDate = new Date().toISOString();\r\n              const existingSoldItem = soldItemsList.find(item => item.name === cartItem.name);\r\n              \r\n              if (existingSoldItem) {\r\n                existingSoldItem.quantity += soldQuantity;\r\n                existingSoldItem.date = currentDate;\r\n              } else {\r\n                soldItemsList.push({\r\n                  name: cartItem.name,\r\n                  quantity: soldQuantity,\r\n                  price: cartItem.price,\r\n                  includesDrink: menuItem.includesDrink || false,\r\n                  date: currentDate\r\n                });\r\n              }\r\n              console.log(`Elemento registrado en lista de vendidos: ${cartItem.name} x${soldQuantity}`);\r\n            }\r\n          } catch (itemError) {\r\n            console.error(`Error procesando ${cartItem.name}:`, itemError);\r\n            updateResults.push({\r\n              name: cartItem.name,\r\n              success: false,\r\n              error: itemError.message || 'Error desconocido'\r\n            });\r\n            hasErrors = true;\r\n          }\r\n        }\r\n        \r\n        // Guardar la lista actualizada de elementos vendidos\r\n        try {\r\n          await saveSoldItems(soldItemsList);\r\n          console.log(`Lista de elementos vendidos actualizada con ${soldItemsList.length} elementos`);\r\n        } catch (saveError) {\r\n          console.error('Error al guardar elementos vendidos:', saveError);\r\n        }\r\n        \r\n        // Mostrar resumen de la operación\r\n        const successCount = updateResults.filter(r => r.success).length;\r\n        console.log(`Actualización de inventario completada. Éxitos: ${successCount}/${itemsToProcess.length}`);\r\n        \r\n        // Registrar detalles completos de la actualización\r\n        console.log('Detalles de actualización de inventario:', updateResults);\r\n        \r\n        if (hasErrors) {\r\n          const failedItems = updateResults.filter(r => !r.success).map(r => r.name).join(', ');\r\n          console.warn(`Algunos productos no se pudieron actualizar: ${failedItems}`);\r\n        }\r\n        \r\n        return successCount > 0;\r\n      } catch (error) {\r\n        console.error('Error general al actualizar inventario:', error);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Añadir después de la función checkAvailability (línea 585)\r\n    // Función para actualizar la disponibilidad en tiempo real\r\n    function updateAvailabilityInMenu() {\r\n      if (!menuData.value?.items) return;\r\n      \r\n      // Actualizar la disponibilidad de todos los ítems\r\n      menuData.value.items.forEach(menuItem => {\r\n        // Encontrar si este ítem está en el carrito\r\n        const cartItem = cartItems.value.find(i => i.id === menuItem.id);\r\n        const cartQuantity = cartItem ? cartItem.quantity : 0;\r\n        \r\n        // Asegurarse de que availableQuantity sea un número exacto, no undefined o null\r\n        const baseAvailability = Number(menuItem.availableQuantity) || 0;\r\n        \r\n        // Calcular disponibilidad real\r\n        menuItem.realAvailability = baseAvailability - cartQuantity;\r\n        \r\n        console.log(`Disponibilidad actualizada para ${menuItem.name}: ${menuItem.realAvailability} unidades (base: ${baseAvailability}, carrito: ${cartQuantity})`);\r\n      });\r\n    }\r\n\r\n    // Verificar si una cadena de imagen es válida\r\n    function isValidImage(imageString) {\r\n      if (!imageString) return false;\r\n      \r\n      // Verificar si es una URL\r\n      if (imageString.startsWith('http://') || imageString.startsWith('https://')) {\r\n        return true;\r\n      }\r\n      \r\n      // Verificar si es una imagen en base64\r\n      if (imageString.startsWith('data:image/')) {\r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    }\r\n    \r\n    // Corregir formato de imagen si es necesario\r\n    function fixImageFormat(imageString) {\r\n      if (!imageString) return '';\r\n      \r\n      // Si ya es una URL o base64 válido, devolverlo tal cual\r\n      if (isValidImage(imageString)) {\r\n        return imageString;\r\n      }\r\n      \r\n      // Intentar convertir a base64 si no tiene el prefijo correcto\r\n      if (imageString.includes('/9j/') && !imageString.startsWith('data:image/')) {\r\n        return `data:image/jpeg;base64,${imageString}`;\r\n      }\r\n      \r\n      // Si no se puede arreglar, devolver una imagen por defecto\r\n      return '';\r\n    }\r\n\r\n    // Datos del cliente\r\n    const customerInfo = ref({\r\n      name: '',\r\n      phone: '',\r\n      email: '',\r\n      address: ''\r\n    });\r\n\r\n    // Método de pago seleccionado\r\n    const selectedPaymentMethod = ref('cash'); // Por defecto contra entrega\r\n\r\n    // Mensaje adicional\r\n    const additionalMessage = ref('');\r\n\r\n    // Filtrar items regulares y especiales\r\n    const regularItems = computed(() => {\r\n      if (!menuData.value || !menuData.value.items) return [];\r\n      const filtered = menuData.value.items.filter(item => !item.isSpecial);\r\n      console.log('Platos regulares:', filtered.length, filtered.map(i => i.name));\r\n      return filtered;\r\n    });\r\n\r\n    const specialItems = computed(() => {\r\n      if (!menuData.value || !menuData.value.items) return [];\r\n      const filtered = menuData.value.items.filter(item => item.isSpecial === true);\r\n      console.log('Platos especiales:', filtered.length, filtered.map(i => i.name));\r\n      return filtered;\r\n    });\r\n\r\n    // Estado para el formulario de reserva\r\n    const showReservationForm = ref(false);\r\n    const isProcessingReservation = ref(false);\r\n    const reservationSuccess = ref(false);\r\n    const reservationError = ref(null);\r\n    \r\n    const reservationData = ref({\r\n      fullName: '',\r\n      mobilePhone: '',\r\n      landlinePhone: '',\r\n      address: '',\r\n      email: '',\r\n      orderDate: getCurrentDate(), // Set the initial value here\r\n      reservationDate: '',\r\n      reservationTime: '',\r\n      peopleCount: 1,\r\n      additionalNotes: ''\r\n    });\r\n    \r\n    // Función para obtener la fecha actual en formato YYYY-MM-DD\r\n    function getCurrentDate() {\r\n      const today = new Date();\r\n      const year = today.getFullYear();\r\n      const month = String(today.getMonth() + 1).padStart(2, '0');\r\n      const day = String(today.getDate()).padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    }\r\n    \r\n    // Función para enviar la reserva\r\n    async function submitReservation() {\r\n      isProcessingReservation.value = true;\r\n      reservationSuccess.value = false;\r\n      reservationError.value = null;\r\n      \r\n      try {\r\n        // Utilizamos el servicio de reservas para guardar los datos\r\n        const result = await saveReservation(reservationData.value);\r\n        \r\n        if (result.success) {\r\n          // Reserva guardada correctamente\r\n          reservationSuccess.value = true;\r\n          showToast('¡Reserva enviada con éxito! Recibirá un correo de confirmación en breve.', 'success');\r\n          \r\n          // Enviar correo de confirmación (simulado)\r\n          console.log('Enviando correo de confirmación a:', reservationData.value.email);\r\n          \r\n          // Limpiar el formulario y ocultarlo después de un tiempo\r\n          setTimeout(() => {\r\n            resetReservationForm();\r\n            showReservationForm.value = false;\r\n          }, 3000);\r\n        } else {\r\n          // Error al guardar la reserva\r\n          throw new Error(result.error || 'Error al procesar la reserva');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al enviar la reserva:', error);\r\n        reservationError.value = 'Ocurrió un error al procesar su reserva. Por favor, intente nuevamente.';\r\n        showToast('Error al procesar la reserva. Por favor, intente nuevamente.', 'error');\r\n      } finally {\r\n        isProcessingReservation.value = false;\r\n      }\r\n    }\r\n    \r\n    // Función para cancelar la reserva\r\n    function cancelReservation() {\r\n      resetReservationForm();\r\n      showReservationForm.value = false;\r\n    }\r\n    \r\n    // Función para reiniciar el formulario\r\n    function resetReservationForm() {\r\n      reservationData.value.fullName = '';\r\n      reservationData.value.mobilePhone = '';\r\n      reservationData.value.landlinePhone = '';\r\n      reservationData.value.address = '';\r\n      reservationData.value.email = '';\r\n      reservationData.value.orderDate = getCurrentDate();\r\n      reservationData.value.reservationDate = '';\r\n      reservationData.value.reservationTime = '';\r\n      reservationData.value.peopleCount = 1;\r\n      reservationData.value.additionalNotes = '';\r\n      reservationSuccess.value = false;\r\n      reservationError.value = null;\r\n    }    // Refrescar información del negocio manualmente\r\n    async function refreshBusinessInfo() {\r\n      try {\r\n        const businessInfo = await fetchBusinessInfoFromBackend(true, route.params.id);\r\n        if (businessInfo) {\r\n          menuData.value.businessInfo = businessInfo;\r\n          lastBusinessInfoUpdate.value = Date.now();\r\n          showToast('Información del negocio actualizada', 'success');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al refrescar información del negocio:', error);\r\n        showToast('Error al actualizar información del negocio', 'error');\r\n      }\r\n    }\r\n\r\n    return {\r\n      menuId,\r\n      isLoading,\r\n      error,\r\n      menuData,\r\n      regularItems,\r\n      specialItems,\r\n      cartItems,\r\n      cartTotal,\r\n      totalItems,\r\n      customerInfo,\r\n      selectedPaymentMethod,\r\n      additionalMessage,\r\n      addToCart,\r\n      removeFromCart,\r\n      increaseQuantity,\r\n      decreaseQuantity,\r\n      formatPrice,\r\n      completeOrder,\r\n      shareOrderByWhatsApp,\r\n      scrollToOrder,\r\n      isValidImage,\r\n      fixImageFormat,\r\n      hasPaymentInfo,\r\n      // Reservas\r\n      showReservationForm,\r\n      reservationData,\r\n      isProcessingReservation,\r\n      reservationSuccess,\r\n      reservationError,\r\n      submitReservation,\r\n      cancelReservation,\r\n      getCurrentDate,\r\n      // Añadir el objeto toast para que esté disponible en la plantilla\r\n      toast,\r\n      // Función para refrescar información del negocio\r\n      refreshBusinessInfo,\r\n      // Última actualización de la información del negocio\r\n      lastBusinessInfoUpdate\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.shared-menu-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n.loading, .error {\r\n  text-align: center;\r\n  padding: 50px;\r\n  font-size: 18px;\r\n}\r\n\r\n.error {\r\n  color: #d9534f;\r\n}\r\n\r\n.business-info {\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  overflow: hidden; /* Para que la imagen no se salga del contenedor */\r\n}\r\n\r\n.business-header-banner {\r\n  width: 100%;\r\n  height: 200px; /* Altura fija proporcional */\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.business-logo-banner {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* Ajusta la imagen para cubrir todo el espacio */\r\n  object-position: center; /* Centra la imagen en el contenedor */\r\n}\r\n\r\n.business-content {\r\n  padding: 20px;\r\n}\r\n\r\n.business-content h1 {\r\n  color: #343a40;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.description {\r\n  font-style: italic;\r\n  color: #6c757d;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.contact-info {\r\n  font-size: 14px;\r\n  color: #495057;\r\n}\r\n\r\n.menu-list {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.menu-list h2 {\r\n  color: #28a745;\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #28a745;\r\n}\r\n\r\n.menu-items {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.menu-item {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.menu-item:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n}\r\n\r\n.item-image-container {\r\n  width: 100%;\r\n  height: 200px;\r\n  overflow: hidden;\r\n}\r\n\r\n.item-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.no-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f8f9fa;\r\n  color: #6c757d;\r\n  font-style: italic;\r\n}\r\n\r\n.item-details {\r\n  padding: 15px;\r\n}\r\n\r\n.item-details h3 {\r\n  margin-top: 0;\r\n  color: #343a40;\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.item-description {\r\n  color: #6c757d;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.item-price {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #28a745;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.includes-drink {\r\n  font-size: 14px;\r\n  color: #6c757d;\r\n  font-style: italic;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-to-cart-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  font-weight: bold;\r\n}\r\n\r\n.add-to-cart-btn:hover {\r\n  background-color: #218838;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.quantity-display {\r\n  min-width: 30px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Estilos para acciones de pedido */\r\n.order-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-top: 15px;\r\n  gap: 10px;\r\n}\r\n\r\n.complete-order-btn,\r\n.whatsapp-order-btn {\r\n  border: none;\r\n  padding: 12px 20px;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  gap: 8px;\r\n  height: 48px;\r\n  font-size: 17px;\r\n  width: 100%;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  letter-spacing: 0.5px;\r\n  text-shadow: 0 1px 2px rgba(0,0,0,0.3);\r\n}\r\n\r\n.complete-order-btn {\r\n  background-color: #218838;\r\n  color: white;\r\n  margin: 0;\r\n  border: 2px solid #1e7e34;\r\n}\r\n\r\n.complete-order-btn:hover {\r\n  background-color: #1e7e34;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2);\r\n}\r\n\r\n.whatsapp-order-btn {\r\n  height: 48px;\r\n  font-size: 17px;\r\n  width: 100%;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  letter-spacing: 0.5px;\r\n  text-shadow: 0 1px 2px rgba(0,0,0,0.3);\r\n}\r\n\r\n.complete-order-btn {\r\n  background-color: #218838;\r\n  color: white;\r\n  margin: 0;\r\n  border: 2px solid #1e7e34;\r\n}\r\n\r\n.complete-order-btn:hover {\r\n  background-color: #1e7e34;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2);\r\n}\r\n\r\n.whatsapp-order-btn {\r\n  background-color: #128C7E;\r\n  color: white;\r\n  margin: 0;\r\n  border: 2px solid #075E54;\r\n}\r\n\r\n.whatsapp-order-btn:hover {\r\n  background-color: #075E54;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2);\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 8px;\r\n}\r\n\r\n/* Estilos para la sección de \"Tu Pedido\" */\r\n.order-section {\r\n  margin: 30px auto;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  max-width: 800px;\r\n  border: 2px solid #28a745;\r\n  position: relative;\r\n}\r\n\r\n.order-section::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 10px solid transparent;\r\n  border-right: 10px solid transparent;\r\n  border-bottom: 10px solid #28a745;\r\n}\r\n\r\n.order-section h2 {\r\n  color: #343a40;\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #28a745;\r\n}\r\n\r\n.cart-items {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #dee2e6;\r\n  animation: fadeIn 0.3s ease;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(-10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.cart-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.cart-item-details h3 {\r\n  margin: 0 0 5px 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.cart-item-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.quantity-btn {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #28a745;\r\n  color: #28a745;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.quantity-btn:hover {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.remove-btn {\r\n  padding: 5px 10px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.remove-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.cart-total {\r\n  text-align: right;\r\n  padding-top: 15px;\r\n  border-top: 2px solid #28a745;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.cart-total h3 {\r\n  color: #343a40;\r\n  margin: 0;\r\n}\r\n\r\n/* Estilos para el formulario de datos del cliente */\r\n.customer-form {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  border: 1px solid #dee2e6;\r\n}\r\n\r\n.customer-form h4 {\r\n  color: #343a40;\r\n  margin-top: 0;\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  padding-bottom: 8px;\r\n}\r\n\r\n.form-row {\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.form-input, .form-textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.form-input:focus, .form-textarea:focus {\r\n  border-color: #28a745;\r\n  outline: none;\r\n}\r\n\r\n.form-textarea {\r\n  min-height: 80px;\r\n  resize: vertical;\r\n}\r\n\r\n/* Estilos para las opciones de pago */\r\n.payment-methods-selection {\r\n  width: 100%;\r\n  margin: 15px 0;\r\n}\r\n\r\n.payment-methods-selection h4 {\r\n  color: #343a40;\r\n  margin-top: 10px;\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  padding-bottom: 8px;\r\n}\r\n\r\n.payment-options {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.payment-option {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  padding: 8px 15px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 4px;\r\n  transition: all 0.2s;\r\n  flex: 1;\r\n  min-width: 100px;\r\n  justify-content: center;\r\n  border: 2px solid transparent;\r\n}\r\n\r\n.payment-option:hover {\r\n  background-color: #e9ecef;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\r\n}\r\n\r\n.payment-option input[type=\"radio\"] {\r\n  margin-right: 8px;\r\n  accent-color: #28a745;\r\n}\r\n\r\n.payment-option input[type=\"radio\"]:checked + .payment-option-text {\r\n  font-weight: bold;\r\n  color: #28a745;\r\n}\r\n\r\n.payment-option-text {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Estilo para opción seleccionada */\r\n.payment-option input[type=\"radio\"]:checked ~ .payment-option {\r\n  border-color: #28a745;\r\n  background-color: rgba(40, 167, 69, 0.1);\r\n}\r\n\r\n/* Botón flotante para ver pedido */\r\n.floating-cart-button {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border-radius: 50px;\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.2);\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  z-index: 98; /* Mantener por debajo del toast (9999) */\r\n  font-weight: bold;\r\n}\r\n\r\n/* Sistema de notificaciones toast */\r\n.toast-notification {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  padding: 15px 25px;\r\n  border-radius: 4px;\r\n  color: white;\r\n  z-index: 1000;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n  animation: slideIn 0.3s ease-out forwards;\r\n}\r\n\r\n@keyframes slideIn {\r\n  from {\r\n    transform: translateY(100%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.toast-notification.success {\r\n  background-color: #28a745;\r\n}\r\n\r\n.toast-notification.error {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.toast-notification.info {\r\n  background-color: #17a2b8;\r\n}\r\n\r\n.toast-notification.warning {\r\n  background-color: #ffc107;\r\n  color: #212529;\r\n}\r\n\r\n/* Estilos adicionales para la sección de información del negocio */\r\n.business-header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .business-header {\r\n    flex-direction: row;\r\n    text-align: left;\r\n  }\r\n}\r\n\r\n.business-logo {\r\n  width: 100px;\r\n  height: 100px;\r\n  object-fit: contain;\r\n  margin-bottom: 1rem;\r\n  border-radius: 50%;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .business-logo {\r\n    margin-right: 2rem;\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.business-info {\r\n  flex: 1;\r\n}\r\n\r\n.business-info h1 {\r\n  margin-top: 0;\r\n  color: #333;\r\n  font-size: 1.8rem;\r\n}\r\n\r\n.business-description {\r\n  color: #666;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.business-contact {\r\n  color: #666;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Estilos específicos para los métodos de pago (QR y Nequi) */\r\n.payment-image-container {\r\n  height: 180px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px 0;\r\n}\r\n\r\n.payment-image {\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  object-fit: contain;\r\n}\r\n\r\n.payment-method h3 {\r\n  color: #343a40;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 8px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  font-size: 18px;\r\n}\r\n\r\n/* Estilos específicos para QR y Nequi */\r\n.qr-payment, .nequi-payment {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n/* Estilos responsivos para móviles */\r\n@media (max-width: 768px) {\r\n  .payment-methods {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .payment-method {\r\n    width: 100%;\r\n    max-width: 100%;\r\n  }\r\n  \r\n  .payment-image-container {\r\n    height: 150px;\r\n  }\r\n}\r\n\r\n/* Estilos específicos para pantallas más grandes */\r\n@media (min-width: 992px) {\r\n  .payment-methods {\r\n    justify-content: center;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .payment-method {\r\n    flex: 0 1 350px;\r\n  }\r\n}\r\n</style>\r\n","<template>\n  <div class=\"reservas-section\">\n    <button @click=\"toggleReservaForm\" class=\"toggle-reserva-button\">\n      {{ showReservaForm ? 'Ocultar Formulario de Reserva' : 'Hacer una Reserva' }}\n    </button>\n    \n    <div v-if=\"showReservaForm\" class=\"reserva-form-container\">\n      <h3>Reserva tu Mesa</h3>\n      <form @submit.prevent=\"processReservation\" class=\"reserva-form\">\n        <div class=\"form-group\">\n          <label for=\"fullName\">Nombre Completo *</label>\n          <input \n            type=\"text\" \n            id=\"fullName\" \n            v-model=\"reservationData.fullName\" \n            placeholder=\"Ingresa tu nombre completo\"\n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"mobilePhone\">Teléfono Móvil *</label>\n          <input \n            type=\"tel\" \n            id=\"mobilePhone\" \n            v-model=\"reservationData.mobilePhone\" \n            placeholder=\"Ej. 612345678\"\n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"landlinePhone\">Teléfono Fijo</label>\n          <input \n            type=\"tel\" \n            id=\"landlinePhone\" \n            v-model=\"reservationData.landlinePhone\" \n            placeholder=\"Opcional\"\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"address\">Dirección</label>\n          <input \n            type=\"text\" \n            id=\"address\" \n            v-model=\"reservationData.address\" \n            placeholder=\"Tu dirección (opcional)\"\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"email\">Correo Electrónico</label>\n          <input \n            type=\"email\" \n            id=\"email\" \n            v-model=\"reservationData.email\" \n            placeholder=\"ejemplo@correo.com (opcional)\"\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"reservationDate\">Fecha de Reserva *</label>\n          <input \n            type=\"date\" \n            id=\"reservationDate\" \n            v-model=\"reservationData.date\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"reservationTime\">Hora de Reserva *</label>\n          <input \n            type=\"time\" \n            id=\"reservationTime\" \n            v-model=\"reservationData.time\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"peopleCount\">Número de Personas *</label>\n          <input \n            type=\"number\" \n            id=\"peopleCount\" \n            v-model=\"reservationData.peopleCount\" \n            min=\"1\" \n            max=\"20\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"specialNotes\">Notas Adicionales</label>\n          <textarea \n            id=\"specialNotes\" \n            v-model=\"reservationData.notes\" \n            placeholder=\"Instrucciones especiales, preferencias, etc.\"\n            rows=\"3\"\n          ></textarea>\n        </div>\n        \n        <div class=\"form-actions\">\n          <button \n            type=\"submit\" \n            class=\"submit-button\" \n            :disabled=\"isProcessing\"\n          >\n            {{ isProcessing ? 'Procesando...' : 'Reservar Mesa' }}\n          </button>\n          <button \n            type=\"button\" \n            class=\"clear-button\" \n            @click=\"clearForm\"\n            :disabled=\"isProcessing\"\n          >\n            Limpiar\n          </button>\n        </div>\n      </form>\n    </div>\n    \n    <!-- Toast de notificación -->\n    <div v-if=\"toast.show\" class=\"toast-notification\" :class=\"toast.type\">\n      {{ toast.message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, watch } from 'vue';\nimport eventBus from '@/utils/eventBus';\nimport { saveReservation, saveWhatsAppReservation } from '../../services/reservaService';\n\nexport default {\n  name: 'ReservaForm',\n  setup() {\n    console.log('ReservaForm montado');\n    // Estado para mostrar/ocultar el formulario\n    const showReservaForm = ref(false);\n    \n    // Estado para los datos de la reserva\n    const reservationData = reactive({\n      fullName: '',\n      mobilePhone: '',\n      landlinePhone: '',\n      address: '',\n      email: '',\n      date: '',\n      time: '',\n      peopleCount: 1,\n      notes: ''\n    });\n    \n    // Estado para el procesamiento de la reserva\n    const isProcessing = ref(false);\n    \n    // Estado para las notificaciones toast\n    const toast = reactive({\n      show: false,\n      message: '',\n      type: 'info'\n    });\n    \n    // Función para alternar la visibilidad del formulario\n    const toggleReservaForm = () => {\n      showReservaForm.value = !showReservaForm.value;\n    };\n    \n    // Función para mostrar mensajes toast\n    const showToast = (message, type = 'info') => {\n      toast.message = message;\n      toast.type = type;\n      toast.show = true;\n      \n      // Ocultar el toast después de 5 segundos\n      setTimeout(() => {\n        toast.show = false;\n      }, 5000);\n    };\n    \n    // Función para validar el formulario\n    const validateForm = () => {\n      if (!reservationData.fullName.trim()) {\n        showToast('Por favor, ingresa tu nombre completo', 'error');\n        return false;\n      }\n      \n      if (!reservationData.mobilePhone.trim()) {\n        showToast('Por favor, ingresa un número de teléfono móvil', 'error');\n        return false;\n      }\n      \n      if (!reservationData.date) {\n        showToast('Por favor, selecciona una fecha para la reserva', 'error');\n        return false;\n      }\n      \n      if (!reservationData.time) {\n        showToast('Por favor, selecciona una hora para la reserva', 'error');\n        return false;\n      }\n      \n      if (!reservationData.peopleCount || reservationData.peopleCount < 1) {\n        showToast('Por favor, indica el número de personas', 'error');\n        return false;\n      }\n      \n      return true;\n    };\n    \n    // Función para procesar la reserva\n    const processReservation = async () => {\n      if (!validateForm()) return;\n      \n      try {\n        isProcessing.value = true;\n        \n        // Construir el objeto de reserva para el sistema\n        const reservationObject = {\n          fullName: reservationData.fullName,\n          mobilePhone: reservationData.mobilePhone,\n          landlinePhone: reservationData.landlinePhone || '',\n          email: reservationData.email || '',\n          address: reservationData.address || '',\n          date: reservationData.date,\n          time: reservationData.time,\n          peopleCount: reservationData.peopleCount,\n          notes: reservationData.notes || '',\n          status: 'pending',\n          source: 'menu'\n        };\n        \n        console.log('Enviando reserva al sistema:', reservationObject);\n        \n        // Preparar datos para WhatsApp (formato que espera el handler)\n        const whatsappData = {\n          nombre: reservationData.fullName,\n          telefono: reservationData.mobilePhone,\n          email: reservationData.email || '',\n          fecha: reservationData.date,\n          hora: reservationData.time,\n          personas: reservationData.peopleCount,\n          notas: `Reserva desde menú compartido: ${reservationData.notes || 'Sin notas adicionales'}`\n        };\n        \n        console.log('Enviando reserva como mensaje de WhatsApp:', whatsappData);\n        \n        // Enviar la reserva al sistema como si viniera de WhatsApp\n        // Esto garantiza que aparezca en la sección de Gestión de Reservas\n        const whatsappResult = await saveWhatsAppReservation(whatsappData);\n        \n        console.log('Resultado de envío como WhatsApp:', whatsappResult);\n        \n        if (!whatsappResult.success) {\n          throw new Error(whatsappResult.error || 'Error al guardar la reserva');\n        }\n        \n        // Construir mensaje para WhatsApp (opcional, para que el cliente pueda confirmar)\nconst message = `\n📅 *NUEVA RESERVA DE MESA*\n---------------------------\n👤 *Nombre:* ${reservationData.fullName}\n📱 *Teléfono móvil:* ${reservationData.mobilePhone}\n${reservationData.landlinePhone ? `☎️ *Teléfono fijo:* ${reservationData.landlinePhone}` : ''}\n${reservationData.email ? `✉️ *Email:* ${reservationData.email}` : ''}\n📆 *Fecha:* ${reservationData.date}\n⏰ *Hora:* ${reservationData.time}\n👥 *Personas:* ${reservationData.peopleCount}\n${reservationData.notes ? `📝 *Notas:* ${reservationData.notes}` : ''}\n---------------------------\n🌐 Esta reserva fue realizada a través del sistema de reservas online.\n`;\n\n        \n        // Abrir WhatsApp con el mensaje (opcional)\n          const encodedMessage = encodeURIComponent(message);\n          const whatsappUrl = `https://api.whatsapp.com/send?text=${encodedMessage}`;\n          window.open(whatsappUrl, '_blank');\n\n        \n        // Mostrar mensaje de éxito\n        showToast('¡Reserva enviada correctamente! También puedes confirmarla por WhatsApp.', 'success');\n        \n        // Limpiar el formulario\n        clearForm();\n        \n      } catch (error) {\n        console.error('Error al procesar la reserva:', error);\n        showToast('Hubo un error al procesar tu reserva. Por favor, intenta nuevamente.', 'error');\n      } finally {\n        isProcessing.value = false;\n      }\n    };\n    \n    // Función para limpiar el formulario\n    const clearForm = () => {\n      reservationData.fullName = '';\n      reservationData.mobilePhone = '';\n      reservationData.landlinePhone = '';\n      reservationData.address = '';\n      reservationData.email = '';\n      reservationData.date = '';\n      reservationData.time = '';\n      reservationData.peopleCount = 1;\n      reservationData.notes = '';\n    };\n    \n    return {\n      showReservaForm,\n      reservationData,\n      isProcessing,\n      toast,\n      toggleReservaForm,\n      processReservation,\n      clearForm\n    };\n  }\n};\n</script>\n\n<style scoped>\n.reservas-section {\n  margin: 40px 0;\n  position: relative;\n  border: 5px solid red;  /* Borde rojo brillante para depuración */\n  padding: 20px;\n  background-color: rgb(165, 229, 245);  /* Fondo amarillo para depuración */\n}\n\n.toggle-reserva-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  display: block;\n  margin: 0 auto 20px;\n}\n\n.toggle-reserva-button:hover {\n  background-color: #388E3C;\n}\n\n.reserva-form-container {\n  background-color: #f8f8f8;\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 30px;\n  border: 1px solid #e0e0e0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.reserva-form-container h3 {\n  color: #333;\n  margin-top: 0;\n  margin-bottom: 20px;\n  border-bottom: 2px solid #4CAF50;\n  padding-bottom: 10px;\n}\n\n.reserva-form {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 15px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #333;\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n  transition: border-color 0.3s;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n  border-color: #4CAF50;\n  outline: none;\n}\n\n.form-actions {\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.submit-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 12px 24px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.submit-button:hover {\n  background-color: #388E3C;\n}\n\n.clear-button {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 12px 24px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.clear-button:hover {\n  background-color: #d32f2f;\n}\n\n.toast-notification {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  padding: 15px 20px;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  z-index: 1000;\n  animation: slideIn 0.3s ease, fadeOut 0.5s 4.5s ease forwards;\n  max-width: 300px;\n}\n\n.toast-notification.info {\n  background-color: #2196F3;\n}\n\n.toast-notification.success {\n  background-color: #4CAF50;\n}\n\n.toast-notification.error {\n  background-color: #f44336;\n}\n\n@keyframes slideIn {\n  from { transform: translateX(100%); }\n  to { transform: translateX(0); }\n}\n\n@keyframes fadeOut {\n  from { opacity: 1; }\n  to { opacity: 0; }\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .reserva-form {\n    grid-template-columns: 1fr;\n  }\n  \n  .form-actions {\n    flex-direction: column;\n  }\n  \n  .submit-button, .clear-button {\n    width: 100%;\n  }\n}\n</style>","import { render } from \"./ReservaForm.vue?vue&type=template&id=732333be&scoped=true\"\nimport script from \"./ReservaForm.vue?vue&type=script&lang=js\"\nexport * from \"./ReservaForm.vue?vue&type=script&lang=js\"\n\nimport \"./ReservaForm.vue?vue&type=style&index=0&id=732333be&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-732333be\"]])\n\nexport default __exports__","import { render } from \"./SharedMenuView.vue?vue&type=template&id=a1d0cc06&scoped=true\"\nimport script from \"./SharedMenuView.vue?vue&type=script&lang=js\"\nexport * from \"./SharedMenuView.vue?vue&type=script&lang=js\"\n\nimport \"./SharedMenuView.vue?vue&type=style&index=0&id=a1d0cc06&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a1d0cc06\"]])\n\nexport default __exports__"],"names":["SYNC_INTERVAL","CACHE_DURATION","syncIntervalId","lastSyncTimestamp","lastFetchTimestamp","businessInfoCache","isInitialized","async","syncBusinessInfoWithBackend","businessInfo","getBusinessInfo","Object","keys","length","console","log","success","message","token","localStorage","getItem","apiService","setToken","userResponse","get","user","restaurante_id","warn","restauranteId","restauranteData","nombre","name","descripcion","description","direccion","address","telefono","contact","logo","informacion_pago","JSON","stringify","paymentInfo","response","put","Date","now","eventBus","emit","timestamp","error","fetchBusinessInfoFromBackend","forceUpdate","Error","restaurante","parse","e","saveBusinessInfo","localError","checkForBusinessInfoChanges","localInfo","backendInfo","localString","backendString","hasChanges","startBusinessInfoSyncInterval","disableSync","clearInterval","catch","setInterval","stopBusinessInfoSyncInterval","runAddInformacionPagoMigration","invalidateBusinessInfoCache","key","class","src","alt","ref","_createElementBlock","id","$setup","menuId","isLoading","_hoisted_2","_cache","_createElementVNode","_hoisted_3","_toDisplayString","_hoisted_4","menuData","_hoisted_5","isValidImage","_hoisted_6","fixImageFormat","_hoisted_7","_createCommentVNode","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_createTextVNode","_hoisted_12","_hoisted_13","_hoisted_14","_Fragment","_renderList","regularItems","item","index","_hoisted_15","image","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","formatPrice","price","includesDrink","_hoisted_21","onClick","$event","addToCart","_normalizeClass","realAvailability","disabled","_hoisted_23","_hoisted_24","_hoisted_22","specialItems","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_35","_hoisted_36","_hoisted_34","_hoisted_37","cartItems","_hoisted_38","_hoisted_39","_hoisted_40","quantity","_hoisted_41","decreaseQuantity","_hoisted_42","_hoisted_43","increaseQuantity","_hoisted_44","removeFromCart","_hoisted_45","_hoisted_46","cartTotal","_hoisted_47","_hoisted_48","type","customerInfo","placeholder","_hoisted_49","phone","_hoisted_50","email","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","selectedPaymentMethod","value","_hoisted_55","_hoisted_56","_hoisted_57","additionalMessage","_hoisted_58","args","completeOrder","scrollToOrder","_hoisted_59","totalItems","hasPaymentInfo","_hoisted_60","_hoisted_61","qrImage","_hoisted_62","qrTitle","_hoisted_63","_hoisted_64","nequiNumber","nequiImage","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","bankInfo","_hoisted_69","_hoisted_70","otherPaymentMethods","_hoisted_71","_hoisted_72","_hoisted_73","_createVNode","_component_ReservaForm","toast","visible","_hoisted_1","toggleReservaForm","showReservaForm","onSubmit","_withModifiers","processReservation","for","reservationData","fullName","required","mobilePhone","landlinePhone","date","time","peopleCount","min","max","notes","rows","isProcessing","clearForm","show","setup","reactive","showToast","setTimeout","validateForm","trim","reservationObject","status","source","whatsappData","fecha","hora","personas","notas","whatsappResult","saveWhatsAppReservation","encodedMessage","encodeURIComponent","whatsappUrl","window","open","__exports__","components","ReservaForm","props","String","default","route","useRoute","computed","params","items","isProcessingOrder","lastBusinessInfoUpdate","timeoutId","onMounted","loadMenu","on","handleBusinessInfoUpdate","onUnmounted","off","clearTimeout","updatedInfo","savedCart","data","getSharedMenu","businessInfoError","forEach","availableQuantity","undefined","Number","updateAvailabilityInMenu","setItem","saveError","apiError","cachedMenu","cacheError","reduce","total","isNaN","numero","toFixed","parteEntera","parteDecimal","split","parteEnteraFormateada","replace","isAvailable","checkAvailability","existingItem","find","i","push","toString","saveCartToLocalStorage","duration","menuItem","splice","updateInventory","openWhatsAppShare","removeItem","shareOrderByWhatsApp","whatsappMessage","subtotal","formaPago","orderSection","document","querySelector","scrollIntoView","behavior","baseAvailability","cartItem","cartQuantity","currentMenu","getMenuItems","Array","isArray","itemsToProcess","updateResults","hasErrors","getSoldItems","saveSoldItems","soldItemsList","soldItemsError","currentQuantity","parseInt","soldQuantity","newQuantity","Math","updateSuccess","updateItemAvailability","oldQuantity","currentDate","toISOString","existingSoldItem","itemError","successCount","filter","r","failedItems","map","join","imageString","startsWith","includes","filtered","isSpecial","showReservationForm","isProcessingReservation","reservationSuccess","reservationError","orderDate","getCurrentDate","reservationDate","reservationTime","additionalNotes","today","year","getFullYear","month","getMonth","padStart","day","getDate","submitReservation","result","saveReservation","resetReservationForm","cancelReservation","refreshBusinessInfo","render"],"sourceRoot":""}