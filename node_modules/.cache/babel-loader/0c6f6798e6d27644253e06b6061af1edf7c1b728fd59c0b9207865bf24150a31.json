{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"menu-container\"\n};\nconst _hoisted_2 = {\n  class: \"migration-message\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading-spinner\"\n};\nconst _hoisted_4 = {\n  class: \"business-info-section\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"business-form\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"button-group\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"business-preview\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  class: \"payment-info-section\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"payment-form\"\n};\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = [\"src\"];\nconst _hoisted_14 = {\n  class: \"button-group\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"payment-preview\"\n};\nconst _hoisted_16 = {\n  class: \"payment-methods\"\n};\nconst _hoisted_17 = {\n  key: 0,\n  class: \"payment-method\"\n};\nconst _hoisted_18 = [\"src\"];\nconst _hoisted_19 = {\n  key: 1,\n  class: \"payment-method\"\n};\nconst _hoisted_20 = [\"src\"];\nconst _hoisted_21 = {\n  key: 1\n};\nconst _hoisted_22 = {\n  class: \"menu-special-section\"\n};\nconst _hoisted_23 = {\n  key: 0,\n  class: \"menu-special-form\"\n};\nconst _hoisted_24 = [\"src\"];\nconst _hoisted_25 = {\n  class: \"button-group\"\n};\nconst _hoisted_26 = {\n  type: \"submit\",\n  class: \"save-button\"\n};\nconst _hoisted_27 = {\n  class: \"menu-special-items-list\"\n};\nconst _hoisted_28 = {\n  class: \"menu-item-image-container\"\n};\nconst _hoisted_29 = [\"src\"];\nconst _hoisted_30 = {\n  key: 1,\n  class: \"no-image-placeholder\"\n};\nconst _hoisted_31 = {\n  class: \"menu-item-details\"\n};\nconst _hoisted_32 = {\n  class: \"menu-item-actions\"\n};\nconst _hoisted_33 = [\"onClick\"];\nconst _hoisted_34 = [\"onClick\"];\nconst _hoisted_35 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Notificaciones \"), $setup.notification.show ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"notification\", $setup.notification.type])\n  }, [_createTextVNode(_toDisplayString($setup.notification.message) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.notification.show = false),\n    class: \"notification-close\"\n  }, \"×\")], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Mensaje de migración de datos \"), $setup.migrationStatus.inProgress || $setup.migrationStatus.completed ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass([\"migration-status\", {\n      'completed': $setup.migrationStatus.completed\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_2, [$setup.migrationStatus.inProgress ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3)) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString($setup.migrationStatus.message), 1 /* TEXT */)])], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" SECCIÓN 1: INFORMACIÓN DEL NEGOCIO \"), _createElementVNode(\"section\", _hoisted_4, [_cache[34] || (_cache[34] = _createElementVNode(\"h2\", null, \"Información del Negocio\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.toggleBusinessForm && $setup.toggleBusinessForm(...args)),\n    class: \"toggle-button\"\n  }, _toDisplayString($setup.showBusinessForm ? 'Ocultar Formulario' : 'Mostrar Formulario'), 1 /* TEXT */), $setup.showBusinessForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers((...args) => $setup.saveBusinessInfo && $setup.saveBusinessInfo(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[25] || (_cache[25] = _createElementVNode(\"label\", {\n    for: \"business-name\"\n  }, \"Nombre del Restaurante:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"business-name\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.businessInfo.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.businessInfo.name]])]), _createElementVNode(\"div\", null, [_cache[26] || (_cache[26] = _createElementVNode(\"label\", {\n    for: \"business-description\"\n  }, \"Descripción:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"business-description\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.businessInfo.description = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.businessInfo.description]])]), _createElementVNode(\"div\", null, [_cache[27] || (_cache[27] = _createElementVNode(\"label\", {\n    for: \"business-contact\"\n  }, \"Contacto:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"business-contact\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.businessInfo.contact = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.businessInfo.contact]])]), _createElementVNode(\"div\", null, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", {\n    for: \"business-address\"\n  }, \"Dirección:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"business-address\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.businessInfo.address = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.businessInfo.address]])]), _createElementVNode(\"div\", null, [_cache[29] || (_cache[29] = _createElementVNode(\"label\", {\n    for: \"business-logo\"\n  }, \"Logo:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"business-logo\",\n    onChange: _cache[6] || (_cache[6] = (...args) => $setup.onLogoChange && $setup.onLogoChange(...args))\n  }, null, 32 /* NEED_HYDRATION */), $setup.businessInfo.logo ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $setup.businessInfo.logo,\n    alt: \"Logo\",\n    style: {\n      \"max-width\": \"100px\",\n      \"margin-top\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_6)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_cache[30] || (_cache[30] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"save-button\"\n  }, \"Guardar\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $setup.clearBusinessForm && $setup.clearBusinessForm(...args)),\n    class: \"clear-button\"\n  }, \"Limpiar\")])], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true), $setup.businessInfo.name ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[33] || (_cache[33] = _createElementVNode(\"h3\", null, \"Información Guardada\", -1 /* HOISTED */)), $setup.businessInfo.logo ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $setup.businessInfo.logo,\n    alt: \"Logo\",\n    style: {\n      \"max-width\": \"100px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_9)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"h4\", null, _toDisplayString($setup.businessInfo.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.businessInfo.description), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[31] || (_cache[31] = _createElementVNode(\"strong\", null, \"Contacto:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.businessInfo.contact), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[32] || (_cache[32] = _createElementVNode(\"strong\", null, \"Dirección:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.businessInfo.address), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" NUEVA SECCIÓN: FORMA DE PAGO \"), _createElementVNode(\"section\", _hoisted_10, [_cache[43] || (_cache[43] = _createElementVNode(\"h2\", null, \"Forma de Pago\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $setup.togglePaymentForm && $setup.togglePaymentForm(...args)),\n    class: \"toggle-button\"\n  }, _toDisplayString($setup.showPaymentForm ? 'Ocultar Formulario' : 'Mostrar Formulario'), 1 /* TEXT */), $setup.showPaymentForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"form\", {\n    onSubmit: _cache[15] || (_cache[15] = _withModifiers((...args) => $setup.savePaymentInfo && $setup.savePaymentInfo(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[35] || (_cache[35] = _createElementVNode(\"label\", {\n    for: \"qr-title\"\n  }, \"Título del código QR:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"qr-title\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.paymentInfo.qrTitle = $event),\n    placeholder: \"Ej: Escanea para pagar\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.paymentInfo.qrTitle]])]), _createElementVNode(\"div\", null, [_cache[36] || (_cache[36] = _createElementVNode(\"label\", {\n    for: \"qr-image\"\n  }, \"Imagen QR de Pago:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"qr-image\",\n    onChange: _cache[11] || (_cache[11] = (...args) => $setup.onQRImageChange && $setup.onQRImageChange(...args))\n  }, null, 32 /* NEED_HYDRATION */), $setup.paymentInfo.qrImage ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $setup.paymentInfo.qrImage,\n    alt: \"QR de Pago\",\n    style: {\n      \"max-width\": \"200px\",\n      \"max-height\": \"200px\",\n      \"margin-top\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_12)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_cache[37] || (_cache[37] = _createElementVNode(\"label\", {\n    for: \"nequi-number\"\n  }, \"Número de Nequi:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"nequi-number\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.paymentInfo.nequiNumber = $event),\n    placeholder: \"Ej: 300 123 4567\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.paymentInfo.nequiNumber]])]), _createElementVNode(\"div\", null, [_cache[38] || (_cache[38] = _createElementVNode(\"label\", {\n    for: \"nequi-image\"\n  }, \"Imagen Nequi:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"nequi-image\",\n    onChange: _cache[13] || (_cache[13] = (...args) => $setup.onNequiImageChange && $setup.onNequiImageChange(...args))\n  }, null, 32 /* NEED_HYDRATION */), $setup.paymentInfo.nequiImage ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $setup.paymentInfo.nequiImage,\n    alt: \"Imagen Nequi\",\n    style: {\n      \"max-width\": \"200px\",\n      \"max-height\": \"200px\",\n      \"margin-top\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_13)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_14, [_cache[39] || (_cache[39] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"save-button\"\n  }, \"Guardar\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[14] || (_cache[14] = (...args) => $setup.clearPaymentForm && $setup.clearPaymentForm(...args)),\n    class: \"clear-button\"\n  }, \"Limpiar\")])], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true), $setup.paymentInfo.qrImage || $setup.paymentInfo.nequiNumber ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_cache[42] || (_cache[42] = _createElementVNode(\"h3\", null, \"Información de Pago\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_16, [$setup.paymentInfo.qrImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"h4\", null, _toDisplayString($setup.paymentInfo.qrTitle || 'Código QR de Pago'), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $setup.paymentInfo.qrImage,\n    alt: \"QR de Pago\",\n    style: {\n      \"width\": \"200px\",\n      \"height\": \"200px\",\n      \"object-fit\": \"contain\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_18)])) : _createCommentVNode(\"v-if\", true), $setup.paymentInfo.nequiNumber || $setup.paymentInfo.nequiImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_cache[41] || (_cache[41] = _createElementVNode(\"h4\", null, \"Pago con Nequi\", -1 /* HOISTED */)), $setup.paymentInfo.nequiImage ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $setup.paymentInfo.nequiImage,\n    alt: \"Nequi\",\n    style: {\n      \"width\": \"200px\",\n      \"height\": \"200px\",\n      \"object-fit\": \"contain\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_20)) : _createCommentVNode(\"v-if\", true), $setup.paymentInfo.nequiNumber ? (_openBlock(), _createElementBlock(\"p\", _hoisted_21, [_cache[40] || (_cache[40] = _createElementVNode(\"strong\", null, \"Número:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.paymentInfo.nequiNumber), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" SECCIÓN 2: MENÚ ESPECIAL \"), _createElementVNode(\"section\", _hoisted_22, [_cache[54] || (_cache[54] = _createElementVNode(\"h2\", null, \"Menú Especial\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[16] || (_cache[16] = (...args) => $setup.toggleSpecialMenuForm && $setup.toggleSpecialMenuForm(...args)),\n    class: \"toggle-button\"\n  }, _toDisplayString($setup.showSpecialMenuForm ? 'Ocultar Formulario' : 'Mostrar Formulario'), 1 /* TEXT */), _createCommentVNode(\" Formulario para agregar/editar platos especiales \"), $setup.showSpecialMenuForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createElementVNode(\"form\", {\n    onSubmit: _cache[24] || (_cache[24] = _withModifiers((...args) => $setup.saveSpecialMenuItem && $setup.saveSpecialMenuItem(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[44] || (_cache[44] = _createElementVNode(\"label\", {\n    for: \"special-item-name\"\n  }, \"Nombre del plato especial:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"special-item-name\",\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $setup.newSpecialItem.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newSpecialItem.name]])]), _createElementVNode(\"div\", null, [_cache[45] || (_cache[45] = _createElementVNode(\"label\", {\n    for: \"special-item-description\"\n  }, \"Descripción del plato especial:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"special-item-description\",\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $setup.newSpecialItem.description = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newSpecialItem.description]])]), _createElementVNode(\"div\", null, [_cache[46] || (_cache[46] = _createElementVNode(\"label\", {\n    for: \"special-item-price\"\n  }, \"Precio:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"special-item-price\",\n    \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => $setup.newSpecialItem.price = $event),\n    min: \"0\",\n    step: \"0.01\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newSpecialItem.price, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_cache[48] || (_cache[48] = _createElementVNode(\"label\", {\n    for: \"special-item-drinks\"\n  }, \"Incluye refresco:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"special-item-drinks\",\n    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $setup.newSpecialItem.includesDrink = $event)\n  }, _cache[47] || (_cache[47] = [_createElementVNode(\"option\", {\n    value: true\n  }, \"Sí\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: false\n  }, \"No\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.newSpecialItem.includesDrink]])]), _createElementVNode(\"div\", null, [_cache[49] || (_cache[49] = _createElementVNode(\"label\", {\n    for: \"special-item-quantity\"\n  }, \"Cantidad disponible:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"special-item-quantity\",\n    \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => $setup.newSpecialItem.availableQuantity = $event),\n    min: \"0\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newSpecialItem.availableQuantity, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_cache[50] || (_cache[50] = _createElementVNode(\"label\", {\n    for: \"special-item-image\"\n  }, \"Imagen del plato especial:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"special-item-image\",\n    onChange: _cache[22] || (_cache[22] = (...args) => $setup.onSpecialImageChange && $setup.onSpecialImageChange(...args))\n  }, null, 32 /* NEED_HYDRATION */), $setup.newSpecialItem.image ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $setup.newSpecialItem.image,\n    alt: \"Imagen del plato especial\",\n    style: {\n      \"max-width\": \"100px\",\n      \"margin-top\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_24)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"button\", _hoisted_26, _toDisplayString(_ctx.isSpecialEditing ? 'Actualizar' : 'Crear'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[23] || (_cache[23] = (...args) => $setup.clearSpecialMenuForm && $setup.clearSpecialMenuForm(...args)),\n    class: \"clear-button\"\n  }, \"Cancelar\")])], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Lista de platos especiales \"), _createElementVNode(\"div\", _hoisted_27, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.specialMenuItems, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"menu-item-card\"\n    }, [_createElementVNode(\"div\", _hoisted_28, [item.image ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: item.image,\n      alt: \"Plato especial\",\n      class: \"menu-item-image\"\n    }, null, 8 /* PROPS */, _hoisted_29)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_30, \"Sin imagen\"))]), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"h3\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(item.description), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[51] || (_cache[51] = _createElementVNode(\"strong\", null, \"Precio:\", -1 /* HOISTED */)), _createTextVNode(\" $\" + _toDisplayString(item.price), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[52] || (_cache[52] = _createElementVNode(\"strong\", null, \"Incluye refresco:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(item.includesDrink ? 'Sí' : 'No'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[53] || (_cache[53] = _createElementVNode(\"strong\", null, \"Disponibles:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(item.availableQuantity), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.editSpecialMenuItem(index),\n      class: \"edit-button\"\n    }, \"Editar\", 8 /* PROPS */, _hoisted_33), _createElementVNode(\"button\", {\n      onClick: $event => $setup.sellSpecialMenuItem(index),\n      class: \"sell-button\"\n    }, \"Vender\", 8 /* PROPS */, _hoisted_34), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteSpecialMenuItem(index),\n      class: \"delete-button\"\n    }, \"Eliminar\", 8 /* PROPS */, _hoisted_35)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","key","type","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","notification","show","_normalizeClass","_createTextVNode","_toDisplayString","message","_createElementVNode","onClick","_cache","$event","migrationStatus","inProgress","completed","_hoisted_2","_hoisted_3","_hoisted_4","args","toggleBusinessForm","showBusinessForm","_hoisted_5","onSubmit","_withModifiers","saveBusinessInfo","for","id","businessInfo","name","required","description","contact","address","onChange","onLogoChange","logo","src","alt","style","_hoisted_6","_hoisted_7","clearBusinessForm","_hoisted_8","_hoisted_9","_hoisted_10","togglePaymentForm","showPaymentForm","_hoisted_11","savePaymentInfo","paymentInfo","qrTitle","placeholder","onQRImageChange","qrImage","_hoisted_12","nequiNumber","onNequiImageChange","nequiImage","_hoisted_13","_hoisted_14","clearPaymentForm","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","toggleSpecialMenuForm","showSpecialMenuForm","_hoisted_23","saveSpecialMenuItem","newSpecialItem","price","min","step","number","includesDrink","value","availableQuantity","onSpecialImageChange","image","_hoisted_24","_hoisted_25","_hoisted_26","_ctx","isSpecialEditing","clearSpecialMenuForm","_hoisted_27","_Fragment","_renderList","specialMenuItems","item","index","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","editSpecialMenuItem","_hoisted_33","sellSpecialMenuItem","_hoisted_34","deleteSpecialMenuItem","_hoisted_35"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\MenuComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"menu-container\">\r\n    <!-- Notificaciones -->\r\n    <div \r\n      v-if=\"notification.show\" \r\n      class=\"notification\" \r\n      :class=\"notification.type\"\r\n    >\r\n      {{ notification.message }}\r\n      <button @click=\"notification.show = false\" class=\"notification-close\">&times;</button>\r\n    </div>\r\n\r\n    <!-- Mensaje de migración de datos -->\r\n    <div v-if=\"migrationStatus.inProgress || migrationStatus.completed\" class=\"migration-status\" :class=\"{ 'completed': migrationStatus.completed }\">\r\n      <div class=\"migration-message\">\r\n        <span v-if=\"migrationStatus.inProgress\" class=\"loading-spinner\"></span>\r\n        {{ migrationStatus.message }}\r\n      </div>\r\n    </div>\r\n  \r\n    <!-- SECCIÓN 1: INFORMACIÓN DEL NEGOCIO -->\r\n    <section class=\"business-info-section\">\r\n      <h2>Información del Negocio</h2>\r\n      <button @click=\"toggleBusinessForm\" class=\"toggle-button\">\r\n        {{ showBusinessForm ? 'Ocultar Formulario' : 'Mostrar Formulario' }}\r\n      </button>\r\n\r\n      <div v-if=\"showBusinessForm\" class=\"business-form\">\r\n        <form @submit.prevent=\"saveBusinessInfo\">\r\n          <div>\r\n            <label for=\"business-name\">Nombre del Restaurante:</label>\r\n            <input type=\"text\" id=\"business-name\" v-model=\"businessInfo.name\" required>\r\n          </div>\r\n          <div>\r\n            <label for=\"business-description\">Descripción:</label>\r\n            <textarea id=\"business-description\" v-model=\"businessInfo.description\"></textarea>\r\n          </div>\r\n          <div>\r\n            <label for=\"business-contact\">Contacto:</label>\r\n            <input type=\"text\" id=\"business-contact\" v-model=\"businessInfo.contact\">\r\n          </div>\r\n          <div>\r\n            <label for=\"business-address\">Dirección:</label>\r\n            <input type=\"text\" id=\"business-address\" v-model=\"businessInfo.address\">\r\n          </div>\r\n          <div>\r\n            <label for=\"business-logo\">Logo:</label>\r\n            <input type=\"file\" id=\"business-logo\" @change=\"onLogoChange\">\r\n            <img v-if=\"businessInfo.logo\" :src=\"businessInfo.logo\" alt=\"Logo\" style=\"max-width: 100px; margin-top: 10px;\">\r\n          </div>\r\n          <div class=\"button-group\">\r\n            <button type=\"submit\" class=\"save-button\">Guardar</button>\r\n            <button type=\"button\" @click=\"clearBusinessForm\" class=\"clear-button\">Limpiar</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div v-if=\"businessInfo.name\" class=\"business-preview\">\r\n        <h3>Información Guardada</h3>\r\n        <img v-if=\"businessInfo.logo\" :src=\"businessInfo.logo\" alt=\"Logo\" style=\"max-width: 100px;\">\r\n        <h4>{{ businessInfo.name }}</h4>\r\n        <p>{{ businessInfo.description }}</p>\r\n        <p><strong>Contacto:</strong> {{ businessInfo.contact }}</p>\r\n        <p><strong>Dirección:</strong> {{ businessInfo.address }}</p>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- NUEVA SECCIÓN: FORMA DE PAGO -->\r\n    <section class=\"payment-info-section\">\r\n      <h2>Forma de Pago</h2>\r\n      <button @click=\"togglePaymentForm\" class=\"toggle-button\">\r\n        {{ showPaymentForm ? 'Ocultar Formulario' : 'Mostrar Formulario' }}\r\n      </button>\r\n\r\n      <div v-if=\"showPaymentForm\" class=\"payment-form\">\r\n        <form @submit.prevent=\"savePaymentInfo\">\r\n          <div>\r\n            <label for=\"qr-title\">Título del código QR:</label>\r\n            <input type=\"text\" id=\"qr-title\" v-model=\"paymentInfo.qrTitle\" placeholder=\"Ej: Escanea para pagar\">\r\n          </div>\r\n          <div>\r\n            <label for=\"qr-image\">Imagen QR de Pago:</label>\r\n            <input type=\"file\" id=\"qr-image\" @change=\"onQRImageChange\">\r\n            <img v-if=\"paymentInfo.qrImage\" :src=\"paymentInfo.qrImage\" alt=\"QR de Pago\" style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\">\r\n          </div>\r\n          <div>\r\n            <label for=\"nequi-number\">Número de Nequi:</label>\r\n            <input type=\"text\" id=\"nequi-number\" v-model=\"paymentInfo.nequiNumber\" placeholder=\"Ej: 300 123 4567\">\r\n          </div>\r\n          <div>\r\n            <label for=\"nequi-image\">Imagen Nequi:</label>\r\n            <input type=\"file\" id=\"nequi-image\" @change=\"onNequiImageChange\">\r\n            <img v-if=\"paymentInfo.nequiImage\" :src=\"paymentInfo.nequiImage\" alt=\"Imagen Nequi\" style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\">\r\n          </div>\r\n          <div class=\"button-group\">\r\n            <button type=\"submit\" class=\"save-button\">Guardar</button>\r\n            <button type=\"button\" @click=\"clearPaymentForm\" class=\"clear-button\">Limpiar</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div v-if=\"paymentInfo.qrImage || paymentInfo.nequiNumber\" class=\"payment-preview\">\r\n        <h3>Información de Pago</h3>\r\n        <div class=\"payment-methods\">\r\n          <div v-if=\"paymentInfo.qrImage\" class=\"payment-method\">\r\n            <h4>{{ paymentInfo.qrTitle || 'Código QR de Pago' }}</h4>\r\n            <img :src=\"paymentInfo.qrImage\" alt=\"QR de Pago\" style=\"width: 200px; height: 200px; object-fit: contain;\">\r\n          </div>\r\n          \r\n          <div v-if=\"paymentInfo.nequiNumber || paymentInfo.nequiImage\" class=\"payment-method\">\r\n            <h4>Pago con Nequi</h4>\r\n            <img v-if=\"paymentInfo.nequiImage\" :src=\"paymentInfo.nequiImage\" alt=\"Nequi\" style=\"width: 200px; height: 200px; object-fit: contain;\">\r\n            <p v-if=\"paymentInfo.nequiNumber\"><strong>Número:</strong> {{ paymentInfo.nequiNumber }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- SECCIÓN 2: MENÚ ESPECIAL -->\r\n    <section class=\"menu-special-section\">\r\n      <h2>Menú Especial</h2>\r\n      <button @click=\"toggleSpecialMenuForm\" class=\"toggle-button\">\r\n        {{ showSpecialMenuForm ? 'Ocultar Formulario' : 'Mostrar Formulario' }}\r\n      </button>\r\n\r\n      <!-- Formulario para agregar/editar platos especiales -->\r\n      <div v-if=\"showSpecialMenuForm\" class=\"menu-special-form\">\r\n        <form @submit.prevent=\"saveSpecialMenuItem\">\r\n          <div>\r\n            <label for=\"special-item-name\">Nombre del plato especial:</label>\r\n            <input type=\"text\" id=\"special-item-name\" v-model=\"newSpecialItem.name\" required>\r\n          </div>\r\n          <div>\r\n            <label for=\"special-item-description\">Descripción del plato especial:</label>\r\n            <textarea id=\"special-item-description\" v-model=\"newSpecialItem.description\"></textarea>\r\n          </div>\r\n          <div>\r\n            <label for=\"special-item-price\">Precio:</label>\r\n            <input type=\"number\" id=\"special-item-price\" v-model.number=\"newSpecialItem.price\" min=\"0\" step=\"0.01\" required>\r\n          </div>\r\n          <div>\r\n            <label for=\"special-item-drinks\">Incluye refresco:</label>\r\n            <select id=\"special-item-drinks\" v-model=\"newSpecialItem.includesDrink\">\r\n              <option :value=\"true\">Sí</option>\r\n              <option :value=\"false\">No</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label for=\"special-item-quantity\">Cantidad disponible:</label>\r\n            <input type=\"number\" id=\"special-item-quantity\" v-model.number=\"newSpecialItem.availableQuantity\" min=\"0\" required>\r\n          </div>\r\n          <div>\r\n            <label for=\"special-item-image\">Imagen del plato especial:</label>\r\n            <input type=\"file\" id=\"special-item-image\" @change=\"onSpecialImageChange\">\r\n            <img v-if=\"newSpecialItem.image\" :src=\"newSpecialItem.image\" alt=\"Imagen del plato especial\" style=\"max-width: 100px; margin-top: 10px;\">\r\n          </div>\r\n          <div class=\"button-group\">\r\n            <button type=\"submit\" class=\"save-button\">{{ isSpecialEditing ? 'Actualizar' : 'Crear' }}</button>\r\n            <button type=\"button\" @click=\"clearSpecialMenuForm\" class=\"clear-button\">Cancelar</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Lista de platos especiales -->\r\n      <div class=\"menu-special-items-list\">\r\n        <div v-for=\"(item, index) in specialMenuItems\" :key=\"index\" class=\"menu-item-card\">\r\n          <div class=\"menu-item-image-container\">\r\n            <img v-if=\"item.image\" :src=\"item.image\" alt=\"Plato especial\" class=\"menu-item-image\">\r\n            <div v-else class=\"no-image-placeholder\">Sin imagen</div>\r\n          </div>\r\n          <div class=\"menu-item-details\">\r\n            <h3>{{ item.name }}</h3>\r\n            <p>{{ item.description }}</p>\r\n            <p><strong>Precio:</strong> ${{ item.price }}</p>\r\n            <p><strong>Incluye refresco:</strong> {{ item.includesDrink ? 'Sí' : 'No' }}</p>\r\n            <p><strong>Disponibles:</strong> {{ item.availableQuantity }}</p>\r\n          </div>\r\n          <div class=\"menu-item-actions\">\r\n            <button @click=\"editSpecialMenuItem(index)\" class=\"edit-button\">Editar</button>\r\n            <button @click=\"sellSpecialMenuItem(index)\" class=\"sell-button\">Vender</button>\r\n            <button @click=\"deleteSpecialMenuItem(index)\" class=\"delete-button\">Eliminar</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { saveMenu } from '../services/menuService';\r\nimport { formatShareLinkMessage } from '../utils/messageFormatter';\r\nimport SalesChartComponent from './SalesChartComponent.vue';\r\nimport { saveAs } from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { \r\n  getMenuItems, \r\n  saveMenuItems, \r\n  getBusinessInfo, \r\n  saveBusinessInfo as saveBusinessInfoToDB, // Renombrar función importada para evitar colisión\r\n  getSoldItems, \r\n  saveSoldItems,\r\n  deleteMenuItemFromDB,\r\n  migrateFromLocalStorage,\r\n  compressImage\r\n} from '../services/storageService';\r\nimport { confirm, alert } from '../services/dialogService'; // Modificado: importar también alert\r\n\r\nexport default {\r\n  name: 'MenuComponent',\r\n  components: {\r\n    SalesChartComponent\r\n  },\r\n  setup() {\r\n    // Estado para información del negocio\r\n    const businessInfo = ref({\r\n      name: '',\r\n      description: '',\r\n      contact: '',\r\n      address: '',\r\n      logo: ''\r\n    });\r\n    const showBusinessForm = ref(false);\r\n\r\n    // Estado para información de pago\r\n    const paymentInfo = ref({\r\n      qrTitle: '',\r\n      qrImage: '',\r\n      nequiNumber: '',\r\n      nequiImage: ''\r\n    });\r\n    const showPaymentForm = ref(false);\r\n\r\n    // Estado para platos del menú\r\n    const newItem = ref({\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      includesDrink: false,\r\n      availableQuantity: 0,\r\n      image: '',\r\n      id: null\r\n    });\r\n    const menuItems = ref([]);\r\n    const showMenuForm = ref(false);\r\n    const isEditing = ref(false);\r\n    const editingIndex = ref(-1);\r\n\r\n    // Estado para platos del menú especial\r\n    const newSpecialItem = ref({\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      includesDrink: false,\r\n      availableQuantity: 0,\r\n      image: '',\r\n      id: null\r\n    });\r\n    const specialMenuItems = ref([]);\r\n    const showSpecialMenuForm = ref(false);\r\n    const isSpecialEditing = ref(false);\r\n    const editingSpecialIndex = ref(-1);\r\n\r\n    // Estado para ventas e inventario\r\n    const soldItems = ref([]);\r\n    const searchTerm = ref('');\r\n    const sortBy = ref('');\r\n    const categoryFilter = ref('');\r\n    const selectedChartType = ref('bar');\r\n\r\n    // Estado para compartir\r\n    const shareLink = ref('');\r\n    const showCopiedMessage = ref(false);\r\n    \r\n    // Estado para mostrar progreso de migración\r\n    const migrationStatus = ref({\r\n      inProgress: false,\r\n      completed: false,\r\n      message: ''\r\n    });\r\n\r\n    // Estado para errores del gráfico\r\n    const chartError = ref(null);\r\n    \r\n    // Manejar errores del gráfico\r\n    const handleChartError = (error) => {\r\n      console.error(\"Error en el gráfico:\", error);\r\n      chartError.value = error;\r\n    };\r\n\r\n    // Estado para mensajes de notificación\r\n    const notification = ref({\r\n      show: false,\r\n      message: '',\r\n      type: 'success', // 'success', 'error'\r\n      timeout: null\r\n    });\r\n\r\n    // Cargar datos guardados\r\n    onMounted(async () => {\r\n      try {\r\n        // Mostrar estado de carga\r\n        migrationStatus.value.inProgress = true;\r\n        migrationStatus.value.message = 'Cargando datos...';\r\n        \r\n        // Primero intentar migrar desde localStorage si existen datos\r\n        const hasLocalData = localStorage.getItem('businessInfo') || \r\n                         localStorage.getItem('menuItems') ||\r\n                         localStorage.getItem('soldItems');\r\n          \r\n        if (hasLocalData) {\r\n          migrationStatus.value.message = 'Migrando datos desde localStorage a IndexedDB...';\r\n          \r\n          const migrationResult = await migrateFromLocalStorage();\r\n          \r\n          if (migrationResult) {\r\n            migrationStatus.value.completed = true;\r\n            migrationStatus.value.message = 'Migración completada exitosamente';\r\n            \r\n            // Limpiar localStorage después de migrar exitosamente\r\n            localStorage.removeItem('businessInfo');\r\n            localStorage.removeItem('menuItems');\r\n            localStorage.removeItem('soldItems');\r\n          } else {\r\n            migrationStatus.value.message = 'Error en la migración de datos';\r\n          }\r\n        }\r\n\r\n        // Cargar datos desde IndexedDB (siempre, independientemente de si hubo migración)\r\n        const dbBusinessInfo = await getBusinessInfo();\r\n        if (dbBusinessInfo && dbBusinessInfo.name) {\r\n          businessInfo.value = dbBusinessInfo;\r\n          \r\n          // Asignar información de pago si existe\r\n          if (dbBusinessInfo.paymentInfo) {\r\n            paymentInfo.value = dbBusinessInfo.paymentInfo;\r\n          }\r\n        }\r\n\r\n        // Cargar menú desde IndexedDB\r\n        const dbMenuItems = await getMenuItems();\r\n        if (dbMenuItems && dbMenuItems.length > 0) {\r\n          // Asegurarse de eliminar duplicados usando IDs únicos\r\n          const uniqueItems = removeDuplicates(dbMenuItems);\r\n          menuItems.value = uniqueItems;\r\n          \r\n          // Si hubo diferencias, guardar la lista corregida de vuelta en IndexedDB\r\n          if (uniqueItems.length < dbMenuItems.length) {\r\n            console.log(`Se eliminaron ${dbMenuItems.length - uniqueItems.length} elementos duplicados del menú`);\r\n            await saveMenuItems(uniqueItems);\r\n          }\r\n        }\r\n\r\n        // Cargar ventas desde IndexedDB y asegurar que tengan fecha\r\n        const dbSoldItems = await getSoldItems();\r\n        if (dbSoldItems && dbSoldItems.length > 0) {\r\n          // Asegurarse que todos los items tienen fecha\r\n          const currentDate = new Date().toISOString();\r\n          const updatedSoldItems = dbSoldItems.map(item => {\r\n            if (!item.date) {\r\n              return {\r\n                ...item,\r\n                date: currentDate\r\n              };\r\n            }\r\n            return item;\r\n          });\r\n          \r\n          // Si se actualizó algún item, guardar cambios\r\n          if (dbSoldItems.some(item => !item.date)) {\r\n            await saveSoldItems(updatedSoldItems);\r\n          }\r\n          \r\n          soldItems.value = updatedSoldItems;\r\n        }\r\n        \r\n        // Finalizar estado de carga\r\n        setTimeout(() => {\r\n          migrationStatus.value.inProgress = false;\r\n        }, 1500);\r\n      } catch (error) {\r\n        console.error('Error al cargar datos:', error);\r\n        migrationStatus.value.message = 'Error al cargar datos: ' + error.message;\r\n        setTimeout(() => {\r\n          migrationStatus.value.inProgress = false;\r\n        }, 3000);\r\n      }\r\n    });\r\n\r\n    // Función para eliminar duplicados basados en ID\r\n    const removeDuplicates = (items) => {\r\n      const seen = new Map();\r\n      return items.filter(item => {\r\n        // Si el elemento no tiene ID, generamos uno\r\n        if (!item.id) {\r\n          item.id = Date.now() + Math.random().toString(36).substring(2, 10);\r\n        }\r\n        \r\n        // Si ya hemos visto este ID, es un duplicado\r\n        if (seen.has(item.id)) {\r\n          return false;\r\n        }\r\n        \r\n        // De lo contrario, marcamos como visto y lo conservamos\r\n        seen.set(item.id, true);\r\n        return true;\r\n      });\r\n    };\r\n\r\n    // Métodos para información del negocio\r\n    const toggleBusinessForm = () => {\r\n      showBusinessForm.value = !showBusinessForm.value;\r\n    };\r\n\r\n    const onLogoChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          // Comprimir la imagen antes de guardarla\r\n          const compressedLogo = await compressImage(e.target.result);\r\n          businessInfo.value.logo = compressedLogo;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const saveBusinessInfo = async () => {\r\n      try {\r\n        // Limpiar cualquier timeout anterior\r\n        if (notification.value.timeout) {\r\n          clearTimeout(notification.value.timeout);\r\n        }\r\n        \r\n        // Actualizar la información de pago dentro de businessInfo directamente\r\n        // sin guardar dos veces\r\n        await saveBusinessInfoToDB(businessInfo.value);\r\n        \r\n        // Mostrar notificación de éxito\r\n        notification.value = {\r\n          show: true,\r\n          message: 'Información del negocio guardada con éxito!',\r\n          type: 'success',\r\n          timeout: setTimeout(() => {\r\n            notification.value.show = false;\r\n          }, 3000) // Desaparece después de 3 segundos\r\n        };\r\n      } catch (error) {\r\n        console.error('Error al guardar información del negocio:', error);\r\n        \r\n        // Mostrar notificación de error\r\n        notification.value = {\r\n          show: true,\r\n          message: 'Error al guardar la información. Por favor, intenta nuevamente.',\r\n          type: 'error',\r\n          timeout: setTimeout(() => {\r\n            notification.value.show = false;\r\n          }, 3000) // Desaparece después de 3 segundos\r\n        };\r\n      }\r\n    };\r\n\r\n    const clearBusinessForm = async () => {\r\n      // Reemplazar window.confirm con nuestro servicio de diálogo\r\n      const confirmed = await confirm('¿Estás seguro de querer limpiar el formulario?');\r\n      if (confirmed) {\r\n        businessInfo.value = {\r\n          name: '',\r\n          description: '',\r\n          contact: '',\r\n          address: '',\r\n          logo: ''\r\n        };\r\n      }\r\n    };\r\n\r\n    // Métodos para información de pago\r\n    const togglePaymentForm = () => {\r\n      showPaymentForm.value = !showPaymentForm.value;\r\n    };\r\n\r\n    const onQRImageChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          // Comprimir la imagen antes de guardarla\r\n          const compressedImage = await compressImage(e.target.result);\r\n          paymentInfo.value.qrImage = compressedImage;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const onNequiImageChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          // Comprimir la imagen antes de guardarla\r\n          const compressedImage = await compressImage(e.target.result);\r\n          paymentInfo.value.nequiImage = compressedImage;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const savePaymentInfo = async () => {\r\n      try {\r\n        // Limpiar cualquier timeout anterior\r\n        if (notification.value.timeout) {\r\n          clearTimeout(notification.value.timeout);\r\n        }\r\n        \r\n        // Actualizar la información de pago dentro de businessInfo\r\n        businessInfo.value.paymentInfo = { ...paymentInfo.value };\r\n        \r\n        // Guardar en IndexedDB con una sola llamada\r\n        await saveBusinessInfoToDB(businessInfo.value);\r\n        \r\n        // Mostrar notificación de éxito\r\n        notification.value = {\r\n          show: true,\r\n          message: 'Información de pago guardada con éxito!',\r\n          type: 'success',\r\n          timeout: setTimeout(() => {\r\n            notification.value.show = false;\r\n          }, 3000) // Desaparece después de 3 segundos\r\n        };\r\n      } catch (error) {\r\n        console.error('Error al guardar información de pago:', error);\r\n        \r\n        // Mostrar notificación de error\r\n        notification.value = {\r\n          show: true,\r\n          message: 'Error al guardar la información de pago. Por favor, intenta nuevamente.',\r\n          type: 'error',\r\n          timeout: setTimeout(() => {\r\n            notification.value.show = false;\r\n          }, 3000) // Desaparece después de 3 segundos\r\n        };\r\n      }\r\n    };\r\n\r\n    const clearPaymentForm = async () => {\r\n      const confirmed = await confirm('¿Estás seguro de querer limpiar la información de pago?');\r\n      if (confirmed) {\r\n        paymentInfo.value = {\r\n          qrTitle: '',\r\n          qrImage: '',\r\n          nequiNumber: '',\r\n          nequiImage: ''\r\n        };\r\n      }\r\n    };\r\n\r\n    // Métodos para platos del menú\r\n    const toggleMenuForm = () => {\r\n      showMenuForm.value = !showMenuForm.value;\r\n      if (!showMenuForm.value) {\r\n        clearMenuForm();\r\n      }\r\n    };\r\n\r\n    const onImageChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          // Comprimir la imagen antes de guardarla\r\n          const compressedImage = await compressImage(e.target.result);\r\n          newItem.value.image = compressedImage;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const saveMenuItem = async () => {\r\n      try {\r\n        if (!newItem.value.id) {\r\n          newItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\r\n        }\r\n        \r\n        if (isEditing.value) {\r\n          // Actualizar plato existente\r\n          const index = menuItems.value.findIndex(item => item.id === newItem.value.id);\r\n          if (index !== -1) {\r\n            menuItems.value[index] = { ...newItem.value };\r\n          }\r\n          isEditing.value = false;\r\n          editingIndex.value = -1;\r\n          await alert('Plato actualizado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\r\n        } else {\r\n          // Verificar si ya existe un plato con el mismo nombre\r\n          const existingItem = menuItems.value.find(item => \r\n            item.name.toLowerCase() === newItem.value.name.toLowerCase()\r\n          );\r\n          \r\n          if (existingItem) {\r\n            // Reemplazar window.confirm con nuestro servicio de diálogo\r\n            const confirmed = await confirm(\r\n              `Ya existe un plato llamado \"${newItem.value.name}\". ¿Desea actualizarlo?`,\r\n              { title: 'Actualizar plato existente' }\r\n            );\r\n            \r\n            if (confirmed) {\r\n              // Actualizar el plato existente pero conservar su ID\r\n              const index = menuItems.value.findIndex(item => item.id === existingItem.id);\r\n              if (index !== -1) {\r\n                newItem.value.id = existingItem.id; // Mantener el ID original\r\n                menuItems.value[index] = { ...newItem.value };\r\n                await alert('Plato actualizado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\r\n              }\r\n            } else {\r\n              // Usuario decidió no sobrescribir, no hacemos nada\r\n              return;\r\n            }\r\n          } else {\r\n            // Crear nuevo plato\r\n            menuItems.value.push({ ...newItem.value });\r\n            await alert('Plato creado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\r\n          }\r\n        }\r\n        \r\n        // Guardar en IndexedDB\r\n        await saveMenuItems(menuItems.value);\r\n        \r\n        // Limpiar formulario\r\n        clearMenuForm();\r\n      } catch (error) {\r\n        console.error('Error al guardar el plato:', error);\r\n        await alert('Error al guardar el plato. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\r\n      }\r\n    };\r\n\r\n    const editMenuItem = (index) => {\r\n      newItem.value = { ...menuItems.value[index] };\r\n      isEditing.value = true;\r\n      editingIndex.value = index;\r\n      showMenuForm.value = true;\r\n    };\r\n\r\n    const deleteMenuItem = async (index) => {\r\n      // Reemplazar window.confirm con nuestro servicio de diálogo\r\n      const confirmed = await confirm('¿Estás seguro de querer eliminar este plato?', {\r\n        title: 'Eliminar plato',\r\n        confirmText: 'Eliminar',\r\n        cancelText: 'Cancelar'\r\n      });\r\n      \r\n      if (confirmed) {\r\n        try {\r\n          // Verificar que el índice es válido\r\n          if (index < 0 || index >= menuItems.value.length) {\r\n            console.error('Error: Índice fuera de rango', index);\r\n            await alert('Error: No se encontró el elemento a eliminar');\r\n            return;\r\n          }\r\n          \r\n          const item = menuItems.value[index];\r\n          console.log(`Eliminando plato: índice=${index}, nombre=${item.name}, id=${item.id}`);\r\n          \r\n          // Verificar que el ítem existe\r\n          if (!item) {\r\n            console.error('Error: Elemento del menú no encontrado en el índice', index);\r\n            await alert('Error: No se encontró el elemento a eliminar');\r\n            return;\r\n          }\r\n          \r\n          // Asegurarnos que item.name existe antes de buscar\r\n          const itemName = item.name || 'Producto sin nombre';\r\n          const currentDate = new Date().toISOString();\r\n          \r\n          // Agregar a vendidos antes de eliminar (simulación)\r\n          // Verificar primero que soldItems.value es un array\r\n          if (!Array.isArray(soldItems.value)) {\r\n            console.warn('soldItems.value no es un array, inicializando como array vacío');\r\n            soldItems.value = [];\r\n          }\r\n          \r\n          // Buscar de manera segura\r\n          const soldItem = soldItems.value.find(sold => \r\n            sold && typeof sold === 'object' && sold.name === itemName\r\n          );\r\n          \r\n          if (soldItem) {\r\n            // Si existe, aumentar la cantidad\r\n            soldItem.quantity += 1;\r\n            // Actualizar fecha\r\n            if (!soldItem.date || new Date(currentDate) > new Date(soldItem.date)) {\r\n              soldItem.date = currentDate;\r\n            }\r\n          } else {\r\n            // Crear un objeto limpio y serializable para el item vendido\r\n            const newSoldItem = {\r\n              name: itemName,\r\n              quantity: 1,\r\n              price: Number(item.price) || 0,\r\n              includesDrink: Boolean(item.includesDrink),\r\n              date: currentDate\r\n            };\r\n            \r\n            soldItems.value.push(newSoldItem);\r\n          }\r\n          \r\n          // Para garantizar que todos los elementos son serializables\r\n          const cleanSoldItems = soldItems.value.map(item => {\r\n            // Verificar primero que item es un objeto\r\n            if (!item || typeof item !== 'object') {\r\n              return {\r\n                name: 'Producto desconocido',\r\n                quantity: 1,\r\n                price: 0,\r\n                includesDrink: false,\r\n                date: currentDate\r\n              };\r\n            }\r\n            \r\n            return {\r\n              name: String(item.name || 'Producto desconocido'),\r\n              quantity: Number(item.quantity) || 1,\r\n              price: Number(item.price) || 0,\r\n              includesDrink: Boolean(item.includesDrink),\r\n              date: item.date || currentDate\r\n            };\r\n          });\r\n          \r\n          // Guardar vendidos en IndexedDB\r\n          await saveSoldItems(cleanSoldItems);\r\n          \r\n          // Eliminar del menú en IndexedDB - USAR LA FUNCIÓN RENOMBRADA\r\n          if (item.id) {\r\n            try {\r\n              console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\r\n              const deleteResult = await deleteMenuItemFromDB(item.id);\r\n              console.log(`Resultado de la eliminación: ${deleteResult}`);\r\n            } catch (deleteError) {\r\n              console.error('Error al eliminar item del almacén:', deleteError);\r\n              // Continuamos con el proceso aunque falle la eliminación en IndexedDB\r\n            }\r\n          }\r\n          \r\n          // Eliminar del array local\r\n          menuItems.value.splice(index, 1);\r\n          \r\n          // Actualizar también la versión local de soldItems\r\n          soldItems.value = cleanSoldItems;\r\n\r\n          console.log('Elemento eliminado correctamente del menú local');\r\n          \r\n        } catch (error) {\r\n          console.error('Error al eliminar el plato:', error);\r\n          await alert('Error al eliminar el plato. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\r\n        }\r\n      }\r\n    };\r\n\r\n    const sellMenuItem = async (index) => {\r\n      try {\r\n        const item = menuItems.value[index];\r\n        \r\n        // Verificar si hay unidades disponibles\r\n        if (item.availableQuantity <= 0) {\r\n          await alert('No hay unidades disponibles de este plato.'); // Reemplazado: alert nativo por servicio personalizado\r\n          return;\r\n        }\r\n        \r\n        // Reducir la cantidad disponible\r\n        item.availableQuantity--;\r\n        \r\n        // Actualizar lista de platos vendidos\r\n        const soldItem = soldItems.value.find(sold => sold.name === item.name);\r\n        const currentDate = new Date().toISOString();\r\n        \r\n        if (soldItem) {\r\n          soldItem.quantity += 1;\r\n          // Actualizar la fecha solo si es más reciente\r\n          if (!soldItem.date || new Date(currentDate) > new Date(soldItem.date)) {\r\n            soldItem.date = currentDate;\r\n          }\r\n        } else {\r\n          // Crear un objeto limpio y serializable para el item vendido\r\n          const newSoldItem = {\r\n            name: item.name || 'Producto sin nombre',\r\n            quantity: 1,\r\n            price: Number(item.price) || 0,\r\n            includesDrink: Boolean(item.includesDrink),\r\n            date: currentDate\r\n          };\r\n          \r\n          soldItems.value.push(newSoldItem);\r\n        }\r\n        \r\n        // Para garantizar que todos los elementos son serializables\r\n        const cleanSoldItems = soldItems.value.map(item => ({\r\n          name: String(item.name || 'Producto desconocido'),\r\n          quantity: Number(item.quantity) || 1,\r\n          price: Number(item.price) || 0,\r\n          includesDrink: Boolean(item.includesDrink),\r\n          date: item.date || currentDate // Asegurar que todos los items tienen fecha\r\n        }));\r\n        \r\n        // Guardar cambios en IndexedDB\r\n        await saveMenuItems(menuItems.value);\r\n        await saveSoldItems(cleanSoldItems);\r\n        \r\n        // Actualizar también la versión local de soldItems\r\n        soldItems.value = cleanSoldItems;\r\n        \r\n        // Mostrar confirmación\r\n        await alert(`Se ha vendido una unidad de \"${item.name}\"`); // Añadido: mensaje de confirmación de venta\r\n        \r\n      } catch (error) {\r\n        console.error('Error al vender el plato:', error);\r\n        await alert('Error al procesar la venta. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\r\n      }\r\n    };\r\n\r\n    const clearMenuForm = () => {\r\n      newItem.value = {\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        includesDrink: false,\r\n        availableQuantity: 0,\r\n        image: '',\r\n        id: null\r\n      };\r\n      isEditing.value = false;\r\n      editingIndex.value = -1;\r\n    };\r\n\r\n    // Métodos para platos del menú especial\r\n    const toggleSpecialMenuForm = () => {\r\n      showSpecialMenuForm.value = !showSpecialMenuForm.value;\r\n      if (!showSpecialMenuForm.value) {\r\n        clearSpecialMenuForm();\r\n      }\r\n    };\r\n\r\n    const onSpecialImageChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          // Comprimir la imagen antes de guardarla\r\n          const compressedImage = await compressImage(e.target.result);\r\n          newSpecialItem.value.image = compressedImage;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const saveSpecialMenuItem = async () => {\r\n      try {\r\n        if (!newSpecialItem.value.id) {\r\n          newSpecialItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\r\n        }\r\n        \r\n        if (isSpecialEditing.value) {\r\n          // Actualizar plato existente\r\n          const index = specialMenuItems.value.findIndex(item => item.id === newSpecialItem.value.id);\r\n          if (index !== -1) {\r\n            specialMenuItems.value[index] = { ...newSpecialItem.value };\r\n          }\r\n          isSpecialEditing.value = false;\r\n          editingSpecialIndex.value = -1;\r\n          await alert('Plato actualizado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\r\n        } else {\r\n          // Verificar si ya existe un plato con el mismo nombre\r\n          const existingItem = specialMenuItems.value.find(item => \r\n            item.name.toLowerCase() === newSpecialItem.value.name.toLowerCase()\r\n          );\r\n          \r\n          if (existingItem) {\r\n            // Reemplazar window.confirm con nuestro servicio de diálogo\r\n            const confirmed = await confirm(\r\n              `Ya existe un plato llamado \"${newSpecialItem.value.name}\". ¿Desea actualizarlo?`,\r\n              { title: 'Actualizar plato existente' }\r\n            );\r\n            \r\n            if (confirmed) {\r\n              // Actualizar el plato existente pero conservar su ID\r\n              const index = specialMenuItems.value.findIndex(item => item.id === existingItem.id);\r\n              if (index !== -1) {\r\n                newSpecialItem.value.id = existingItem.id; // Mantener el ID original\r\n                specialMenuItems.value[index] = { ...newSpecialItem.value };\r\n                await alert('Plato actualizado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\r\n              }\r\n            } else {\r\n              // Usuario decidió no sobrescribir, no hacemos nada\r\n              return;\r\n            }\r\n          } else {\r\n            // Crear nuevo plato\r\n            specialMenuItems.value.push({ ...newSpecialItem.value });\r\n            await alert('Plato creado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\r\n          }\r\n        }\r\n        \r\n        // Guardar en IndexedDB\r\n        await saveMenuItems(specialMenuItems.value);\r\n        \r\n        // Limpiar formulario\r\n        clearSpecialMenuForm();\r\n      } catch (error) {\r\n        console.error('Error al guardar el plato:', error);\r\n        await alert('Error al guardar el plato. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\r\n      }\r\n    };\r\n\r\n    const clearSpecialMenuForm = () => {\r\n      newSpecialItem.value = {\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        includesDrink: false,\r\n        availableQuantity: 0,\r\n        image: '',\r\n        id: null\r\n      };\r\n      isSpecialEditing.value = false;\r\n      editingSpecialIndex.value = -1;\r\n    };\r\n\r\n    const editSpecialMenuItem = (index) => {\r\n      newSpecialItem.value = { ...specialMenuItems.value[index] };\r\n      isSpecialEditing.value = true;\r\n      editingSpecialIndex.value = index;\r\n      showSpecialMenuForm.value = true;\r\n    };\r\n\r\n    const deleteSpecialMenuItem = async (index) => {\r\n      // Reemplazar window.confirm con nuestro servicio de diálogo\r\n      const confirmed = await confirm('¿Estás seguro de querer eliminar este plato?', {\r\n        title: 'Eliminar plato',\r\n        confirmText: 'Eliminar',\r\n        cancelText: 'Cancelar'\r\n      });\r\n      \r\n      if (confirmed) {\r\n        try {\r\n          // Verificar que el índice es válido\r\n          if (index < 0 || index >= specialMenuItems.value.length) {\r\n            console.error('Error: Índice fuera de rango', index);\r\n            await alert('Error: No se encontró el elemento a eliminar');\r\n            return;\r\n          }\r\n          \r\n          const item = specialMenuItems.value[index];\r\n          console.log(`Eliminando plato: índice=${index}, nombre=${item.name}, id=${item.id}`);\r\n          \r\n          // Verificar que el ítem existe\r\n          if (!item) {\r\n            console.error('Error: Elemento del menú no encontrado en el índice', index);\r\n            await alert('Error: No se encontró el elemento a eliminar');\r\n            return;\r\n          }\r\n          \r\n          // Asegurarnos que item.name existe antes de buscar\r\n          const itemName = item.name || 'Producto sin nombre';\r\n          const currentDate = new Date().toISOString();\r\n          \r\n          // Agregar a vendidos antes de eliminar (simulación)\r\n          // Verificar primero que soldItems.value es un array\r\n          if (!Array.isArray(soldItems.value)) {\r\n            console.warn('soldItems.value no es un array, inicializando como array vacío');\r\n            soldItems.value = [];\r\n          }\r\n          \r\n          // Buscar de manera segura\r\n          const soldItem = soldItems.value.find(sold => \r\n            sold && typeof sold === 'object' && sold.name === itemName\r\n          );\r\n          \r\n          if (soldItem) {\r\n            // Si existe, aumentar la cantidad\r\n            soldItem.quantity += 1;\r\n            // Actualizar fecha\r\n            if (!soldItem.date || new Date(currentDate) > new Date(soldItem.date)) {\r\n              soldItem.date = currentDate;\r\n            }\r\n          } else {\r\n            // Crear un objeto limpio y serializable para el item vendido\r\n            const newSoldItem = {\r\n              name: itemName,\r\n              quantity: 1,\r\n              price: Number(item.price) || 0,\r\n              includesDrink: Boolean(item.includesDrink),\r\n              date: currentDate\r\n            };\r\n            \r\n            soldItems.value.push(newSoldItem);\r\n          }\r\n          \r\n          // Para garantizar que todos los elementos son serializables\r\n          const cleanSoldItems = soldItems.value.map(item => {\r\n            // Verificar primero que item es un objeto\r\n            if (!item || typeof item !== 'object') {\r\n              return {\r\n                name: 'Producto desconocido',\r\n                quantity: 1,\r\n                price: 0,\r\n                includesDrink: false,\r\n                date: currentDate\r\n              };\r\n            }\r\n            \r\n            return {\r\n              name: String(item.name || 'Producto desconocido'),\r\n              quantity: Number(item.quantity) || 1,\r\n              price: Number(item.price) || 0,\r\n              includesDrink: Boolean(item.includesDrink),\r\n              date: item.date || currentDate\r\n            };\r\n          });\r\n          \r\n          // Guardar vendidos en IndexedDB\r\n          await saveSoldItems(cleanSoldItems);\r\n          \r\n          // Eliminar del menú en IndexedDB - USAR LA FUNCIÓN RENOMBRADA\r\n          if (item.id) {\r\n            try {\r\n              console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\r\n              const deleteResult = await deleteMenuItemFromDB(item.id);\r\n              console.log(`Resultado de la eliminación: ${deleteResult}`);\r\n            } catch (deleteError) {\r\n              console.error('Error al eliminar item del almacén:', deleteError);\r\n              // Continuamos con el proceso aunque falle la eliminación en IndexedDB\r\n            }\r\n          }\r\n          \r\n          // Eliminar del array local\r\n          specialMenuItems.value.splice(index, 1);\r\n          \r\n          // Actualizar también la versión local de soldItems\r\n          soldItems.value = cleanSoldItems;\r\n\r\n          console.log('Elemento eliminado correctamente del menú local');\r\n          \r\n        } catch (error) {\r\n          console.error('Error al eliminar el plato:', error);\r\n          await alert('Error al eliminar el plato. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\r\n        }\r\n      }\r\n    };\r\n\r\n    const sellSpecialMenuItem = async (index) => {\r\n      try {\r\n        const item = specialMenuItems.value[index];\r\n        \r\n        // Verificar si hay unidades disponibles\r\n        if (item.availableQuantity <= 0) {\r\n          await alert('No hay unidades disponibles de este plato.'); // Reemplazado: alert nativo por servicio personalizado\r\n          return;\r\n        }\r\n        \r\n        // Reducir la cantidad disponible\r\n        item.availableQuantity--;\r\n        \r\n        // Actualizar lista de platos vendidos\r\n        const soldItem = soldItems.value.find(sold => sold.name === item.name);\r\n        const currentDate = new Date().toISOString();\r\n        \r\n        if (soldItem) {\r\n          soldItem.quantity += 1;\r\n          // Actualizar la fecha solo si es más reciente\r\n          if (!soldItem.date || new Date(currentDate) > new Date(soldItem.date)) {\r\n            soldItem.date = currentDate;\r\n          }\r\n        } else {\r\n          // Crear un objeto limpio y serializable para el item vendido\r\n          const newSoldItem = {\r\n            name: item.name || 'Producto sin nombre',\r\n            quantity: 1,\r\n            price: Number(item.price) || 0,\r\n            includesDrink: Boolean(item.includesDrink),\r\n            date: currentDate\r\n          };\r\n          \r\n          soldItems.value.push(newSoldItem);\r\n        }\r\n        \r\n        // Para garantizar que todos los elementos son serializables\r\n        const cleanSoldItems = soldItems.value.map(item => ({\r\n          name: String(item.name || 'Producto desconocido'),\r\n          quantity: Number(item.quantity) || 1,\r\n          price: Number(item.price) || 0,\r\n          includesDrink: Boolean(item.includesDrink),\r\n          date: item.date || currentDate // Asegurar que todos los items tienen fecha\r\n        }));\r\n        \r\n        // Guardar cambios en IndexedDB\r\n        await saveMenuItems(specialMenuItems.value);\r\n        await saveSoldItems(cleanSoldItems);\r\n        \r\n        // Actualizar también la versión local de soldItems\r\n        soldItems.value = cleanSoldItems;\r\n        \r\n        // Mostrar confirmación\r\n        await alert(`Se ha vendido una unidad de \"${item.name}\"`); // Añadido: mensaje de confirmación de venta\r\n        \r\n      } catch (error) {\r\n        console.error('Error al vender el plato:', error);\r\n        await alert('Error al procesar la venta. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\r\n      }\r\n    };\r\n\r\n    // Métodos para compartir - VERSIÓN MEJORADA\r\n    const shareByWhatsApp = async () => {\r\n      try {\r\n        // Mostrar un indicador de carga\r\n        await alert('Procesando imágenes para compartir...'); // Reemplazado: alert nativo por servicio personalizado\r\n        \r\n        // Verificar el tamaño del menú\r\n        if (menuItems.value.length > 30) {\r\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.'); // Reemplazado: alert nativo por servicio personalizado\r\n          return;\r\n        }\r\n        \r\n        // Preparar una copia de los items más ligera para compartir\r\n        const itemsToShare = menuItems.value.map(item => ({\r\n          id: item.id,\r\n          name: item.name,\r\n          description: item.description,\r\n          price: item.price,\r\n          includesDrink: item.includesDrink,\r\n          // No incluir availableQuantity para menús compartidos\r\n          image: item.image // La imagen será procesada/comprimida en saveMenu\r\n        }));\r\n        \r\n        console.log(`Preparando para compartir ${itemsToShare.length} elementos...`);\r\n        \r\n        const menuId = await saveMenu(itemsToShare);\r\n        const url = `${window.location.origin}/menu/${menuId}`;\r\n        shareLink.value = url;\r\n        \r\n        const message = formatShareLinkMessage(url, businessInfo.value.name);\r\n        const whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\r\n        window.open(whatsappUrl, '_blank');\r\n      } catch (error) {\r\n        console.error('Error al compartir por WhatsApp:', error);\r\n        await alert(`Error al compartir el menú: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`); // Reemplazado: alert nativo por servicio personalizado\r\n      }\r\n    };\r\n\r\n    const copyLink = async () => {\r\n      try {\r\n        // Mostrar un indicador de carga\r\n        const loadingMessage = 'Procesando imágenes para compartir...';\r\n        showCopiedMessage.value = true;\r\n        \r\n        // Verificar el tamaño del menú\r\n        if (menuItems.value.length > 30) {\r\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.'); // Reemplazado: alert nativo por servicio personalizado\r\n          showCopiedMessage.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Preparar una copia de los items más ligera para compartir\r\n        const itemsToShare = menuItems.value.map(item => ({\r\n          id: item.id,\r\n          name: item.name,\r\n          description: item.description,\r\n          price: item.price,\r\n          includesDrink: item.includesDrink,\r\n          // No incluir availableQuantity para menús compartidos\r\n          image: item.image // La imagen será procesada/comprimida en saveMenu\r\n        }));\r\n        \r\n        const menuId = await saveMenu(itemsToShare);\r\n        const url = `${window.location.origin}/menu/${menuId}`;\r\n        shareLink.value = url;\r\n        \r\n        try {\r\n          await navigator.clipboard.writeText(url);\r\n          showCopiedMessage.value = true;\r\n          setTimeout(() => {\r\n            showCopiedMessage.value = false;\r\n          }, 3000);\r\n        } catch (clipboardError) {\r\n          console.error('Error al copiar al portapapeles:', clipboardError);\r\n          // Ofrecer forma manual de copiar con nuestro servicio de diálogo\r\n          await alert('No se pudo copiar automáticamente. Por favor, copia manualmente este enlace: ' + url); // Reemplazado: prompt nativo por servicio personalizado\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al generar enlace para compartir:', error);\r\n        showCopiedMessage.value = false;\r\n        await alert(`Error al generar el enlace: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`); // Reemplazado: alert nativo por servicio personalizado\r\n      }\r\n    };\r\n\r\n    // Computados\r\n    const totalSales = computed(() => {\r\n      return soldItems.value.reduce((total, item) => {\r\n        return total + (item.quantity * item.price);\r\n      }, 0);\r\n    });\r\n\r\n    // Formateo de precios con separador de miles (punto) y decimales (coma)\r\n    const formatPrice = (price) => {\r\n      // Asegurarse que price es un número\r\n      if (isNaN(Number(price))) return '0,00';\r\n      \r\n      // Convertir a número, fijar 2 decimales y convertir a string\r\n      const fixed = Number(price).toFixed(2);\r\n      \r\n      // Separar parte entera y decimal\r\n      const [intPart, decPart] = fixed.split('.');\r\n      \r\n      // Formatear parte entera con puntos como separadores de miles\r\n      const formattedIntPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n      \r\n      // Unir con coma como separador decimal\r\n      return `${formattedIntPart},${decPart}`;\r\n    };\r\n    \r\n    // Función para formatear fechas\r\n    const formatDate = (dateStr) => {\r\n      if (!dateStr) return 'N/A';\r\n      const date = new Date(dateStr);\r\n      if (isNaN(date.getTime())) return 'Fecha inválida';\r\n      return new Intl.DateTimeFormat('es-ES', {\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        year: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      }).format(date);\r\n    };\r\n\r\n    // Filtrado de platos vendidos\r\n    const filteredSoldItems = computed(() => {\r\n      let items = soldItems.value;\r\n      \r\n      // Si items no es un array, devolver un array vacío\r\n      if (!Array.isArray(items)) {\r\n        console.warn('soldItems no es un array. Devolviendo array vacío.');\r\n        return [];\r\n      }\r\n      \r\n      // Filtrar por término de búsqueda\r\n      if (searchTerm.value) {\r\n        const term = searchTerm.value.toLowerCase();\r\n        items = items.filter(item => {\r\n          // Validar que item.name existe antes de usar toLowerCase()\r\n          return item && item.name && typeof item.name === 'string' && \r\n                 item.name.toLowerCase().includes(term);\r\n        });\r\n      }\r\n      \r\n      // Filtrar por categoría de forma segura\r\n      if (categoryFilter.value) {\r\n        if (categoryFilter.value === 'drinks') {\r\n          items = items.filter(item => Boolean(item && item.includesDrink));\r\n        } else if (categoryFilter.value === 'nodrinks') {\r\n          // Corregir aquí - asegurar que item está definido\r\n          items = items.filter(item => item && item.includesDrink === false);\r\n        }\r\n      }\r\n      \r\n      // Ordenar según el criterio seleccionado\r\n      if (sortBy.value) {\r\n        items = [...items]; // Crear una copia para no mutar el original\r\n        \r\n        switch (sortBy.value) {\r\n          case 'name':\r\n            items.sort((a, b) => {\r\n              // Validar que a.name y b.name existen\r\n              if (!a || !a.name) return 1;\r\n              if (!b || !b.name) return -1;\r\n              return a.name.localeCompare(b.name);\r\n            });\r\n            break;\r\n          case 'quantity-desc':\r\n            items.sort((a, b) => {\r\n              // Validar que a.quantity y b.quantity son números\r\n              const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\r\n              const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\r\n              return qtyB - qtyA;\r\n            });\r\n            break;\r\n          case 'quantity-asc':\r\n            items.sort((a, b) => {\r\n              const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\r\n              const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\r\n              return qtyA - qtyB;\r\n            });\r\n            break;\r\n          case 'price-desc':\r\n            items.sort((a, b) => {\r\n              const priceA = (a && typeof a.price === 'number') ? a.price : 0;\r\n              const priceB = (b && typeof b.price === 'number') ? b.price : 0;\r\n              return priceB - priceA;\r\n            });\r\n            break;\r\n          case 'price-asc':\r\n            items.sort((a, b) => {\r\n              const priceA = (a && typeof a.price === 'number') ? a.price : 0;\r\n              const priceB = (b && typeof b.price === 'number') ? b.price : 0;\r\n              return priceA - priceB;\r\n            });\r\n            break;\r\n          case 'date-desc':\r\n            items.sort((a, b) => {\r\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\r\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\r\n              return dateB - dateA; // De más reciente a más antiguo\r\n            });\r\n            break;\r\n          case 'date-asc':\r\n            items.sort((a, b) => {\r\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\r\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\r\n              return dateA - dateB; // De más antiguo a más reciente\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      \r\n      return items;\r\n    });\r\n\r\n    // Exportar datos\r\n    const exportToExcel = () => {\r\n      // Crear un array con los datos a exportar\r\n      const data = [\r\n        ['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal'],\r\n        ...filteredSoldItems.value.map(item => [\r\n          item.name,\r\n          item.includesDrink ? 'Con refresco' : 'Sin refresco',\r\n          item.quantity,\r\n          `$${formatPrice(item.price)}`,\r\n          formatDate(item.date),\r\n          `$${formatPrice(item.quantity * item.price)}`\r\n        ]),\r\n        ['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]\r\n      ];\r\n\r\n      // Crear un libro de Excel y una hoja de cálculo\r\n      const ws = XLSX.utils.aoa_to_sheet(data);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, 'Ventas');\r\n\r\n      // Generar el archivo Excel y descargarlo\r\n      const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n      const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      saveAs(blob, `ventas_${new Date().toLocaleDateString()}.xlsx`);\r\n    };\r\n\r\n    const exportToPDF = () => {\r\n      // Crear un nuevo documento PDF\r\n      const doc = new jsPDF();\r\n      \r\n      // Añadir título\r\n      doc.setFontSize(18);\r\n      doc.text('Reporte de Ventas', 14, 22);\r\n      doc.setFontSize(11);\r\n      doc.text(`Fecha: ${new Date().toLocaleDateString()}`, 14, 32);\r\n\r\n      // Crear la tabla con los datos\r\n      const tableData = filteredSoldItems.value.map(item => [\r\n        item.name,\r\n        item.includesDrink ? 'Con refresco' : 'Sin refresco',\r\n        item.quantity,\r\n        `$${formatPrice(item.price)}`,\r\n        formatDate(item.date),\r\n        `$${formatPrice(item.quantity * item.price)}`\r\n      ]);\r\n\r\n      // Añadir la tabla\r\n      doc.autoTable({\r\n        head: [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal']],\r\n        body: tableData,\r\n        foot: [['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]],\r\n        startY: 40,\r\n        theme: 'striped',\r\n        headStyles: { fillColor: [76, 175, 80] },\r\n        footStyles: { fillColor: [240, 240, 240], textColor: [0, 0, 0], fontStyle: 'bold' }\r\n      });\r\n\r\n      // Guardar el PDF de exportación\r\n      doc.save(`ventas_${new Date().toLocaleDateString()}.pdf`);\r\n    };\r\n\r\n    return {\r\n      // Negocio\r\n      businessInfo,\r\n      showBusinessForm,\r\n      toggleBusinessForm,\r\n      onLogoChange,\r\n      saveBusinessInfo,\r\n      clearBusinessForm,\r\n\r\n      // Información de Pago\r\n      paymentInfo,\r\n      showPaymentForm,\r\n      togglePaymentForm,\r\n      onQRImageChange,\r\n      onNequiImageChange,\r\n      savePaymentInfo,\r\n      clearPaymentForm,\r\n\r\n      // Menú\r\n      newItem,\r\n      menuItems,\r\n      showMenuForm,\r\n      isEditing,\r\n      toggleMenuForm,\r\n      onImageChange,\r\n      saveMenuItem,\r\n      editMenuItem,\r\n      deleteMenuItem,\r\n      sellMenuItem,\r\n      clearMenuForm,\r\n\r\n      // Menú especial\r\n      newSpecialItem,\r\n      specialMenuItems,\r\n      showSpecialMenuForm,\r\n      toggleSpecialMenuForm,\r\n      onSpecialImageChange,\r\n      saveSpecialMenuItem,\r\n      clearSpecialMenuForm,\r\n      editSpecialMenuItem,\r\n      deleteSpecialMenuItem,\r\n      sellSpecialMenuItem,\r\n\r\n      // Ventas\r\n      soldItems,\r\n      totalSales,\r\n      searchTerm,\r\n      sortBy,\r\n      categoryFilter,\r\n      filteredSoldItems,\r\n      formatPrice,\r\n      selectedChartType,\r\n      \r\n      // Métodos de exportación\r\n      exportToExcel,\r\n      exportToPDF,\r\n\r\n      // Compartir\r\n      shareLink,\r\n      showCopiedMessage,\r\n      shareByWhatsApp,\r\n      copyLink,\r\n      \r\n      // Estado de migración\r\n      migrationStatus,\r\n      \r\n      // Función para eliminar duplicados\r\n      removeDuplicates,\r\n\r\n      // Errores del gráfico\r\n      chartError,\r\n      handleChartError,\r\n\r\n      // Notificaciones\r\n      notification,\r\n      formatDate\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.menu-container {\r\n  padding: 20px;\r\n}\r\n\r\nsection {\r\n  margin-bottom: 40px;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n}\r\n\r\nh2 {\r\n  color: #333;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.toggle-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.toggle-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\nform {\r\n  display: grid;\r\n  gap: 15px;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n}\r\n\r\ninput, textarea, select {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 15px;\r\n}\r\n\r\n.save-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  flex: 1;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.clear-button {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  flex: 1;\r\n}\r\n\r\n.clear-button:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.business-preview {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n/* Mejoras a la lista de platos */\r\n.menu-items-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.menu-item-card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.menu-item-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n}\r\n\r\n.menu-item-image-container {\r\n  width: 100%;\r\n  height: 200px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.menu-item-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform 0.5s ease;\r\n}\r\n\r\n.menu-item-card:hover .menu-item-image {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.no-image-placeholder {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  color: #999;\r\n  font-style: italic;\r\n}\r\n\r\n.menu-item-details {\r\n  padding: 15px;\r\n  flex-grow: 1;\r\n}\r\n\r\n.menu-item-details h3 {\r\n  margin-top: 0;\r\n  color: #333;\r\n  font-size: 18px;\r\n}\r\n\r\n.menu-item-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  padding: 0 15px 15px;\r\n}\r\n\r\n.edit-button, .sell-button, .delete-button {\r\n  flex: 1;\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.edit-button {\r\n  background-color: #ffc107;\r\n  color: #212529;\r\n}\r\n\r\n.edit-button:hover {\r\n  background-color: #e0a800;\r\n}\r\n\r\n.sell-button {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.sell-button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.delete-button {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.delete-button:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n/* Mejoras a la sección de inventario */\r\n.inventory-section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.inventory-controls {\r\n  margin-bottom: 20px;\r\n  display: grid;\r\n  gap: 15px;\r\n  grid-template-columns: 1fr;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .inventory-controls {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n}\r\n\r\n.inventory-search-input {\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.inventory-filters, \r\n.inventory-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.inventory-filter {\r\n  flex: 1;\r\n  min-width: 150px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  background-color: white;\r\n}\r\n\r\n.export-button {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.export-button.excel {\r\n  background-color: #1D6F42;\r\n  color: white;\r\n}\r\n\r\n.export-button.excel:hover {\r\n  background-color: #165235;\r\n}\r\n\r\n.export-button.pdf {\r\n  background-color: #F40F02;\r\n  color: white;\r\n}\r\n\r\n.export-button.pdf:hover {\r\n  background-color: #C90C02;\r\n}\r\n\r\n.action-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.sales-chart-container {\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n  min-height: 300px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.empty-chart-message {\r\n  color: #666;\r\n  font-style: italic;\r\n  text-align: center;\r\n  width: 100%;\r\n  padding: 50px 20px;\r\n}\r\n\r\n.sales-chart {\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n.inventory-table {\r\n  overflow-x: auto;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 15px;\r\n  text-align: left;\r\n}\r\n\r\nthead {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\nthead th {\r\n  font-weight: 600;\r\n}\r\n\r\ntbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.alternate-row {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\ntfoot {\r\n  background-color: #e9e9e9;\r\n  font-weight: bold;\r\n}\r\n\r\ntfoot td {\r\n  padding: 12px 15px;\r\n}\r\n\r\n.share-buttons {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.whatsapp-button, .copy-button {\r\n  flex: 1;\r\n  padding: 12px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.whatsapp-button {\r\n  background-color: #25D366;\r\n  color: white;\r\n}\r\n\r\n.whatsapp-button:hover {\r\n  background-color: #128C7E;\r\n}\r\n\r\n.copy-button {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.copy-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n.emoji {\r\n  font-size: 1.2em;\r\n  margin-right: 8px;\r\n}\r\n\r\n.copied-message {\r\n  color: #28a745;\r\n  margin-top: 10px;\r\n}\r\n\r\n.share-link {\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  word-break: break-all;\r\n}\r\n\r\n.migration-status {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  background-color: #ffeb3b;\r\n  color: #333;\r\n  padding: 15px 20px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n  max-width: 300px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.migration-status.completed {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.migration-message {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.loading-spinner {\r\n  display: inline-block;\r\n  width: 18px;\r\n  height: 18px;\r\n  border: 3px solid rgba(0, 0, 0, 0.1);\r\n  border-radius: 50%;\r\n  border-top-color: #333;\r\n  animation: spin 1s ease-in-out infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n/* Estilos para notificaciones */\r\n.notification {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  padding: 15px 20px;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  z-index: 1001;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  min-width: 300px;\r\n  max-width: 500px;\r\n  animation: slide-in 0.3s ease-out;\r\n}\r\n\r\n.notification.success {\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.notification.error {\r\n  background-color: #f44336;\r\n}\r\n\r\n.notification-close {\r\n  background: transparent;\r\n  border: none;\r\n  color: white;\r\n  font-size: 20px;\r\n  margin-left: 15px;\r\n  cursor: pointer;\r\n  padding: 0 5px;\r\n}\r\n\r\n@keyframes slide-in {\r\n  from {\r\n    transform: translateX(100%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n/* Estilos para la sección de Forma de Pago */\r\n.payment-info-section {\r\n  margin-bottom: 40px;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n}\r\n\r\n.payment-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.payment-preview {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.payment-methods {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  justify-content: center;\r\n  margin-top: 15px;\r\n}\r\n\r\n.payment-method {\r\n  text-align: center;\r\n  padding: 15px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  background-color: white;\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.05);\r\n  width: calc(50% - 10px);\r\n  max-width: 250px;\r\n}\r\n\r\n.payment-method h4 {\r\n  margin-top: 0;\r\n  margin-bottom: 15px;\r\n  color: #333;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .payment-methods {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .payment-method {\r\n    width: 100%;\r\n    max-width: 300px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}