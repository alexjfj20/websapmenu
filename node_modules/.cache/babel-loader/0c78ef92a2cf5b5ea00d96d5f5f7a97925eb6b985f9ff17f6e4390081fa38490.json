{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, onMounted, reactive, onUnmounted, computed } from 'vue';\nimport { getReservations, updateReservationStatus, deleteReservation, isReservationOlderThan } from '../../services/reservaService';\nimport eventBus from '../../utils/eventBus';\n\n// Props\n\nexport default {\n  __name: 'AdminReservas',\n  props: {\n    readOnly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    const props = __props;\n    const reservations = ref([]);\n    const isLoading = ref(true);\n    const selectedReservation = ref(null);\n    const showDeleteModal = ref(false);\n    const toast = reactive({\n      visible: false,\n      message: '',\n      type: 'info'\n    });\n    const showToast = (message, type = 'info') => {\n      toast.message = message;\n      toast.type = type;\n      toast.visible = true;\n      setTimeout(() => {\n        toast.visible = false;\n      }, 5000);\n    };\n\n    // Función para cargar las reservas\n    const loadReservations = async () => {\n      isLoading.value = true;\n      try {\n        console.log('🔄 Cargando reservas...');\n        // Utilizamos el servicio de reservas para obtener los datos\n        const result = await getReservations();\n        if (result.success) {\n          reservations.value = result.reservations;\n          console.log('✅ Reservas cargadas correctamente:', reservations.value.length);\n        } else {\n          throw new Error(result.error || 'Error al cargar las reservas');\n        }\n      } catch (error) {\n        console.error('❌ Error al cargar reservas:', error);\n        showToast('Error al cargar las reservas', 'error');\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // Función para manejar nuevas reservas recibidas a través del eventBus\n    const handleNuevaReserva = reservation => {\n      console.log('🔔 Nueva reserva recibida:', reservation);\n\n      // Verificamos si la reserva ya existe en la lista (para evitar duplicados)\n      const existingIndex = reservations.value.findIndex(r => r.id === reservation.id);\n      if (existingIndex >= 0) {\n        // Si la reserva ya existe, actualizamos sus datos\n        reservations.value[existingIndex] = {\n          ...reservation\n        };\n        console.log('🔄 Reserva actualizada:', reservation.id);\n      } else {\n        // Si es una nueva reserva, la añadimos al principio de la lista\n        reservations.value.unshift(reservation);\n        console.log('➕ Nueva reserva añadida:', reservation.id);\n\n        // Mostrar notificación de nueva reserva\n        showToast(`Nueva reserva recibida de ${reservation.fullName}`, 'success');\n\n        // Reproducir sonido de notificación\n        playNotificationSound();\n      }\n    };\n\n    // Función para manejar actualizaciones de reservas\n    const handleReservaActualizada = data => {\n      console.log('🔄 Actualización de reserva recibida:', data);\n\n      // Buscamos la reserva en la lista y actualizamos su estado\n      const index = reservations.value.findIndex(res => res.id === data.id);\n      if (index !== -1) {\n        reservations.value[index].status = data.status;\n        console.log('✅ Estado de reserva actualizado a:', data.status);\n      }\n    };\n\n    // Función para actualizar la lista de reservas (llamada cuando hay una nueva)\n    const refreshReservations = async () => {\n      isLoading.value = true;\n      try {\n        console.log('🔄 Actualizando lista de reservas...');\n        const result = await getReservations();\n        if (result.success) {\n          reservations.value = result.reservations;\n          console.log('✅ Lista de reservas actualizada:', reservations.value.length);\n\n          // Mostrar notificación si se recibió una nueva reserva desde WhatsApp\n          const whatsappReservations = reservations.value.filter(r => r.source === 'whatsapp');\n          if (whatsappReservations.length > 0) {\n            const latestWhatsapp = whatsappReservations[0];\n            showToast(`Reserva de WhatsApp: ${latestWhatsapp.fullName || latestWhatsapp.nombre}`, 'success');\n          }\n        } else {\n          throw new Error(result.error || 'Error al actualizar las reservas');\n        }\n      } catch (error) {\n        console.error('❌ Error al actualizar reservas:', error);\n        showToast('Error al actualizar las reservas', 'error');\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // Cargar las reservas al montar el componente\n    onMounted(() => {\n      // Cargar las reservas iniciales\n      loadReservations();\n\n      // Escuchar eventos de nuevas reservas\n      eventBus.on('nueva-reserva', handleNuevaReserva);\n\n      // Escuchar eventos de actualización de reservas\n      eventBus.on('reserva-actualizada', handleReservaActualizada);\n\n      // Escuchar eventos para refrescar reservas\n      eventBus.on('refresh-reservations', refreshReservations);\n      console.log('✅ AdminReservas montado y escuchando eventos');\n    });\n\n    // Limpiar los listeners al desmontar el componente\n    onUnmounted(() => {\n      eventBus.off('nueva-reserva', handleNuevaReserva);\n      eventBus.off('reserva-actualizada', handleReservaActualizada);\n      eventBus.off('refresh-reservations', refreshReservations);\n      console.log('🛑 AdminReservas desmontado');\n    });\n\n    // Ahora defineExpose funcionará correctamente\n    __expose({\n      refreshReservations\n    });\n\n    // Formatear fecha (maneja múltiples formatos y los convierte a DD/MM/YYYY)\n    const formatDate = dateString => {\n      if (!dateString) return '';\n      try {\n        // Verificar si es el formato problemático con T y Z\n        if (dateString.includes('T') && dateString.includes('/')) {\n          // Formato como \"29T05:00:00.000Z/05/2025\"\n          const parts = dateString.split('/');\n          if (parts.length === 3) {\n            // Extraer el día del primer segmento (antes de la T)\n            const day = parts[0].split('T')[0];\n            // Construir la fecha en formato DD/MM/YYYY\n            return `${day}/${parts[1]}/${parts[2]}`;\n          }\n        }\n\n        // Formato ISO (YYYY-MM-DD)\n        if (dateString.includes('-')) {\n          const parts = dateString.split('-');\n          if (parts.length === 3) {\n            return `${parts[2]}/${parts[1]}/${parts[0]}`;\n          }\n        }\n\n        // Si ya está en formato DD/MM/YYYY, devolverlo tal cual\n        if (dateString.includes('/') && !dateString.includes('T')) {\n          return dateString;\n        }\n\n        // Intentar parsear como fecha y formatear\n        const date = new Date(dateString);\n        if (!isNaN(date.getTime())) {\n          const day = date.getDate().toString().padStart(2, '0');\n          const month = (date.getMonth() + 1).toString().padStart(2, '0');\n          const year = date.getFullYear();\n          return `${day}/${month}/${year}`;\n        }\n\n        // Si no se pudo formatear, devolver el string original\n        return dateString;\n      } catch (error) {\n        console.error('Error al formatear fecha:', error);\n        return dateString;\n      }\n    };\n\n    // Obtener etiqueta del estado\n    const getStatusLabel = status => {\n      switch (status) {\n        case 'confirmed':\n          return 'Confirmada';\n        case 'pending':\n          return 'Pendiente';\n        case 'cancelled':\n          return 'Cancelada';\n        default:\n          return status;\n      }\n    };\n\n    // Ver detalles de la reserva\n    const viewReservation = reservation => {\n      selectedReservation.value = reservation;\n    };\n\n    // Confirmar reserva\n    const confirmReservation = async reservation => {\n      try {\n        // Utilizamos el servicio para actualizar el estado\n        const result = await updateReservationStatus(reservation.id, 'confirmed');\n        if (result.success) {\n          // Actualizamos el estado localmente\n          reservation.status = 'confirmed';\n          showToast('Reserva confirmada correctamente', 'success');\n        } else {\n          throw new Error(result.error || 'Error al confirmar la reserva');\n        }\n      } catch (error) {\n        console.error('Error al confirmar reserva:', error);\n        showToast('Error al confirmar la reserva', 'error');\n      }\n    };\n\n    // Cancelar reserva\n    const cancelReservation = async reservation => {\n      try {\n        // Utilizamos el servicio para actualizar el estado\n        const result = await updateReservationStatus(reservation.id, 'cancelled');\n        if (result.success) {\n          // Actualizamos el estado localmente\n          reservation.status = 'cancelled';\n          showToast('Reserva cancelada correctamente', 'success');\n        } else {\n          throw new Error(result.error || 'Error al cancelar la reserva');\n        }\n      } catch (error) {\n        console.error('Error al cancelar reserva:', error);\n        showToast('Error al cancelar la reserva', 'error');\n      }\n    };\n\n    // Contactar al cliente\n    const contactCustomer = reservation => {\n      if (reservation.mobilePhone) {\n        window.location.href = `tel:${reservation.mobilePhone}`;\n      } else {\n        showToast('No hay número de teléfono disponible', 'warning');\n      }\n    };\n\n    // Confirmar eliminación de reservas antiguas\n    const confirmDeleteOldReservations = async () => {\n      isLoading.value = true;\n      try {\n        const oldReservations = reservations.value.filter(reservation => isReservationOlderThan(reservation, 30));\n        if (oldReservations.length === 0) {\n          showToast('No hay reservas antiguas para eliminar', 'info');\n          isLoading.value = false;\n          return;\n        }\n        let successCount = 0;\n        let errorCount = 0;\n\n        // Eliminar cada reserva antigua una por una\n        for (const reservation of oldReservations) {\n          try {\n            const result = await deleteReservation(reservation.id);\n            if (result.success) {\n              successCount++;\n            } else {\n              errorCount++;\n              console.error('Error al eliminar reserva:', reservation.id, result.error);\n            }\n          } catch (error) {\n            errorCount++;\n            console.error('Error al eliminar reserva:', reservation.id, error);\n          }\n        }\n\n        // Actualizar la lista de reservas\n        await refreshReservations();\n        if (successCount > 0) {\n          showToast(`${successCount} reservas antiguas eliminadas correctamente`, 'success');\n        }\n        if (errorCount > 0) {\n          showToast(`No se pudieron eliminar ${errorCount} reservas`, 'warning');\n        }\n      } catch (error) {\n        console.error('Error al eliminar reservas antiguas:', error);\n        showToast('Error al eliminar las reservas antiguas', 'error');\n      } finally {\n        isLoading.value = false;\n        showDeleteModal.value = false;\n      }\n    };\n\n    // Verificar si hay reservas antiguas\n    const hasOldReservations = computed(() => {\n      return reservations.value.some(reservation => isReservationOlderThan(reservation, 30));\n    });\n    const __returned__ = {\n      props,\n      reservations,\n      isLoading,\n      selectedReservation,\n      showDeleteModal,\n      toast,\n      showToast,\n      loadReservations,\n      handleNuevaReserva,\n      handleReservaActualizada,\n      refreshReservations,\n      formatDate,\n      getStatusLabel,\n      viewReservation,\n      confirmReservation,\n      cancelReservation,\n      contactCustomer,\n      confirmDeleteOldReservations,\n      hasOldReservations,\n      ref,\n      onMounted,\n      reactive,\n      onUnmounted,\n      computed,\n      get getReservations() {\n        return getReservations;\n      },\n      get updateReservationStatus() {\n        return updateReservationStatus;\n      },\n      get deleteReservation() {\n        return deleteReservation;\n      },\n      get isReservationOlderThan() {\n        return isReservationOlderThan;\n      },\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","onUnmounted","computed","getReservations","updateReservationStatus","deleteReservation","isReservationOlderThan","eventBus","props","__props","reservations","isLoading","selectedReservation","showDeleteModal","toast","visible","message","type","showToast","setTimeout","loadReservations","value","console","log","result","success","length","Error","error","handleNuevaReserva","reservation","existingIndex","findIndex","r","id","unshift","fullName","playNotificationSound","handleReservaActualizada","data","index","res","status","refreshReservations","whatsappReservations","filter","source","latestWhatsapp","nombre","on","off","__expose","formatDate","dateString","includes","parts","split","day","date","Date","isNaN","getTime","getDate","toString","padStart","month","getMonth","year","getFullYear","getStatusLabel","viewReservation","confirmReservation","cancelReservation","contactCustomer","mobilePhone","window","location","href","confirmDeleteOldReservations","oldReservations","successCount","errorCount","hasOldReservations","some"],"sources":["F:/Driver google/VUE.JS-2/VUE-JS/websap/src/components/admin/AdminReservas.vue"],"sourcesContent":["<template>\n  <div class=\"admin-reservas\">\n    <div class=\"reservas-header\">\n      <h2 class=\"admin-section-title\">Gestión de Reservas</h2>\n      <div class=\"action-buttons\">\n        <button \n          class=\"refresh-btn\" \n          @click=\"refreshReservations\" \n          :disabled=\"isLoading\"\n          title=\"Actualizar reservas\"\n        >\n          <span v-if=\"isLoading\">Actualizando...</span>\n          <span v-else>🔄 Actualizar</span>\n        </button>\n        \n        <button \n          class=\"delete-old-btn\" \n          @click=\"showDeleteModal = true\" \n          :disabled=\"isLoading || !hasOldReservations\"\n          title=\"Eliminar reservas antiguas (más de 30 días)\"\n        >\n          <span>🗑️ Eliminar Antiguas</span>\n        </button>\n      </div>\n    </div>\n    \n    <div class=\"reservas-container\">\n      <div v-if=\"isLoading\" class=\"loading-spinner\">\n        <div class=\"spinner\"></div>\n        <p>Cargando reservas...</p>\n      </div>\n      \n      <div v-else-if=\"reservations.length === 0\" class=\"no-reservations\">\n        <p>Aún no hay reservas registradas</p>\n      </div>\n      \n      <div v-else class=\"reservations-list\">\n        <div class=\"table-responsive\">\n          <table class=\"reservation-table\">\n            <thead>\n              <tr>\n                <th>Fecha</th>\n                <th>Hora</th>\n                <th>Cliente</th>\n                <th>Teléfono</th>\n                <th>Personas</th>\n                <th>Estado</th>\n                <th>Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(reservation, index) in reservations\" :key=\"index\" :class=\"{ 'confirmed': reservation.status === 'confirmed', 'pending': reservation.status === 'pending', 'cancelled': reservation.status === 'cancelled' }\">\n                <td>\n                  <!-- Solución específica para el formato problemático -->\n                  <span v-if=\"reservation.date && reservation.date.includes('T') && reservation.date.includes('/')\">\n                    {{ reservation.date.split('/')[0].split('T')[0] }}/{{ reservation.date.split('/')[1] }}/{{ reservation.date.split('/')[2] }}\n                  </span>\n                  <span v-else-if=\"reservation.date && reservation.date.includes('-')\">\n                    {{ reservation.date.split('-')[2] }}/{{ reservation.date.split('-')[1] }}/{{ reservation.date.split('-')[0] }}\n                  </span>\n                  <span v-else>\n                    {{ reservation.date }}\n                  </span>\n                </td>\n                <td>{{ reservation.time }}</td>\n                <td>{{ reservation.fullName }}</td>\n                <td>\n                  <a :href=\"`tel:${reservation.mobilePhone}`\">{{ reservation.mobilePhone }}</a>\n                </td>\n                <td>{{ reservation.peopleCount }}</td>\n                <td>\n                  <span class=\"status-badge\" :class=\"reservation.status\">\n                    {{ getStatusLabel(reservation.status) }}\n                  </span>\n                </td>\n                <td class=\"actions-cell\">\n                  <button @click=\"viewReservation(reservation)\" class=\"action-btn view-btn\" title=\"Ver detalles\">\n                    👁️\n                  </button>\n                  <button \n                    v-if=\"!readOnly\" \n                    @click=\"confirmReservation(reservation)\" \n                    class=\"action-btn confirm-btn\" \n                    title=\"Confirmar reserva\" \n                    :disabled=\"reservation.status === 'confirmed'\"\n                  >\n                    ✅\n                  </button>\n                  <button \n                    v-if=\"!readOnly\" \n                    @click=\"cancelReservation(reservation)\" \n                    class=\"action-btn cancel-btn\" \n                    title=\"Cancelar reserva\" \n                    :disabled=\"reservation.status === 'cancelled'\"\n                  >\n                    ❌\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Modal para ver detalles de la reserva -->\n    <div v-if=\"selectedReservation\" class=\"reservation-modal\">\n      <div class=\"modal-content\">\n        <span class=\"close-modal\" @click=\"selectedReservation = null\">&times;</span>\n        <h3>Detalles de la Reserva</h3>\n        \n        <div class=\"reservation-details\">\n          <p><strong>Cliente:</strong> {{ selectedReservation.fullName }}</p>\n          <p><strong>Teléfono Móvil:</strong> {{ selectedReservation.mobilePhone }}</p>\n          <p v-if=\"selectedReservation.landlinePhone\"><strong>Teléfono Fijo:</strong> {{ selectedReservation.landlinePhone }}</p>\n          <p v-if=\"selectedReservation.email\"><strong>Email:</strong> {{ selectedReservation.email }}</p>\n          <p v-if=\"selectedReservation.address\"><strong>Dirección:</strong> {{ selectedReservation.address }}</p>\n          <p><strong>Fecha:</strong> \n            <!-- Solución específica para el formato problemático -->\n            <span v-if=\"selectedReservation.date && selectedReservation.date.includes('T') && selectedReservation.date.includes('/')\">\n              {{ selectedReservation.date.split('/')[0].split('T')[0] }}/{{ selectedReservation.date.split('/')[1] }}/{{ selectedReservation.date.split('/')[2] }}\n            </span>\n            <span v-else-if=\"selectedReservation.date && selectedReservation.date.includes('-')\">\n              {{ selectedReservation.date.split('-')[2] }}/{{ selectedReservation.date.split('-')[1] }}/{{ selectedReservation.date.split('-')[0] }}\n            </span>\n            <span v-else>\n              {{ selectedReservation.date }}\n            </span>\n          </p>\n          <p><strong>Hora:</strong> {{ selectedReservation.time }}</p>\n          <p><strong>Número de Personas:</strong> {{ selectedReservation.peopleCount }}</p>\n          <p v-if=\"selectedReservation.notes\"><strong>Notas Adicionales:</strong> {{ selectedReservation.notes }}</p>\n          <p><strong>Estado:</strong> <span class=\"status-badge\" :class=\"selectedReservation.status\">{{ getStatusLabel(selectedReservation.status) }}</span></p>\n        </div>\n        \n        <div class=\"modal-actions\">\n          <button @click=\"confirmReservation(selectedReservation)\" class=\"action-btn confirm-btn\" :disabled=\"selectedReservation.status === 'confirmed'\">\n            Confirmar Reserva\n          </button>\n          <button @click=\"cancelReservation(selectedReservation)\" class=\"action-btn cancel-btn\" :disabled=\"selectedReservation.status === 'cancelled'\">\n            Cancelar Reserva\n          </button>\n          <button @click=\"contactCustomer(selectedReservation)\" class=\"action-btn contact-btn\">\n            Contactar Cliente\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Modal de confirmación para eliminar reservas antiguas -->\n    <div v-if=\"showDeleteModal\" class=\"delete-modal-overlay\">\n      <div class=\"delete-modal\">\n        <div class=\"delete-modal-header\">\n          <h3>Confirmar eliminación</h3>\n          <button class=\"close-modal\" @click=\"showDeleteModal = false\">&times;</button>\n        </div>\n        <div class=\"delete-modal-body\">\n          <div class=\"delete-icon\">\n            <span>🗑️</span>\n          </div>\n          <p>¿Estás seguro de eliminar las reservas antiguas?</p>\n          <p class=\"delete-modal-info\">Esta acción eliminará todas las reservas con más de 30 días de antigüedad y no se puede deshacer.</p>\n        </div>\n        <div class=\"delete-modal-footer\">\n          <button class=\"cancel-btn\" @click=\"showDeleteModal = false\">Cancelar</button>\n          <button class=\"confirm-btn\" @click=\"confirmDeleteOldReservations\" :disabled=\"isLoading\">\n            <span v-if=\"isLoading\">Eliminando...</span>\n            <span v-else>Eliminar</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Añadir notificación toast -->\n    <div v-if=\"toast.visible\" class=\"toast-notification\" :class=\"toast.type\">\n      {{ toast.message }}\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive, onUnmounted, computed } from 'vue';\nimport { \n  getReservations, \n  updateReservationStatus, \n  deleteReservation, \n  isReservationOlderThan \n} from '../../services/reservaService';\nimport eventBus from '../../utils/eventBus';\n\n// Props\nconst props = defineProps({\n  readOnly: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst reservations = ref([]);\nconst isLoading = ref(true);\nconst selectedReservation = ref(null);\nconst showDeleteModal = ref(false);\n\nconst toast = reactive({\n  visible: false,\n  message: '',\n  type: 'info'\n});\n\nconst showToast = (message, type = 'info') => {\n  toast.message = message;\n  toast.type = type;\n  toast.visible = true;\n  \n  setTimeout(() => {\n    toast.visible = false;\n  }, 5000);\n};\n\n// Función para cargar las reservas\nconst loadReservations = async () => {\n  isLoading.value = true;\n  try {\n    console.log('🔄 Cargando reservas...');\n    // Utilizamos el servicio de reservas para obtener los datos\n    const result = await getReservations();\n    \n    if (result.success) {\n      reservations.value = result.reservations;\n      console.log('✅ Reservas cargadas correctamente:', reservations.value.length);\n    } else {\n      throw new Error(result.error || 'Error al cargar las reservas');\n    }\n  } catch (error) {\n    console.error('❌ Error al cargar reservas:', error);\n    showToast('Error al cargar las reservas', 'error');\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// Función para manejar nuevas reservas recibidas a través del eventBus\nconst handleNuevaReserva = (reservation) => {\n  console.log('🔔 Nueva reserva recibida:', reservation);\n  \n  // Verificamos si la reserva ya existe en la lista (para evitar duplicados)\n  const existingIndex = reservations.value.findIndex(r => r.id === reservation.id);\n  \n  if (existingIndex >= 0) {\n    // Si la reserva ya existe, actualizamos sus datos\n    reservations.value[existingIndex] = { ...reservation };\n    console.log('🔄 Reserva actualizada:', reservation.id);\n  } else {\n    // Si es una nueva reserva, la añadimos al principio de la lista\n    reservations.value.unshift(reservation);\n    console.log('➕ Nueva reserva añadida:', reservation.id);\n    \n    // Mostrar notificación de nueva reserva\n    showToast(`Nueva reserva recibida de ${reservation.fullName}`, 'success');\n    \n    // Reproducir sonido de notificación\n    playNotificationSound();\n  }\n};\n\n// Función para manejar actualizaciones de reservas\nconst handleReservaActualizada = (data) => {\n  console.log('🔄 Actualización de reserva recibida:', data);\n  \n  // Buscamos la reserva en la lista y actualizamos su estado\n  const index = reservations.value.findIndex(res => res.id === data.id);\n  if (index !== -1) {\n    reservations.value[index].status = data.status;\n    console.log('✅ Estado de reserva actualizado a:', data.status);\n  }\n};\n\n// Función para actualizar la lista de reservas (llamada cuando hay una nueva)\nconst refreshReservations = async () => {\n  isLoading.value = true;\n  try {\n    console.log('🔄 Actualizando lista de reservas...');\n    const result = await getReservations();\n    \n    if (result.success) {\n      reservations.value = result.reservations;\n      console.log('✅ Lista de reservas actualizada:', reservations.value.length);\n      \n      // Mostrar notificación si se recibió una nueva reserva desde WhatsApp\n      const whatsappReservations = reservations.value.filter(r => r.source === 'whatsapp');\n      if (whatsappReservations.length > 0) {\n        const latestWhatsapp = whatsappReservations[0];\n        showToast(`Reserva de WhatsApp: ${latestWhatsapp.fullName || latestWhatsapp.nombre}`, 'success');\n      }\n    } else {\n      throw new Error(result.error || 'Error al actualizar las reservas');\n    }\n  } catch (error) {\n    console.error('❌ Error al actualizar reservas:', error);\n    showToast('Error al actualizar las reservas', 'error');\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// Cargar las reservas al montar el componente\nonMounted(() => {\n  // Cargar las reservas iniciales\n  loadReservations();\n  \n  // Escuchar eventos de nuevas reservas\n  eventBus.on('nueva-reserva', handleNuevaReserva);\n  \n  // Escuchar eventos de actualización de reservas\n  eventBus.on('reserva-actualizada', handleReservaActualizada);\n  \n  // Escuchar eventos para refrescar reservas\n  eventBus.on('refresh-reservations', refreshReservations);\n  \n  console.log('✅ AdminReservas montado y escuchando eventos');\n});\n\n// Limpiar los listeners al desmontar el componente\nonUnmounted(() => {\n  eventBus.off('nueva-reserva', handleNuevaReserva);\n  eventBus.off('reserva-actualizada', handleReservaActualizada);\n  eventBus.off('refresh-reservations', refreshReservations);\n  console.log('🛑 AdminReservas desmontado');\n});\n\n// Ahora defineExpose funcionará correctamente\ndefineExpose({ refreshReservations });\n\n// Formatear fecha (maneja múltiples formatos y los convierte a DD/MM/YYYY)\nconst formatDate = (dateString) => {\n  if (!dateString) return '';\n  \n  try {\n    // Verificar si es el formato problemático con T y Z\n    if (dateString.includes('T') && dateString.includes('/')) {\n      // Formato como \"29T05:00:00.000Z/05/2025\"\n      const parts = dateString.split('/');\n      if (parts.length === 3) {\n        // Extraer el día del primer segmento (antes de la T)\n        const day = parts[0].split('T')[0];\n        // Construir la fecha en formato DD/MM/YYYY\n        return `${day}/${parts[1]}/${parts[2]}`;\n      }\n    }\n    \n    // Formato ISO (YYYY-MM-DD)\n    if (dateString.includes('-')) {\n      const parts = dateString.split('-');\n      if (parts.length === 3) {\n        return `${parts[2]}/${parts[1]}/${parts[0]}`;\n      }\n    }\n    \n    // Si ya está en formato DD/MM/YYYY, devolverlo tal cual\n    if (dateString.includes('/') && !dateString.includes('T')) {\n      return dateString;\n    }\n    \n    // Intentar parsear como fecha y formatear\n    const date = new Date(dateString);\n    if (!isNaN(date.getTime())) {\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const year = date.getFullYear();\n      return `${day}/${month}/${year}`;\n    }\n    \n    // Si no se pudo formatear, devolver el string original\n    return dateString;\n  } catch (error) {\n    console.error('Error al formatear fecha:', error);\n    return dateString;\n  }\n};\n\n// Obtener etiqueta del estado\nconst getStatusLabel = (status) => {\n  switch (status) {\n    case 'confirmed':\n      return 'Confirmada';\n    case 'pending':\n      return 'Pendiente';\n    case 'cancelled':\n      return 'Cancelada';\n    default:\n      return status;\n  }\n};\n\n// Ver detalles de la reserva\nconst viewReservation = (reservation) => {\n  selectedReservation.value = reservation;\n};\n\n// Confirmar reserva\nconst confirmReservation = async (reservation) => {\n  try {\n    // Utilizamos el servicio para actualizar el estado\n    const result = await updateReservationStatus(reservation.id, 'confirmed');\n    \n    if (result.success) {\n      // Actualizamos el estado localmente\n      reservation.status = 'confirmed';\n      showToast('Reserva confirmada correctamente', 'success');\n    } else {\n      throw new Error(result.error || 'Error al confirmar la reserva');\n    }\n  } catch (error) {\n    console.error('Error al confirmar reserva:', error);\n    showToast('Error al confirmar la reserva', 'error');\n  }\n};\n\n// Cancelar reserva\nconst cancelReservation = async (reservation) => {\n  try {\n    // Utilizamos el servicio para actualizar el estado\n    const result = await updateReservationStatus(reservation.id, 'cancelled');\n    \n    if (result.success) {\n      // Actualizamos el estado localmente\n      reservation.status = 'cancelled';\n      showToast('Reserva cancelada correctamente', 'success');\n    } else {\n      throw new Error(result.error || 'Error al cancelar la reserva');\n    }\n  } catch (error) {\n    console.error('Error al cancelar reserva:', error);\n    showToast('Error al cancelar la reserva', 'error');\n  }\n};\n\n// Contactar al cliente\nconst contactCustomer = (reservation) => {\n  if (reservation.mobilePhone) {\n    window.location.href = `tel:${reservation.mobilePhone}`;\n  } else {\n    showToast('No hay número de teléfono disponible', 'warning');\n  }\n};\n\n// Confirmar eliminación de reservas antiguas\nconst confirmDeleteOldReservations = async () => {\n  isLoading.value = true;\n  try {\n    const oldReservations = reservations.value.filter(reservation => isReservationOlderThan(reservation, 30));\n    \n    if (oldReservations.length === 0) {\n      showToast('No hay reservas antiguas para eliminar', 'info');\n      isLoading.value = false;\n      return;\n    }\n    \n    let successCount = 0;\n    let errorCount = 0;\n    \n    // Eliminar cada reserva antigua una por una\n    for (const reservation of oldReservations) {\n      try {\n        const result = await deleteReservation(reservation.id);\n        if (result.success) {\n          successCount++;\n        } else {\n          errorCount++;\n          console.error('Error al eliminar reserva:', reservation.id, result.error);\n        }\n      } catch (error) {\n        errorCount++;\n        console.error('Error al eliminar reserva:', reservation.id, error);\n      }\n    }\n    \n    // Actualizar la lista de reservas\n    await refreshReservations();\n    \n    if (successCount > 0) {\n      showToast(`${successCount} reservas antiguas eliminadas correctamente`, 'success');\n    }\n    \n    if (errorCount > 0) {\n      showToast(`No se pudieron eliminar ${errorCount} reservas`, 'warning');\n    }\n  } catch (error) {\n    console.error('Error al eliminar reservas antiguas:', error);\n    showToast('Error al eliminar las reservas antiguas', 'error');\n  } finally {\n    isLoading.value = false;\n    showDeleteModal.value = false;\n  }\n};\n\n// Verificar si hay reservas antiguas\nconst hasOldReservations = computed(() => {\n  return reservations.value.some(reservation => isReservationOlderThan(reservation, 30));\n});\n</script>\n\n<style scoped>\n.admin-reservas {\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.admin-section-title {\n  color: #333;\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #4CAF50;\n}\n\n.loading-spinner {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 40px;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #4CAF50;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-bottom: 15px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.no-reservations {\n  text-align: center;\n  padding: 40px;\n  color: #666;\n  font-style: italic;\n}\n\n.table-responsive {\n  overflow-x: auto;\n}\n\n.reservation-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.reservation-table th, \n.reservation-table td {\n  padding: 12px 15px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.reservation-table th {\n  background-color: #f5f5f5;\n  font-weight: bold;\n  color: #333;\n}\n\n.reservation-table tr:hover {\n  background-color: #f9f9f9;\n}\n\n.reservation-table tr.confirmed {\n  background-color: rgba(76, 175, 80, 0.1);\n}\n\n.reservation-table tr.pending {\n  background-color: rgba(255, 193, 7, 0.1);\n}\n\n.reservation-table tr.cancelled {\n  background-color: rgba(244, 67, 54, 0.1);\n}\n\n.status-badge {\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 0.8rem;\n  font-weight: bold;\n}\n\n.status-badge.confirmed {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.status-badge.pending {\n  background-color: #FFC107;\n  color: #333;\n}\n\n.status-badge.cancelled {\n  background-color: #F44336;\n  color: white;\n}\n\n.actions-cell {\n  white-space: nowrap;\n}\n\n.action-btn {\n  background: none;\n  border: none;\n  font-size: 1.2rem;\n  cursor: pointer;\n  margin: 0 3px;\n  padding: 5px;\n  border-radius: 4px;\n  transition: background-color 0.3s;\n}\n\n.action-btn:hover {\n  background-color: #f0f0f0;\n}\n\n.action-btn:disabled {\n  opacity: 0.3;\n  cursor: not-allowed;\n}\n\n.view-btn:hover {\n  background-color: #e3f2fd;\n}\n\n.confirm-btn:hover {\n  background-color: #e8f5e9;\n}\n\n.cancel-btn:hover {\n  background-color: #ffebee;\n}\n\n/* Estilos para el modal */\n.reservation-modal {\n  position: fixed;\n  z-index: 1000;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.modal-content {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 20px;\n  width: 90%;\n  max-width: 500px;\n  max-height: 80vh;\n  overflow-y: auto;\n  position: relative;\n  box-shadow: 0 4px 20px rgba(0,0,0,0.2);\n}\n\n.close-modal {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  font-size: 24px;\n  cursor: pointer;\n  color: #666;\n}\n\n.close-modal:hover {\n  color: #000;\n}\n\n.modal-content h3 {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n  color: #333;\n}\n\n.reservation-details p {\n  margin: 8px 0;\n  line-height: 1.5;\n}\n\n.modal-actions {\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.modal-actions .action-btn {\n  flex: 1;\n  padding: 10px;\n  font-size: 0.9rem;\n  border-radius: 4px;\n  text-align: center;\n  min-width: 120px;\n}\n\n.modal-actions .confirm-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.modal-actions .cancel-btn {\n  background-color: #F44336;\n  color: white;\n}\n\n.modal-actions .contact-btn {\n  background-color: #2196F3;\n  color: white;\n}\n\n.modal-actions .action-btn:hover {\n  opacity: 0.9;\n}\n\n.modal-actions .action-btn:disabled {\n  background-color: #ccc;\n  color: #666;\n}\n\n@media (max-width: 768px) {\n  .reservation-table th, \n  .reservation-table td {\n    padding: 8px 10px;\n    font-size: 0.9rem;\n  }\n  \n  .actions-cell {\n    display: flex;\n  }\n  \n  .modal-actions {\n    flex-direction: column;\n  }\n  \n  .modal-content {\n    width: 95%;\n    padding: 15px;\n  }\n}\n\n.reservas-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.refresh-btn {\n  background-color: #f0f0f0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px 15px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.refresh-btn:hover {\n  background-color: #e0e0e0;\n}\n\n.refresh-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.delete-old-btn {\n  background-color: #f0f0f0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px 15px;\n  cursor: pointer;\n  transition: all 0.3s;\n  margin-left: 10px;\n}\n\n.delete-old-btn:hover {\n  background-color: #e0e0e0;\n}\n\n.delete-old-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.delete-modal-overlay {\n  position: fixed;\n  z-index: 1000;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.delete-modal {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 20px;\n  width: 90%;\n  max-width: 400px;\n  max-height: 80vh;\n  overflow-y: auto;\n  position: relative;\n  box-shadow: 0 4px 20px rgba(0,0,0,0.2);\n}\n\n.delete-modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.delete-modal-header h3 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n  color: #333;\n}\n\n.close-modal {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  font-size: 24px;\n  cursor: pointer;\n  color: #666;\n}\n\n.close-modal:hover {\n  color: #000;\n}\n\n.delete-modal-body {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.delete-icon {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.delete-modal-info {\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 20px;\n}\n\n.delete-modal-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.delete-modal-footer .cancel-btn {\n  background-color: #f0f0f0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px 15px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.delete-modal-footer .cancel-btn:hover {\n  background-color: #e0e0e0;\n}\n\n.delete-modal-footer .confirm-btn {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 15px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.delete-modal-footer .confirm-btn:hover {\n  opacity: 0.9;\n}\n\n.delete-modal-footer .confirm-btn:disabled {\n  background-color: #ccc;\n  color: #666;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}