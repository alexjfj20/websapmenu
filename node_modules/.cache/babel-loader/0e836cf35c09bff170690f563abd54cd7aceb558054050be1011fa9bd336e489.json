{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { saveMenu } from '../services/menuService';\nexport default {\n  name: 'LoginComponent',\n  setup() {\n    const loginForm = ref({\n      email: '',\n      password: ''\n    });\n    const users = ref([]);\n    const router = useRouter();\n    onMounted(() => {\n      // Cargar los usuarios desde localStorage al inicio\n      const storedUsers = localStorage.getItem('users');\n      users.value = storedUsers ? JSON.parse(storedUsers) : [];\n    });\n    const login = () => {\n      // Asegurarse de que users es un array antes de usar find\n      if (!Array.isArray(users.value)) {\n        users.value = [];\n        alert('No users found. Please register first.');\n        router.push('/register');\n        return;\n      }\n      const user = users.value.find(user => user.email === loginForm.value.email && user.password === loginForm.value.password);\n      if (user) {\n        const menuId = saveMenu([]); // Generate a new menuId\n        router.push(`/menu/${menuId}`);\n      } else {\n        alert('Invalid credentials. Please try again.');\n      }\n    };\n    return {\n      loginForm,\n      users,\n      login\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","saveMenu","name","setup","loginForm","email","password","users","router","storedUsers","localStorage","getItem","value","JSON","parse","login","Array","isArray","alert","push","user","find","menuId"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\LoginComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <div>\r\n        <label for=\"login-email\">Email:</label>\r\n        <input type=\"email\" id=\"login-email\" v-model=\"loginForm.email\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"login-password\">Password:</label>\r\n        <input type=\"password\" id=\"login-password\" v-model=\"loginForm.password\" required>\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { saveMenu } from '../services/menuService';\r\n\r\nexport default {\r\n  name: 'LoginComponent',\r\n  setup() {\r\n    const loginForm = ref({\r\n      email: '',\r\n      password: ''\r\n    });\r\n    \r\n    const users = ref([]);\r\n    const router = useRouter();\r\n    \r\n    onMounted(() => {\r\n      // Cargar los usuarios desde localStorage al inicio\r\n      const storedUsers = localStorage.getItem('users');\r\n      users.value = storedUsers ? JSON.parse(storedUsers) : [];\r\n    });\r\n    \r\n    const login = () => {\r\n      // Asegurarse de que users es un array antes de usar find\r\n      if (!Array.isArray(users.value)) {\r\n        users.value = [];\r\n        alert('No users found. Please register first.');\r\n        router.push('/register');\r\n        return;\r\n      }\r\n      \r\n      const user = users.value.find(user => \r\n        user.email === loginForm.value.email && \r\n        user.password === loginForm.value.password\r\n      );\r\n      \r\n      if (user) {\r\n        const menuId = saveMenu([]); // Generate a new menuId\r\n        router.push(`/menu/${menuId}`);\r\n      } else {\r\n        alert('Invalid credentials. Please try again.');\r\n      }\r\n    };\r\n    \r\n    return {\r\n      loginForm,\r\n      users,\r\n      login\r\n    };\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;;AAkBA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,QAAO,QAAS,yBAAyB;AAElD,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIN,GAAG,CAAC;MACpBO,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,KAAI,GAAIT,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMU,MAAK,GAAIR,SAAS,CAAC,CAAC;IAE1BD,SAAS,CAAC,MAAM;MACd;MACA,MAAMU,WAAU,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACjDJ,KAAK,CAACK,KAAI,GAAIH,WAAU,GAAII,IAAI,CAACC,KAAK,CAACL,WAAW,IAAI,EAAE;IAC1D,CAAC,CAAC;IAEF,MAAMM,KAAI,GAAIA,CAAA,KAAM;MAClB;MACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACV,KAAK,CAACK,KAAK,CAAC,EAAE;QAC/BL,KAAK,CAACK,KAAI,GAAI,EAAE;QAChBM,KAAK,CAAC,wCAAwC,CAAC;QAC/CV,MAAM,CAACW,IAAI,CAAC,WAAW,CAAC;QACxB;MACF;MAEA,MAAMC,IAAG,GAAIb,KAAK,CAACK,KAAK,CAACS,IAAI,CAACD,IAAG,IAC/BA,IAAI,CAACf,KAAI,KAAMD,SAAS,CAACQ,KAAK,CAACP,KAAI,IACnCe,IAAI,CAACd,QAAO,KAAMF,SAAS,CAACQ,KAAK,CAACN,QACpC,CAAC;MAED,IAAIc,IAAI,EAAE;QACR,MAAME,MAAK,GAAIrB,QAAQ,CAAC,EAAE,CAAC,EAAE;QAC7BO,MAAM,CAACW,IAAI,CAAC,SAASG,MAAM,EAAE,CAAC;MAChC,OAAO;QACLJ,KAAK,CAAC,wCAAwC,CAAC;MACjD;IACF,CAAC;IAED,OAAO;MACLd,SAAS;MACTG,KAAK;MACLQ;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}