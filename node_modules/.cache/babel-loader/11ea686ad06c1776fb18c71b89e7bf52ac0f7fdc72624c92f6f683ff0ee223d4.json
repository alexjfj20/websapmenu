{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { saveMenu } from '../services/menuService';\nimport { formatShareLinkMessage } from '../utils/messageFormatter';\nimport SalesChartComponent from './SalesChartComponent.vue';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nimport { getMenuItems, saveMenuItems, getBusinessInfo, saveBusinessInfo as saveBusinessInfoToDB,\n// Renombrar función importada para evitar colisión\ngetSoldItems, saveSoldItems, deleteMenuItemFromDB, migrateFromLocalStorage, compressImage } from '../services/storageService';\nimport { confirm, alert } from '../services/dialogService'; // Modificado: importar también alert\n\nexport default {\n  name: 'MenuComponent',\n  components: {\n    SalesChartComponent\n  },\n  setup() {\n    // Estado para información del negocio\n    const businessInfo = ref({\n      name: '',\n      description: '',\n      contact: '',\n      address: '',\n      logo: ''\n    });\n    const showBusinessForm = ref(false);\n\n    // Estado para platos del menú\n    const newItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const menuItems = ref([]);\n    const showMenuForm = ref(false);\n    const isEditing = ref(false);\n    const editingIndex = ref(-1);\n\n    // Estado para ventas e inventario\n    const soldItems = ref([]);\n    const searchTerm = ref('');\n    const sortBy = ref('');\n    const categoryFilter = ref('');\n    const selectedChartType = ref('bar');\n\n    // Estado para compartir\n    const shareLink = ref('');\n    const showCopiedMessage = ref(false);\n\n    // Estado para mostrar progreso de migración\n    const migrationStatus = ref({\n      inProgress: false,\n      completed: false,\n      message: ''\n    });\n\n    // Estado para errores del gráfico\n    const chartError = ref(null);\n\n    // Manejar errores del gráfico\n    const handleChartError = error => {\n      console.error(\"Error en el gráfico:\", error);\n      chartError.value = error;\n    };\n\n    // Estado para mensajes de notificación\n    const notification = ref({\n      show: false,\n      message: '',\n      type: 'success',\n      // 'success', 'error'\n      timeout: null\n    });\n\n    // Cargar datos guardados\n    onMounted(async () => {\n      try {\n        // Mostrar estado de carga\n        migrationStatus.value.inProgress = true;\n        migrationStatus.value.message = 'Cargando datos...';\n\n        // Primero intentar migrar desde localStorage si existen datos\n        const hasLocalData = localStorage.getItem('businessInfo') || localStorage.getItem('menuItems') || localStorage.getItem('soldItems');\n        if (hasLocalData) {\n          migrationStatus.value.message = 'Migrando datos desde localStorage a IndexedDB...';\n          const migrationResult = await migrateFromLocalStorage();\n          if (migrationResult) {\n            migrationStatus.value.completed = true;\n            migrationStatus.value.message = 'Migración completada exitosamente';\n\n            // Limpiar localStorage después de migrar exitosamente\n            localStorage.removeItem('businessInfo');\n            localStorage.removeItem('menuItems');\n            localStorage.removeItem('soldItems');\n          } else {\n            migrationStatus.value.message = 'Error en la migración de datos';\n          }\n        }\n\n        // Cargar datos desde IndexedDB (siempre, independientemente de si hubo migración)\n        const dbBusinessInfo = await getBusinessInfo();\n        if (dbBusinessInfo && dbBusinessInfo.name) {\n          businessInfo.value = dbBusinessInfo;\n        }\n\n        // Cargar menú desde IndexedDB\n        const dbMenuItems = await getMenuItems();\n        if (dbMenuItems && dbMenuItems.length > 0) {\n          // Asegurarse de eliminar duplicados usando IDs únicos\n          const uniqueItems = removeDuplicates(dbMenuItems);\n          menuItems.value = uniqueItems;\n\n          // Si hubo diferencias, guardar la lista corregida de vuelta en IndexedDB\n          if (uniqueItems.length < dbMenuItems.length) {\n            console.log(`Se eliminaron ${dbMenuItems.length - uniqueItems.length} elementos duplicados del menú`);\n            await saveMenuItems(uniqueItems);\n          }\n        }\n\n        // Cargar ventas desde IndexedDB y asegurar que tengan fecha\n        const dbSoldItems = await getSoldItems();\n        if (dbSoldItems && dbSoldItems.length > 0) {\n          // Asegurarse que todos los items tienen fecha\n          const currentDate = new Date().toISOString();\n          const updatedSoldItems = dbSoldItems.map(item => {\n            if (!item.date) {\n              return {\n                ...item,\n                date: currentDate\n              };\n            }\n            return item;\n          });\n\n          // Si se actualizó algún item, guardar cambios\n          if (dbSoldItems.some(item => !item.date)) {\n            await saveSoldItems(updatedSoldItems);\n          }\n          soldItems.value = updatedSoldItems;\n        }\n\n        // Finalizar estado de carga\n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 1500);\n      } catch (error) {\n        console.error('Error al cargar datos:', error);\n        migrationStatus.value.message = 'Error al cargar datos: ' + error.message;\n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 3000);\n      }\n    });\n\n    // Función para eliminar duplicados basados en ID\n    const removeDuplicates = items => {\n      const seen = new Map();\n      return items.filter(item => {\n        // Si el elemento no tiene ID, generamos uno\n        if (!item.id) {\n          item.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n\n        // Si ya hemos visto este ID, es un duplicado\n        if (seen.has(item.id)) {\n          return false;\n        }\n\n        // De lo contrario, marcamos como visto y lo conservamos\n        seen.set(item.id, true);\n        return true;\n      });\n    };\n\n    // Métodos para información del negocio\n    const toggleBusinessForm = () => {\n      showBusinessForm.value = !showBusinessForm.value;\n    };\n    const onLogoChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          // Comprimir la imagen antes de guardarla\n          const compressedLogo = await compressImage(e.target.result);\n          businessInfo.value.logo = compressedLogo;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveBusinessInfo = async () => {\n      try {\n        // Limpiar cualquier timeout anterior\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n\n        // Llamar a la función importada correctamente\n        await saveBusinessInfoToDB(businessInfo.value);\n\n        // Mostrar notificación de éxito\n        notification.value = {\n          show: true,\n          message: 'Información del negocio guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000) // Desaparece después de 3 segundos\n        };\n      } catch (error) {\n        console.error('Error al guardar información del negocio:', error);\n\n        // Mostrar notificación de error\n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000) // Desaparece después de 3 segundos\n        };\n      }\n    };\n    const clearBusinessForm = async () => {\n      // Reemplazar window.confirm con nuestro servicio de diálogo\n      const confirmed = await confirm('¿Estás seguro de querer limpiar el formulario?');\n      if (confirmed) {\n        businessInfo.value = {\n          name: '',\n          description: '',\n          contact: '',\n          address: '',\n          logo: ''\n        };\n      }\n    };\n\n    // Métodos para platos del menú\n    const toggleMenuForm = () => {\n      showMenuForm.value = !showMenuForm.value;\n      if (!showMenuForm.value) {\n        clearMenuForm();\n      }\n    };\n    const onImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          // Comprimir la imagen antes de guardarla\n          const compressedImage = await compressImage(e.target.result);\n          newItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveMenuItem = async () => {\n      try {\n        if (!newItem.value.id) {\n          newItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n        if (isEditing.value) {\n          // Actualizar plato existente\n          const index = menuItems.value.findIndex(item => item.id === newItem.value.id);\n          if (index !== -1) {\n            menuItems.value[index] = {\n              ...newItem.value\n            };\n          }\n          isEditing.value = false;\n          editingIndex.value = -1;\n          await alert('Plato actualizado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\n        } else {\n          // Verificar si ya existe un plato con el mismo nombre\n          const existingItem = menuItems.value.find(item => item.name.toLowerCase() === newItem.value.name.toLowerCase());\n          if (existingItem) {\n            // Reemplazar window.confirm con nuestro servicio de diálogo\n            const confirmed = await confirm(`Ya existe un plato llamado \"${newItem.value.name}\". ¿Desea actualizarlo?`, {\n              title: 'Actualizar plato existente'\n            });\n            if (confirmed) {\n              // Actualizar el plato existente pero conservar su ID\n              const index = menuItems.value.findIndex(item => item.id === existingItem.id);\n              if (index !== -1) {\n                newItem.value.id = existingItem.id; // Mantener el ID original\n                menuItems.value[index] = {\n                  ...newItem.value\n                };\n                await alert('Plato actualizado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\n              }\n            } else {\n              // Usuario decidió no sobrescribir, no hacemos nada\n              return;\n            }\n          } else {\n            // Crear nuevo plato\n            menuItems.value.push({\n              ...newItem.value\n            });\n            await alert('Plato creado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\n          }\n        }\n\n        // Guardar en IndexedDB\n        await saveMenuItems(menuItems.value);\n\n        // Limpiar formulario\n        clearMenuForm();\n      } catch (error) {\n        console.error('Error al guardar el plato:', error);\n        await alert('Error al guardar el plato. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\n      }\n    };\n    const editMenuItem = index => {\n      newItem.value = {\n        ...menuItems.value[index]\n      };\n      isEditing.value = true;\n      editingIndex.value = index;\n      showMenuForm.value = true;\n    };\n    const deleteMenuItem = async index => {\n      // Reemplazar window.confirm con nuestro servicio de diálogo\n      const confirmed = await confirm('¿Estás seguro de querer eliminar este plato?', {\n        title: 'Eliminar plato',\n        confirmText: 'Eliminar',\n        cancelText: 'Cancelar'\n      });\n      if (confirmed) {\n        try {\n          // Verificar que el índice es válido\n          if (index < 0 || index >= menuItems.value.length) {\n            console.error('Error: Índice fuera de rango', index);\n            await alert('Error: No se encontró el elemento a eliminar');\n            return;\n          }\n          const item = menuItems.value[index];\n          console.log(`Eliminando plato: índice=${index}, nombre=${item.name}, id=${item.id}`);\n\n          // Verificar que el ítem existe\n          if (!item) {\n            console.error('Error: Elemento del menú no encontrado en el índice', index);\n            await alert('Error: No se encontró el elemento a eliminar');\n            return;\n          }\n\n          // Asegurarnos que item.name existe antes de buscar\n          const itemName = item.name || 'Producto sin nombre';\n          const currentDate = new Date().toISOString();\n\n          // Agregar a vendidos antes de eliminar (simulación)\n          // Verificar primero que soldItems.value es un array\n          if (!Array.isArray(soldItems.value)) {\n            console.warn('soldItems.value no es un array, inicializando como array vacío');\n            soldItems.value = [];\n          }\n\n          // Buscar de manera segura\n          const soldItem = soldItems.value.find(sold => sold && typeof sold === 'object' && sold.name === itemName);\n          if (soldItem) {\n            // Si existe, aumentar la cantidad\n            soldItem.quantity += 1;\n            // Actualizar fecha\n            if (!soldItem.date || new Date(currentDate) > new Date(soldItem.date)) {\n              soldItem.date = currentDate;\n            }\n          } else {\n            // Crear un objeto limpio y serializable para el item vendido\n            const newSoldItem = {\n              name: itemName,\n              quantity: 1,\n              price: Number(item.price) || 0,\n              includesDrink: Boolean(item.includesDrink),\n              date: currentDate\n            };\n            soldItems.value.push(newSoldItem);\n          }\n\n          // Para garantizar que todos los elementos son serializables\n          const cleanSoldItems = soldItems.value.map(item => {\n            // Verificar primero que item es un objeto\n            if (!item || typeof item !== 'object') {\n              return {\n                name: 'Producto desconocido',\n                quantity: 1,\n                price: 0,\n                includesDrink: false,\n                date: currentDate\n              };\n            }\n            return {\n              name: String(item.name || 'Producto desconocido'),\n              quantity: Number(item.quantity) || 1,\n              price: Number(item.price) || 0,\n              includesDrink: Boolean(item.includesDrink),\n              date: item.date || currentDate\n            };\n          });\n\n          // Guardar vendidos en IndexedDB\n          await saveSoldItems(cleanSoldItems);\n\n          // Eliminar del menú en IndexedDB - USAR LA FUNCIÓN RENOMBRADA\n          if (item.id) {\n            try {\n              console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n              const deleteResult = await deleteMenuItemFromDB(item.id);\n              console.log(`Resultado de la eliminación: ${deleteResult}`);\n            } catch (deleteError) {\n              console.error('Error al eliminar item del almacén:', deleteError);\n              // Continuamos con el proceso aunque falle la eliminación en IndexedDB\n            }\n          }\n\n          // Eliminar del array local\n          menuItems.value.splice(index, 1);\n\n          // Actualizar también la versión local de soldItems\n          soldItems.value = cleanSoldItems;\n          console.log('Elemento eliminado correctamente del menú local');\n        } catch (error) {\n          console.error('Error al eliminar el plato:', error);\n          await alert('Error al eliminar el plato. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\n        }\n      }\n    };\n    const sellMenuItem = async index => {\n      try {\n        const item = menuItems.value[index];\n\n        // Verificar si hay unidades disponibles\n        if (item.availableQuantity <= 0) {\n          await alert('No hay unidades disponibles de este plato.'); // Reemplazado: alert nativo por servicio personalizado\n          return;\n        }\n\n        // Reducir la cantidad disponible\n        item.availableQuantity--;\n\n        // Actualizar lista de platos vendidos\n        const soldItem = soldItems.value.find(sold => sold.name === item.name);\n        const currentDate = new Date().toISOString();\n        if (soldItem) {\n          soldItem.quantity += 1;\n          // Actualizar la fecha solo si es más reciente\n          if (!soldItem.date || new Date(currentDate) > new Date(soldItem.date)) {\n            soldItem.date = currentDate;\n          }\n        } else {\n          // Crear un objeto limpio y serializable para el item vendido\n          const newSoldItem = {\n            name: item.name || 'Producto sin nombre',\n            quantity: 1,\n            price: Number(item.price) || 0,\n            includesDrink: Boolean(item.includesDrink),\n            date: currentDate\n          };\n          soldItems.value.push(newSoldItem);\n        }\n\n        // Para garantizar que todos los elementos son serializables\n        const cleanSoldItems = soldItems.value.map(item => ({\n          name: String(item.name || 'Producto desconocido'),\n          quantity: Number(item.quantity) || 1,\n          price: Number(item.price) || 0,\n          includesDrink: Boolean(item.includesDrink),\n          date: item.date || currentDate // Asegurar que todos los items tienen fecha\n        }));\n\n        // Guardar cambios en IndexedDB\n        await saveMenuItems(menuItems.value);\n        await saveSoldItems(cleanSoldItems);\n\n        // Actualizar también la versión local de soldItems\n        soldItems.value = cleanSoldItems;\n\n        // Mostrar confirmación\n        await alert(`Se ha vendido una unidad de \"${item.name}\"`); // Añadido: mensaje de confirmación de venta\n      } catch (error) {\n        console.error('Error al vender el plato:', error);\n        await alert('Error al procesar la venta. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\n      }\n    };\n    const clearMenuForm = () => {\n      newItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditing.value = false;\n      editingIndex.value = -1;\n    };\n\n    // Métodos para compartir - VERSIÓN MEJORADA\n    const shareByWhatsApp = async () => {\n      try {\n        // Mostrar un indicador de carga\n        await alert('Procesando imágenes para compartir...'); // Reemplazado: alert nativo por servicio personalizado\n\n        // Verificar el tamaño del menú\n        if (menuItems.value.length > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.'); // Reemplazado: alert nativo por servicio personalizado\n          return;\n        }\n\n        // Preparar una copia de los items más ligera para compartir\n        const itemsToShare = menuItems.value.map(item => ({\n          id: item.id,\n          name: item.name,\n          description: item.description,\n          price: item.price,\n          includesDrink: item.includesDrink,\n          // No incluir availableQuantity para menús compartidos\n          image: item.image // La imagen será procesada/comprimida en saveMenu\n        }));\n        console.log(`Preparando para compartir ${itemsToShare.length} elementos...`);\n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        const message = formatShareLinkMessage(url, businessInfo.value.name);\n        const whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\n        window.open(whatsappUrl, '_blank');\n      } catch (error) {\n        console.error('Error al compartir por WhatsApp:', error);\n        await alert(`Error al compartir el menú: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`); // Reemplazado: alert nativo por servicio personalizado\n      }\n    };\n    const copyLink = async () => {\n      try {\n        // Mostrar un indicador de carga\n        const loadingMessage = 'Procesando imágenes para compartir...';\n        showCopiedMessage.value = true;\n\n        // Verificar el tamaño del menú\n        if (menuItems.value.length > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.'); // Reemplazado: alert nativo por servicio personalizado\n          showCopiedMessage.value = false;\n          return;\n        }\n\n        // Preparar una copia de los items más ligera para compartir\n        const itemsToShare = menuItems.value.map(item => ({\n          id: item.id,\n          name: item.name,\n          description: item.description,\n          price: item.price,\n          includesDrink: item.includesDrink,\n          // No incluir availableQuantity para menús compartidos\n          image: item.image // La imagen será procesada/comprimida en saveMenu\n        }));\n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        try {\n          await navigator.clipboard.writeText(url);\n          showCopiedMessage.value = true;\n          setTimeout(() => {\n            showCopiedMessage.value = false;\n          }, 3000);\n        } catch (clipboardError) {\n          console.error('Error al copiar al portapapeles:', clipboardError);\n          // Ofrecer forma manual de copiar con nuestro servicio de diálogo\n          await alert('No se pudo copiar automáticamente. Por favor, copia manualmente este enlace: ' + url); // Reemplazado: prompt nativo por servicio personalizado\n        }\n      } catch (error) {\n        console.error('Error al generar enlace para compartir:', error);\n        showCopiedMessage.value = false;\n        await alert(`Error al generar el enlace: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`); // Reemplazado: alert nativo por servicio personalizado\n      }\n    };\n\n    // Computados\n    const totalSales = computed(() => {\n      return soldItems.value.reduce((total, item) => {\n        return total + item.quantity * item.price;\n      }, 0);\n    });\n\n    // Formateo de precios con separador de miles (punto) y decimales (coma)\n    const formatPrice = price => {\n      // Asegurarse que price es un número\n      if (isNaN(Number(price))) return '0,00';\n\n      // Convertir a número, fijar 2 decimales y convertir a string\n      const fixed = Number(price).toFixed(2);\n\n      // Separar parte entera y decimal\n      const [intPart, decPart] = fixed.split('.');\n\n      // Formatear parte entera con puntos como separadores de miles\n      const formattedIntPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n\n      // Unir con coma como separador decimal\n      return `${formattedIntPart},${decPart}`;\n    };\n\n    // Función para formatear fechas\n    const formatDate = dateStr => {\n      if (!dateStr) return 'N/A';\n      const date = new Date(dateStr);\n      if (isNaN(date.getTime())) return 'Fecha inválida';\n      return new Intl.DateTimeFormat('es-ES', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n\n    // Filtrado de platos vendidos\n    const filteredSoldItems = computed(() => {\n      let items = soldItems.value;\n\n      // Si items no es un array, devolver un array vacío\n      if (!Array.isArray(items)) {\n        console.warn('soldItems no es un array. Devolviendo array vacío.');\n        return [];\n      }\n\n      // Filtrar por término de búsqueda\n      if (searchTerm.value) {\n        const term = searchTerm.value.toLowerCase();\n        items = items.filter(item => {\n          // Validar que item.name existe antes de usar toLowerCase()\n          return item && item.name && typeof item.name === 'string' && item.name.toLowerCase().includes(term);\n        });\n      }\n\n      // Filtrar por categoría de forma segura\n      if (categoryFilter.value) {\n        if (categoryFilter.value === 'drinks') {\n          items = items.filter(item => Boolean(item && item.includesDrink));\n        } else if (categoryFilter.value === 'nodrinks') {\n          items = items.filter(item => item && item.includesDrink === false);\n        }\n      }\n\n      // Ordenar según el criterio seleccionado\n      if (sortBy.value) {\n        items = [...items]; // Crear una copia para no mutar el original\n\n        switch (sortBy.value) {\n          case 'name':\n            items.sort((a, b) => {\n              // Validar que a.name y b.name existen\n              if (!a || !a.name) return 1;\n              if (!b || !b.name) return -1;\n              return a.name.localeCompare(b.name);\n            });\n            break;\n          case 'quantity-desc':\n            items.sort((a, b) => {\n              // Validar que a.quantity y b.quantity son números\n              const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n              const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n              return qtyB - qtyA;\n            });\n            break;\n          case 'quantity-asc':\n            items.sort((a, b) => {\n              const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n              const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n              return qtyA - qtyB;\n            });\n            break;\n          case 'price-desc':\n            items.sort((a, b) => {\n              const priceA = a && typeof a.price === 'number' ? a.price : 0;\n              const priceB = b && typeof b.price === 'number' ? b.price : 0;\n              return priceB - priceA;\n            });\n            break;\n          case 'price-asc':\n            items.sort((a, b) => {\n              const priceA = a && typeof a.price === 'number' ? a.price : 0;\n              const priceB = b && typeof b.price === 'number' ? b.price : 0;\n              return priceA - priceB;\n            });\n            break;\n          case 'date-desc':\n            items.sort((a, b) => {\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\n              return dateB - dateA; // De más reciente a más antiguo\n            });\n            break;\n          case 'date-asc':\n            items.sort((a, b) => {\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\n              return dateA - dateB; // De más antiguo a más reciente\n            });\n            break;\n          default:\n            break;\n        }\n      }\n      return items;\n    });\n\n    // Exportar datos\n    const exportToExcel = () => {\n      // Crear un array con los datos a exportar\n      const data = [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal'], ...filteredSoldItems.value.map(item => [item.name, item.includesDrink ? 'Con refresco' : 'Sin refresco', item.quantity, `$${formatPrice(item.price)}`, formatDate(item.date), `$${formatPrice(item.quantity * item.price)}`]), ['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]];\n\n      // Crear un libro de Excel y una hoja de cálculo\n      const ws = XLSX.utils.aoa_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Ventas');\n\n      // Generar el archivo Excel y descargarlo\n      const excelBuffer = XLSX.write(wb, {\n        bookType: 'xlsx',\n        type: 'array'\n      });\n      const blob = new Blob([excelBuffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      saveAs(blob, `ventas_${new Date().toLocaleDateString()}.xlsx`);\n    };\n    const exportToPDF = () => {\n      // Crear un nuevo documento PDF\n      const doc = new jsPDF();\n\n      // Añadir título\n      doc.setFontSize(18);\n      doc.text('Reporte de Ventas', 14, 22);\n      doc.setFontSize(11);\n      doc.text(`Fecha: ${new Date().toLocaleDateString()}`, 14, 32);\n\n      // Crear la tabla con los datos\n      const tableData = filteredSoldItems.value.map(item => [item.name, item.includesDrink ? 'Con refresco' : 'Sin refresco', item.quantity, `$${formatPrice(item.price)}`, formatDate(item.date), `$${formatPrice(item.quantity * item.price)}`]);\n\n      // Añadir la tabla\n      doc.autoTable({\n        head: [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal']],\n        body: tableData,\n        foot: [['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]],\n        startY: 40,\n        theme: 'striped',\n        headStyles: {\n          fillColor: [76, 175, 80]\n        },\n        footStyles: {\n          fillColor: [240, 240, 240],\n          textColor: [0, 0, 0],\n          fontStyle: 'bold'\n        }\n      });\n\n      // Guardar el PDF de exportación\n      doc.save(`ventas_${new Date().toLocaleDateString()}.pdf`);\n    };\n    return {\n      // Negocio\n      businessInfo,\n      showBusinessForm,\n      toggleBusinessForm,\n      onLogoChange,\n      saveBusinessInfo,\n      clearBusinessForm,\n      // Menú\n      newItem,\n      menuItems,\n      showMenuForm,\n      isEditing,\n      toggleMenuForm,\n      onImageChange,\n      saveMenuItem,\n      editMenuItem,\n      deleteMenuItem,\n      sellMenuItem,\n      clearMenuForm,\n      // Ventas\n      soldItems,\n      totalSales,\n      searchTerm,\n      sortBy,\n      categoryFilter,\n      filteredSoldItems,\n      formatPrice,\n      selectedChartType,\n      // Métodos de exportación\n      exportToExcel,\n      exportToPDF,\n      // Compartir\n      shareLink,\n      showCopiedMessage,\n      shareByWhatsApp,\n      copyLink,\n      // Estado de migración\n      migrationStatus,\n      // Función para eliminar duplicados\n      removeDuplicates,\n      // Errores del gráfico\n      chartError,\n      handleChartError,\n      // Notificaciones\n      notification,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","saveMenu","formatShareLinkMessage","SalesChartComponent","saveAs","XLSX","jsPDF","getMenuItems","saveMenuItems","getBusinessInfo","saveBusinessInfo","saveBusinessInfoToDB","getSoldItems","saveSoldItems","deleteMenuItemFromDB","migrateFromLocalStorage","compressImage","confirm","alert","name","components","setup","businessInfo","description","contact","address","logo","showBusinessForm","newItem","price","includesDrink","availableQuantity","image","id","menuItems","showMenuForm","isEditing","editingIndex","soldItems","searchTerm","sortBy","categoryFilter","selectedChartType","shareLink","showCopiedMessage","migrationStatus","inProgress","completed","message","chartError","handleChartError","error","console","value","notification","show","type","timeout","hasLocalData","localStorage","getItem","migrationResult","removeItem","dbBusinessInfo","dbMenuItems","length","uniqueItems","removeDuplicates","log","dbSoldItems","currentDate","Date","toISOString","updatedSoldItems","map","item","date","some","setTimeout","items","seen","Map","filter","now","Math","random","toString","substring","has","set","toggleBusinessForm","onLogoChange","event","file","target","files","reader","FileReader","onload","e","compressedLogo","result","readAsDataURL","clearTimeout","clearBusinessForm","confirmed","toggleMenuForm","clearMenuForm","onImageChange","compressedImage","saveMenuItem","index","findIndex","existingItem","find","toLowerCase","title","push","editMenuItem","deleteMenuItem","confirmText","cancelText","itemName","Array","isArray","warn","soldItem","sold","quantity","newSoldItem","Number","Boolean","cleanSoldItems","String","deleteResult","deleteError","splice","sellMenuItem","shareByWhatsApp","itemsToShare","menuId","url","window","location","origin","whatsappUrl","encodeURIComponent","open","copyLink","loadingMessage","navigator","clipboard","writeText","clipboardError","totalSales","reduce","total","formatPrice","isNaN","fixed","toFixed","intPart","decPart","split","formattedIntPart","replace","formatDate","dateStr","getTime","Intl","DateTimeFormat","day","month","year","hour","minute","format","filteredSoldItems","term","includes","sort","a","b","localeCompare","qtyA","qtyB","priceA","priceB","dateA","dateB","exportToExcel","data","ws","utils","aoa_to_sheet","wb","book_new","book_append_sheet","excelBuffer","write","bookType","blob","Blob","toLocaleDateString","exportToPDF","doc","setFontSize","text","tableData","autoTable","head","body","foot","startY","theme","headStyles","fillColor","footStyles","textColor","fontStyle","save"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\MenuComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"menu-container\">\r\n    <!-- Notificaciones -->\r\n    <div \r\n      v-if=\"notification.show\" \r\n      class=\"notification\" \r\n      :class=\"notification.type\"\r\n    >\r\n      {{ notification.message }}\r\n      <button @click=\"notification.show = false\" class=\"notification-close\">&times;</button>\r\n    </div>\r\n\r\n    <!-- Mensaje de migración de datos -->\r\n    <div v-if=\"migrationStatus.inProgress || migrationStatus.completed\" class=\"migration-status\" :class=\"{ 'completed': migrationStatus.completed }\">\r\n      <div class=\"migration-message\">\r\n        <span v-if=\"migrationStatus.inProgress\" class=\"loading-spinner\"></span>\r\n        {{ migrationStatus.message }}\r\n      </div>\r\n    </div>\r\n  \r\n    <!-- SECCIÓN 1: INFORMACIÓN DEL NEGOCIO -->\r\n    <section class=\"business-info-section\">\r\n      <h2>Información del Negocio</h2>\r\n      <button @click=\"toggleBusinessForm\" class=\"toggle-button\">\r\n        {{ showBusinessForm ? 'Ocultar Formulario' : 'Mostrar Formulario' }}\r\n      </button>\r\n\r\n      <div v-if=\"showBusinessForm\" class=\"business-form\">\r\n        <form @submit.prevent=\"saveBusinessInfo\">\r\n          <div>\r\n            <label for=\"business-name\">Nombre del Restaurante:</label>\r\n            <input type=\"text\" id=\"business-name\" v-model=\"businessInfo.name\" required>\r\n          </div>\r\n          <div>\r\n            <label for=\"business-description\">Descripción:</label>\r\n            <textarea id=\"business-description\" v-model=\"businessInfo.description\"></textarea>\r\n          </div>\r\n          <div>\r\n            <label for=\"business-contact\">Contacto:</label>\r\n            <input type=\"text\" id=\"business-contact\" v-model=\"businessInfo.contact\">\r\n          </div>\r\n          <div>\r\n            <label for=\"business-address\">Dirección:</label>\r\n            <input type=\"text\" id=\"business-address\" v-model=\"businessInfo.address\">\r\n          </div>\r\n          <div>\r\n            <label for=\"business-logo\">Logo:</label>\r\n            <input type=\"file\" id=\"business-logo\" @change=\"onLogoChange\">\r\n            <img v-if=\"businessInfo.logo\" :src=\"businessInfo.logo\" alt=\"Logo\" style=\"max-width: 100px; margin-top: 10px;\">\r\n          </div>\r\n          <div class=\"button-group\">\r\n            <button type=\"submit\" class=\"save-button\">Guardar</button>\r\n            <button type=\"button\" @click=\"clearBusinessForm\" class=\"clear-button\">Limpiar</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div v-if=\"businessInfo.name\" class=\"business-preview\">\r\n        <h3>Información Guardada</h3>\r\n        <img v-if=\"businessInfo.logo\" :src=\"businessInfo.logo\" alt=\"Logo\" style=\"max-width: 100px;\">\r\n        <h4>{{ businessInfo.name }}</h4>\r\n        <p>{{ businessInfo.description }}</p>\r\n        <p><strong>Contacto:</strong> {{ businessInfo.contact }}</p>\r\n        <p><strong>Dirección:</strong> {{ businessInfo.address }}</p>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- SECCIÓN 2: MENÚ DEL RESTAURANTE -->\r\n    <section class=\"menu-section\">\r\n      <h2>Menú del Restaurante</h2>\r\n      <button @click=\"toggleMenuForm\" class=\"toggle-button\">\r\n        {{ showMenuForm ? 'Ocultar Formulario' : 'Mostrar Formulario' }}\r\n      </button>\r\n\r\n      <!-- Formulario para agregar/editar platos -->\r\n      <div v-if=\"showMenuForm\" class=\"menu-form\">\r\n        <form @submit.prevent=\"saveMenuItem\">\r\n          <div>\r\n            <label for=\"item-name\">Nombre del plato:</label>\r\n            <input type=\"text\" id=\"item-name\" v-model=\"newItem.name\" required>\r\n          </div>\r\n          <div>\r\n            <label for=\"item-description\">Descripción del plato:</label>\r\n            <textarea id=\"item-description\" v-model=\"newItem.description\"></textarea>\r\n          </div>\r\n          <div>\r\n            <label for=\"item-price\">Precio:</label>\r\n            <input type=\"number\" id=\"item-price\" v-model.number=\"newItem.price\" min=\"0\" step=\"0.01\" required>\r\n          </div>\r\n          <div>\r\n            <label for=\"item-drinks\">Incluye refresco:</label>\r\n            <select id=\"item-drinks\" v-model=\"newItem.includesDrink\">\r\n              <option :value=\"true\">Sí</option>\r\n              <option :value=\"false\">No</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label for=\"item-quantity\">Cantidad disponible:</label>\r\n            <input type=\"number\" id=\"item-quantity\" v-model.number=\"newItem.availableQuantity\" min=\"0\" required>\r\n          </div>\r\n          <div>\r\n            <label for=\"item-image\">Imagen del plato:</label>\r\n            <input type=\"file\" id=\"item-image\" @change=\"onImageChange\">\r\n            <img v-if=\"newItem.image\" :src=\"newItem.image\" alt=\"Imagen del plato\" style=\"max-width: 100px; margin-top: 10px;\">\r\n          </div>\r\n          <div class=\"button-group\">\r\n            <button type=\"submit\" class=\"save-button\">{{ isEditing ? 'Actualizar' : 'Crear' }}</button>\r\n            <button type=\"button\" @click=\"clearMenuForm\" class=\"clear-button\">Cancelar</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Lista de platos -->\r\n      <div class=\"menu-items-list\">\r\n        <div v-for=\"(item, index) in menuItems\" :key=\"index\" class=\"menu-item-card\">\r\n          <div class=\"menu-item-image-container\">\r\n            <img v-if=\"item.image\" :src=\"item.image\" alt=\"Plato\" class=\"menu-item-image\">\r\n            <div v-else class=\"no-image-placeholder\">Sin imagen</div>\r\n          </div>\r\n          <div class=\"menu-item-details\">\r\n            <h3>{{ item.name }}</h3>\r\n            <p>{{ item.description }}</p>\r\n            <p><strong>Precio:</strong> ${{ item.price }}</p>\r\n            <p><strong>Incluye refresco:</strong> {{ item.includesDrink ? 'Sí' : 'No' }}</p>\r\n            <p><strong>Disponibles:</strong> {{ item.availableQuantity }}</p>\r\n          </div>\r\n          <div class=\"menu-item-actions\">\r\n            <button @click=\"editMenuItem(index)\" class=\"edit-button\">Editar</button>\r\n            <button @click=\"sellMenuItem(index)\" class=\"sell-button\">Vender</button>\r\n            <button @click=\"deleteMenuItem(index)\" class=\"delete-button\">Eliminar</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- SECCIÓN 3: INVENTARIO DE PLATOS VENDIDOS -->\r\n    <section class=\"inventory-section\">\r\n      <h2>Inventario de Platos Vendidos</h2>\r\n      \r\n      <div class=\"inventory-controls\">\r\n        <div class=\"inventory-search-container\">\r\n          <input \r\n            v-model=\"searchTerm\" \r\n            placeholder=\"Buscar plato...\" \r\n            class=\"inventory-search-input\"\r\n          />\r\n        </div>\r\n        \r\n        <div class=\"inventory-filters\">\r\n          <select v-model=\"sortBy\" class=\"inventory-filter\">\r\n            <option value=\"\">Ordenar por</option>\r\n            <option value=\"name\">Nombre</option>\r\n            <option value=\"quantity-desc\">Más vendidos</option>\r\n            <option value=\"quantity-asc\">Menos vendidos</option>\r\n            <option value=\"price-desc\">Mayor precio</option>\r\n            <option value=\"price-asc\">Menor precio</option>\r\n            <option value=\"date-desc\">Más recientes</option>\r\n            <option value=\"date-asc\">Más antiguos</option>\r\n          </select>\r\n          \r\n          <select v-model=\"categoryFilter\" class=\"inventory-filter\">\r\n            <option value=\"\">Todas las categorías</option>\r\n            <option value=\"drinks\">Con refresco</option>\r\n            <option value=\"nodrinks\">Sin refresco</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div class=\"inventory-actions\">\r\n          <button @click=\"exportToExcel\" class=\"export-button excel\">\r\n            <span class=\"action-icon\">📊</span> Exportar a Excel\r\n          </button>\r\n          <button @click=\"exportToPDF\" class=\"export-button pdf\">\r\n            <span class=\"action-icon\">📄</span> Exportar a PDF\r\n          </button>\r\n          <select v-model=\"selectedChartType\" class=\"inventory-filter\">\r\n            <option value=\"bar\">Gráfico de barras</option>\r\n            <option value=\"line\">Gráfico de líneas</option>\r\n            <option value=\"none\">Sin gráfico</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Gráfico de ventas con tratamiento de errores -->\r\n      <div v-if=\"selectedChartType !== 'none'\" class=\"sales-chart-container\">\r\n        <SalesChartComponent \r\n          v-if=\"filteredSoldItems.length > 0\" \r\n          :chartType=\"selectedChartType\" \r\n          :items=\"filteredSoldItems\"\r\n          class=\"sales-chart\"\r\n          @error=\"handleChartError\"\r\n        />\r\n        <div v-else class=\"empty-chart-message\">\r\n          No hay datos suficientes para mostrar el gráfico\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"inventory-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Nombre del Plato</th>\r\n              <th>Categoría</th>\r\n              <th>Cantidad Vendida</th>\r\n              <th>Precio por Unidad</th>\r\n              <th>Fecha de Venta</th>\r\n              <th>Subtotal</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(item, index) in filteredSoldItems\" :key=\"index\" :class=\"{ 'alternate-row': index % 2 !== 0 }\">\r\n              <td>{{ item.name }}</td>\r\n              <td>{{ item.includesDrink ? 'Con refresco' : 'Sin refresco' }}</td>\r\n              <td>{{ item.quantity }}</td>\r\n              <td>${{ formatPrice(item.price) }}</td>\r\n              <td>{{ formatDate(item.date) }}</td>\r\n              <td>${{ formatPrice(item.quantity * item.price) }}</td>\r\n            </tr>\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td colspan=\"5\"><strong>Total Ventas</strong></td>\r\n              <td><strong>${{ formatPrice(totalSales) }}</strong></td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- SECCIÓN 4: COMPARTIR MENU -->\r\n    <section class=\"share-section\">\r\n      <h2>Compartir Menú</h2>\r\n      <div class=\"share-buttons\">\r\n        <button @click=\"shareByWhatsApp\" class=\"whatsapp-button\">\r\n          <span class=\"emoji\">📱</span> Compartir en WhatsApp\r\n        </button>\r\n        <button @click=\"copyLink\" class=\"copy-button\">\r\n          <span class=\"emoji\">📋</span> Copiar Enlace\r\n        </button>\r\n      </div>\r\n      <p v-if=\"showCopiedMessage\" class=\"copied-message\">¡Enlace copiado al portapapeles!</p>\r\n      <p v-if=\"shareLink\" class=\"share-link\">\r\n        Enlace para compartir: <a :href=\"shareLink\" target=\"_blank\">{{ shareLink }}</a>\r\n      </p>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { saveMenu } from '../services/menuService';\r\nimport { formatShareLinkMessage } from '../utils/messageFormatter';\r\nimport SalesChartComponent from './SalesChartComponent.vue';\r\nimport { saveAs } from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { \r\n  getMenuItems, \r\n  saveMenuItems, \r\n  getBusinessInfo, \r\n  saveBusinessInfo as saveBusinessInfoToDB, // Renombrar función importada para evitar colisión\r\n  getSoldItems, \r\n  saveSoldItems,\r\n  deleteMenuItemFromDB,\r\n  migrateFromLocalStorage,\r\n  compressImage\r\n} from '../services/storageService';\r\nimport { confirm, alert } from '../services/dialogService'; // Modificado: importar también alert\r\n\r\nexport default {\r\n  name: 'MenuComponent',\r\n  components: {\r\n    SalesChartComponent\r\n  },\r\n  setup() {\r\n    // Estado para información del negocio\r\n    const businessInfo = ref({\r\n      name: '',\r\n      description: '',\r\n      contact: '',\r\n      address: '',\r\n      logo: ''\r\n    });\r\n    const showBusinessForm = ref(false);\r\n\r\n    // Estado para platos del menú\r\n    const newItem = ref({\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      includesDrink: false,\r\n      availableQuantity: 0,\r\n      image: '',\r\n      id: null\r\n    });\r\n    const menuItems = ref([]);\r\n    const showMenuForm = ref(false);\r\n    const isEditing = ref(false);\r\n    const editingIndex = ref(-1);\r\n\r\n    // Estado para ventas e inventario\r\n    const soldItems = ref([]);\r\n    const searchTerm = ref('');\r\n    const sortBy = ref('');\r\n    const categoryFilter = ref('');\r\n    const selectedChartType = ref('bar');\r\n\r\n    // Estado para compartir\r\n    const shareLink = ref('');\r\n    const showCopiedMessage = ref(false);\r\n    \r\n    // Estado para mostrar progreso de migración\r\n    const migrationStatus = ref({\r\n      inProgress: false,\r\n      completed: false,\r\n      message: ''\r\n    });\r\n\r\n    // Estado para errores del gráfico\r\n    const chartError = ref(null);\r\n    \r\n    // Manejar errores del gráfico\r\n    const handleChartError = (error) => {\r\n      console.error(\"Error en el gráfico:\", error);\r\n      chartError.value = error;\r\n    };\r\n\r\n    // Estado para mensajes de notificación\r\n    const notification = ref({\r\n      show: false,\r\n      message: '',\r\n      type: 'success', // 'success', 'error'\r\n      timeout: null\r\n    });\r\n\r\n    // Cargar datos guardados\r\n    onMounted(async () => {\r\n      try {\r\n        // Mostrar estado de carga\r\n        migrationStatus.value.inProgress = true;\r\n        migrationStatus.value.message = 'Cargando datos...';\r\n        \r\n        // Primero intentar migrar desde localStorage si existen datos\r\n        const hasLocalData = localStorage.getItem('businessInfo') || \r\n                         localStorage.getItem('menuItems') ||\r\n                         localStorage.getItem('soldItems');\r\n          \r\n        if (hasLocalData) {\r\n          migrationStatus.value.message = 'Migrando datos desde localStorage a IndexedDB...';\r\n          \r\n          const migrationResult = await migrateFromLocalStorage();\r\n          \r\n          if (migrationResult) {\r\n            migrationStatus.value.completed = true;\r\n            migrationStatus.value.message = 'Migración completada exitosamente';\r\n            \r\n            // Limpiar localStorage después de migrar exitosamente\r\n            localStorage.removeItem('businessInfo');\r\n            localStorage.removeItem('menuItems');\r\n            localStorage.removeItem('soldItems');\r\n          } else {\r\n            migrationStatus.value.message = 'Error en la migración de datos';\r\n          }\r\n        }\r\n\r\n        // Cargar datos desde IndexedDB (siempre, independientemente de si hubo migración)\r\n        const dbBusinessInfo = await getBusinessInfo();\r\n        if (dbBusinessInfo && dbBusinessInfo.name) {\r\n          businessInfo.value = dbBusinessInfo;\r\n        }\r\n\r\n        // Cargar menú desde IndexedDB\r\n        const dbMenuItems = await getMenuItems();\r\n        if (dbMenuItems && dbMenuItems.length > 0) {\r\n          // Asegurarse de eliminar duplicados usando IDs únicos\r\n          const uniqueItems = removeDuplicates(dbMenuItems);\r\n          menuItems.value = uniqueItems;\r\n          \r\n          // Si hubo diferencias, guardar la lista corregida de vuelta en IndexedDB\r\n          if (uniqueItems.length < dbMenuItems.length) {\r\n            console.log(`Se eliminaron ${dbMenuItems.length - uniqueItems.length} elementos duplicados del menú`);\r\n            await saveMenuItems(uniqueItems);\r\n          }\r\n        }\r\n\r\n        // Cargar ventas desde IndexedDB y asegurar que tengan fecha\r\n        const dbSoldItems = await getSoldItems();\r\n        if (dbSoldItems && dbSoldItems.length > 0) {\r\n          // Asegurarse que todos los items tienen fecha\r\n          const currentDate = new Date().toISOString();\r\n          const updatedSoldItems = dbSoldItems.map(item => {\r\n            if (!item.date) {\r\n              return {\r\n                ...item,\r\n                date: currentDate\r\n              };\r\n            }\r\n            return item;\r\n          });\r\n          \r\n          // Si se actualizó algún item, guardar cambios\r\n          if (dbSoldItems.some(item => !item.date)) {\r\n            await saveSoldItems(updatedSoldItems);\r\n          }\r\n          \r\n          soldItems.value = updatedSoldItems;\r\n        }\r\n        \r\n        // Finalizar estado de carga\r\n        setTimeout(() => {\r\n          migrationStatus.value.inProgress = false;\r\n        }, 1500);\r\n      } catch (error) {\r\n        console.error('Error al cargar datos:', error);\r\n        migrationStatus.value.message = 'Error al cargar datos: ' + error.message;\r\n        setTimeout(() => {\r\n          migrationStatus.value.inProgress = false;\r\n        }, 3000);\r\n      }\r\n    });\r\n\r\n    // Función para eliminar duplicados basados en ID\r\n    const removeDuplicates = (items) => {\r\n      const seen = new Map();\r\n      return items.filter(item => {\r\n        // Si el elemento no tiene ID, generamos uno\r\n        if (!item.id) {\r\n          item.id = Date.now() + Math.random().toString(36).substring(2, 10);\r\n        }\r\n        \r\n        // Si ya hemos visto este ID, es un duplicado\r\n        if (seen.has(item.id)) {\r\n          return false;\r\n        }\r\n        \r\n        // De lo contrario, marcamos como visto y lo conservamos\r\n        seen.set(item.id, true);\r\n        return true;\r\n      });\r\n    };\r\n\r\n    // Métodos para información del negocio\r\n    const toggleBusinessForm = () => {\r\n      showBusinessForm.value = !showBusinessForm.value;\r\n    };\r\n\r\n    const onLogoChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          // Comprimir la imagen antes de guardarla\r\n          const compressedLogo = await compressImage(e.target.result);\r\n          businessInfo.value.logo = compressedLogo;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const saveBusinessInfo = async () => {\r\n      try {\r\n        // Limpiar cualquier timeout anterior\r\n        if (notification.value.timeout) {\r\n          clearTimeout(notification.value.timeout);\r\n        }\r\n        \r\n        // Llamar a la función importada correctamente\r\n        await saveBusinessInfoToDB(businessInfo.value);\r\n        \r\n        // Mostrar notificación de éxito\r\n        notification.value = {\r\n          show: true,\r\n          message: 'Información del negocio guardada con éxito!',\r\n          type: 'success',\r\n          timeout: setTimeout(() => {\r\n            notification.value.show = false;\r\n          }, 3000) // Desaparece después de 3 segundos\r\n        };\r\n      } catch (error) {\r\n        console.error('Error al guardar información del negocio:', error);\r\n        \r\n        // Mostrar notificación de error\r\n        notification.value = {\r\n          show: true,\r\n          message: 'Error al guardar la información. Por favor, intenta nuevamente.',\r\n          type: 'error',\r\n          timeout: setTimeout(() => {\r\n            notification.value.show = false;\r\n          }, 3000) // Desaparece después de 3 segundos\r\n        };\r\n      }\r\n    };\r\n\r\n    const clearBusinessForm = async () => {\r\n      // Reemplazar window.confirm con nuestro servicio de diálogo\r\n      const confirmed = await confirm('¿Estás seguro de querer limpiar el formulario?');\r\n      if (confirmed) {\r\n        businessInfo.value = {\r\n          name: '',\r\n          description: '',\r\n          contact: '',\r\n          address: '',\r\n          logo: ''\r\n        };\r\n      }\r\n    };\r\n\r\n    // Métodos para platos del menú\r\n    const toggleMenuForm = () => {\r\n      showMenuForm.value = !showMenuForm.value;\r\n      if (!showMenuForm.value) {\r\n        clearMenuForm();\r\n      }\r\n    };\r\n\r\n    const onImageChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          // Comprimir la imagen antes de guardarla\r\n          const compressedImage = await compressImage(e.target.result);\r\n          newItem.value.image = compressedImage;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const saveMenuItem = async () => {\r\n      try {\r\n        if (!newItem.value.id) {\r\n          newItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\r\n        }\r\n        \r\n        if (isEditing.value) {\r\n          // Actualizar plato existente\r\n          const index = menuItems.value.findIndex(item => item.id === newItem.value.id);\r\n          if (index !== -1) {\r\n            menuItems.value[index] = { ...newItem.value };\r\n          }\r\n          isEditing.value = false;\r\n          editingIndex.value = -1;\r\n          await alert('Plato actualizado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\r\n        } else {\r\n          // Verificar si ya existe un plato con el mismo nombre\r\n          const existingItem = menuItems.value.find(item => \r\n            item.name.toLowerCase() === newItem.value.name.toLowerCase()\r\n          );\r\n          \r\n          if (existingItem) {\r\n            // Reemplazar window.confirm con nuestro servicio de diálogo\r\n            const confirmed = await confirm(\r\n              `Ya existe un plato llamado \"${newItem.value.name}\". ¿Desea actualizarlo?`,\r\n              { title: 'Actualizar plato existente' }\r\n            );\r\n            \r\n            if (confirmed) {\r\n              // Actualizar el plato existente pero conservar su ID\r\n              const index = menuItems.value.findIndex(item => item.id === existingItem.id);\r\n              if (index !== -1) {\r\n                newItem.value.id = existingItem.id; // Mantener el ID original\r\n                menuItems.value[index] = { ...newItem.value };\r\n                await alert('Plato actualizado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\r\n              }\r\n            } else {\r\n              // Usuario decidió no sobrescribir, no hacemos nada\r\n              return;\r\n            }\r\n          } else {\r\n            // Crear nuevo plato\r\n            menuItems.value.push({ ...newItem.value });\r\n            await alert('Plato creado con éxito!'); // Reemplazado: alert nativo por servicio personalizado\r\n          }\r\n        }\r\n        \r\n        // Guardar en IndexedDB\r\n        await saveMenuItems(menuItems.value);\r\n        \r\n        // Limpiar formulario\r\n        clearMenuForm();\r\n      } catch (error) {\r\n        console.error('Error al guardar el plato:', error);\r\n        await alert('Error al guardar el plato. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\r\n      }\r\n    };\r\n\r\n    const editMenuItem = (index) => {\r\n      newItem.value = { ...menuItems.value[index] };\r\n      isEditing.value = true;\r\n      editingIndex.value = index;\r\n      showMenuForm.value = true;\r\n    };\r\n\r\n    const deleteMenuItem = async (index) => {\r\n      // Reemplazar window.confirm con nuestro servicio de diálogo\r\n      const confirmed = await confirm('¿Estás seguro de querer eliminar este plato?', {\r\n        title: 'Eliminar plato',\r\n        confirmText: 'Eliminar',\r\n        cancelText: 'Cancelar'\r\n      });\r\n      \r\n      if (confirmed) {\r\n        try {\r\n          // Verificar que el índice es válido\r\n          if (index < 0 || index >= menuItems.value.length) {\r\n            console.error('Error: Índice fuera de rango', index);\r\n            await alert('Error: No se encontró el elemento a eliminar');\r\n            return;\r\n          }\r\n          \r\n          const item = menuItems.value[index];\r\n          console.log(`Eliminando plato: índice=${index}, nombre=${item.name}, id=${item.id}`);\r\n          \r\n          // Verificar que el ítem existe\r\n          if (!item) {\r\n            console.error('Error: Elemento del menú no encontrado en el índice', index);\r\n            await alert('Error: No se encontró el elemento a eliminar');\r\n            return;\r\n          }\r\n          \r\n          // Asegurarnos que item.name existe antes de buscar\r\n          const itemName = item.name || 'Producto sin nombre';\r\n          const currentDate = new Date().toISOString();\r\n          \r\n          // Agregar a vendidos antes de eliminar (simulación)\r\n          // Verificar primero que soldItems.value es un array\r\n          if (!Array.isArray(soldItems.value)) {\r\n            console.warn('soldItems.value no es un array, inicializando como array vacío');\r\n            soldItems.value = [];\r\n          }\r\n          \r\n          // Buscar de manera segura\r\n          const soldItem = soldItems.value.find(sold => \r\n            sold && typeof sold === 'object' && sold.name === itemName\r\n          );\r\n          \r\n          if (soldItem) {\r\n            // Si existe, aumentar la cantidad\r\n            soldItem.quantity += 1;\r\n            // Actualizar fecha\r\n            if (!soldItem.date || new Date(currentDate) > new Date(soldItem.date)) {\r\n              soldItem.date = currentDate;\r\n            }\r\n          } else {\r\n            // Crear un objeto limpio y serializable para el item vendido\r\n            const newSoldItem = {\r\n              name: itemName,\r\n              quantity: 1,\r\n              price: Number(item.price) || 0,\r\n              includesDrink: Boolean(item.includesDrink),\r\n              date: currentDate\r\n            };\r\n            \r\n            soldItems.value.push(newSoldItem);\r\n          }\r\n          \r\n          // Para garantizar que todos los elementos son serializables\r\n          const cleanSoldItems = soldItems.value.map(item => {\r\n            // Verificar primero que item es un objeto\r\n            if (!item || typeof item !== 'object') {\r\n              return {\r\n                name: 'Producto desconocido',\r\n                quantity: 1,\r\n                price: 0,\r\n                includesDrink: false,\r\n                date: currentDate\r\n              };\r\n            }\r\n            \r\n            return {\r\n              name: String(item.name || 'Producto desconocido'),\r\n              quantity: Number(item.quantity) || 1,\r\n              price: Number(item.price) || 0,\r\n              includesDrink: Boolean(item.includesDrink),\r\n              date: item.date || currentDate\r\n            };\r\n          });\r\n          \r\n          // Guardar vendidos en IndexedDB\r\n          await saveSoldItems(cleanSoldItems);\r\n          \r\n          // Eliminar del menú en IndexedDB - USAR LA FUNCIÓN RENOMBRADA\r\n          if (item.id) {\r\n            try {\r\n              console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\r\n              const deleteResult = await deleteMenuItemFromDB(item.id);\r\n              console.log(`Resultado de la eliminación: ${deleteResult}`);\r\n            } catch (deleteError) {\r\n              console.error('Error al eliminar item del almacén:', deleteError);\r\n              // Continuamos con el proceso aunque falle la eliminación en IndexedDB\r\n            }\r\n          }\r\n          \r\n          // Eliminar del array local\r\n          menuItems.value.splice(index, 1);\r\n          \r\n          // Actualizar también la versión local de soldItems\r\n          soldItems.value = cleanSoldItems;\r\n\r\n          console.log('Elemento eliminado correctamente del menú local');\r\n          \r\n        } catch (error) {\r\n          console.error('Error al eliminar el plato:', error);\r\n          await alert('Error al eliminar el plato. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\r\n        }\r\n      }\r\n    };\r\n\r\n    const sellMenuItem = async (index) => {\r\n      try {\r\n        const item = menuItems.value[index];\r\n        \r\n        // Verificar si hay unidades disponibles\r\n        if (item.availableQuantity <= 0) {\r\n          await alert('No hay unidades disponibles de este plato.'); // Reemplazado: alert nativo por servicio personalizado\r\n          return;\r\n        }\r\n        \r\n        // Reducir la cantidad disponible\r\n        item.availableQuantity--;\r\n        \r\n        // Actualizar lista de platos vendidos\r\n        const soldItem = soldItems.value.find(sold => sold.name === item.name);\r\n        const currentDate = new Date().toISOString();\r\n        \r\n        if (soldItem) {\r\n          soldItem.quantity += 1;\r\n          // Actualizar la fecha solo si es más reciente\r\n          if (!soldItem.date || new Date(currentDate) > new Date(soldItem.date)) {\r\n            soldItem.date = currentDate;\r\n          }\r\n        } else {\r\n          // Crear un objeto limpio y serializable para el item vendido\r\n          const newSoldItem = {\r\n            name: item.name || 'Producto sin nombre',\r\n            quantity: 1,\r\n            price: Number(item.price) || 0,\r\n            includesDrink: Boolean(item.includesDrink),\r\n            date: currentDate\r\n          };\r\n          \r\n          soldItems.value.push(newSoldItem);\r\n        }\r\n        \r\n        // Para garantizar que todos los elementos son serializables\r\n        const cleanSoldItems = soldItems.value.map(item => ({\r\n          name: String(item.name || 'Producto desconocido'),\r\n          quantity: Number(item.quantity) || 1,\r\n          price: Number(item.price) || 0,\r\n          includesDrink: Boolean(item.includesDrink),\r\n          date: item.date || currentDate // Asegurar que todos los items tienen fecha\r\n        }));\r\n        \r\n        // Guardar cambios en IndexedDB\r\n        await saveMenuItems(menuItems.value);\r\n        await saveSoldItems(cleanSoldItems);\r\n        \r\n        // Actualizar también la versión local de soldItems\r\n        soldItems.value = cleanSoldItems;\r\n        \r\n        // Mostrar confirmación\r\n        await alert(`Se ha vendido una unidad de \"${item.name}\"`); // Añadido: mensaje de confirmación de venta\r\n        \r\n      } catch (error) {\r\n        console.error('Error al vender el plato:', error);\r\n        await alert('Error al procesar la venta. Por favor, intenta nuevamente.'); // Reemplazado: alert nativo por servicio personalizado\r\n      }\r\n    };\r\n\r\n    const clearMenuForm = () => {\r\n      newItem.value = {\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        includesDrink: false,\r\n        availableQuantity: 0,\r\n        image: '',\r\n        id: null\r\n      };\r\n      isEditing.value = false;\r\n      editingIndex.value = -1;\r\n    };\r\n\r\n    // Métodos para compartir - VERSIÓN MEJORADA\r\n    const shareByWhatsApp = async () => {\r\n      try {\r\n        // Mostrar un indicador de carga\r\n        await alert('Procesando imágenes para compartir...'); // Reemplazado: alert nativo por servicio personalizado\r\n        \r\n        // Verificar el tamaño del menú\r\n        if (menuItems.value.length > 30) {\r\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.'); // Reemplazado: alert nativo por servicio personalizado\r\n          return;\r\n        }\r\n        \r\n        // Preparar una copia de los items más ligera para compartir\r\n        const itemsToShare = menuItems.value.map(item => ({\r\n          id: item.id,\r\n          name: item.name,\r\n          description: item.description,\r\n          price: item.price,\r\n          includesDrink: item.includesDrink,\r\n          // No incluir availableQuantity para menús compartidos\r\n          image: item.image // La imagen será procesada/comprimida en saveMenu\r\n        }));\r\n        \r\n        console.log(`Preparando para compartir ${itemsToShare.length} elementos...`);\r\n        \r\n        const menuId = await saveMenu(itemsToShare);\r\n        const url = `${window.location.origin}/menu/${menuId}`;\r\n        shareLink.value = url;\r\n        \r\n        const message = formatShareLinkMessage(url, businessInfo.value.name);\r\n        const whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\r\n        window.open(whatsappUrl, '_blank');\r\n      } catch (error) {\r\n        console.error('Error al compartir por WhatsApp:', error);\r\n        await alert(`Error al compartir el menú: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`); // Reemplazado: alert nativo por servicio personalizado\r\n      }\r\n    };\r\n\r\n    const copyLink = async () => {\r\n      try {\r\n        // Mostrar un indicador de carga\r\n        const loadingMessage = 'Procesando imágenes para compartir...';\r\n        showCopiedMessage.value = true;\r\n        \r\n        // Verificar el tamaño del menú\r\n        if (menuItems.value.length > 30) {\r\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.'); // Reemplazado: alert nativo por servicio personalizado\r\n          showCopiedMessage.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Preparar una copia de los items más ligera para compartir\r\n        const itemsToShare = menuItems.value.map(item => ({\r\n          id: item.id,\r\n          name: item.name,\r\n          description: item.description,\r\n          price: item.price,\r\n          includesDrink: item.includesDrink,\r\n          // No incluir availableQuantity para menús compartidos\r\n          image: item.image // La imagen será procesada/comprimida en saveMenu\r\n        }));\r\n        \r\n        const menuId = await saveMenu(itemsToShare);\r\n        const url = `${window.location.origin}/menu/${menuId}`;\r\n        shareLink.value = url;\r\n        \r\n        try {\r\n          await navigator.clipboard.writeText(url);\r\n          showCopiedMessage.value = true;\r\n          setTimeout(() => {\r\n            showCopiedMessage.value = false;\r\n          }, 3000);\r\n        } catch (clipboardError) {\r\n          console.error('Error al copiar al portapapeles:', clipboardError);\r\n          // Ofrecer forma manual de copiar con nuestro servicio de diálogo\r\n          await alert('No se pudo copiar automáticamente. Por favor, copia manualmente este enlace: ' + url); // Reemplazado: prompt nativo por servicio personalizado\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al generar enlace para compartir:', error);\r\n        showCopiedMessage.value = false;\r\n        await alert(`Error al generar el enlace: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`); // Reemplazado: alert nativo por servicio personalizado\r\n      }\r\n    };\r\n\r\n    // Computados\r\n    const totalSales = computed(() => {\r\n      return soldItems.value.reduce((total, item) => {\r\n        return total + (item.quantity * item.price);\r\n      }, 0);\r\n    });\r\n\r\n    // Formateo de precios con separador de miles (punto) y decimales (coma)\r\n    const formatPrice = (price) => {\r\n      // Asegurarse que price es un número\r\n      if (isNaN(Number(price))) return '0,00';\r\n      \r\n      // Convertir a número, fijar 2 decimales y convertir a string\r\n      const fixed = Number(price).toFixed(2);\r\n      \r\n      // Separar parte entera y decimal\r\n      const [intPart, decPart] = fixed.split('.');\r\n      \r\n      // Formatear parte entera con puntos como separadores de miles\r\n      const formattedIntPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n      \r\n      // Unir con coma como separador decimal\r\n      return `${formattedIntPart},${decPart}`;\r\n    };\r\n    \r\n    // Función para formatear fechas\r\n    const formatDate = (dateStr) => {\r\n      if (!dateStr) return 'N/A';\r\n      const date = new Date(dateStr);\r\n      if (isNaN(date.getTime())) return 'Fecha inválida';\r\n      return new Intl.DateTimeFormat('es-ES', {\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        year: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      }).format(date);\r\n    };\r\n\r\n    // Filtrado de platos vendidos\r\n    const filteredSoldItems = computed(() => {\r\n      let items = soldItems.value;\r\n      \r\n      // Si items no es un array, devolver un array vacío\r\n      if (!Array.isArray(items)) {\r\n        console.warn('soldItems no es un array. Devolviendo array vacío.');\r\n        return [];\r\n      }\r\n      \r\n      // Filtrar por término de búsqueda\r\n      if (searchTerm.value) {\r\n        const term = searchTerm.value.toLowerCase();\r\n        items = items.filter(item => {\r\n          // Validar que item.name existe antes de usar toLowerCase()\r\n          return item && item.name && typeof item.name === 'string' && \r\n                 item.name.toLowerCase().includes(term);\r\n        });\r\n      }\r\n      \r\n      // Filtrar por categoría de forma segura\r\n      if (categoryFilter.value) {\r\n        if (categoryFilter.value === 'drinks') {\r\n          items = items.filter(item => Boolean(item && item.includesDrink));\r\n        } else if (categoryFilter.value === 'nodrinks') {\r\n          items = items.filter(item => item && item.includesDrink === false);\r\n        }\r\n      }\r\n      \r\n      // Ordenar según el criterio seleccionado\r\n      if (sortBy.value) {\r\n        items = [...items]; // Crear una copia para no mutar el original\r\n        \r\n        switch (sortBy.value) {\r\n          case 'name':\r\n            items.sort((a, b) => {\r\n              // Validar que a.name y b.name existen\r\n              if (!a || !a.name) return 1;\r\n              if (!b || !b.name) return -1;\r\n              return a.name.localeCompare(b.name);\r\n            });\r\n            break;\r\n          case 'quantity-desc':\r\n            items.sort((a, b) => {\r\n              // Validar que a.quantity y b.quantity son números\r\n              const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\r\n              const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\r\n              return qtyB - qtyA;\r\n            });\r\n            break;\r\n          case 'quantity-asc':\r\n            items.sort((a, b) => {\r\n              const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\r\n              const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\r\n              return qtyA - qtyB;\r\n            });\r\n            break;\r\n          case 'price-desc':\r\n            items.sort((a, b) => {\r\n              const priceA = (a && typeof a.price === 'number') ? a.price : 0;\r\n              const priceB = (b && typeof b.price === 'number') ? b.price : 0;\r\n              return priceB - priceA;\r\n            });\r\n            break;\r\n          case 'price-asc':\r\n            items.sort((a, b) => {\r\n              const priceA = (a && typeof a.price === 'number') ? a.price : 0;\r\n              const priceB = (b && typeof b.price === 'number') ? b.price : 0;\r\n              return priceA - priceB;\r\n            });\r\n            break;\r\n          case 'date-desc':\r\n            items.sort((a, b) => {\r\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\r\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\r\n              return dateB - dateA; // De más reciente a más antiguo\r\n            });\r\n            break;\r\n          case 'date-asc':\r\n            items.sort((a, b) => {\r\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\r\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\r\n              return dateA - dateB; // De más antiguo a más reciente\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      \r\n      return items;\r\n    });\r\n\r\n    // Exportar datos\r\n    const exportToExcel = () => {\r\n      // Crear un array con los datos a exportar\r\n      const data = [\r\n        ['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal'],\r\n        ...filteredSoldItems.value.map(item => [\r\n          item.name,\r\n          item.includesDrink ? 'Con refresco' : 'Sin refresco',\r\n          item.quantity,\r\n          `$${formatPrice(item.price)}`,\r\n          formatDate(item.date),\r\n          `$${formatPrice(item.quantity * item.price)}`\r\n        ]),\r\n        ['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]\r\n      ];\r\n\r\n      // Crear un libro de Excel y una hoja de cálculo\r\n      const ws = XLSX.utils.aoa_to_sheet(data);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, 'Ventas');\r\n\r\n      // Generar el archivo Excel y descargarlo\r\n      const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n      const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      saveAs(blob, `ventas_${new Date().toLocaleDateString()}.xlsx`);\r\n    };\r\n\r\n    const exportToPDF = () => {\r\n      // Crear un nuevo documento PDF\r\n      const doc = new jsPDF();\r\n      \r\n      // Añadir título\r\n      doc.setFontSize(18);\r\n      doc.text('Reporte de Ventas', 14, 22);\r\n      doc.setFontSize(11);\r\n      doc.text(`Fecha: ${new Date().toLocaleDateString()}`, 14, 32);\r\n\r\n      // Crear la tabla con los datos\r\n      const tableData = filteredSoldItems.value.map(item => [\r\n        item.name,\r\n        item.includesDrink ? 'Con refresco' : 'Sin refresco',\r\n        item.quantity,\r\n        `$${formatPrice(item.price)}`,\r\n        formatDate(item.date),\r\n        `$${formatPrice(item.quantity * item.price)}`\r\n      ]);\r\n\r\n      // Añadir la tabla\r\n      doc.autoTable({\r\n        head: [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal']],\r\n        body: tableData,\r\n        foot: [['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]],\r\n        startY: 40,\r\n        theme: 'striped',\r\n        headStyles: { fillColor: [76, 175, 80] },\r\n        footStyles: { fillColor: [240, 240, 240], textColor: [0, 0, 0], fontStyle: 'bold' }\r\n      });\r\n\r\n      // Guardar el PDF de exportación\r\n      doc.save(`ventas_${new Date().toLocaleDateString()}.pdf`);\r\n    };\r\n\r\n    return {\r\n      // Negocio\r\n      businessInfo,\r\n      showBusinessForm,\r\n      toggleBusinessForm,\r\n      onLogoChange,\r\n      saveBusinessInfo,\r\n      clearBusinessForm,\r\n\r\n      // Menú\r\n      newItem,\r\n      menuItems,\r\n      showMenuForm,\r\n      isEditing,\r\n      toggleMenuForm,\r\n      onImageChange,\r\n      saveMenuItem,\r\n      editMenuItem,\r\n      deleteMenuItem,\r\n      sellMenuItem,\r\n      clearMenuForm,\r\n\r\n      // Ventas\r\n      soldItems,\r\n      totalSales,\r\n      searchTerm,\r\n      sortBy,\r\n      categoryFilter,\r\n      filteredSoldItems,\r\n      formatPrice,\r\n      selectedChartType,\r\n      \r\n      // Métodos de exportación\r\n      exportToExcel,\r\n      exportToPDF,\r\n\r\n      // Compartir\r\n      shareLink,\r\n      showCopiedMessage,\r\n      shareByWhatsApp,\r\n      copyLink,\r\n      \r\n      // Estado de migración\r\n      migrationStatus,\r\n      \r\n      // Función para eliminar duplicados\r\n      removeDuplicates,\r\n\r\n      // Errores del gráfico\r\n      chartError,\r\n      handleChartError,\r\n\r\n      // Notificaciones\r\n      notification,\r\n      formatDate\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.menu-container {\r\n  padding: 20px;\r\n}\r\n\r\nsection {\r\n  margin-bottom: 40px;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n}\r\n\r\nh2 {\r\n  color: #333;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.toggle-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.toggle-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\nform {\r\n  display: grid;\r\n  gap: 15px;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n}\r\n\r\ninput, textarea, select {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 15px;\r\n}\r\n\r\n.save-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  flex: 1;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.clear-button {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  flex: 1;\r\n}\r\n\r\n.clear-button:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.business-preview {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n/* Mejoras a la lista de platos */\r\n.menu-items-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.menu-item-card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.menu-item-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n}\r\n\r\n.menu-item-image-container {\r\n  width: 100%;\r\n  height: 200px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.menu-item-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform 0.5s ease;\r\n}\r\n\r\n.menu-item-card:hover .menu-item-image {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.no-image-placeholder {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  color: #999;\r\n  font-style: italic;\r\n}\r\n\r\n.menu-item-details {\r\n  padding: 15px;\r\n  flex-grow: 1;\r\n}\r\n\r\n.menu-item-details h3 {\r\n  margin-top: 0;\r\n  color: #333;\r\n  font-size: 18px;\r\n}\r\n\r\n.menu-item-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  padding: 0 15px 15px;\r\n}\r\n\r\n.edit-button, .sell-button, .delete-button {\r\n  flex: 1;\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.edit-button {\r\n  background-color: #ffc107;\r\n  color: #212529;\r\n}\r\n\r\n.edit-button:hover {\r\n  background-color: #e0a800;\r\n}\r\n\r\n.sell-button {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.sell-button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.delete-button {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.delete-button:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n/* Mejoras a la sección de inventario */\r\n.inventory-section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.inventory-controls {\r\n  margin-bottom: 20px;\r\n  display: grid;\r\n  gap: 15px;\r\n  grid-template-columns: 1fr;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .inventory-controls {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n}\r\n\r\n.inventory-search-input {\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.inventory-filters, \r\n.inventory-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.inventory-filter {\r\n  flex: 1;\r\n  min-width: 150px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  background-color: white;\r\n}\r\n\r\n.export-button {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.export-button.excel {\r\n  background-color: #1D6F42;\r\n  color: white;\r\n}\r\n\r\n.export-button.excel:hover {\r\n  background-color: #165235;\r\n}\r\n\r\n.export-button.pdf {\r\n  background-color: #F40F02;\r\n  color: white;\r\n}\r\n\r\n.export-button.pdf:hover {\r\n  background-color: #C90C02;\r\n}\r\n\r\n.action-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.sales-chart-container {\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n  min-height: 300px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.empty-chart-message {\r\n  color: #666;\r\n  font-style: italic;\r\n  text-align: center;\r\n  width: 100%;\r\n  padding: 50px 20px;\r\n}\r\n\r\n.sales-chart {\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n.inventory-table {\r\n  overflow-x: auto;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 15px;\r\n  text-align: left;\r\n}\r\n\r\nthead {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\nthead th {\r\n  font-weight: 600;\r\n}\r\n\r\ntbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.alternate-row {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\ntfoot {\r\n  background-color: #e9e9e9;\r\n  font-weight: bold;\r\n}\r\n\r\ntfoot td {\r\n  padding: 12px 15px;\r\n}\r\n\r\n/* Mejoras a la sección de inventario */\r\n.inventory-section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.inventory-controls {\r\n  margin-bottom: 20px;\r\n  display: grid;\r\n  gap: 15px;\r\n  grid-template-columns: 1fr;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .inventory-controls {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n}\r\n\r\n.inventory-search-input {\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.inventory-filters, \r\n.inventory-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.inventory-filter {\r\n  flex: 1;\r\n  min-width: 150px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  background-color: white;\r\n}\r\n\r\n.export-button {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.export-button.excel {\r\n  background-color: #1D6F42;\r\n  color: white;\r\n}\r\n\r\n.export-button.excel:hover {\r\n  background-color: #165235;\r\n}\r\n\r\n.export-button.pdf {\r\n  background-color: #F40F02;\r\n  color: white;\r\n}\r\n\r\n.export-button.pdf:hover {\r\n  background-color: #C90C02;\r\n}\r\n\r\n.action-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.sales-chart {\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n.inventory-table {\r\n  overflow-x: auto;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 15px;\r\n  text-align: left;\r\n}\r\n\r\nthead {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\nthead th {\r\n  font-weight: 600;\r\n}\r\n\r\ntbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.alternate-row {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\ntfoot {\r\n  background-color: #e9e9e9;\r\n  font-weight: bold;\r\n}\r\n\r\ntfoot td {\r\n  padding: 12px 15px;\r\n}\r\n\r\n.share-buttons {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.whatsapp-button, .copy-button {\r\n  flex: 1;\r\n  padding: 12px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.whatsapp-button {\r\n  background-color: #25D366;\r\n  color: white;\r\n}\r\n\r\n.whatsapp-button:hover {\r\n  background-color: #128C7E;\r\n}\r\n\r\n.copy-button {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.copy-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n.emoji {\r\n  font-size: 1.2em;\r\n  margin-right: 8px;\r\n}\r\n\r\n.copied-message {\r\n  color: #28a745;\r\n  margin-top: 10px;\r\n}\r\n\r\n.share-link {\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  word-break: break-all;\r\n}\r\n\r\n.migration-status {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  background-color: #ffeb3b;\r\n  color: #333;\r\n  padding: 15px 20px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n  max-width: 300px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.migration-status.completed {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.migration-message {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.loading-spinner {\r\n  display: inline-block;\r\n  width: 18px;\r\n  height: 18px;\r\n  border: 3px solid rgba(0, 0, 0, 0.1);\r\n  border-radius: 50%;\r\n  border-top-color: #333;\r\n  animation: spin 1s ease-in-out infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n/* Estilos para notificaciones */\r\n.notification {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  padding: 15px 20px;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  z-index: 1001;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  min-width: 300px;\r\n  max-width: 500px;\r\n  animation: slide-in 0.3s ease-out;\r\n}\r\n\r\n.notification.success {\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.notification.error {\r\n  background-color: #f44336;\r\n}\r\n\r\n.notification-close {\r\n  background: transparent;\r\n  border: none;\r\n  color: white;\r\n  font-size: 20px;\r\n  margin-left: 15px;\r\n  cursor: pointer;\r\n  padding: 0 5px;\r\n}\r\n\r\n@keyframes slide-in {\r\n  from {\r\n    transform: translateX(100%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}