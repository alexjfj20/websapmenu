{"ast":null,"code":"import { ref, reactive, computed, onMounted, onUnmounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport eventBus from '@/utils/eventBus';\nexport default {\n  __name: 'WhatsAppSimulator',\n  setup(__props, {\n    expose: __expose\n  }) {\n    const route = useRoute();\n    const showSimulator = ref(false);\n    const isProcessing = ref(false);\n    const status = ref(null);\n    const buttonEnabled = ref(true);\n\n    // Determinar si estamos en la vista de login\n    const isLoginPage = computed(() => {\n      const isLoginRoute = route.name === 'login';\n      const isLoginPath = route.path === '/login' || route.path === '/login/';\n      console.log(`WhatsAppSimulator - Route check: name=${route.name}, path=${route.path}, isLoginRoute=${isLoginRoute}, isLoginPath=${isLoginPath}`);\n      return isLoginRoute || isLoginPath;\n    });\n\n    // Determinar si estamos en la vista de men√∫ compartido\n    const isSharedMenuView = computed(() => {\n      return route.name === 'shared-menu' || route.path.startsWith('/menu/');\n    });\n\n    // Determinar si debemos mostrar el simulador basado en la p√°gina actual y la configuraci√≥n\n    const shouldShowSimulator = computed(() => {\n      // No mostrar en login o menu compartido (l√≥gica existente)\n      const showBasedOnRoute = !isLoginPage.value && !isSharedMenuView.value;\n      // No mostrar si est√° desactivado en la configuraci√≥n\n      const result = showBasedOnRoute && buttonEnabled.value;\n      console.log(`WhatsAppSimulator - Visibility check: isLoginPage=${isLoginPage.value}, isSharedMenuView=${isSharedMenuView.value}, shouldShow=${result}`);\n      return result;\n    });\n\n    // Funci√≥n que maneja los cambios en la configuraci√≥n del bot√≥n\n    const handleConfigChange = isEnabled => {\n      console.log(`WhatsAppSimulator - Config changed: button enabled = ${isEnabled}`);\n      buttonEnabled.value = isEnabled;\n    };\n\n    // Cargar la configuraci√≥n al montar el componente\n    onMounted(() => {\n      console.log(`WhatsAppSimulator - Component mounted on route: ${route.name} (${route.path})`);\n\n      // Cargar configuraci√≥n del bot√≥n desde localStorage\n      const storedValue = localStorage.getItem('whatsappButtonEnabled');\n      if (storedValue !== null) {\n        buttonEnabled.value = storedValue === 'true';\n        console.log(`WhatsAppSimulator - Loaded config: button enabled = ${buttonEnabled.value}`);\n      }\n\n      // Escuchar eventos de cambio de configuraci√≥n\n      eventBus.on('whatsapp-button-config-changed', handleConfigChange);\n    });\n\n    // Limpiar suscripciones al desmontar el componente\n    onUnmounted(() => {\n      eventBus.off('whatsapp-button-config-changed', handleConfigChange);\n    });\n\n    // Datos de la reserva\n    const reservationData = reactive({\n      nombre: '',\n      telefono: '',\n      email: '',\n      fecha: new Date().toISOString().split('T')[0],\n      hora: '20:00',\n      personas: 2,\n      notas: ''\n    });\n\n    // Funci√≥n para mostrar/ocultar el simulador\n    const toggleSimulator = () => {\n      showSimulator.value = !showSimulator.value;\n    };\n\n    // Funci√≥n para enviar la reserva\n    const sendReservation = async () => {\n      try {\n        isProcessing.value = true;\n        status.value = {\n          type: 'info',\n          message: 'Enviando reserva...'\n        };\n\n        // Validar datos m√≠nimos\n        if (!reservationData.nombre || !reservationData.telefono) {\n          alert('Por favor, completa al menos el nombre y tel√©fono');\n          status.value = {\n            type: 'error',\n            message: 'Faltan datos obligatorios'\n          };\n          return;\n        }\n        console.log('Enviando reserva desde WhatsApp Simulator:', reservationData);\n\n        // Construir el mensaje de WhatsApp\n        const message = `\n*NUEVA RESERVA DE MESA*\n---------------------------\n*Nombre:* ${reservationData.nombre}\n*Tel√©fono m√≥vil:* ${reservationData.telefono}\n${reservationData.email ? `*Email:* ${reservationData.email}` : ''}\n*Fecha:* ${reservationData.fecha}\n*Hora:* ${reservationData.hora}\n*Personas:* ${reservationData.personas}\n${reservationData.notas ? `*Notas:* ${reservationData.notas}` : ''}\n---------------------------\nReserva enviada desde WhatsApp Simulator\n`;\n\n        // Emitir el evento con el mensaje\n        console.log('Emitiendo evento whatsapp-message con el mensaje:', message);\n        eventBus.emit('whatsapp-message', message);\n\n        // Emitir evento para refrescar la lista de reservas\n        console.log('Emitiendo evento refresh-reservations');\n        eventBus.emit('refresh-reservations');\n\n        // Mostrar confirmaci√≥n\n        status.value = {\n          type: 'success',\n          message: 'Reserva enviada correctamente'\n        };\n\n        // Limpiar formulario\n        clearForm();\n      } catch (error) {\n        console.error('Error al enviar reserva:', error);\n        status.value = {\n          type: 'error',\n          message: 'Error al enviar la reserva: ' + error.message\n        };\n      } finally {\n        isProcessing.value = false;\n\n        // Ocultar el mensaje despu√©s de 5 segundos\n        setTimeout(() => {\n          status.value = null;\n        }, 5000);\n      }\n    };\n\n    // Funci√≥n para limpiar el formulario\n    const clearForm = () => {\n      reservationData.nombre = '';\n      reservationData.telefono = '';\n      reservationData.email = '';\n      reservationData.fecha = new Date().toISOString().split('T')[0];\n      reservationData.hora = '20:00';\n      reservationData.personas = 2;\n      reservationData.notas = '';\n    };\n\n    // Exponer funciones para uso externo\n    __expose({\n      toggleSimulator,\n      sendReservation\n    });\n    const __returned__ = {\n      route,\n      showSimulator,\n      isProcessing,\n      status,\n      buttonEnabled,\n      isLoginPage,\n      isSharedMenuView,\n      shouldShowSimulator,\n      handleConfigChange,\n      reservationData,\n      toggleSimulator,\n      sendReservation,\n      clearForm,\n      ref,\n      reactive,\n      computed,\n      onMounted,\n      onUnmounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","onUnmounted","useRoute","eventBus","route","showSimulator","isProcessing","status","buttonEnabled","isLoginPage","isLoginRoute","name","isLoginPath","path","console","log","isSharedMenuView","startsWith","shouldShowSimulator","showBasedOnRoute","value","result","handleConfigChange","isEnabled","storedValue","localStorage","getItem","on","off","reservationData","nombre","telefono","email","fecha","Date","toISOString","split","hora","personas","notas","toggleSimulator","sendReservation","type","message","alert","emit","clearForm","error","setTimeout","__expose"],"sources":["F:/Driver google/VUE.JS-2/VUE-JS/websap/src/components/WhatsAppSimulator.vue"],"sourcesContent":["<template>\n  <div class=\"whatsapp-simulator\" v-if=\"shouldShowSimulator\">\n    <button @click=\"toggleSimulator\" class=\"toggle-button\">\n      <span v-if=\"showSimulator\">‚ùå Cerrar Simulador</span>\n      <span v-else>üì± Simular WhatsApp</span>\n    </button>\n    \n    <div v-if=\"showSimulator\" class=\"simulator-panel\">\n      <h3>Simulador de Reservas WhatsApp</h3>\n      \n      <div class=\"form-group\">\n        <label for=\"nombre\">Nombre:</label>\n        <input type=\"text\" id=\"nombre\" v-model=\"reservationData.nombre\" placeholder=\"Nombre del cliente\">\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"telefono\">Tel√©fono:</label>\n        <input type=\"text\" id=\"telefono\" v-model=\"reservationData.telefono\" placeholder=\"612345678\">\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"reservationData.email\" placeholder=\"cliente@example.com\">\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"fecha\">Fecha:</label>\n        <input type=\"date\" id=\"fecha\" v-model=\"reservationData.fecha\">\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"hora\">Hora:</label>\n        <select id=\"hora\" v-model=\"reservationData.hora\">\n          <option value=\"13:00\">13:00</option>\n          <option value=\"13:30\">13:30</option>\n          <option value=\"14:00\">14:00</option>\n          <option value=\"14:30\">14:30</option>\n          <option value=\"20:00\">20:00</option>\n          <option value=\"20:30\">20:30</option>\n          <option value=\"21:00\">21:00</option>\n          <option value=\"21:30\">21:30</option>\n        </select>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"personas\">Personas:</label>\n        <select id=\"personas\" v-model=\"reservationData.personas\">\n          <option :value=\"1\">1 persona</option>\n          <option :value=\"2\">2 personas</option>\n          <option :value=\"3\">3 personas</option>\n          <option :value=\"4\">4 personas</option>\n          <option :value=\"5\">5 personas</option>\n          <option :value=\"6\">6 personas</option>\n          <option :value=\"8\">8 personas</option>\n        </select>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"notas\">Notas:</label>\n        <textarea id=\"notas\" v-model=\"reservationData.notas\" placeholder=\"Notas adicionales\"></textarea>\n      </div>\n      \n      <div class=\"buttons\">\n        <button @click=\"sendReservation\" class=\"send-button\" :disabled=\"isProcessing\">Enviar Reserva</button>\n      </div>\n      \n      <div v-if=\"status\" :class=\"['status', status.type]\">\n        {{ status.message }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, onMounted, onUnmounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport eventBus from '@/utils/eventBus';\n\nconst route = useRoute();\nconst showSimulator = ref(false);\nconst isProcessing = ref(false);\nconst status = ref(null);\nconst buttonEnabled = ref(true);\n\n// Determinar si estamos en la vista de login\nconst isLoginPage = computed(() => {\n  const isLoginRoute = route.name === 'login';\n  const isLoginPath = route.path === '/login' || route.path === '/login/';\n  console.log(`WhatsAppSimulator - Route check: name=${route.name}, path=${route.path}, isLoginRoute=${isLoginRoute}, isLoginPath=${isLoginPath}`);\n  return isLoginRoute || isLoginPath;\n});\n\n// Determinar si estamos en la vista de men√∫ compartido\nconst isSharedMenuView = computed(() => {\n  return route.name === 'shared-menu' || route.path.startsWith('/menu/');\n});\n\n// Determinar si debemos mostrar el simulador basado en la p√°gina actual y la configuraci√≥n\nconst shouldShowSimulator = computed(() => {\n  // No mostrar en login o menu compartido (l√≥gica existente)\n  const showBasedOnRoute = !isLoginPage.value && !isSharedMenuView.value;\n  // No mostrar si est√° desactivado en la configuraci√≥n\n  const result = showBasedOnRoute && buttonEnabled.value;\n  console.log(`WhatsAppSimulator - Visibility check: isLoginPage=${isLoginPage.value}, isSharedMenuView=${isSharedMenuView.value}, shouldShow=${result}`);\n  return result;\n});\n\n// Funci√≥n que maneja los cambios en la configuraci√≥n del bot√≥n\nconst handleConfigChange = (isEnabled) => {\n  console.log(`WhatsAppSimulator - Config changed: button enabled = ${isEnabled}`);\n  buttonEnabled.value = isEnabled;\n};\n\n// Cargar la configuraci√≥n al montar el componente\nonMounted(() => {\n  console.log(`WhatsAppSimulator - Component mounted on route: ${route.name} (${route.path})`);\n  \n  // Cargar configuraci√≥n del bot√≥n desde localStorage\n  const storedValue = localStorage.getItem('whatsappButtonEnabled');\n  if (storedValue !== null) {\n    buttonEnabled.value = storedValue === 'true';\n    console.log(`WhatsAppSimulator - Loaded config: button enabled = ${buttonEnabled.value}`);\n  }\n  \n  // Escuchar eventos de cambio de configuraci√≥n\n  eventBus.on('whatsapp-button-config-changed', handleConfigChange);\n});\n\n// Limpiar suscripciones al desmontar el componente\nonUnmounted(() => {\n  eventBus.off('whatsapp-button-config-changed', handleConfigChange);\n});\n\n// Datos de la reserva\nconst reservationData = reactive({\n  nombre: '',\n  telefono: '',\n  email: '',\n  fecha: new Date().toISOString().split('T')[0],\n  hora: '20:00',\n  personas: 2,\n  notas: ''\n});\n\n// Funci√≥n para mostrar/ocultar el simulador\nconst toggleSimulator = () => {\n  showSimulator.value = !showSimulator.value;\n};\n\n// Funci√≥n para enviar la reserva\nconst sendReservation = async () => {\n  try {\n    isProcessing.value = true;\n    status.value = { type: 'info', message: 'Enviando reserva...' };\n    \n    // Validar datos m√≠nimos\n    if (!reservationData.nombre || !reservationData.telefono) {\n      alert('Por favor, completa al menos el nombre y tel√©fono');\n      status.value = { type: 'error', message: 'Faltan datos obligatorios' };\n      return;\n    }\n    \n    console.log('Enviando reserva desde WhatsApp Simulator:', reservationData);\n    \n    // Construir el mensaje de WhatsApp\n    const message = `\n*NUEVA RESERVA DE MESA*\n---------------------------\n*Nombre:* ${reservationData.nombre}\n*Tel√©fono m√≥vil:* ${reservationData.telefono}\n${reservationData.email ? `*Email:* ${reservationData.email}` : ''}\n*Fecha:* ${reservationData.fecha}\n*Hora:* ${reservationData.hora}\n*Personas:* ${reservationData.personas}\n${reservationData.notas ? `*Notas:* ${reservationData.notas}` : ''}\n---------------------------\nReserva enviada desde WhatsApp Simulator\n`;\n    \n    // Emitir el evento con el mensaje\n    console.log('Emitiendo evento whatsapp-message con el mensaje:', message);\n    eventBus.emit('whatsapp-message', message);\n    \n    // Emitir evento para refrescar la lista de reservas\n    console.log('Emitiendo evento refresh-reservations');\n    eventBus.emit('refresh-reservations');\n    \n    // Mostrar confirmaci√≥n\n    status.value = { type: 'success', message: 'Reserva enviada correctamente' };\n    \n    // Limpiar formulario\n    clearForm();\n  } catch (error) {\n    console.error('Error al enviar reserva:', error);\n    status.value = { type: 'error', message: 'Error al enviar la reserva: ' + error.message };\n  } finally {\n    isProcessing.value = false;\n    \n    // Ocultar el mensaje despu√©s de 5 segundos\n    setTimeout(() => {\n      status.value = null;\n    }, 5000);\n  }\n};\n\n// Funci√≥n para limpiar el formulario\nconst clearForm = () => {\n  reservationData.nombre = '';\n  reservationData.telefono = '';\n  reservationData.email = '';\n  reservationData.fecha = new Date().toISOString().split('T')[0];\n  reservationData.hora = '20:00';\n  reservationData.personas = 2;\n  reservationData.notas = '';\n};\n\n// Exponer funciones para uso externo\ndefineExpose({\n  toggleSimulator,\n  sendReservation\n});\n</script>\n\n<style scoped>\n.whatsapp-simulator {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 1000;\n}\n\n.toggle-button {\n  background-color: #25D366;\n  color: white;\n  border: none;\n  border-radius: 50px;\n  padding: 10px 15px;\n  font-size: 14px;\n  cursor: pointer;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.toggle-button:hover {\n  background-color: #128C7E;\n}\n\n.simulator-panel {\n  position: absolute;\n  bottom: 50px;\n  right: 0;\n  width: 300px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n  padding: 15px;\n  max-height: 80vh;\n  overflow-y: auto;\n}\n\nh3 {\n  color: #128C7E;\n  margin-top: 0;\n  text-align: center;\n  font-size: 16px;\n}\n\n.form-group {\n  margin-bottom: 10px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n  font-size: 14px;\n  color: #333;\n}\n\ninput, select, textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\ntextarea {\n  height: 60px;\n  resize: vertical;\n}\n\n.buttons {\n  display: flex;\n  gap: 10px;\n  margin-top: 15px;\n}\n\n.send-button {\n  flex: 1;\n  padding: 8px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  background-color: #25D366;\n  color: white;\n}\n\n.send-button:hover {\n  background-color: #128C7E;\n}\n\n.send-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.status {\n  margin-top: 15px;\n  padding: 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  text-align: center;\n}\n\n.status.success {\n  background-color: #d4edda;\n  color: #155724;\n}\n\n.status.error {\n  background-color: #f8d7da;\n  color: #721c24;\n}\n\n.status.info {\n  background-color: #d1ecf1;\n  color: #0c5460;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}