{"ast":null,"code":"import WebSocketClient from './WebSocketClient';\nimport { ref } from 'vue';\n\n// Estado reactivo para usar en componentes\nexport const webSocketState = {\n  connected: ref(false),\n  error: ref(null),\n  lastMessage: ref(null),\n  reconnecting: ref(false)\n};\nlet wsClient = null;\n\n/**\r\n * Inicializar la conexión WebSocket\r\n * @param {String} url - URL del servidor WebSocket\r\n * @param {Object} options - Opciones de configuración\r\n */\nexport function initializeWebSocket(url, options = {}) {\n  // Si ya existe una conexión, la desconectamos\n  if (wsClient) {\n    wsClient.disconnect();\n  }\n\n  // Crear nueva conexión\n  wsClient = new WebSocketClient(url, options);\n\n  // Configurar listeners\n  wsClient.on('open', () => {\n    webSocketState.connected.value = true;\n    webSocketState.error.value = null;\n    webSocketState.reconnecting.value = false;\n    console.log('WebSocket conectado');\n  });\n  wsClient.on('message', event => {\n    try {\n      const message = JSON.parse(event.data);\n      webSocketState.lastMessage.value = message;\n    } catch (error) {\n      webSocketState.lastMessage.value = event.data;\n    }\n  });\n  wsClient.on('error', event => {\n    webSocketState.error.value = 'Error en la conexión WebSocket';\n    console.error('Error WebSocket:', event);\n  });\n  wsClient.on('close', () => {\n    webSocketState.connected.value = false;\n    webSocketState.reconnecting.value = true;\n  });\n\n  // Iniciar conexión\n  wsClient.connect();\n  return wsClient;\n}\n\n/**\r\n * Enviar mensaje a través del WebSocket\r\n * @param {any} data - Datos a enviar\r\n * @returns {boolean} - true si se envió correctamente\r\n */\nexport function sendMessage(data) {\n  if (!wsClient) {\n    console.error('WebSocket no inicializado. Llame a initializeWebSocket primero.');\n    return false;\n  }\n  return wsClient.send(data);\n}\n\n/**\r\n * Cerrar conexión WebSocket\r\n */\nexport function closeWebSocket() {\n  if (wsClient) {\n    wsClient.disconnect();\n    wsClient = null;\n    webSocketState.connected.value = false;\n    webSocketState.reconnecting.value = false;\n  }\n}\n\n/**\r\n * Comprobar si el WebSocket está conectado\r\n * @returns {boolean} - true si está conectado\r\n */\nexport function isConnected() {\n  return wsClient && wsClient.getState() === 'OPEN';\n}\n\n/**\r\n * Reconectar manualmente si la conexión se ha perdido\r\n */\nexport function reconnect() {\n  if (wsClient && wsClient.getState() !== 'OPEN') {\n    wsClient.connect();\n    webSocketState.reconnecting.value = true;\n  }\n}\nexport default {\n  initializeWebSocket,\n  sendMessage,\n  closeWebSocket,\n  isConnected,\n  reconnect,\n  state: webSocketState\n};","map":{"version":3,"names":["WebSocketClient","ref","webSocketState","connected","error","lastMessage","reconnecting","wsClient","initializeWebSocket","url","options","disconnect","on","value","console","log","event","message","JSON","parse","data","connect","sendMessage","send","closeWebSocket","isConnected","getState","reconnect","state"],"sources":["F:/Driver google/VUE.JS-2/temp/websap/src/services/webSocketService.js"],"sourcesContent":["import WebSocketClient from './WebSocketClient';\r\nimport { ref } from 'vue';\r\n\r\n// Estado reactivo para usar en componentes\r\nexport const webSocketState = {\r\n  connected: ref(false),\r\n  error: ref(null),\r\n  lastMessage: ref(null),\r\n  reconnecting: ref(false)\r\n};\r\n\r\nlet wsClient = null;\r\n\r\n/**\r\n * Inicializar la conexión WebSocket\r\n * @param {String} url - URL del servidor WebSocket\r\n * @param {Object} options - Opciones de configuración\r\n */\r\nexport function initializeWebSocket(url, options = {}) {\r\n  // Si ya existe una conexión, la desconectamos\r\n  if (wsClient) {\r\n    wsClient.disconnect();\r\n  }\r\n\r\n  // Crear nueva conexión\r\n  wsClient = new WebSocketClient(url, options);\r\n\r\n  // Configurar listeners\r\n  wsClient.on('open', () => {\r\n    webSocketState.connected.value = true;\r\n    webSocketState.error.value = null;\r\n    webSocketState.reconnecting.value = false;\r\n    console.log('WebSocket conectado');\r\n  });\r\n\r\n  wsClient.on('message', (event) => {\r\n    try {\r\n      const message = JSON.parse(event.data);\r\n      webSocketState.lastMessage.value = message;\r\n    } catch (error) {\r\n      webSocketState.lastMessage.value = event.data;\r\n    }\r\n  });\r\n\r\n  wsClient.on('error', (event) => {\r\n    webSocketState.error.value = 'Error en la conexión WebSocket';\r\n    console.error('Error WebSocket:', event);\r\n  });\r\n\r\n  wsClient.on('close', () => {\r\n    webSocketState.connected.value = false;\r\n    webSocketState.reconnecting.value = true;\r\n  });\r\n\r\n  // Iniciar conexión\r\n  wsClient.connect();\r\n\r\n  return wsClient;\r\n}\r\n\r\n/**\r\n * Enviar mensaje a través del WebSocket\r\n * @param {any} data - Datos a enviar\r\n * @returns {boolean} - true si se envió correctamente\r\n */\r\nexport function sendMessage(data) {\r\n  if (!wsClient) {\r\n    console.error('WebSocket no inicializado. Llame a initializeWebSocket primero.');\r\n    return false;\r\n  }\r\n  return wsClient.send(data);\r\n}\r\n\r\n/**\r\n * Cerrar conexión WebSocket\r\n */\r\nexport function closeWebSocket() {\r\n  if (wsClient) {\r\n    wsClient.disconnect();\r\n    wsClient = null;\r\n    webSocketState.connected.value = false;\r\n    webSocketState.reconnecting.value = false;\r\n  }\r\n}\r\n\r\n/**\r\n * Comprobar si el WebSocket está conectado\r\n * @returns {boolean} - true si está conectado\r\n */\r\nexport function isConnected() {\r\n  return wsClient && wsClient.getState() === 'OPEN';\r\n}\r\n\r\n/**\r\n * Reconectar manualmente si la conexión se ha perdido\r\n */\r\nexport function reconnect() {\r\n  if (wsClient && wsClient.getState() !== 'OPEN') {\r\n    wsClient.connect();\r\n    webSocketState.reconnecting.value = true;\r\n  }\r\n}\r\n\r\nexport default {\r\n  initializeWebSocket,\r\n  sendMessage,\r\n  closeWebSocket,\r\n  isConnected,\r\n  reconnect,\r\n  state: webSocketState\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}