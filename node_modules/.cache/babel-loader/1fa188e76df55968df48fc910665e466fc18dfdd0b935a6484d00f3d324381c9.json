{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"menu-component\"\n};\nconst _hoisted_2 = {\n  class: \"business-info-section\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"business-form\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"form-actions\"\n};\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = {\n  class: \"payment-info-section\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"payment-form\"\n};\nconst _hoisted_13 = {\n  class: \"form-group\"\n};\nconst _hoisted_14 = {\n  class: \"form-group\"\n};\nconst _hoisted_15 = {\n  class: \"form-group\"\n};\nconst _hoisted_16 = {\n  class: \"form-group\"\n};\nconst _hoisted_17 = {\n  class: \"form-actions\"\n};\nconst _hoisted_18 = [\"disabled\"];\nconst _hoisted_19 = {\n  class: \"inventory-section\"\n};\nconst _hoisted_20 = {\n  key: 0,\n  class: \"inventory-content\"\n};\nconst _hoisted_21 = {\n  class: \"inventory-filters\"\n};\nconst _hoisted_22 = [\"value\"];\nconst _hoisted_23 = {\n  class: \"inventory-list\"\n};\nconst _hoisted_24 = {\n  class: \"item-info\"\n};\nconst _hoisted_25 = {\n  key: 0\n};\nconst _hoisted_26 = {\n  class: \"item-actions\"\n};\nconst _hoisted_27 = [\"onClick\"];\nconst _hoisted_28 = [\"onClick\"];\nconst _hoisted_29 = {\n  key: 0,\n  class: \"inventory-form-modal\"\n};\nconst _hoisted_30 = {\n  class: \"inventory-form\"\n};\nconst _hoisted_31 = {\n  class: \"form-group\"\n};\nconst _hoisted_32 = {\n  class: \"form-group\"\n};\nconst _hoisted_33 = {\n  class: \"form-group\"\n};\nconst _hoisted_34 = {\n  class: \"form-group\"\n};\nconst _hoisted_35 = {\n  class: \"form-group\"\n};\nconst _hoisted_36 = [\"value\"];\nconst _hoisted_37 = {\n  class: \"form-group\"\n};\nconst _hoisted_38 = {\n  class: \"form-actions\"\n};\nconst _hoisted_39 = [\"disabled\"];\nconst _hoisted_40 = {\n  class: \"categories-section\"\n};\nconst _hoisted_41 = {\n  key: 0,\n  class: \"categories-content\"\n};\nconst _hoisted_42 = {\n  class: \"categories-list\"\n};\nconst _hoisted_43 = {\n  class: \"category-info\"\n};\nconst _hoisted_44 = {\n  class: \"category-actions\"\n};\nconst _hoisted_45 = [\"onClick\"];\nconst _hoisted_46 = [\"onClick\"];\nconst _hoisted_47 = {\n  key: 0,\n  class: \"category-form-modal\"\n};\nconst _hoisted_48 = {\n  class: \"category-form\"\n};\nconst _hoisted_49 = {\n  class: \"form-group\"\n};\nconst _hoisted_50 = {\n  class: \"form-group\"\n};\nconst _hoisted_51 = {\n  class: \"form-actions\"\n};\nconst _hoisted_52 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Sección de información del negocio \"), _createElementVNode(\"div\", _hoisted_2, [_cache[37] || (_cache[37] = _createElementVNode(\"h3\", null, \"Información del Negocio\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.toggleBusinessForm && $setup.toggleBusinessForm(...args)),\n    class: \"btn btn-primary\"\n  }, _toDisplayString($setup.showBusinessForm ? 'Cancelar' : 'Editar información'), 1 /* TEXT */), $setup.showBusinessForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[32] || (_cache[32] = _createElementVNode(\"label\", null, \"Nombre del negocio\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.businessInfo.name = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.businessInfo.name]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[33] || (_cache[33] = _createElementVNode(\"label\", null, \"Descripción\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.businessInfo.description = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.businessInfo.description]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[34] || (_cache[34] = _createElementVNode(\"label\", null, \"Dirección\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.businessInfo.address = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.businessInfo.address]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[35] || (_cache[35] = _createElementVNode(\"label\", null, \"Contacto\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.businessInfo.contact = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.businessInfo.contact]])]), _createElementVNode(\"div\", _hoisted_8, [_cache[36] || (_cache[36] = _createElementVNode(\"label\", null, \"Logo\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[5] || (_cache[5] = (...args) => $setup.onLogoChange && $setup.onLogoChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $setup.saveBusinessInfo && $setup.saveBusinessInfo(...args)),\n    class: \"btn btn-success\",\n    disabled: $setup.loading.businessInfo\n  }, _toDisplayString($setup.loading.businessInfo ? 'Guardando...' : 'Guardar'), 9 /* TEXT, PROPS */, _hoisted_10), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $setup.clearBusinessForm && $setup.clearBusinessForm(...args)),\n    class: \"btn btn-secondary\"\n  }, \" Limpiar \")])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Sección de información de pago \"), _createElementVNode(\"div\", _hoisted_11, [_cache[42] || (_cache[42] = _createElementVNode(\"h3\", null, \"Forma de Pago\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $setup.togglePaymentForm && $setup.togglePaymentForm(...args)),\n    class: \"btn btn-primary\"\n  }, _toDisplayString($setup.showPaymentForm ? 'Cancelar' : 'Editar información de pago'), 1 /* TEXT */), $setup.showPaymentForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[38] || (_cache[38] = _createElementVNode(\"label\", null, \"Título QR\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.paymentInfo.qrTitle = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.paymentInfo.qrTitle]])]), _createElementVNode(\"div\", _hoisted_14, [_cache[39] || (_cache[39] = _createElementVNode(\"label\", null, \"Imagen QR\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[10] || (_cache[10] = (...args) => $setup.onQRImageChange && $setup.onQRImageChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_15, [_cache[40] || (_cache[40] = _createElementVNode(\"label\", null, \"Número Nequi\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.paymentInfo.nequiNumber = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.paymentInfo.nequiNumber]])]), _createElementVNode(\"div\", _hoisted_16, [_cache[41] || (_cache[41] = _createElementVNode(\"label\", null, \"Imagen Nequi\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[12] || (_cache[12] = (...args) => $setup.onNequiImageChange && $setup.onNequiImageChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    onClick: _cache[13] || (_cache[13] = (...args) => $setup.savePaymentInfo && $setup.savePaymentInfo(...args)),\n    class: \"btn btn-success\",\n    disabled: $setup.loading.paymentInfo\n  }, _toDisplayString($setup.loading.paymentInfo ? 'Guardando...' : 'Guardar'), 9 /* TEXT, PROPS */, _hoisted_18), _createElementVNode(\"button\", {\n    onClick: _cache[14] || (_cache[14] = (...args) => $setup.clearPaymentForm && $setup.clearPaymentForm(...args)),\n    class: \"btn btn-secondary\"\n  }, \"Limpiar\")])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Sección de gestión de inventario \"), _createElementVNode(\"div\", _hoisted_19, [_cache[51] || (_cache[51] = _createElementVNode(\"h3\", null, \"Gestión de Inventario\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[15] || (_cache[15] = (...args) => $setup.toggleInventorySection && $setup.toggleInventorySection(...args)),\n    class: \"btn btn-primary\"\n  }, _toDisplayString($setup.showInventorySection ? 'Ocultar inventario' : 'Mostrar inventario'), 1 /* TEXT */), $setup.showInventorySection ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $setup.inventoryFilter = $event),\n    type: \"text\",\n    placeholder: \"Filtrar por nombre...\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.inventoryFilter]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $setup.categoryFilter = $event),\n    class: \"form-control\"\n  }, [_cache[43] || (_cache[43] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Todas las categorías\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categories, category => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: category.id,\n      value: category.id\n    }, _toDisplayString(category.name), 9 /* TEXT, PROPS */, _hoisted_22);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.categoryFilter]])]), _createElementVNode(\"div\", _hoisted_23, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredInventoryItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"inventory-item\"\n    }, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"h4\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(item.description), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Precio: $\" + _toDisplayString(item.price), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Disponible: \" + _toDisplayString(item.availableQuantity > 0 ? 'Sí' : 'No'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Cantidad: \" + _toDisplayString(item.availableQuantity), 1 /* TEXT */), item.category ? (_openBlock(), _createElementBlock(\"p\", _hoisted_25, \"Categoría: \" + _toDisplayString($setup.getCategoryName(item.category)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.editInventoryItem(item),\n      class: \"btn btn-info\"\n    }, \"Editar\", 8 /* PROPS */, _hoisted_27), _createElementVNode(\"button\", {\n      onClick: $event => $setup.toggleItemAvailability(item),\n      class: _normalizeClass([\"btn\", item.availableQuantity > 0 ? 'btn-warning' : 'btn-success'])\n    }, _toDisplayString(item.availableQuantity > 0 ? 'Marcar no disponible' : 'Marcar disponible'), 11 /* TEXT, CLASS, PROPS */, _hoisted_28)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Modal para añadir/editar item \"), $setup.showInventoryForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"h3\", null, _toDisplayString($setup.editingItem ? 'Editar' : 'Añadir') + \" Item\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_31, [_cache[44] || (_cache[44] = _createElementVNode(\"label\", null, \"Nombre\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $setup.currentItem.name = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.currentItem.name]])]), _createElementVNode(\"div\", _hoisted_32, [_cache[45] || (_cache[45] = _createElementVNode(\"label\", null, \"Descripción\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => $setup.currentItem.description = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.currentItem.description]])]), _createElementVNode(\"div\", _hoisted_33, [_cache[46] || (_cache[46] = _createElementVNode(\"label\", null, \"Precio\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $setup.currentItem.price = $event),\n    type: \"number\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.currentItem.price, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", _hoisted_34, [_cache[47] || (_cache[47] = _createElementVNode(\"label\", null, \"Cantidad Disponible\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => $setup.currentItem.availableQuantity = $event),\n    type: \"number\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.currentItem.availableQuantity, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", _hoisted_35, [_cache[49] || (_cache[49] = _createElementVNode(\"label\", null, \"Categoría\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => $setup.currentItem.category = $event),\n    class: \"form-control\"\n  }, [_cache[48] || (_cache[48] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Sin categoría\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categories, category => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: category.id,\n      value: category.id\n    }, _toDisplayString(category.name), 9 /* TEXT, PROPS */, _hoisted_36);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.currentItem.category]])]), _createElementVNode(\"div\", _hoisted_37, [_cache[50] || (_cache[50] = _createElementVNode(\"label\", null, \"Imagen\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[23] || (_cache[23] = (...args) => $setup.onItemImageChange && $setup.onItemImageChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_38, [_createElementVNode(\"button\", {\n    onClick: _cache[24] || (_cache[24] = $event => _ctx.saveInventoryItem($setup.currentItem)),\n    class: \"btn btn-success\",\n    disabled: $setup.loading.inventory\n  }, _toDisplayString($setup.loading.inventory ? 'Guardando...' : 'Guardar'), 9 /* TEXT, PROPS */, _hoisted_39), _createElementVNode(\"button\", {\n    onClick: _cache[25] || (_cache[25] = (...args) => $setup.clearInventoryForm && $setup.clearInventoryForm(...args)),\n    class: \"btn btn-secondary\"\n  }, \"Cancelar\")])])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Sección de categorías \"), _createElementVNode(\"div\", _hoisted_40, [_cache[55] || (_cache[55] = _createElementVNode(\"h3\", null, \"Categorías\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[26] || (_cache[26] = (...args) => $setup.toggleCategoriesSection && $setup.toggleCategoriesSection(...args)),\n    class: \"btn btn-primary\"\n  }, _toDisplayString($setup.showCategoriesSection ? 'Ocultar categorías' : 'Mostrar categorías'), 1 /* TEXT */), $setup.showCategoriesSection ? (_openBlock(), _createElementBlock(\"div\", _hoisted_41, [_createElementVNode(\"button\", {\n    onClick: _cache[27] || (_cache[27] = $event => $setup.showAddCategoryForm = true),\n    class: \"btn btn-success\"\n  }, \"Añadir Categoría\"), _createElementVNode(\"div\", _hoisted_42, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categories, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: category.id,\n      class: \"category-item\"\n    }, [_createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"h4\", null, _toDisplayString(category.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(category.description), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_44, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.editCategory(category),\n      class: \"btn btn-info\"\n    }, \"Editar\", 8 /* PROPS */, _hoisted_45), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteCategory(category),\n      class: \"btn btn-danger\"\n    }, \"Eliminar\", 8 /* PROPS */, _hoisted_46)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Modal para añadir categoría \"), $setup.showAddCategoryForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_47, [_createElementVNode(\"div\", _hoisted_48, [_cache[54] || (_cache[54] = _createElementVNode(\"h3\", null, \"Añadir Categoría\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_49, [_cache[52] || (_cache[52] = _createElementVNode(\"label\", null, \"Nombre\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => $setup.newCategory.name = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newCategory.name]])]), _createElementVNode(\"div\", _hoisted_50, [_cache[53] || (_cache[53] = _createElementVNode(\"label\", null, \"Descripción\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => $setup.newCategory.description = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newCategory.description]])]), _createElementVNode(\"div\", _hoisted_51, [_createElementVNode(\"button\", {\n    onClick: _cache[30] || (_cache[30] = (...args) => $setup.saveNewCategory && $setup.saveNewCategory(...args)),\n    class: \"btn btn-success\",\n    disabled: $setup.loading.categories\n  }, _toDisplayString($setup.loading.categories ? 'Guardando...' : 'Guardar'), 9 /* TEXT, PROPS */, _hoisted_52), _createElementVNode(\"button\", {\n    onClick: _cache[31] || (_cache[31] = (...args) => $setup.clearCategoryForm && $setup.clearCategoryForm(...args)),\n    class: \"btn btn-secondary\"\n  }, \"Cancelar\")])])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Notificación \"), $setup.notification.show ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['notification', $setup.notification.type])\n  }, _toDisplayString($setup.notification.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","toggleBusinessForm","showBusinessForm","_hoisted_3","_hoisted_4","$event","businessInfo","name","type","_hoisted_5","description","_hoisted_6","address","_hoisted_7","contact","_hoisted_8","onChange","onLogoChange","accept","_hoisted_9","saveBusinessInfo","disabled","loading","_hoisted_10","clearBusinessForm","_hoisted_11","togglePaymentForm","showPaymentForm","_hoisted_12","_hoisted_13","paymentInfo","qrTitle","_hoisted_14","onQRImageChange","_hoisted_15","nequiNumber","_hoisted_16","onNequiImageChange","_hoisted_17","savePaymentInfo","_hoisted_18","clearPaymentForm","_hoisted_19","toggleInventorySection","showInventorySection","_hoisted_20","_hoisted_21","inventoryFilter","placeholder","categoryFilter","value","_Fragment","_renderList","categories","category","id","_hoisted_22","_hoisted_23","filteredInventoryItems","item","_hoisted_24","_toDisplayString","price","availableQuantity","_hoisted_25","getCategoryName","_hoisted_26","editInventoryItem","_hoisted_27","toggleItemAvailability","_normalizeClass","_hoisted_28","showInventoryForm","_hoisted_29","_hoisted_30","editingItem","_hoisted_31","currentItem","_hoisted_32","_hoisted_33","number","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","onItemImageChange","_hoisted_38","_ctx","saveInventoryItem","inventory","_hoisted_39","clearInventoryForm","_hoisted_40","toggleCategoriesSection","showCategoriesSection","_hoisted_41","showAddCategoryForm","_hoisted_42","_hoisted_43","_hoisted_44","editCategory","_hoisted_45","deleteCategory","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","newCategory","_hoisted_50","_hoisted_51","saveNewCategory","_hoisted_52","clearCategoryForm","notification","show","message"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\MenuComponent.vue"],"sourcesContent":["<template>\n  <div class=\"menu-component\">\n    <!-- Sección de información del negocio -->\n    <div class=\"business-info-section\">\n      <h3>Información del Negocio</h3>\n      <button @click=\"toggleBusinessForm\" class=\"btn btn-primary\">\n        {{ showBusinessForm ? 'Cancelar' : 'Editar información' }}\n      </button>\n      \n      <div v-if=\"showBusinessForm\" class=\"business-form\">\n        <div class=\"form-group\">\n          <label>Nombre del negocio</label>\n          <input v-model=\"businessInfo.name\" type=\"text\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Descripción</label>\n          <textarea v-model=\"businessInfo.description\" class=\"form-control\"></textarea>\n        </div>\n        <div class=\"form-group\">\n          <label>Dirección</label>\n          <input v-model=\"businessInfo.address\" type=\"text\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Contacto</label>\n          <input v-model=\"businessInfo.contact\" type=\"text\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Logo</label>\n          <input type=\"file\" @change=\"onLogoChange\" accept=\"image/*\" />\n        </div>\n        <div class=\"form-actions\">\n          <button @click=\"saveBusinessInfo\" class=\"btn btn-success\" :disabled=\"loading.businessInfo\">\n            {{ loading.businessInfo ? 'Guardando...' : 'Guardar' }}\n          </button>\n          <button @click=\"clearBusinessForm\" class=\"btn btn-secondary\">\n            Limpiar\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Sección de información de pago -->\n    <div class=\"payment-info-section\">\n      <h3>Forma de Pago</h3>\n      <button @click=\"togglePaymentForm\" class=\"btn btn-primary\">\n        {{ showPaymentForm ? 'Cancelar' : 'Editar información de pago' }}\n      </button>\n      \n      <div v-if=\"showPaymentForm\" class=\"payment-form\">\n        <div class=\"form-group\">\n          <label>Título QR</label>\n          <input v-model=\"paymentInfo.qrTitle\" type=\"text\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Imagen QR</label>\n          <input type=\"file\" @change=\"onQRImageChange\" accept=\"image/*\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Número Nequi</label>\n          <input v-model=\"paymentInfo.nequiNumber\" type=\"text\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Imagen Nequi</label>\n          <input type=\"file\" @change=\"onNequiImageChange\" accept=\"image/*\" />\n        </div>\n        <div class=\"form-actions\">\n          <button @click=\"savePaymentInfo\" class=\"btn btn-success\" :disabled=\"loading.paymentInfo\">\n            {{ loading.paymentInfo ? 'Guardando...' : 'Guardar' }}\n          </button>\n          <button @click=\"clearPaymentForm\" class=\"btn btn-secondary\">Limpiar</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Sección de gestión de inventario -->\n    <div class=\"inventory-section\">\n      <h3>Gestión de Inventario</h3>\n      <button @click=\"toggleInventorySection\" class=\"btn btn-primary\">\n        {{ showInventorySection ? 'Ocultar inventario' : 'Mostrar inventario' }}\n      </button>\n      \n      <div v-if=\"showInventorySection\" class=\"inventory-content\">\n        <div class=\"inventory-filters\">\n          <input v-model=\"inventoryFilter\" type=\"text\" placeholder=\"Filtrar por nombre...\" class=\"form-control\" />\n          <select v-model=\"categoryFilter\" class=\"form-control\">\n            <option value=\"\">Todas las categorías</option>\n            <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\n              {{ category.name }}\n            </option>\n          </select>\n        </div>\n        \n        <div class=\"inventory-list\">\n          <div v-for=\"item in filteredInventoryItems\" :key=\"item.id\" class=\"inventory-item\">\n            <div class=\"item-info\">\n              <h4>{{ item.name }}</h4>\n              <p>{{ item.description }}</p>\n              <p>Precio: ${{ item.price }}</p>\n              <p>Disponible: {{ item.availableQuantity > 0 ? 'Sí' : 'No' }}</p>\n              <p>Cantidad: {{ item.availableQuantity }}</p>\n              <p v-if=\"item.category\">Categoría: {{ getCategoryName(item.category) }}</p>\n            </div>\n            <div class=\"item-actions\">\n              <button @click=\"editInventoryItem(item)\" class=\"btn btn-info\">Editar</button>\n              <button @click=\"toggleItemAvailability(item)\" class=\"btn\" :class=\"item.availableQuantity > 0 ? 'btn-warning' : 'btn-success'\">\n                {{ item.availableQuantity > 0 ? 'Marcar no disponible' : 'Marcar disponible' }}\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Modal para añadir/editar item -->\n        <div v-if=\"showInventoryForm\" class=\"inventory-form-modal\">\n          <div class=\"inventory-form\">\n            <h3>{{ editingItem ? 'Editar' : 'Añadir' }} Item</h3>\n            <div class=\"form-group\">\n              <label>Nombre</label>\n              <input v-model=\"currentItem.name\" type=\"text\" class=\"form-control\" />\n            </div>\n            <div class=\"form-group\">\n              <label>Descripción</label>\n              <textarea v-model=\"currentItem.description\" class=\"form-control\"></textarea>\n            </div>\n            <div class=\"form-group\">\n              <label>Precio</label>\n              <input v-model.number=\"currentItem.price\" type=\"number\" class=\"form-control\" />\n            </div>\n            <div class=\"form-group\">\n              <label>Cantidad Disponible</label>\n              <input v-model.number=\"currentItem.availableQuantity\" type=\"number\" class=\"form-control\" />\n            </div>\n            <div class=\"form-group\">\n              <label>Categoría</label>\n              <select v-model=\"currentItem.category\" class=\"form-control\">\n                <option value=\"\">Sin categoría</option>\n                <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\n                  {{ category.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label>Imagen</label>\n              <input type=\"file\" @change=\"onItemImageChange\" accept=\"image/*\" />\n            </div>\n            <div class=\"form-actions\">\n              <button @click=\"saveInventoryItem(currentItem)\" class=\"btn btn-success\" :disabled=\"loading.inventory\">\n                {{ loading.inventory ? 'Guardando...' : 'Guardar' }}\n              </button>\n              <button @click=\"clearInventoryForm\" class=\"btn btn-secondary\">Cancelar</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Sección de categorías -->\n    <div class=\"categories-section\">\n      <h3>Categorías</h3>\n      <button @click=\"toggleCategoriesSection\" class=\"btn btn-primary\">\n        {{ showCategoriesSection ? 'Ocultar categorías' : 'Mostrar categorías' }}\n      </button>\n      \n      <div v-if=\"showCategoriesSection\" class=\"categories-content\">\n        <button @click=\"showAddCategoryForm = true\" class=\"btn btn-success\">Añadir Categoría</button>\n        \n        <div class=\"categories-list\">\n          <div v-for=\"category in categories\" :key=\"category.id\" class=\"category-item\">\n            <div class=\"category-info\">\n              <h4>{{ category.name }}</h4>\n              <p>{{ category.description }}</p>\n            </div>\n            <div class=\"category-actions\">\n              <button @click=\"editCategory(category)\" class=\"btn btn-info\">Editar</button>\n              <button @click=\"deleteCategory(category)\" class=\"btn btn-danger\">Eliminar</button>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Modal para añadir categoría -->\n        <div v-if=\"showAddCategoryForm\" class=\"category-form-modal\">\n          <div class=\"category-form\">\n            <h3>Añadir Categoría</h3>\n            <div class=\"form-group\">\n              <label>Nombre</label>\n              <input v-model=\"newCategory.name\" type=\"text\" class=\"form-control\" />\n            </div>\n            <div class=\"form-group\">\n              <label>Descripción</label>\n              <textarea v-model=\"newCategory.description\" class=\"form-control\"></textarea>\n            </div>\n            <div class=\"form-actions\">\n              <button @click=\"saveNewCategory\" class=\"btn btn-success\" :disabled=\"loading.categories\">\n                {{ loading.categories ? 'Guardando...' : 'Guardar' }}\n              </button>\n              <button @click=\"clearCategoryForm\" class=\"btn btn-secondary\">Cancelar</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Notificación -->\n    <div v-if=\"notification.show\" :class=\"['notification', notification.type]\">\n      {{ notification.message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { \n  getBusinessInfo, \n  saveBusinessInfo, \n  getMenuItems, \n  saveMenuItem, \n  deleteMenuItem, \n  updateItemAvailability \n} from '../services/storageService';\n\nexport default {\n  name: 'MenuComponent',\n  \n  setup() {\n    // Estado para información del negocio\n    const businessInfo = ref({\n      id: 'business_info_1',\n      name: '',\n      description: '',\n      address: '',\n      contact: '',\n      logo: '',\n      paymentInfo: {\n        qrTitle: '',\n        qrImage: '',\n        nequiNumber: '',\n        nequiImage: ''\n      }\n    });\n    \n    const showBusinessForm = ref(false);\n    \n    // Estado para información de pago\n    const paymentInfo = ref({\n      qrTitle: '',\n      qrImage: '',\n      nequiNumber: '',\n      nequiImage: ''\n    });\n    \n    const showPaymentForm = ref(false);\n    \n    // Estado para gestión de inventario\n    const inventoryItems = ref([]);\n    const inventoryFilter = ref('');\n    const categoryFilter = ref('');\n    const showInventorySection = ref(false);\n    const showInventoryForm = ref(false);\n    const editingItem = ref(false);\n    const currentItem = ref({\n      id: '',\n      name: '',\n      description: '',\n      price: 0,\n      availableQuantity: 0,\n      category: ''\n    });\n    \n    // Propiedad computada para filtrar items de inventario\n    const filteredInventoryItems = computed(() => {\n      const filter = inventoryFilter.value.toLowerCase();\n      const category = categoryFilter.value;\n      \n      return inventoryItems.value.filter(item => {\n        const name = item.name.toLowerCase();\n        const categoryMatch = category === '' || item.category === category;\n        \n        return name.includes(filter) && categoryMatch;\n      });\n    });\n    \n    // Estado para categorías\n    const categories = ref([]);\n    const showCategoriesSection = ref(false);\n    const newCategory = ref({\n      name: '',\n      description: ''\n    });\n    const showAddCategoryForm = ref(false);\n    \n    // Estado para notificaciones\n    const notification = ref({\n      show: false,\n      message: '',\n      type: 'success',\n      timeout: null\n    });\n    \n    // Estado para indicadores de carga\n    const loading = ref({\n      businessInfo: false,\n      paymentInfo: false,\n      inventory: false,\n      categories: false\n    });\n    \n    // Cargar datos al montar el componente\n    onMounted(async () => {\n      try {\n        // Cargar información del negocio desde IndexedDB\n        const storedBusinessInfo = await getBusinessInfo();\n        \n        if (storedBusinessInfo) {\n          businessInfo.value = storedBusinessInfo;\n          \n          // Si hay información de pago, cargarla en el estado correspondiente\n          if (storedBusinessInfo.paymentInfo) {\n            paymentInfo.value = {\n              qrTitle: storedBusinessInfo.paymentInfo.qrTitle || '',\n              qrImage: storedBusinessInfo.paymentInfo.qrImage || '',\n              nequiNumber: storedBusinessInfo.paymentInfo.nequiNumber || '',\n              nequiImage: storedBusinessInfo.paymentInfo.nequiImage || ''\n            };\n          }\n        }\n        \n        // Cargar inventario y categorías\n        try {\n          const items = await getMenuItems();\n          if (items && items.length > 0) {\n            // Filtrar solo los elementos que son platos (no categorías)\n            inventoryItems.value = items.filter(item => !item.isCategory);\n          }\n          \n          // Extraer categorías de los items (en este caso, asumimos que las categorías están marcadas con isCategory=true)\n          // o podemos usar una lista predefinida si no hay categorías en la base de datos\n          const cats = items ? items.filter(item => item.isCategory) : [];\n          if (cats && cats.length > 0) {\n            categories.value = cats;\n          } else {\n            // Categorías predefinidas si no hay ninguna en la base de datos\n            categories.value = [\n              { id: 'category_1', name: 'Principal', description: 'Platos principales' },\n              { id: 'category_2', name: 'Entradas', description: 'Entradas y aperitivos' },\n              { id: 'category_3', name: 'Postres', description: 'Postres y dulces' },\n              { id: 'category_4', name: 'Bebidas', description: 'Bebidas y refrescos' }\n            ];\n          }\n        } catch (loadError) {\n          console.error('Error al cargar inventario y categorías:', loadError);\n          // No mostrar error al usuario, solo registrar en consola\n        }\n        \n        console.log('Datos cargados correctamente');\n      } catch (error) {\n        console.error('Error al cargar datos:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al cargar datos. Por favor, intente nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    });\n    \n    // Función para sincronizar con el backend con manejo adecuado de conexiones\n    const syncWithBackend = async (data, type) => {\n      try {\n        const { syncBusinessInfoWithBackend } = await import('../services/menuService');\n        \n        // Añadir metadatos para ayudar al backend a gestionar las conexiones eficientemente\n        const syncData = {\n          ...data,\n          syncType: type,\n          timestamp: new Date().toISOString(),\n          // Añadir un identificador único para cada solicitud\n          requestId: `sync_${type}_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`\n        };\n        \n        // Realizar la sincronización\n        const result = await syncBusinessInfoWithBackend(syncData);\n        \n        if (result && result.success) {\n          console.log(`Sincronización de ${type} completada con éxito`);\n          return { success: true };\n        } else {\n          console.error(`Error en sincronización de ${type}:`, result);\n          return { \n            success: false, \n            message: result?.message || `Error al sincronizar ${type}` \n          };\n        }\n      } catch (error) {\n        console.error(`Error en sincronización de ${type}:`, error);\n        return { \n          success: false, \n          message: error.message || `Error al sincronizar ${type}` \n        };\n      }\n    };\n    \n    // Métodos para información del negocio\n    const toggleBusinessForm = () => {\n      showBusinessForm.value = !showBusinessForm.value;\n    };\n    \n    const onLogoChange = (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          businessInfo.value.logo = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    \n    const saveBusinessInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        // Validar campos obligatorios\n        if (!businessInfo.value.name || businessInfo.value.name.trim() === '') {\n          notification.value = {\n            show: true,\n            message: 'El nombre del negocio es obligatorio',\n            type: 'error',\n            timeout: setTimeout(() => {\n              notification.value.show = false;\n            }, 3000)\n          };\n          return;\n        }\n        \n        // Mostrar indicador de carga\n        loading.value.businessInfo = true;\n        \n        await saveBusinessInfo(businessInfo.value);\n        \n        // Sincronizar con el backend\n        try {\n          const syncResult = await syncWithBackend(businessInfo.value, 'business_info');\n          if (!syncResult.success) {\n            console.error('Error al sincronizar información del negocio:', syncResult.message);\n            notification.value = {\n              show: true,\n              message: 'Error al sincronizar información del negocio',\n              type: 'error',\n              timeout: setTimeout(() => {\n                notification.value.show = false;\n              }, 3000)\n            };\n          }\n        } catch (syncError) {\n          console.error('Error al sincronizar información del negocio:', syncError);\n          // No mostrar error al usuario, solo registrar en consola\n        }\n        \n        // Ocultar indicador de carga\n        loading.value.businessInfo = false;\n        \n        notification.value = {\n          show: true,\n          message: 'Información del negocio guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        // Ocultar indicador de carga en caso de error\n        loading.value.businessInfo = false;\n        \n        console.error('Error al guardar información del negocio:', error);\n        \n        notification.value = {\n          show: true,\n          message: 'Error al guardar información del negocio',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    \n    const clearBusinessForm = () => {\n      businessInfo.value = {\n        id: 'business_info_1',\n        name: '',\n        description: '',\n        address: '',\n        contact: '',\n        logo: '',\n        paymentInfo: {\n          qrTitle: '',\n          qrImage: '',\n          nequiNumber: '',\n          nequiImage: ''\n        }\n      };\n    };\n    \n    // Métodos para información de pago\n    const togglePaymentForm = () => {\n      showPaymentForm.value = !showPaymentForm.value;\n    };\n    \n    const onQRImageChange = (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          paymentInfo.value.qrImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    \n    const onNequiImageChange = (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          paymentInfo.value.nequiImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    \n    const savePaymentInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        // Mostrar indicador de carga\n        loading.value.paymentInfo = true;\n        \n        if (!businessInfo.value.paymentInfo) {\n          businessInfo.value.paymentInfo = {};\n        }\n        \n        businessInfo.value.paymentInfo.qrTitle = paymentInfo.value.qrTitle;\n        businessInfo.value.paymentInfo.qrImage = paymentInfo.value.qrImage;\n        businessInfo.value.paymentInfo.nequiNumber = paymentInfo.value.nequiNumber;\n        businessInfo.value.paymentInfo.nequiImage = paymentInfo.value.nequiImage;\n        \n        await saveBusinessInfo(businessInfo.value);\n        \n        // Sincronizar con el backend\n        try {\n          const syncResult = await syncWithBackend(businessInfo.value, 'payment_info');\n          if (!syncResult.success) {\n            console.error('Error al sincronizar información de pago:', syncResult.message);\n            notification.value = {\n              show: true,\n              message: 'Error al sincronizar información de pago',\n              type: 'error',\n              timeout: setTimeout(() => {\n                notification.value.show = false;\n              }, 3000)\n            };\n          }\n        } catch (syncError) {\n          console.error('Error al sincronizar información de pago:', syncError);\n          // No mostrar error al usuario, solo registrar en consola\n        }\n        \n        // Ocultar indicador de carga\n        loading.value.paymentInfo = false;\n        \n        notification.value = {\n          show: true,\n          message: 'Información de pago guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        // Ocultar indicador de carga en caso de error\n        loading.value.paymentInfo = false;\n        \n        console.error('Error al guardar información de pago:', error);\n        \n        notification.value = {\n          show: true,\n          message: 'Error al guardar información de pago',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    \n    const clearPaymentForm = () => {\n      paymentInfo.value = {\n        qrTitle: '',\n        qrImage: '',\n        nequiNumber: '',\n        nequiImage: ''\n      };\n    };\n    \n    // Métodos para gestión de inventario\n    const toggleInventorySection = () => {\n      showInventorySection.value = !showInventorySection.value;\n    };\n    \n    const editInventoryItem = async (item) => {\n      try {\n        // Aquí se implementaría un modal o formulario para editar el item\n        console.log('Editando item:', item);\n        \n        // Simulación de edición (en una implementación real, esto sería un formulario)\n        const updatedItem = { ...item, updatedAt: new Date().toISOString() };\n        \n        // Actualizar el item en el array local\n        const index = inventoryItems.value.findIndex(i => i.id === item.id);\n        if (index !== -1) {\n          inventoryItems.value[index] = updatedItem;\n        }\n        \n        // Guardar en IndexedDB\n        await saveMenuItem(updatedItem);\n        \n        // Sincronizar con el backend\n        try {\n          const syncResult = await syncWithBackend(updatedItem, 'inventory_item');\n          if (!syncResult.success) {\n            console.error('Error al sincronizar item de inventario:', syncResult.message);\n            notification.value = {\n              show: true,\n              message: 'Item actualizado localmente, pero hubo un error al sincronizar con el servidor',\n              type: 'warning',\n              timeout: setTimeout(() => {\n                notification.value.show = false;\n              }, 3000)\n            };\n          }\n        } catch (syncError) {\n          console.error('Error al sincronizar item de inventario:', syncError);\n          notification.value = {\n            show: true,\n            message: 'Item actualizado localmente, pero hubo un error al sincronizar con el servidor',\n            type: 'warning',\n            timeout: setTimeout(() => {\n              notification.value.show = false;\n            }, 3000)\n          };\n        }\n        \n        notification.value = {\n          show: true,\n          message: 'Item actualizado con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al editar item:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al actualizar el item',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    \n    const toggleItemAvailability = async (item) => {\n      try {\n        // Cambiar la disponibilidad del item\n        const updatedItem = { \n          ...item, \n          availableQuantity: item.availableQuantity > 0 ? 0 : 10,\n          updatedAt: new Date().toISOString()\n        };\n        \n        // Actualizar el item en el array local\n        const index = inventoryItems.value.findIndex(i => i.id === item.id);\n        if (index !== -1) {\n          inventoryItems.value[index] = updatedItem;\n        }\n        \n        // Guardar en IndexedDB\n        await saveMenuItem(updatedItem);\n        \n        // Sincronizar con el backend\n        try {\n          const syncResult = await syncWithBackend(updatedItem, 'inventory_item');\n          if (!syncResult.success) {\n            console.error('Error al sincronizar disponibilidad del item:', syncResult.message);\n            notification.value = {\n              show: true,\n              message: 'Disponibilidad actualizada localmente, pero hubo un error al sincronizar con el servidor',\n              type: 'warning',\n              timeout: setTimeout(() => {\n                notification.value.show = false;\n              }, 3000)\n            };\n          }\n        } catch (syncError) {\n          console.error('Error al sincronizar disponibilidad del item:', syncError);\n          notification.value = {\n            show: true,\n            message: 'Disponibilidad actualizada localmente, pero hubo un error al sincronizar con el servidor',\n            type: 'warning',\n            timeout: setTimeout(() => {\n              notification.value.show = false;\n            }, 3000)\n          };\n        }\n        \n        notification.value = {\n          show: true,\n          message: `Item ${updatedItem.availableQuantity > 0 ? 'disponible' : 'no disponible'} actualizado con éxito!`,\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al cambiar disponibilidad:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al actualizar la disponibilidad',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    \n    const saveInventoryItem = async (item) => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        // Mostrar indicador de carga\n        loading.value.inventory = true;\n        \n        // Validar campos obligatorios\n        if (!item.name || item.name.trim() === '') {\n          loading.value.inventory = false;\n          notification.value = {\n            show: true,\n            message: 'El nombre del item es obligatorio',\n            type: 'error',\n            timeout: setTimeout(() => {\n              notification.value.show = false;\n            }, 3000)\n          };\n          return;\n        }\n        \n        if (!item.price || isNaN(item.price) || item.price <= 0) {\n          loading.value.inventory = false;\n          notification.value = {\n            show: true,\n            message: 'El precio debe ser un número mayor que cero',\n            type: 'error',\n            timeout: setTimeout(() => {\n              notification.value.show = false;\n            }, 3000)\n          };\n          return;\n        }\n        \n        // Actualizar la lista local\n        const index = inventoryItems.value.findIndex(i => i.id === item.id);\n        if (index !== -1) {\n          inventoryItems.value[index] = { ...item };\n        } else {\n          inventoryItems.value.push({ ...item });\n        }\n        \n        // Guardar en IndexedDB\n        await saveMenuItem(item);\n        \n        // Sincronizar con el backend\n        try {\n          const syncResult = await syncWithBackend(item, 'inventory_item');\n          if (!syncResult.success) {\n            console.error('Error al sincronizar item de inventario:', syncResult.message);\n            loading.value.inventory = false;\n            notification.value = {\n              show: true,\n              message: 'Item guardado localmente, pero hubo un error al sincronizar con el servidor',\n              type: 'warning',\n              timeout: setTimeout(() => {\n                notification.value.show = false;\n              }, 3000)\n            };\n            return;\n          }\n        } catch (syncError) {\n          console.error('Error al sincronizar item de inventario:', syncError);\n          loading.value.inventory = false;\n          notification.value = {\n            show: true,\n            message: 'Item guardado localmente, pero hubo un error al sincronizar con el servidor',\n            type: 'warning',\n            timeout: setTimeout(() => {\n              notification.value.show = false;\n            }, 3000)\n          };\n          return;\n        }\n        \n        // Ocultar indicador de carga\n        loading.value.inventory = false;\n        \n        notification.value = {\n          show: true,\n          message: 'Item guardado con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n        \n        // Limpiar el formulario y cerrar el modal\n        clearInventoryForm();\n        showInventoryForm.value = false;\n      } catch (error) {\n        // Ocultar indicador de carga en caso de error\n        loading.value.inventory = false;\n        \n        console.error('Error al guardar item:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al guardar el item',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    \n    // Métodos para categorías\n    const toggleCategoriesSection = () => {\n      showCategoriesSection.value = !showCategoriesSection.value;\n    };\n    \n    const editCategory = (category) => {\n      console.log('Editar categoría:', category);\n    };\n    \n    const deleteCategory = async (category) => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        if (confirm(`¿Está seguro de eliminar la categoría ${category.name}?`)) {\n          // Eliminar de la lista local\n          categories.value = categories.value.filter(c => c.id !== category.id);\n          \n          // Eliminar de IndexedDB\n          await deleteMenuItem(category.id);\n          \n          // Sincronizar con el backend\n          try {\n            const syncResult = await syncWithBackend({ categoryId: category.id }, 'category_delete');\n            if (!syncResult.success) {\n              console.error('Error al sincronizar eliminación de categoría:', syncResult.message);\n              notification.value = {\n                show: true,\n                message: 'Categoría eliminada localmente, pero hubo un error al sincronizar con el servidor',\n                type: 'warning',\n                timeout: setTimeout(() => {\n                  notification.value.show = false;\n                }, 3000)\n              };\n            } else {\n              notification.value = {\n                show: true,\n                message: 'Categoría eliminada con éxito!',\n                type: 'success',\n                timeout: setTimeout(() => {\n                  notification.value.show = false;\n                }, 3000)\n              };\n            }\n          } catch (syncError) {\n            console.error('Error al sincronizar eliminación de categoría:', syncError);\n            notification.value = {\n              show: true,\n              message: 'Categoría eliminada localmente, pero hubo un error al sincronizar con el servidor',\n              type: 'warning',\n              timeout: setTimeout(() => {\n                notification.value.show = false;\n              }, 3000)\n            };\n          }\n        }\n      } catch (error) {\n        console.error('Error al eliminar categoría:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al eliminar la categoría',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    \n    const saveNewCategory = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        // Mostrar indicador de carga\n        loading.value.categories = true;\n        \n        // Validar campos obligatorios\n        if (!newCategory.value.name || newCategory.value.name.trim() === '') {\n          loading.value.categories = false;\n          notification.value = {\n            show: true,\n            message: 'El nombre de la categoría es obligatorio',\n            type: 'error',\n            timeout: setTimeout(() => {\n              notification.value.show = false;\n            }, 3000)\n          };\n          return;\n        }\n        \n        // Generar ID único para la nueva categoría\n        const newCategoryWithId = {\n          ...newCategory.value,\n          id: `category_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n          isCategory: true\n        };\n        \n        // Añadir a la lista local\n        categories.value.push(newCategoryWithId);\n        \n        // Guardar en IndexedDB\n        await saveMenuItem({\n          ...newCategoryWithId,\n          isCategory: true\n        });\n        \n        // Sincronizar con el backend\n        try {\n          const syncResult = await syncWithBackend(newCategoryWithId, 'category_update');\n          if (!syncResult.success) {\n            console.error('Error al sincronizar categoría:', syncResult.message);\n            loading.value.categories = false;\n            notification.value = {\n              show: true,\n              message: 'Categoría guardada localmente, pero hubo un error al sincronizar con el servidor',\n              type: 'warning',\n              timeout: setTimeout(() => {\n                notification.value.show = false;\n              }, 3000)\n            };\n            return;\n          }\n        } catch (syncError) {\n          console.error('Error al sincronizar categoría:', syncError);\n          loading.value.categories = false;\n          notification.value = {\n            show: true,\n            message: 'Categoría guardada localmente, pero hubo un error al sincronizar con el servidor',\n            type: 'warning',\n            timeout: setTimeout(() => {\n              notification.value.show = false;\n            }, 3000)\n          };\n          return;\n        }\n        \n        // Ocultar indicador de carga\n        loading.value.categories = false;\n        \n        notification.value = {\n          show: true,\n          message: 'Categoría guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n        \n        // Limpiar el formulario\n        clearCategoryForm();\n        showAddCategoryForm.value = false;\n      } catch (error) {\n        // Ocultar indicador de carga en caso de error\n        loading.value.categories = false;\n        \n        console.error('Error al guardar categoría:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al guardar la categoría',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    \n    const clearCategoryForm = () => {\n      newCategory.value = {\n        name: '',\n        description: ''\n      };\n    };\n    \n    const getCategoryName = (categoryId) => {\n      const category = categories.value.find(c => c.id === categoryId);\n      return category ? category.name : 'Sin categoría';\n    };\n    \n    const onItemImageChange = (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          currentItem.value.image = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    \n    const clearInventoryForm = () => {\n      currentItem.value = {\n        id: '',\n        name: '',\n        description: '',\n        price: 0,\n        availableQuantity: 0,\n        category: ''\n      };\n    };\n    \n    return {\n      businessInfo,\n      showBusinessForm,\n      toggleBusinessForm,\n      onLogoChange,\n      saveBusinessInfo,\n      clearBusinessForm,\n      paymentInfo,\n      showPaymentForm,\n      togglePaymentForm,\n      onQRImageChange,\n      onNequiImageChange,\n      savePaymentInfo,\n      clearPaymentForm,\n      inventoryItems,\n      inventoryFilter,\n      categoryFilter,\n      showInventorySection,\n      toggleInventorySection,\n      editInventoryItem,\n      toggleItemAvailability,\n      filteredInventoryItems,\n      categories,\n      showCategoriesSection,\n      toggleCategoriesSection,\n      editCategory,\n      deleteCategory,\n      newCategory,\n      showAddCategoryForm,\n      saveNewCategory,\n      clearCategoryForm,\n      notification,\n      loading,\n      showInventoryForm,\n      editingItem,\n      currentItem,\n      onItemImageChange,\n      clearInventoryForm,\n      getCategoryName\n    };\n  }\n};\n</script>\n\n<style scoped>\n.menu-component {\n  padding: 20px;\n}\n\n.business-info-section,\n.payment-info-section,\n.inventory-section,\n.categories-section {\n  margin-bottom: 30px;\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-control {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.form-actions {\n  margin-top: 20px;\n}\n\n.btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 10px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n}\n\n.btn-success {\n  background-color: #28a745;\n  color: white;\n}\n\n.btn-secondary {\n  background-color: #6c757d;\n  color: white;\n}\n\n.notification {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  padding: 15px;\n  border-radius: 4px;\n  color: white;\n  z-index: 1000;\n}\n\n.success {\n  background-color: #28a745;\n}\n\n.error {\n  background-color: #dc3545;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}