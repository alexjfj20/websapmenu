{"ast":null,"code":"import { createApp, h, reactive } from 'vue';\n\n// Estado global del diálogo usando reactive para asegurar reactividad\nexport const dialogState = reactive({\n  show: false,\n  title: 'Mensaje',\n  message: '',\n  confirmText: 'Aceptar',\n  cancelText: 'Cancelar',\n  showCancel: false,\n  resolvePromise: null\n});\n\n// Componente de modal para confirmaciones\nconst ModalComponent = {\n  props: {\n    title: {\n      type: String,\n      default: 'Confirmar'\n    },\n    message: {\n      type: String,\n      required: true\n    },\n    confirmText: {\n      type: String,\n      default: 'Aceptar'\n    },\n    cancelText: {\n      type: String,\n      default: 'Cancelar'\n    },\n    showCancel: {\n      type: Boolean,\n      default: true\n    }\n  },\n  emits: ['confirm', 'cancel'],\n  template: `\n    <div class=\"dialog-overlay\" v-if=\"dialogState.show\">\n      <div class=\"dialog-container\">\n        <div class=\"dialog-header\">\n          <h3>{{ dialogState.title }}</h3>\n        </div>\n        <div class=\"dialog-content\">\n          <p>{{ dialogState.message }}</p>\n        </div>\n        <div class=\"dialog-footer\">\n          <button v-if=\"dialogState.showCancel\" @click=\"handleCancel\" class=\"dialog-button cancel-button\">{{ dialogState.cancelText }}</button>\n          <button @click=\"handleConfirm\" class=\"dialog-button confirm-button\">{{ dialogState.confirmText }}</button>\n        </div>\n      </div>\n    </div>\n  `,\n  mounted() {\n    // Agregar estilo inline si no está en el DOM\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dialog-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, 0.5);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 9999;\n      }\n      .dialog-container {\n        background-color: #fff;\n        border-radius: 8px;\n        width: 90%;\n        max-width: 500px;\n        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n        overflow: hidden;\n        animation: dialogFadeIn 0.3s;\n      }\n      .dialog-header {\n        padding: 15px 20px;\n        border-bottom: 1px solid #eee;\n      }\n      .dialog-header h3 {\n        margin: 0;\n        color: #333;\n      }\n      .dialog-content {\n        padding: 20px;\n      }\n      .dialog-footer {\n        padding: 15px 20px;\n        display: flex;\n        justify-content: flex-end;\n        gap: 10px;\n        border-top: 1px solid #eee;\n      }\n      .dialog-button {\n        padding: 10px 20px;\n        border-radius: 4px;\n        font-weight: 500;\n        cursor: pointer;\n        border: none;\n        transition: all 0.2s;\n      }\n      .confirm-button {\n        background-color: #4CAF50;\n        color: white;\n      }\n      .confirm-button:hover {\n        background-color: #45a049;\n      }\n      .cancel-button {\n        background-color: #f1f1f1;\n        color: #333;\n      }\n      .cancel-button:hover {\n        background-color: #e1e1e1;\n      }\n      @keyframes dialogFadeIn {\n        from {\n          opacity: 0;\n          transform: translateY(-20px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  },\n  methods: {\n    handleConfirm() {\n      if (dialogState.resolvePromise) {\n        dialogState.resolvePromise(true);\n        dialogState.resolvePromise = null;\n      }\n      dialogState.show = false;\n    },\n    handleCancel() {\n      if (dialogState.resolvePromise) {\n        dialogState.resolvePromise(false);\n        dialogState.resolvePromise = null;\n      }\n      dialogState.show = false;\n    }\n  }\n};\n\n/**\r\n * Muestra un diálogo de confirmación\r\n * @param {String} message Mensaje a mostrar\r\n * @param {Object} options Opciones adicionales (title, confirmText, cancelText)\r\n * @returns {Promise<Boolean>} Promesa que se resuelve con true si se confirma, false si se cancela\r\n */\nexport function confirm(message, options = {}) {\n  return new Promise(resolve => {\n    dialogState.show = true;\n    dialogState.message = message;\n    dialogState.title = options.title || 'Confirmar';\n    dialogState.confirmText = options.confirmText || 'Aceptar';\n    dialogState.cancelText = options.cancelText || 'Cancelar';\n    dialogState.showCancel = true;\n    dialogState.resolvePromise = resolve;\n  });\n}\n\n/**\r\n * Muestra un mensaje de alerta\r\n * @param {String} message Mensaje a mostrar\r\n * @param {Object} options Opciones adicionales (title, confirmText)\r\n * @returns {Promise<void>} Promesa que se resuelve cuando se cierra la alerta\r\n */\nexport function alert(message, options = {}) {\n  return new Promise(resolve => {\n    dialogState.show = true;\n    dialogState.message = message;\n    dialogState.title = options.title || 'Mensaje';\n    dialogState.confirmText = options.confirmText || 'Aceptar';\n    dialogState.showCancel = false;\n    dialogState.resolvePromise = resolve;\n  });\n}\n\n/**\r\n * Maneja el evento de confirmación del diálogo\r\n */\nexport function handleConfirm() {\n  if (dialogState.resolvePromise) {\n    dialogState.resolvePromise(true);\n    dialogState.resolvePromise = null;\n  }\n  dialogState.show = false;\n}\n\n/**\r\n * Maneja el evento de cancelación del diálogo\r\n */\nexport function handleCancel() {\n  if (dialogState.resolvePromise) {\n    dialogState.resolvePromise(false);\n    dialogState.resolvePromise = null;\n  }\n  dialogState.show = false;\n}\n\n// Exportar un objeto por defecto para compatibilidad con importaciones anteriores\nexport default {\n  state: dialogState,\n  confirm,\n  alert,\n  handleConfirm,\n  handleCancel\n};","map":{"version":3,"names":["createApp","h","reactive","dialogState","show","title","message","confirmText","cancelText","showCancel","resolvePromise","ModalComponent","props","type","String","default","required","Boolean","emits","template","mounted","style","document","createElement","innerHTML","head","appendChild","methods","handleConfirm","handleCancel","confirm","options","Promise","resolve","alert","state"],"sources":["F:/Driver google/VUE.JS-2/temp/websap/src/services/dialogService.js"],"sourcesContent":["import { createApp, h, reactive } from 'vue';\r\n\r\n// Estado global del diálogo usando reactive para asegurar reactividad\r\nexport const dialogState = reactive({\r\n  show: false,\r\n  title: 'Mensaje',\r\n  message: '',\r\n  confirmText: 'Aceptar',\r\n  cancelText: 'Cancelar',\r\n  showCancel: false,\r\n  resolvePromise: null\r\n});\r\n\r\n// Componente de modal para confirmaciones\r\nconst ModalComponent = {\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: 'Confirmar'\r\n    },\r\n    message: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    confirmText: {\r\n      type: String,\r\n      default: 'Aceptar'\r\n    },\r\n    cancelText: {\r\n      type: String,\r\n      default: 'Cancelar'\r\n    },\r\n    showCancel: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  emits: ['confirm', 'cancel'],\r\n  template: `\r\n    <div class=\"dialog-overlay\" v-if=\"dialogState.show\">\r\n      <div class=\"dialog-container\">\r\n        <div class=\"dialog-header\">\r\n          <h3>{{ dialogState.title }}</h3>\r\n        </div>\r\n        <div class=\"dialog-content\">\r\n          <p>{{ dialogState.message }}</p>\r\n        </div>\r\n        <div class=\"dialog-footer\">\r\n          <button v-if=\"dialogState.showCancel\" @click=\"handleCancel\" class=\"dialog-button cancel-button\">{{ dialogState.cancelText }}</button>\r\n          <button @click=\"handleConfirm\" class=\"dialog-button confirm-button\">{{ dialogState.confirmText }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  mounted() {\r\n    // Agregar estilo inline si no está en el DOM\r\n    const style = document.createElement('style');\r\n    style.innerHTML = `\r\n      .dialog-overlay {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        z-index: 9999;\r\n      }\r\n      .dialog-container {\r\n        background-color: #fff;\r\n        border-radius: 8px;\r\n        width: 90%;\r\n        max-width: 500px;\r\n        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n        overflow: hidden;\r\n        animation: dialogFadeIn 0.3s;\r\n      }\r\n      .dialog-header {\r\n        padding: 15px 20px;\r\n        border-bottom: 1px solid #eee;\r\n      }\r\n      .dialog-header h3 {\r\n        margin: 0;\r\n        color: #333;\r\n      }\r\n      .dialog-content {\r\n        padding: 20px;\r\n      }\r\n      .dialog-footer {\r\n        padding: 15px 20px;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        gap: 10px;\r\n        border-top: 1px solid #eee;\r\n      }\r\n      .dialog-button {\r\n        padding: 10px 20px;\r\n        border-radius: 4px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        border: none;\r\n        transition: all 0.2s;\r\n      }\r\n      .confirm-button {\r\n        background-color: #4CAF50;\r\n        color: white;\r\n      }\r\n      .confirm-button:hover {\r\n        background-color: #45a049;\r\n      }\r\n      .cancel-button {\r\n        background-color: #f1f1f1;\r\n        color: #333;\r\n      }\r\n      .cancel-button:hover {\r\n        background-color: #e1e1e1;\r\n      }\r\n      @keyframes dialogFadeIn {\r\n        from {\r\n          opacity: 0;\r\n          transform: translateY(-20px);\r\n        }\r\n        to {\r\n          opacity: 1;\r\n          transform: translateY(0);\r\n        }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  },\r\n  methods: {\r\n    handleConfirm() {\r\n      if (dialogState.resolvePromise) {\r\n        dialogState.resolvePromise(true);\r\n        dialogState.resolvePromise = null;\r\n      }\r\n      dialogState.show = false;\r\n    },\r\n    handleCancel() {\r\n      if (dialogState.resolvePromise) {\r\n        dialogState.resolvePromise(false);\r\n        dialogState.resolvePromise = null;\r\n      }\r\n      dialogState.show = false;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Muestra un diálogo de confirmación\r\n * @param {String} message Mensaje a mostrar\r\n * @param {Object} options Opciones adicionales (title, confirmText, cancelText)\r\n * @returns {Promise<Boolean>} Promesa que se resuelve con true si se confirma, false si se cancela\r\n */\r\nexport function confirm(message, options = {}) {\r\n  return new Promise((resolve) => {\r\n    dialogState.show = true;\r\n    dialogState.message = message;\r\n    dialogState.title = options.title || 'Confirmar';\r\n    dialogState.confirmText = options.confirmText || 'Aceptar';\r\n    dialogState.cancelText = options.cancelText || 'Cancelar';\r\n    dialogState.showCancel = true;\r\n    dialogState.resolvePromise = resolve;\r\n  });\r\n}\r\n\r\n/**\r\n * Muestra un mensaje de alerta\r\n * @param {String} message Mensaje a mostrar\r\n * @param {Object} options Opciones adicionales (title, confirmText)\r\n * @returns {Promise<void>} Promesa que se resuelve cuando se cierra la alerta\r\n */\r\nexport function alert(message, options = {}) {\r\n  return new Promise((resolve) => {\r\n    dialogState.show = true;\r\n    dialogState.message = message;\r\n    dialogState.title = options.title || 'Mensaje';\r\n    dialogState.confirmText = options.confirmText || 'Aceptar';\r\n    dialogState.showCancel = false;\r\n    dialogState.resolvePromise = resolve;\r\n  });\r\n}\r\n\r\n/**\r\n * Maneja el evento de confirmación del diálogo\r\n */\r\nexport function handleConfirm() {\r\n  if (dialogState.resolvePromise) {\r\n    dialogState.resolvePromise(true);\r\n    dialogState.resolvePromise = null;\r\n  }\r\n  dialogState.show = false;\r\n}\r\n\r\n/**\r\n * Maneja el evento de cancelación del diálogo\r\n */\r\nexport function handleCancel() {\r\n  if (dialogState.resolvePromise) {\r\n    dialogState.resolvePromise(false);\r\n    dialogState.resolvePromise = null;\r\n  }\r\n  dialogState.show = false;\r\n}\r\n\r\n// Exportar un objeto por defecto para compatibilidad con importaciones anteriores\r\nexport default {\r\n  state: dialogState,\r\n  confirm,\r\n  alert,\r\n  handleConfirm,\r\n  handleCancel\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,CAAC,EAAEC,QAAQ,QAAQ,KAAK;;AAE5C;AACA,OAAO,MAAMC,WAAW,GAAGD,QAAQ,CAAC;EAClCE,IAAI,EAAE,KAAK;EACXC,KAAK,EAAE,SAAS;EAChBC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,SAAS;EACtBC,UAAU,EAAE,UAAU;EACtBC,UAAU,EAAE,KAAK;EACjBC,cAAc,EAAE;AAClB,CAAC,CAAC;;AAEF;AACA,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE;IACLP,KAAK,EAAE;MACLQ,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDT,OAAO,EAAE;MACPO,IAAI,EAAEC,MAAM;MACZE,QAAQ,EAAE;IACZ,CAAC;IACDT,WAAW,EAAE;MACXM,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDP,UAAU,EAAE;MACVK,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDN,UAAU,EAAE;MACVI,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,KAAK,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;EAC5BC,QAAQ,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAC7CF,KAAK,CAACG,SAAS,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,KAAK,CAAC;EAClC,CAAC;EACDM,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAIzB,WAAW,CAACO,cAAc,EAAE;QAC9BP,WAAW,CAACO,cAAc,CAAC,IAAI,CAAC;QAChCP,WAAW,CAACO,cAAc,GAAG,IAAI;MACnC;MACAP,WAAW,CAACC,IAAI,GAAG,KAAK;IAC1B,CAAC;IACDyB,YAAYA,CAAA,EAAG;MACb,IAAI1B,WAAW,CAACO,cAAc,EAAE;QAC9BP,WAAW,CAACO,cAAc,CAAC,KAAK,CAAC;QACjCP,WAAW,CAACO,cAAc,GAAG,IAAI;MACnC;MACAP,WAAW,CAACC,IAAI,GAAG,KAAK;IAC1B;EACF;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS0B,OAAOA,CAACxB,OAAO,EAAEyB,OAAO,GAAG,CAAC,CAAC,EAAE;EAC7C,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9B9B,WAAW,CAACC,IAAI,GAAG,IAAI;IACvBD,WAAW,CAACG,OAAO,GAAGA,OAAO;IAC7BH,WAAW,CAACE,KAAK,GAAG0B,OAAO,CAAC1B,KAAK,IAAI,WAAW;IAChDF,WAAW,CAACI,WAAW,GAAGwB,OAAO,CAACxB,WAAW,IAAI,SAAS;IAC1DJ,WAAW,CAACK,UAAU,GAAGuB,OAAO,CAACvB,UAAU,IAAI,UAAU;IACzDL,WAAW,CAACM,UAAU,GAAG,IAAI;IAC7BN,WAAW,CAACO,cAAc,GAAGuB,OAAO;EACtC,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAAC5B,OAAO,EAAEyB,OAAO,GAAG,CAAC,CAAC,EAAE;EAC3C,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9B9B,WAAW,CAACC,IAAI,GAAG,IAAI;IACvBD,WAAW,CAACG,OAAO,GAAGA,OAAO;IAC7BH,WAAW,CAACE,KAAK,GAAG0B,OAAO,CAAC1B,KAAK,IAAI,SAAS;IAC9CF,WAAW,CAACI,WAAW,GAAGwB,OAAO,CAACxB,WAAW,IAAI,SAAS;IAC1DJ,WAAW,CAACM,UAAU,GAAG,KAAK;IAC9BN,WAAW,CAACO,cAAc,GAAGuB,OAAO;EACtC,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA,OAAO,SAASL,aAAaA,CAAA,EAAG;EAC9B,IAAIzB,WAAW,CAACO,cAAc,EAAE;IAC9BP,WAAW,CAACO,cAAc,CAAC,IAAI,CAAC;IAChCP,WAAW,CAACO,cAAc,GAAG,IAAI;EACnC;EACAP,WAAW,CAACC,IAAI,GAAG,KAAK;AAC1B;;AAEA;AACA;AACA;AACA,OAAO,SAASyB,YAAYA,CAAA,EAAG;EAC7B,IAAI1B,WAAW,CAACO,cAAc,EAAE;IAC9BP,WAAW,CAACO,cAAc,CAAC,KAAK,CAAC;IACjCP,WAAW,CAACO,cAAc,GAAG,IAAI;EACnC;EACAP,WAAW,CAACC,IAAI,GAAG,KAAK;AAC1B;;AAEA;AACA,eAAe;EACb+B,KAAK,EAAEhC,WAAW;EAClB2B,OAAO;EACPI,KAAK;EACLN,aAAa;EACbC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}