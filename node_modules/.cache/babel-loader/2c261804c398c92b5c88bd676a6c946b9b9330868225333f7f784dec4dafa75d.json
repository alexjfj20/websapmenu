{"ast":null,"code":"import { ref } from 'vue';\nimport { extractIndexedDBImages } from '@/scripts/extractIndexedDBImages';\nexport default {\n  name: 'IndexedDBBackup',\n  setup() {\n    const isBackingUp = ref(false);\n    const message = ref('');\n    const messageType = ref('info');\n\n    // Función para hacer respaldo de IndexedDB\n    const backupIndexedDB = async () => {\n      try {\n        isBackingUp.value = true;\n        message.value = 'Recuperando imágenes originales de IndexedDB...';\n        messageType.value = 'info';\n\n        // Extraer imágenes de IndexedDB y sincronizarlas con MySQL\n        const result = await extractIndexedDBImages();\n        if (result.success) {\n          message.value = result.message;\n          messageType.value = 'success';\n        } else {\n          message.value = result.message;\n          messageType.value = 'error';\n        }\n      } catch (error) {\n        console.error('Error al recuperar imágenes originales:', error);\n        message.value = 'Error al recuperar imágenes originales: ' + error.message;\n        messageType.value = 'error';\n      } finally {\n        isBackingUp.value = false;\n\n        // Limpiar el mensaje después de 10 segundos\n        setTimeout(() => {\n          message.value = '';\n        }, 10000);\n      }\n    };\n    return {\n      isBackingUp,\n      message,\n      messageType,\n      backupIndexedDB\n    };\n  }\n};","map":{"version":3,"names":["ref","extractIndexedDBImages","name","setup","isBackingUp","message","messageType","backupIndexedDB","value","result","success","error","console","setTimeout"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\utils\\IndexedDBBackup.vue"],"sourcesContent":["// src/components/utils/IndexedDBBackup.vue\n\n<template>\n  <div class=\"indexeddb-backup\">\n    <button @click=\"backupIndexedDB\" class=\"backup-button\" :disabled=\"isBackingUp\">\n      {{ isBackingUp ? 'Respaldando...' : 'Recuperar imágenes originales' }}\n    </button>\n    <div v-if=\"message\" :class=\"['backup-message', messageType]\">\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { extractIndexedDBImages } from '@/scripts/extractIndexedDBImages';\n\nexport default {\n  name: 'IndexedDBBackup',\n  setup() {\n    const isBackingUp = ref(false);\n    const message = ref('');\n    const messageType = ref('info');\n\n    // Función para hacer respaldo de IndexedDB\n    const backupIndexedDB = async () => {\n      try {\n        isBackingUp.value = true;\n        message.value = 'Recuperando imágenes originales de IndexedDB...';\n        messageType.value = 'info';\n        \n        // Extraer imágenes de IndexedDB y sincronizarlas con MySQL\n        const result = await extractIndexedDBImages();\n        \n        if (result.success) {\n          message.value = result.message;\n          messageType.value = 'success';\n        } else {\n          message.value = result.message;\n          messageType.value = 'error';\n        }\n      } catch (error) {\n        console.error('Error al recuperar imágenes originales:', error);\n        message.value = 'Error al recuperar imágenes originales: ' + error.message;\n        messageType.value = 'error';\n      } finally {\n        isBackingUp.value = false;\n        \n        // Limpiar el mensaje después de 10 segundos\n        setTimeout(() => {\n          message.value = '';\n        }, 10000);\n      }\n    };\n\n    return {\n      isBackingUp,\n      message,\n      messageType,\n      backupIndexedDB\n    };\n  }\n};\n</script>\n\n<style scoped>\n.indexeddb-backup {\n  margin: 20px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.backup-button {\n  padding: 10px 15px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.backup-button:hover {\n  background-color: #45a049;\n}\n\n.backup-button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.backup-message {\n  margin-top: 10px;\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 14px;\n  max-width: 400px;\n  text-align: center;\n}\n\n.backup-message.info {\n  background-color: #e7f3fe;\n  border: 1px solid #b6d4fe;\n  color: #084298;\n}\n\n.backup-message.success {\n  background-color: #d1e7dd;\n  border: 1px solid #badbcc;\n  color: #0f5132;\n}\n\n.backup-message.warning {\n  background-color: #fff3cd;\n  border: 1px solid #ffecb5;\n  color: #664d03;\n}\n\n.backup-message.error {\n  background-color: #f8d7da;\n  border: 1px solid #f5c2c7;\n  color: #842029;\n}\n</style>\n"],"mappings":"AAcA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,sBAAqB,QAAS,kCAAkC;AAEzE,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAKA,CAAA,EAAG;IACN,MAAMC,WAAU,GAAIJ,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMK,OAAM,GAAIL,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMM,WAAU,GAAIN,GAAG,CAAC,MAAM,CAAC;;IAE/B;IACA,MAAMO,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClC,IAAI;QACFH,WAAW,CAACI,KAAI,GAAI,IAAI;QACxBH,OAAO,CAACG,KAAI,GAAI,iDAAiD;QACjEF,WAAW,CAACE,KAAI,GAAI,MAAM;;QAE1B;QACA,MAAMC,MAAK,GAAI,MAAMR,sBAAsB,CAAC,CAAC;QAE7C,IAAIQ,MAAM,CAACC,OAAO,EAAE;UAClBL,OAAO,CAACG,KAAI,GAAIC,MAAM,CAACJ,OAAO;UAC9BC,WAAW,CAACE,KAAI,GAAI,SAAS;QAC/B,OAAO;UACLH,OAAO,CAACG,KAAI,GAAIC,MAAM,CAACJ,OAAO;UAC9BC,WAAW,CAACE,KAAI,GAAI,OAAO;QAC7B;MACF,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QAC/DN,OAAO,CAACG,KAAI,GAAI,0CAAyC,GAAIG,KAAK,CAACN,OAAO;QAC1EC,WAAW,CAACE,KAAI,GAAI,OAAO;MAC7B,UAAU;QACRJ,WAAW,CAACI,KAAI,GAAI,KAAK;;QAEzB;QACAK,UAAU,CAAC,MAAM;UACfR,OAAO,CAACG,KAAI,GAAI,EAAE;QACpB,CAAC,EAAE,KAAK,CAAC;MACX;IACF,CAAC;IAED,OAAO;MACLJ,WAAW;MACXC,OAAO;MACPC,WAAW;MACXC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}