{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { login } from '@/services/authService';\nimport { alert } from '../services/dialogService';\nexport default {\n  name: 'LoginView',\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const email = ref('');\n    const password = ref('');\n    const isLoading = ref(false);\n    const errorMessage = ref('');\n    const handleLogin = async () => {\n      // Limpiar mensajes de error previos\n      errorMessage.value = '';\n      isLoading.value = true;\n      try {\n        // Intentar iniciar sesión\n        console.log('Intentando login con:', email.value);\n        const user = await login(email.value, password.value);\n        console.log('Login exitoso:', user);\n\n        // Redirigir según el rol del usuario\n        if (user.roles && user.roles.includes('Superadministrador')) {\n          // Redirigir a vista de SuperAdmin\n          router.push('/superadmin');\n        } else if (user.roles && user.roles.includes('Administrador')) {\n          // Redirigir a vista de Admin\n          router.push('/admin');\n        } else {\n          // Redirigir a vista de Empleado para cualquier otro rol\n          router.push('/employee');\n        }\n      } catch (error) {\n        console.error('Error de login:', error);\n        errorMessage.value = error.message || 'Error al iniciar sesión';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    const handleForgotPassword = async () => {\n      await alert('Función de recuperación de contraseña no implementada en esta versión de demostración.');\n    };\n    return {\n      email,\n      password,\n      isLoading,\n      errorMessage,\n      handleLogin,\n      handleForgotPassword\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","useRoute","login","alert","name","setup","router","route","email","password","isLoading","errorMessage","handleLogin","value","console","log","user","roles","includes","push","error","message","handleForgotPassword"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\">\r\n      <h1 class=\"login-title\">Iniciar Sesión</h1>\r\n      \r\n      <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Correo electrónico</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            v-model=\"email\" \r\n            required \r\n            placeholder=\"Ingresa tu correo\" \r\n          />\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Contraseña</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"password\" \r\n            v-model=\"password\" \r\n            required \r\n            placeholder=\"Ingresa tu contraseña\" \r\n          />\r\n        </div>\r\n        \r\n        <div v-if=\"errorMessage\" class=\"error-message\">\r\n          {{ errorMessage }}\r\n        </div>\r\n        \r\n        <button type=\"submit\" :disabled=\"isLoading\">\r\n          {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\r\n        </button>\r\n      </form>\r\n      \r\n      <div class=\"login-options\">\r\n        <router-link to=\"/register\">¿No tienes cuenta? Regístrate</router-link>\r\n        <a href=\"#\" @click.prevent=\"handleForgotPassword\">¿Olvidaste tu contraseña?</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport { login } from '@/services/authService';\r\nimport { alert } from '../services/dialogService';\r\n\r\nexport default {\r\n  name: 'LoginView',\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    const email = ref('');\r\n    const password = ref('');\r\n    const isLoading = ref(false);\r\n    const errorMessage = ref('');\r\n\r\n    const handleLogin = async () => {\r\n      // Limpiar mensajes de error previos\r\n      errorMessage.value = '';\r\n      isLoading.value = true;\r\n      \r\n      try {\r\n        // Intentar iniciar sesión\r\n        console.log('Intentando login con:', email.value);\r\n        const user = await login(email.value, password.value);\r\n        \r\n        console.log('Login exitoso:', user);\r\n        \r\n        // Redirigir según el rol del usuario\r\n        if (user.roles && user.roles.includes('Superadministrador')) {\r\n          // Redirigir a vista de SuperAdmin\r\n          router.push('/superadmin');\r\n        } else if (user.roles && user.roles.includes('Administrador')) {\r\n          // Redirigir a vista de Admin\r\n          router.push('/admin');\r\n        } else {\r\n          // Redirigir a vista de Empleado para cualquier otro rol\r\n          router.push('/employee');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error de login:', error);\r\n        errorMessage.value = error.message || 'Error al iniciar sesión';\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    };\r\n\r\n    const handleForgotPassword = async () => {\r\n      await alert('Función de recuperación de contraseña no implementada en esta versión de demostración.');\r\n    };\r\n\r\n    return {\r\n      email,\r\n      password,\r\n      isLoading,\r\n      errorMessage,\r\n      handleLogin,\r\n      handleForgotPassword\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: calc(100vh - 100px);\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.login-card {\r\n  width: 100%;\r\n  max-width: 450px;\r\n  padding: 30px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-title {\r\n  text-align: center;\r\n  color: #4CAF50;\r\n  margin-bottom: 25px;\r\n  font-size: 28px;\r\n}\r\n\r\n.login-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.form-group label {\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.form-group input {\r\n  padding: 12px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.form-group input:focus {\r\n  border-color: #4CAF50;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.login-button {\r\n  padding: 12px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  height: 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.login-button:hover:not(:disabled) {\r\n  background-color: #45a049;\r\n}\r\n\r\n.login-button:disabled {\r\n  background-color: #a5d6a7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: white;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.login-options {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.login-options a {\r\n  color: #4CAF50;\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n}\r\n\r\n.login-options a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.credentials-info {\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 4px;\r\n  padding: 15px;\r\n  font-size: 14px;\r\n}\r\n\r\n.credentials-info p {\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.credentials-info ul {\r\n  margin: 0;\r\n  padding-left: 20px;\r\n}\r\n\r\n.credentials-info li {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.error-message {\r\n  color: #d32f2f;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.9rem;\r\n  text-align: center;\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .login-card {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .login-title {\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .form-group input {\r\n    padding: 10px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AA8CA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAChD,SAASC,KAAI,QAAS,wBAAwB;AAC9C,SAASC,KAAI,QAAS,2BAA2B;AAEjD,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIN,SAAS,CAAC,CAAC;IAC1B,MAAMO,KAAI,GAAIN,QAAQ,CAAC,CAAC;IACxB,MAAMO,KAAI,GAAIT,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMU,QAAO,GAAIV,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMW,SAAQ,GAAIX,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMY,YAAW,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMa,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B;MACAD,YAAY,CAACE,KAAI,GAAI,EAAE;MACvBH,SAAS,CAACG,KAAI,GAAI,IAAI;MAEtB,IAAI;QACF;QACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEP,KAAK,CAACK,KAAK,CAAC;QACjD,MAAMG,IAAG,GAAI,MAAMd,KAAK,CAACM,KAAK,CAACK,KAAK,EAAEJ,QAAQ,CAACI,KAAK,CAAC;QAErDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,IAAI,CAAC;;QAEnC;QACA,IAAIA,IAAI,CAACC,KAAI,IAAKD,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;UAC3D;UACAZ,MAAM,CAACa,IAAI,CAAC,aAAa,CAAC;QAC5B,OAAO,IAAIH,IAAI,CAACC,KAAI,IAAKD,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;UAC7D;UACAZ,MAAM,CAACa,IAAI,CAAC,QAAQ,CAAC;QACvB,OAAO;UACL;UACAb,MAAM,CAACa,IAAI,CAAC,WAAW,CAAC;QAC1B;MACF,EAAE,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;QACvCT,YAAY,CAACE,KAAI,GAAIO,KAAK,CAACC,OAAM,IAAK,yBAAyB;MACjE,UAAU;QACRX,SAAS,CAACG,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;IAED,MAAMS,oBAAmB,GAAI,MAAAA,CAAA,KAAY;MACvC,MAAMnB,KAAK,CAAC,wFAAwF,CAAC;IACvG,CAAC;IAED,OAAO;MACLK,KAAK;MACLC,QAAQ;MACRC,SAAS;MACTC,YAAY;MACZC,WAAW;MACXU;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}