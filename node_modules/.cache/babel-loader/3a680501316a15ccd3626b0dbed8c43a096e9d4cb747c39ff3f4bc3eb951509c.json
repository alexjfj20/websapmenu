{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\n// Configuración de la API base\nconst API_URL = process.env.VUE_APP_API_URL || 'http://localhost:3000/api';\n\n// Variables para el usuario actual y token\nlet currentUser = null;\nlet authToken = localStorage.getItem('auth_token') || null;\n\n/**\r\n * Configura el token de autorización para las solicitudes API\r\n * @param {string} token - Token JWT\r\n */\nfunction setAuthToken(token) {\n  if (token) {\n    // No hacemos nada con axios ya que no lo usamos\n    localStorage.setItem('auth_token', token);\n    authToken = token;\n  } else {\n    localStorage.removeItem('auth_token');\n    authToken = null;\n  }\n}\n\n/**\r\n * Función para iniciar sesión con la API\r\n * @param {string} email - Correo electrónico del usuario\r\n * @param {string} password - Contraseña del usuario\r\n * @returns {Promise<Object>} - Datos del usuario autenticado\r\n */\nasync function login(email, password) {\n  console.log(\"Intentando iniciar sesión como:\", email);\n\n  // Lista de usuarios hardcodeados para pruebas\n  const usuarios = [{\n    id: 1,\n    email: 'superadmin@gmail.com',\n    password: 'SuperAdmin2023',\n    nombre: 'Super Administrador',\n    roles: ['Superadministrador']\n  }, {\n    id: 2,\n    email: 'admin@example.com',\n    password: 'Admin2023',\n    nombre: 'Administrador',\n    roles: ['Administrador']\n  }];\n  try {\n    // Buscar usuario por email\n    const usuario = usuarios.find(u => u.email === email);\n    if (!usuario) {\n      console.error(\"Usuario no encontrado\");\n      throw new Error(\"Credenciales incorrectas\");\n    }\n    if (usuario.password !== password) {\n      console.error(\"Contraseña incorrecta\");\n      throw new Error(\"Credenciales incorrectas\");\n    }\n\n    // Generar un token simple\n    const token = btoa(JSON.stringify({\n      id: usuario.id,\n      email: usuario.email,\n      timestamp: Date.now()\n    }));\n\n    // Almacenar token\n    setAuthToken(token);\n\n    // Guardar usuario en memoria y localStorage\n    currentUser = {\n      id: usuario.id,\n      email: usuario.email,\n      nombre: usuario.nombre,\n      roles: usuario.roles\n    };\n    localStorage.setItem('current_user', JSON.stringify(currentUser));\n    return currentUser;\n  } catch (error) {\n    console.error(\"Error en login:\", error);\n    throw error;\n  }\n}\n\n// Cierra la sesión\nfunction logout() {\n  currentUser = null;\n  localStorage.removeItem('auth_token');\n  localStorage.removeItem('current_user');\n}\n\n// Verifica si el usuario está autenticado\nfunction isAuthenticated() {\n  if (!currentUser && localStorage.getItem('auth_token')) {\n    try {\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\n    } catch (e) {\n      console.error('Error al cargar usuario desde localStorage:', e);\n    }\n  }\n  return !!currentUser;\n}\n\n// Obtiene el usuario actual\nfunction getCurrentUser() {\n  if (!currentUser && localStorage.getItem('auth_token')) {\n    try {\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\n    } catch (e) {\n      console.error('Error al cargar usuario desde localStorage:', e);\n    }\n  }\n  return currentUser;\n}\n\n// Verifica si el usuario tiene un rol\nfunction hasRole(roleName) {\n  const user = getCurrentUser();\n  if (!user || !user.roles) {\n    return false;\n  }\n  return Array.isArray(user.roles) ? user.roles.includes(roleName) : user.roles === roleName;\n}\nexport { login, logout, isAuthenticated, hasRole, getCurrentUser };\nexport default {\n  login,\n  logout,\n  isAuthenticated,\n  hasRole,\n  getCurrentUser\n};","map":{"version":3,"names":["API_URL","process","env","VUE_APP_API_URL","currentUser","authToken","localStorage","getItem","setAuthToken","token","setItem","removeItem","login","email","password","console","log","usuarios","id","nombre","roles","usuario","find","u","error","Error","btoa","JSON","stringify","timestamp","Date","now","logout","isAuthenticated","parse","e","getCurrentUser","hasRole","roleName","user","Array","isArray","includes"],"sources":["F:/Driver google/VUE.JS-2/temp/websap/src/services/authService.js"],"sourcesContent":["// Configuración de la API base\r\nconst API_URL = process.env.VUE_APP_API_URL || 'http://localhost:3000/api';\r\n\r\n// Variables para el usuario actual y token\r\nlet currentUser = null;\r\nlet authToken = localStorage.getItem('auth_token') || null;\r\n\r\n/**\r\n * Configura el token de autorización para las solicitudes API\r\n * @param {string} token - Token JWT\r\n */\r\nfunction setAuthToken(token) {\r\n  if (token) {\r\n    // No hacemos nada con axios ya que no lo usamos\r\n    localStorage.setItem('auth_token', token);\r\n    authToken = token;\r\n  } else {\r\n    localStorage.removeItem('auth_token');\r\n    authToken = null;\r\n  }\r\n}\r\n\r\n/**\r\n * Función para iniciar sesión con la API\r\n * @param {string} email - Correo electrónico del usuario\r\n * @param {string} password - Contraseña del usuario\r\n * @returns {Promise<Object>} - Datos del usuario autenticado\r\n */\r\nasync function login(email, password) {\r\n  console.log(\"Intentando iniciar sesión como:\", email);\r\n  \r\n  // Lista de usuarios hardcodeados para pruebas\r\n  const usuarios = [\r\n    {\r\n      id: 1,\r\n      email: 'superadmin@gmail.com',\r\n      password: 'SuperAdmin2023',\r\n      nombre: 'Super Administrador',\r\n      roles: ['Superadministrador']\r\n    },\r\n    {\r\n      id: 2,\r\n      email: 'admin@example.com',\r\n      password: 'Admin2023',\r\n      nombre: 'Administrador',\r\n      roles: ['Administrador']\r\n    }\r\n  ];\r\n  \r\n  try {\r\n    // Buscar usuario por email\r\n    const usuario = usuarios.find(u => u.email === email);\r\n    \r\n    if (!usuario) {\r\n      console.error(\"Usuario no encontrado\");\r\n      throw new Error(\"Credenciales incorrectas\");\r\n    }\r\n    \r\n    if (usuario.password !== password) {\r\n      console.error(\"Contraseña incorrecta\");\r\n      throw new Error(\"Credenciales incorrectas\");\r\n    }\r\n    \r\n    // Generar un token simple\r\n    const token = btoa(JSON.stringify({\r\n      id: usuario.id,\r\n      email: usuario.email,\r\n      timestamp: Date.now()\r\n    }));\r\n    \r\n    // Almacenar token\r\n    setAuthToken(token);\r\n    \r\n    // Guardar usuario en memoria y localStorage\r\n    currentUser = {\r\n      id: usuario.id,\r\n      email: usuario.email,\r\n      nombre: usuario.nombre,\r\n      roles: usuario.roles\r\n    };\r\n    localStorage.setItem('current_user', JSON.stringify(currentUser));\r\n    \r\n    return currentUser;\r\n  } catch (error) {\r\n    console.error(\"Error en login:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Cierra la sesión\r\nfunction logout() {\r\n  currentUser = null;\r\n  localStorage.removeItem('auth_token');\r\n  localStorage.removeItem('current_user');\r\n}\r\n\r\n// Verifica si el usuario está autenticado\r\nfunction isAuthenticated() {\r\n  if (!currentUser && localStorage.getItem('auth_token')) {\r\n    try {\r\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\r\n    } catch (e) {\r\n      console.error('Error al cargar usuario desde localStorage:', e);\r\n    }\r\n  }\r\n  \r\n  return !!currentUser;\r\n}\r\n\r\n// Obtiene el usuario actual\r\nfunction getCurrentUser() {\r\n  if (!currentUser && localStorage.getItem('auth_token')) {\r\n    try {\r\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\r\n    } catch (e) {\r\n      console.error('Error al cargar usuario desde localStorage:', e);\r\n    }\r\n  }\r\n  \r\n  return currentUser;\r\n}\r\n\r\n// Verifica si el usuario tiene un rol\r\nfunction hasRole(roleName) {\r\n  const user = getCurrentUser();\r\n  \r\n  if (!user || !user.roles) {\r\n    return false;\r\n  }\r\n  \r\n  return Array.isArray(user.roles) \r\n    ? user.roles.includes(roleName) \r\n    : user.roles === roleName;\r\n}\r\n\r\nexport {\r\n  login,\r\n  logout,\r\n  isAuthenticated,\r\n  hasRole,\r\n  getCurrentUser\r\n};\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  isAuthenticated,\r\n  hasRole,\r\n  getCurrentUser\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}