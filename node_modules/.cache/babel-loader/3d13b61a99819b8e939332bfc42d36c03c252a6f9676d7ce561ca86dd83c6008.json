{"ast":null,"code":"import { onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { getCurrentUser } from '@/services/authService';\nexport default {\n  name: 'DashboardView',\n  setup() {\n    const router = useRouter();\n    onMounted(() => {\n      const user = getCurrentUser();\n      if (user && user.roles) {\n        if (user.roles.includes('Superadministrador')) {\n          router.replace('/superadmin');\n        } else if (user.roles.includes('Administrador')) {\n          router.replace('/admin');\n        } else {\n          router.replace('/employee');\n        }\n      } else {\n        router.replace('/');\n      }\n    });\n    return {};\n  }\n};","map":{"version":3,"names":["onMounted","useRouter","getCurrentUser","name","setup","router","user","roles","includes","replace"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\views\\DashboardView.vue"],"sourcesContent":["<template>\r\n  <div>Redirigiendo...</div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { getCurrentUser } from '@/services/authService';\r\n\r\nexport default {\r\n  name: 'DashboardView',\r\n  setup() {\r\n    const router = useRouter();\r\n    \r\n    onMounted(() => {\r\n      const user = getCurrentUser();\r\n      if (user && user.roles) {\r\n        if (user.roles.includes('Superadministrador')) {\r\n          router.replace('/superadmin');\r\n        } else if (user.roles.includes('Administrador')) {\r\n          router.replace('/admin');\r\n        } else {\r\n          router.replace('/employee');\r\n        }\r\n      } else {\r\n        router.replace('/');\r\n      }\r\n    });\r\n    \r\n    return {};\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.dashboard-header {\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.logout-btn {\r\n  background-color: #e74c3c;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.dashboard-content {\r\n  display: flex;\r\n  flex: 1;\r\n}\r\n\r\n.sidebar {\r\n  width: 250px;\r\n  background-color: #f8f9fa;\r\n  padding: 1rem 0;\r\n  border-right: 1px solid #dee2e6;\r\n}\r\n\r\n.menu {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.menu li {\r\n  margin: 0;\r\n}\r\n\r\n.menu a {\r\n  display: block;\r\n  padding: 0.75rem 1.5rem;\r\n  color: #495057;\r\n  text-decoration: none;\r\n  border-left: 3px solid transparent;\r\n}\r\n\r\n.menu a:hover, .menu a.router-link-active {\r\n  background-color: #e9ecef;\r\n  color: #007bff;\r\n  border-left-color: #007bff;\r\n}\r\n\r\n.main-content {\r\n  flex: 1;\r\n  padding: 2rem;\r\n}\r\n\r\n.dashboard-widgets {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-top: 2rem;\r\n}\r\n\r\n.widget {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  padding: 1.5rem;\r\n}\r\n\r\nh2 {\r\n  margin-top: 0;\r\n  color: #343a40;\r\n}\r\n\r\nh3 {\r\n  margin-top: 0;\r\n  color: #495057;\r\n}\r\n</style> "],"mappings":"AAKA,SAASA,SAAQ,QAAS,KAAK;AAC/B,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,cAAa,QAAS,wBAAwB;AAEvD,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIJ,SAAS,CAAC,CAAC;IAE1BD,SAAS,CAAC,MAAM;MACd,MAAMM,IAAG,GAAIJ,cAAc,CAAC,CAAC;MAC7B,IAAII,IAAG,IAAKA,IAAI,CAACC,KAAK,EAAE;QACtB,IAAID,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;UAC7CH,MAAM,CAACI,OAAO,CAAC,aAAa,CAAC;QAC/B,OAAO,IAAIH,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;UAC/CH,MAAM,CAACI,OAAO,CAAC,QAAQ,CAAC;QAC1B,OAAO;UACLJ,MAAM,CAACI,OAAO,CAAC,WAAW,CAAC;QAC7B;MACF,OAAO;QACLJ,MAAM,CAACI,OAAO,CAAC,GAAG,CAAC;MACrB;IACF,CAAC,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}