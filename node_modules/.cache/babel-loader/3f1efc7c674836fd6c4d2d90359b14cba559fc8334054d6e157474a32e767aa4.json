{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { getUsersFromDB } from '../services/userService';\nexport default {\n  name: 'LoginComponent',\n  setup() {\n    const loginForm = ref({\n      email: '',\n      password: ''\n    });\n    const users = ref([]);\n    const router = useRouter();\n    const loginError = ref('');\n    onMounted(async () => {\n      try {\n        const usersFromDB = await getUsersFromDB();\n        users.value = usersFromDB || [];\n        console.log(`Cargados ${users.value.length} usuarios desde IndexedDB`);\n      } catch (error) {\n        console.error('Error al cargar usuarios:', error);\n        users.value = [];\n        loginError.value = 'Error al cargar usuarios. Por favor, intente más tarde.';\n      }\n    });\n    const login = async () => {\n      loginError.value = '';\n\n      // Asegurarse de que users es un array antes de usar find\n      if (!Array.isArray(users.value)) {\n        users.value = [];\n      }\n      if (users.value.length === 0) {\n        loginError.value = 'No hay usuarios registrados. Por favor, regístrese primero.';\n        setTimeout(() => {\n          router.push('/register');\n        }, 2000);\n        return;\n      }\n      const user = users.value.find(user => user.email === loginForm.value.email && user.password === loginForm.value.password);\n      if (user) {\n        // Redirigir a la página del menú\n        router.push('/menu');\n      } else {\n        loginError.value = 'Credenciales inválidas. Por favor, intente nuevamente.';\n      }\n    };\n    return {\n      loginForm,\n      users,\n      login,\n      loginError\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","getUsersFromDB","name","setup","loginForm","email","password","users","router","loginError","usersFromDB","value","console","log","length","error","login","Array","isArray","setTimeout","push","user","find"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\LoginComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <div class=\"auth-form-card\">\r\n      <h2 class=\"auth-title\">Iniciar Sesión</h2>\r\n      \r\n      <div v-if=\"loginError\" class=\"error-message\">\r\n        {{ loginError }}\r\n      </div>\r\n      \r\n      <form @submit.prevent=\"login\" class=\"auth-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"login-email\">Email:</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"login-email\" \r\n            v-model=\"loginForm.email\" \r\n            class=\"auth-input\"\r\n            required\r\n            placeholder=\"Ingresa tu correo electrónico\"\r\n          >\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"login-password\">Contraseña:</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"login-password\" \r\n            v-model=\"loginForm.password\" \r\n            class=\"auth-input\"\r\n            required\r\n            placeholder=\"Ingresa tu contraseña\"\r\n          >\r\n        </div>\r\n        <button type=\"submit\" class=\"auth-button\">Ingresar</button>\r\n      </form>\r\n      <div class=\"auth-links\">\r\n        <p>¿No tienes cuenta? <router-link to=\"/register\" class=\"auth-link\">Registrarse</router-link></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { getUsersFromDB } from '../services/userService';\r\n\r\nexport default {\r\n  name: 'LoginComponent',\r\n  setup() {\r\n    const loginForm = ref({\r\n      email: '',\r\n      password: ''\r\n    });\r\n    \r\n    const users = ref([]);\r\n    const router = useRouter();\r\n    const loginError = ref('');\r\n    \r\n    onMounted(async () => {\r\n      try {\r\n        const usersFromDB = await getUsersFromDB();\r\n        users.value = usersFromDB || [];\r\n        console.log(`Cargados ${users.value.length} usuarios desde IndexedDB`);\r\n      } catch (error) {\r\n        console.error('Error al cargar usuarios:', error);\r\n        users.value = [];\r\n        loginError.value = 'Error al cargar usuarios. Por favor, intente más tarde.';\r\n      }\r\n    });\r\n    \r\n    const login = async () => {\r\n      loginError.value = '';\r\n      \r\n      // Asegurarse de que users es un array antes de usar find\r\n      if (!Array.isArray(users.value)) {\r\n        users.value = [];\r\n      }\r\n      \r\n      if (users.value.length === 0) {\r\n        loginError.value = 'No hay usuarios registrados. Por favor, regístrese primero.';\r\n        setTimeout(() => {\r\n          router.push('/register');\r\n        }, 2000);\r\n        return;\r\n      }\r\n      \r\n      const user = users.value.find(user => \r\n        user.email === loginForm.value.email && \r\n        user.password === loginForm.value.password\r\n      );\r\n      \r\n      if (user) {\r\n        // Redirigir a la página del menú\r\n        router.push('/menu');\r\n      } else {\r\n        loginError.value = 'Credenciales inválidas. Por favor, intente nuevamente.';\r\n      }\r\n    };\r\n    \r\n    return {\r\n      loginForm,\r\n      users,\r\n      login,\r\n      loginError\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.auth-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n  padding: 20px;\r\n}\r\n\r\n.auth-form-card {\r\n  width: 100%;\r\n  max-width: 450px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n  padding: 30px;\r\n}\r\n\r\n.auth-title {\r\n  text-align: center;\r\n  color: #4CAF50;\r\n  font-size: 28px;\r\n  margin-bottom: 30px;\r\n  font-weight: 600;\r\n}\r\n\r\n.auth-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.form-group label {\r\n  font-weight: 600;\r\n  color: #333;\r\n  font-size: 16px;\r\n}\r\n\r\n.auth-input {\r\n  padding: 14px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\n.auth-input:focus {\r\n  outline: none;\r\n  border-color: #4CAF50;\r\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.auth-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 14px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  margin-top: 10px;\r\n}\r\n\r\n.auth-button:hover {\r\n  background-color: #388E3C;\r\n}\r\n\r\n.auth-links {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #666;\r\n}\r\n\r\n.auth-link {\r\n  color: #4CAF50;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.auth-link:hover {\r\n  color: #388E3C;\r\n  text-decoration: underline;\r\n}\r\n\r\n@media (max-width: 500px) {\r\n  .auth-form-card {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .auth-title {\r\n    font-size: 24px;\r\n  }\r\n}\r\n\r\n.error-message {\r\n  background-color: #ffebee;\r\n  color: #b71c1c;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;;AA0CA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,cAAa,QAAS,yBAAyB;AAExD,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIN,GAAG,CAAC;MACpBO,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,KAAI,GAAIT,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMU,MAAK,GAAIR,SAAS,CAAC,CAAC;IAC1B,MAAMS,UAAS,GAAIX,GAAG,CAAC,EAAE,CAAC;IAE1BC,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMW,WAAU,GAAI,MAAMT,cAAc,CAAC,CAAC;QAC1CM,KAAK,CAACI,KAAI,GAAID,WAAU,IAAK,EAAE;QAC/BE,OAAO,CAACC,GAAG,CAAC,YAAYN,KAAK,CAACI,KAAK,CAACG,MAAM,2BAA2B,CAAC;MACxE,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDR,KAAK,CAACI,KAAI,GAAI,EAAE;QAChBF,UAAU,CAACE,KAAI,GAAI,yDAAyD;MAC9E;IACF,CAAC,CAAC;IAEF,MAAMK,KAAI,GAAI,MAAAA,CAAA,KAAY;MACxBP,UAAU,CAACE,KAAI,GAAI,EAAE;;MAErB;MACA,IAAI,CAACM,KAAK,CAACC,OAAO,CAACX,KAAK,CAACI,KAAK,CAAC,EAAE;QAC/BJ,KAAK,CAACI,KAAI,GAAI,EAAE;MAClB;MAEA,IAAIJ,KAAK,CAACI,KAAK,CAACG,MAAK,KAAM,CAAC,EAAE;QAC5BL,UAAU,CAACE,KAAI,GAAI,6DAA6D;QAChFQ,UAAU,CAAC,MAAM;UACfX,MAAM,CAACY,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC;QACR;MACF;MAEA,MAAMC,IAAG,GAAId,KAAK,CAACI,KAAK,CAACW,IAAI,CAACD,IAAG,IAC/BA,IAAI,CAAChB,KAAI,KAAMD,SAAS,CAACO,KAAK,CAACN,KAAI,IACnCgB,IAAI,CAACf,QAAO,KAAMF,SAAS,CAACO,KAAK,CAACL,QACpC,CAAC;MAED,IAAIe,IAAI,EAAE;QACR;QACAb,MAAM,CAACY,IAAI,CAAC,OAAO,CAAC;MACtB,OAAO;QACLX,UAAU,CAACE,KAAI,GAAI,wDAAwD;MAC7E;IACF,CAAC;IAED,OAAO;MACLP,SAAS;MACTG,KAAK;MACLS,KAAK;MACLP;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}