{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, onMounted } from 'vue';\nimport PlatoForm from '@/components/PlatoForm.vue';\nimport DeletePlatoButton from '@/components/DeletePlatoButton.vue';\nimport DirectDeleteButton from '@/components/DirectDeleteButton.vue';\nimport IndexedDBBackup from '@/components/utils/IndexedDBBackup.vue';\nimport { getAllPlatos } from '@/services/indexedDBService';\nexport default {\n  name: 'PlatosView',\n  components: {\n    PlatoForm,\n    DeletePlatoButton,\n    DirectDeleteButton,\n    IndexedDBBackup\n  },\n  setup() {\n    const platos = ref([]);\n    const isLoading = ref(true);\n    const error = ref('');\n    const showForm = ref(false);\n    const platoToEdit = ref(null);\n\n    // Cargar todos los platos al montar el componente\n    onMounted(() => {\n      loadPlatos();\n    });\n\n    // Función para cargar platos\n    const loadPlatos = async () => {\n      isLoading.value = true;\n      error.value = '';\n      try {\n        const result = await getAllPlatos();\n        platos.value = result;\n        console.log('Platos cargados:', platos.value);\n      } catch (err) {\n        console.error('Error al cargar platos:', err);\n        error.value = `Error al cargar platos: ${err.message || 'Error desconocido'}`;\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // Manejadores de eventos del formulario\n    const onPlatoSaved = savedPlato => {\n      console.log('Plato guardado en la vista:', savedPlato);\n      platos.value.push(savedPlato);\n      showForm.value = false;\n    };\n    const onPlatoUpdated = updatedPlato => {\n      console.log('Plato actualizado en la vista:', updatedPlato);\n      const index = platos.value.findIndex(p => p.id === updatedPlato.id);\n      if (index !== -1) {\n        platos.value[index] = {\n          ...updatedPlato\n        };\n      }\n      platoToEdit.value = null;\n      showForm.value = false;\n    };\n    const onFormCancel = () => {\n      platoToEdit.value = null;\n      showForm.value = false;\n    };\n\n    // Funciones para editar y eliminar platos\n    const editPlato = plato => {\n      platoToEdit.value = {\n        ...plato\n      };\n      showForm.value = true;\n    };\n    const onPlatoDeleted = id => {\n      platos.value = platos.value.filter(plato => plato.id !== id);\n    };\n    const onDeleteError = err => {\n      console.error('Error al eliminar plato:', err);\n      error.value = `Error al eliminar plato: ${err.message || 'Error desconocido'}`;\n    };\n    return {\n      platos,\n      isLoading,\n      error,\n      showForm,\n      platoToEdit,\n      loadPlatos,\n      onPlatoSaved,\n      onPlatoUpdated,\n      onFormCancel,\n      editPlato,\n      onPlatoDeleted,\n      onDeleteError\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","PlatoForm","DeletePlatoButton","DirectDeleteButton","IndexedDBBackup","getAllPlatos","name","components","setup","platos","isLoading","error","showForm","platoToEdit","loadPlatos","value","result","console","log","err","message","onPlatoSaved","savedPlato","push","onPlatoUpdated","updatedPlato","index","findIndex","p","id","onFormCancel","editPlato","plato","onPlatoDeleted","filter","onDeleteError"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\views\\PlatosView.vue"],"sourcesContent":["<template>\n  <div class=\"platos-view\">\n    <h2>Gestión de Platos</h2>\n    \n    <div class=\"actions-container\">\n      <button @click=\"showForm = !showForm\" class=\"btn toggle-form-btn\">\n        {{ showForm ? 'Ocultar Formulario' : 'Crear Nuevo Plato' }}\n      </button>\n      \n      <!-- Componente de respaldo de IndexedDB -->\n      <IndexedDBBackup class=\"backup-component\" />\n    </div>\n    \n    <div v-if=\"showForm\" class=\"form-container\">\n      <PlatoForm \n        :edit-plato=\"platoToEdit\" \n        @plato-saved=\"onPlatoSaved\" \n        @plato-updated=\"onPlatoUpdated\" \n        @cancel=\"onFormCancel\"\n      />\n    </div>\n    \n    <div class=\"platos-list\">\n      <h3>Lista de Platos ({{ platos.length }})</h3>\n      \n      <div v-if=\"isLoading\" class=\"loading\">\n        Cargando platos...\n      </div>\n      \n      <div v-else-if=\"platos.length === 0\" class=\"empty-state\">\n        No hay platos disponibles. ¡Crea el primero!\n      </div>\n      \n      <div v-else class=\"platos-grid\">\n        <div v-for=\"plato in platos\" :key=\"plato.id\" class=\"plato-card\">\n          <div class=\"plato-image\" :style=\"{ backgroundImage: `url(${plato.image_url || '/placeholder-food.jpg'})` }\"></div>\n          <div class=\"plato-content\">\n            <h4>{{ plato.name }}</h4>\n            <p class=\"price\">${{ plato.price.toFixed(2) }}</p>\n            <p class=\"category\">{{ plato.category || 'Sin categoría' }}</p>\n            <p class=\"description\">{{ plato.description || 'Sin descripción' }}</p>\n            <div class=\"availability\" :class=\"{ available: plato.is_available }\">\n              {{ plato.is_available ? 'Disponible' : 'No disponible' }}\n            </div>\n          </div>\n          <div class=\"plato-actions\">\n            <button @click=\"editPlato(plato)\" class=\"btn btn-edit\">Editar</button>\n            <DeletePlatoButton \n              :plato-id=\"plato.id\" \n              :plato-name=\"plato.name\"\n              @deleted=\"onPlatoDeleted\"\n              @error=\"onDeleteError\"\n            />\n            <DirectDeleteButton\n              :plato-id=\"plato.id\"\n              :plato-name=\"plato.name\"\n              @deleted=\"onPlatoDeleted\"\n              @error=\"onDeleteError\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"error\" class=\"error-container\">\n      <p>{{ error }}</p>\n      <button @click=\"loadPlatos\" class=\"btn retry-btn\">Reintentar</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport PlatoForm from '@/components/PlatoForm.vue';\nimport DeletePlatoButton from '@/components/DeletePlatoButton.vue';\nimport DirectDeleteButton from '@/components/DirectDeleteButton.vue';\nimport IndexedDBBackup from '@/components/utils/IndexedDBBackup.vue';\nimport { getAllPlatos } from '@/services/indexedDBService';\n\nexport default {\n  name: 'PlatosView',\n  \n  components: {\n    PlatoForm,\n    DeletePlatoButton,\n    DirectDeleteButton,\n    IndexedDBBackup\n  },\n  \n  setup() {\n    const platos = ref([]);\n    const isLoading = ref(true);\n    const error = ref('');\n    const showForm = ref(false);\n    const platoToEdit = ref(null);\n    \n    // Cargar todos los platos al montar el componente\n    onMounted(() => {\n      loadPlatos();\n    });\n    \n    // Función para cargar platos\n    const loadPlatos = async () => {\n      isLoading.value = true;\n      error.value = '';\n      \n      try {\n        const result = await getAllPlatos();\n        platos.value = result;\n        console.log('Platos cargados:', platos.value);\n      } catch (err) {\n        console.error('Error al cargar platos:', err);\n        error.value = `Error al cargar platos: ${err.message || 'Error desconocido'}`;\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    \n    // Manejadores de eventos del formulario\n    const onPlatoSaved = (savedPlato) => {\n      console.log('Plato guardado en la vista:', savedPlato);\n      platos.value.push(savedPlato);\n      showForm.value = false;\n    };\n    \n    const onPlatoUpdated = (updatedPlato) => {\n      console.log('Plato actualizado en la vista:', updatedPlato);\n      \n      const index = platos.value.findIndex(p => p.id === updatedPlato.id);\n      if (index !== -1) {\n        platos.value[index] = { ...updatedPlato };\n      }\n      \n      platoToEdit.value = null;\n      showForm.value = false;\n    };\n    \n    const onFormCancel = () => {\n      platoToEdit.value = null;\n      showForm.value = false;\n    };\n    \n    // Funciones para editar y eliminar platos\n    const editPlato = (plato) => {\n      platoToEdit.value = { ...plato };\n      showForm.value = true;\n    };\n    \n    const onPlatoDeleted = (id) => {\n      platos.value = platos.value.filter(plato => plato.id !== id);\n    };\n    \n    const onDeleteError = (err) => {\n      console.error('Error al eliminar plato:', err);\n      error.value = `Error al eliminar plato: ${err.message || 'Error desconocido'}`;\n    };\n    \n    return {\n      platos,\n      isLoading,\n      error,\n      showForm,\n      platoToEdit,\n      loadPlatos,\n      onPlatoSaved,\n      onPlatoUpdated,\n      onFormCancel,\n      editPlato,\n      onPlatoDeleted,\n      onDeleteError\n    };\n  }\n};\n</script>\n\n<style scoped>\n.platos-view {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.actions-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.toggle-form-btn {\n  margin-bottom: 20px;\n  background-color: #2196F3;\n  color: white;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.backup-component {\n  margin-left: 20px;\n}\n\n.form-container {\n  margin-bottom: 30px;\n}\n\n.platos-list {\n  margin-top: 30px;\n}\n\n.loading, .empty-state {\n  padding: 20px;\n  text-align: center;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n}\n\n.platos-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.plato-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n}\n\n.plato-image {\n  height: 200px;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-color: #f5f5f5;\n}\n\n.plato-content {\n  padding: 15px;\n  flex-grow: 1;\n}\n\n.plato-content h4 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 18px;\n}\n\n.price {\n  font-weight: bold;\n  font-size: 16px;\n  color: #4CAF50;\n  margin: 5px 0;\n}\n\n.category {\n  font-size: 14px;\n  color: #757575;\n  margin: 5px 0;\n}\n\n.description {\n  font-size: 14px;\n  margin: 10px 0;\n  color: #333;\n}\n\n.availability {\n  display: inline-block;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 12px;\n  background-color: #FFEBEE;\n  color: #D32F2F;\n}\n\n.availability.available {\n  background-color: #E8F5E9;\n  color: #2E7D32;\n}\n\n.plato-actions {\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n  border-top: 1px solid #eee;\n}\n\n.btn {\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.btn-edit {\n  background-color: #2196F3;\n  color: white;\n}\n\n.error-container {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #FFEBEE;\n  border-radius: 4px;\n  color: #C62828;\n}\n\n.retry-btn {\n  margin-top: 10px;\n  background-color: #9E9E9E;\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}