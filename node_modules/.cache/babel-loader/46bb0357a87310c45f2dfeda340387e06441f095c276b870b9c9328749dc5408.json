{"ast":null,"code":"import { onMounted, onUnmounted } from 'vue';\nimport { saveWhatsAppReservation } from '../services/reservaService';\nimport eventBus from '../utils/eventBus';\n\n// Función para procesar mensajes de WhatsApp\n\nexport default {\n  __name: 'WhatsAppReservationHandler',\n  setup(__props, {\n    expose: __expose\n  }) {\n    const processWhatsAppMessage = async event => {\n      // Solo procesamos mensajes que vengan de la ventana principal\n      if (event.source !== window.parent) return;\n      try {\n        // Verificar que el mensaje sea de tipo reserva de WhatsApp\n        if (event.data && event.data.type === 'whatsapp_reservation') {\n          console.log('Recibido mensaje de reserva desde WhatsApp:', event.data);\n\n          // Guardar la reserva usando el servicio\n          const result = await saveWhatsAppReservation(event.data.reservation);\n          if (result.success) {\n            console.log('Reserva de WhatsApp guardada correctamente:', result.reservation);\n\n            // Notificar a la ventana que envió el mensaje\n            event.source.postMessage({\n              type: 'whatsapp_reservation_response',\n              success: true,\n              message: 'Reserva recibida correctamente'\n            }, '*');\n          } else {\n            throw new Error(result.error);\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar mensaje de WhatsApp:', error);\n\n        // Notificar error a la ventana que envió el mensaje\n        if (event.source) {\n          event.source.postMessage({\n            type: 'whatsapp_reservation_response',\n            success: false,\n            message: 'Error al procesar la reserva: ' + error.message\n          }, '*');\n        }\n      }\n    };\n\n    // Configurar el listener de mensajes al montar el componente\n    onMounted(() => {\n      window.addEventListener('message', processWhatsAppMessage);\n      console.log('WhatsAppReservationHandler montado y escuchando mensajes');\n    });\n\n    // Limpiar el listener al desmontar el componente\n    onUnmounted(() => {\n      window.removeEventListener('message', processWhatsAppMessage);\n      console.log('WhatsAppReservationHandler desmontado');\n    });\n\n    // Función para simular una reserva de WhatsApp (para pruebas)\n    const simulateWhatsAppReservation = async () => {\n      try {\n        const whatsappData = {\n          nombre: 'Cliente de Prueba WhatsApp',\n          telefono: '612345678',\n          email: 'whatsapp@example.com',\n          fecha: new Date().toISOString().split('T')[0],\n          // Hoy\n          hora: '20:00',\n          personas: 3,\n          notas: 'Reserva de prueba desde WhatsApp'\n        };\n        const result = await saveWhatsAppReservation(whatsappData);\n        if (result.success) {\n          console.log('Reserva de prueba de WhatsApp guardada correctamente:', result.reservation);\n        } else {\n          console.error('Error al guardar reserva de prueba:', result.error);\n        }\n      } catch (error) {\n        console.error('Error al simular reserva de WhatsApp:', error);\n      }\n    };\n\n    // Exponer la función de simulación para pruebas\n    __expose({\n      simulateWhatsAppReservation\n    });\n    const __returned__ = {\n      processWhatsAppMessage,\n      simulateWhatsAppReservation,\n      onMounted,\n      onUnmounted,\n      get saveWhatsAppReservation() {\n        return saveWhatsAppReservation;\n      },\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","onUnmounted","saveWhatsAppReservation","eventBus","processWhatsAppMessage","event","source","window","parent","data","type","console","log","result","reservation","success","postMessage","message","Error","error","addEventListener","removeEventListener","simulateWhatsAppReservation","whatsappData","nombre","telefono","email","fecha","Date","toISOString","split","hora","personas","notas","__expose"],"sources":["F:/Driver google/VUE.JS-2/VUE-JS/websap/src/components/WhatsAppReservationHandler.vue"],"sourcesContent":["<template>\n  <!-- Este componente no tiene representación visual, solo maneja la lógica -->\n</template>\n\n<script setup>\nimport { onMounted, onUnmounted } from 'vue';\nimport { saveWhatsAppReservation } from '../services/reservaService';\nimport eventBus from '../utils/eventBus';\n\n// Función para procesar mensajes de WhatsApp\nconst processWhatsAppMessage = async (event) => {\n  // Solo procesamos mensajes que vengan de la ventana principal\n  if (event.source !== window.parent) return;\n  \n  try {\n    // Verificar que el mensaje sea de tipo reserva de WhatsApp\n    if (event.data && event.data.type === 'whatsapp_reservation') {\n      console.log('Recibido mensaje de reserva desde WhatsApp:', event.data);\n      \n      // Guardar la reserva usando el servicio\n      const result = await saveWhatsAppReservation(event.data.reservation);\n      \n      if (result.success) {\n        console.log('Reserva de WhatsApp guardada correctamente:', result.reservation);\n        \n        // Notificar a la ventana que envió el mensaje\n        event.source.postMessage({\n          type: 'whatsapp_reservation_response',\n          success: true,\n          message: 'Reserva recibida correctamente'\n        }, '*');\n      } else {\n        throw new Error(result.error);\n      }\n    }\n  } catch (error) {\n    console.error('Error al procesar mensaje de WhatsApp:', error);\n    \n    // Notificar error a la ventana que envió el mensaje\n    if (event.source) {\n      event.source.postMessage({\n        type: 'whatsapp_reservation_response',\n        success: false,\n        message: 'Error al procesar la reserva: ' + error.message\n      }, '*');\n    }\n  }\n};\n\n// Configurar el listener de mensajes al montar el componente\nonMounted(() => {\n  window.addEventListener('message', processWhatsAppMessage);\n  console.log('WhatsAppReservationHandler montado y escuchando mensajes');\n});\n\n// Limpiar el listener al desmontar el componente\nonUnmounted(() => {\n  window.removeEventListener('message', processWhatsAppMessage);\n  console.log('WhatsAppReservationHandler desmontado');\n});\n\n// Función para simular una reserva de WhatsApp (para pruebas)\nconst simulateWhatsAppReservation = async () => {\n  try {\n    const whatsappData = {\n      nombre: 'Cliente de Prueba WhatsApp',\n      telefono: '612345678',\n      email: 'whatsapp@example.com',\n      fecha: new Date().toISOString().split('T')[0], // Hoy\n      hora: '20:00',\n      personas: 3,\n      notas: 'Reserva de prueba desde WhatsApp'\n    };\n    \n    const result = await saveWhatsAppReservation(whatsappData);\n    \n    if (result.success) {\n      console.log('Reserva de prueba de WhatsApp guardada correctamente:', result.reservation);\n    } else {\n      console.error('Error al guardar reserva de prueba:', result.error);\n    }\n  } catch (error) {\n    console.error('Error al simular reserva de WhatsApp:', error);\n  }\n};\n\n// Exponer la función de simulación para pruebas\ndefineExpose({ simulateWhatsAppReservation });\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}