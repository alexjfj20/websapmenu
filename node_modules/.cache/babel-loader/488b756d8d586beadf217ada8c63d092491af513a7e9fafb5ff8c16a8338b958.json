{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"stats-grid\"\n};\nconst _hoisted_5 = {\n  class: \"stat-card\"\n};\nconst _hoisted_6 = {\n  class: \"stat-content\"\n};\nconst _hoisted_7 = {\n  class: \"stat-details\"\n};\nconst _hoisted_8 = {\n  class: \"stat-detail active\"\n};\nconst _hoisted_9 = {\n  class: \"stat-detail inactive\"\n};\nconst _hoisted_10 = {\n  class: \"stat-card\"\n};\nconst _hoisted_11 = {\n  class: \"stat-content\"\n};\nconst _hoisted_12 = {\n  class: \"stat-details\"\n};\nconst _hoisted_13 = {\n  class: \"stat-detail\"\n};\nconst _hoisted_14 = {\n  class: \"section-panel\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"empty-state\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"activity-list\"\n};\nconst _hoisted_17 = {\n  class: \"activity-details\"\n};\nconst _hoisted_18 = {\n  class: \"activity-message\"\n};\nconst _hoisted_19 = {\n  class: \"activity-time\"\n};\nconst _hoisted_20 = {\n  class: \"section-panel\"\n};\nconst _hoisted_21 = {\n  class: \"quick-actions-grid\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", {\n    class: \"section-title\"\n  }, \"Dashboard\", -1 /* HOISTED */)), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Cargando estadísticas...\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" Estadísticas generales \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"stat-icon users\"\n  }, \"👥\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h3\", null, _toDisplayString($setup.stats.totalUsers || 0), 1 /* TEXT */), _cache[3] || (_cache[3] = _createElementVNode(\"p\", null, \"Usuarios Totales\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString($setup.stats.activeUsers || 0) + \" activos\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($setup.stats.inactiveUsers || 0) + \" inactivos\", 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_10, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"stat-icon system\"\n  }, \"🔄\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"h3\", null, _toDisplayString($setup.stats.status || 'Normal'), 1 /* TEXT */), _cache[5] || (_cache[5] = _createElementVNode(\"p\", null, \"Estado del Sistema\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, \"Último backup: \" + _toDisplayString($setup.formatDate($setup.stats.lastBackup)), 1 /* TEXT */)])])]), _createCommentVNode(\" Actividad reciente \"), _createElementVNode(\"div\", _hoisted_14, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", {\n    class: \"section-subtitle\"\n  }, \"Actividad Reciente\", -1 /* HOISTED */)), $setup.recentActivity.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, \" No hay actividad reciente para mostrar \")) : (_openBlock(), _createElementBlock(\"ul\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.recentActivity, (activity, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"activity-item\"\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"activity-icon\", $setup.getActivityIconClass(activity.tipo)])\n    }, _toDisplayString($setup.getActivityIcon(activity.tipo)), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"p\", _hoisted_18, [_createElementVNode(\"strong\", null, _toDisplayString(activity.usuario_nombre), 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString(activity.accion), 1 /* TEXT */)]), _createElementVNode(\"span\", _hoisted_19, _toDisplayString($setup.formatRelativeTime(activity.fecha)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))]))]), _createCommentVNode(\" Acciones rápidas \"), _createElementVNode(\"div\", _hoisted_20, [_cache[10] || (_cache[10] = _createElementVNode(\"h3\", {\n    class: \"section-subtitle\"\n  }, \"Acciones Rápidas\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.handleBackupNow && $setup.handleBackupNow(...args)),\n    class: \"action-button backup\"\n  }, _cache[8] || (_cache[8] = [_createElementVNode(\"span\", {\n    class: \"action-icon\"\n  }, \"💾\", -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Crear Respaldo\", -1 /* HOISTED */)])), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.handleViewLogs && $setup.handleViewLogs(...args)),\n    class: \"action-button logs\"\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"span\", {\n    class: \"action-icon\"\n  }, \"📋\", -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Ver Registros\", -1 /* HOISTED */)]))])])]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$setup","loading","_hoisted_2","_cache","_hoisted_3","_createCommentVNode","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","stats","totalUsers","_hoisted_7","_hoisted_8","activeUsers","_hoisted_9","inactiveUsers","_hoisted_10","_hoisted_11","status","_hoisted_12","_hoisted_13","formatDate","lastBackup","_hoisted_14","recentActivity","length","_hoisted_15","_hoisted_16","_Fragment","_renderList","activity","index","_normalizeClass","getActivityIconClass","tipo","getActivityIcon","_hoisted_17","_hoisted_18","usuario_nombre","_createTextVNode","accion","_hoisted_19","formatRelativeTime","fecha","_hoisted_20","_hoisted_21","onClick","args","handleBackupNow","handleViewLogs"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\admin\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <h2 class=\"section-title\">Dashboard</h2>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando estadísticas...</p>\r\n    </div>\r\n    \r\n    <div v-else>\r\n      <!-- Estadísticas generales -->\r\n      <div class=\"stats-grid\">\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-icon users\">👥</div>\r\n          <div class=\"stat-content\">\r\n            <h3>{{ stats.totalUsers || 0 }}</h3>\r\n            <p>Usuarios Totales</p>\r\n          </div>\r\n          <div class=\"stat-details\">\r\n            <span class=\"stat-detail active\">{{ stats.activeUsers || 0 }} activos</span>\r\n            <span class=\"stat-detail inactive\">{{ stats.inactiveUsers || 0 }} inactivos</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-icon system\">🔄</div>\r\n          <div class=\"stat-content\">\r\n            <h3>{{ stats.status || 'Normal' }}</h3>\r\n            <p>Estado del Sistema</p>\r\n          </div>\r\n          <div class=\"stat-details\">\r\n            <span class=\"stat-detail\">Último backup: {{ formatDate(stats.lastBackup) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Actividad reciente -->\r\n      <div class=\"section-panel\">\r\n        <h3 class=\"section-subtitle\">Actividad Reciente</h3>\r\n        <div v-if=\"recentActivity.length === 0\" class=\"empty-state\">\r\n          No hay actividad reciente para mostrar\r\n        </div>\r\n        <ul v-else class=\"activity-list\">\r\n          <li v-for=\"(activity, index) in recentActivity\" :key=\"index\" class=\"activity-item\">\r\n            <div class=\"activity-icon\" :class=\"getActivityIconClass(activity.tipo)\">\r\n              {{ getActivityIcon(activity.tipo) }}\r\n            </div>\r\n            <div class=\"activity-details\">\r\n              <p class=\"activity-message\">\r\n                <strong>{{ activity.usuario_nombre }}</strong> {{ activity.accion }}\r\n              </p>\r\n              <span class=\"activity-time\">{{ formatRelativeTime(activity.fecha) }}</span>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <!-- Acciones rápidas -->\r\n      <div class=\"section-panel\">\r\n        <h3 class=\"section-subtitle\">Acciones Rápidas</h3>\r\n        <div class=\"quick-actions-grid\">\r\n          <button @click=\"handleBackupNow\" class=\"action-button backup\">\r\n            <span class=\"action-icon\">💾</span>\r\n            <span>Crear Respaldo</span>\r\n          </button>\r\n          <button @click=\"handleViewLogs\" class=\"action-button logs\">\r\n            <span class=\"action-icon\">📋</span>\r\n            <span>Ver Registros</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { getDashboardStats } from '../../services/adminService';\r\nimport { createBackup } from '../../services/backupService';\r\nimport { alert, confirm } from '../../services/dialogService';\r\n\r\nexport default {\r\n  name: 'AdminDashboard',\r\n  emits: ['change-tab'],\r\n  setup(props, { emit }) {\r\n    const loading = ref(true);\r\n    const stats = ref({\r\n      totalUsers: 0,\r\n      activeUsers: 0,\r\n      inactiveUsers: 0,\r\n      status: 'Normal',\r\n      lastBackup: null\r\n    });\r\n    const recentActivity = ref([]);\r\n    \r\n    // Cargar datos al montar el componente\r\n    onMounted(async () => {\r\n      await loadDashboardData();\r\n    });\r\n    \r\n    // Cargar estadísticas del dashboard\r\n    const loadDashboardData = async () => {\r\n      try {\r\n        loading.value = true;\r\n        const response = await getDashboardStats();\r\n        \r\n        if (response && response.success) {\r\n          stats.value = response.data;\r\n          \r\n          if (response.data.recentActivity) {\r\n            recentActivity.value = response.data.recentActivity;\r\n          }\r\n        } else {\r\n          throw new Error('Error al cargar estadísticas');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al cargar estadísticas:', error);\r\n        await alert('No se pudieron cargar las estadísticas del sistema');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Formatear número con separador de miles\r\n    const formatNumber = (number) => {\r\n      return new Intl.NumberFormat('es-CO').format(number);\r\n    };\r\n    \r\n    // Formatear fecha\r\n    const formatDate = (dateStr) => {\r\n      if (!dateStr) return 'No disponible';\r\n      \r\n      try {\r\n        const date = new Date(dateStr);\r\n        if (isNaN(date.getTime())) return 'Fecha inválida';\r\n        \r\n        return new Intl.DateTimeFormat('es-CO', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        }).format(date);\r\n      } catch (e) {\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Formatear tiempo relativo\r\n    const formatRelativeTime = (dateStr) => {\r\n      if (!dateStr) return 'No disponible';\r\n      \r\n      try {\r\n        const date = new Date(dateStr);\r\n        const now = new Date();\r\n        const diffInSeconds = Math.floor((now - date) / 1000);\r\n        \r\n        if (diffInSeconds < 60) {\r\n          return 'Hace un momento';\r\n        }\r\n        \r\n        if (diffInSeconds < 3600) {\r\n          const minutes = Math.floor(diffInSeconds / 60);\r\n          return `Hace ${minutes} ${minutes === 1 ? 'minuto' : 'minutos'}`;\r\n        }\r\n        \r\n        if (diffInSeconds < 86400) {\r\n          const hours = Math.floor(diffInSeconds / 3600);\r\n          return `Hace ${hours} ${hours === 1 ? 'hora' : 'horas'}`;\r\n        }\r\n        \r\n        if (diffInSeconds < 604800) {\r\n          const days = Math.floor(diffInSeconds / 86400);\r\n          return `Hace ${days} ${days === 1 ? 'día' : 'días'}`;\r\n        }\r\n        \r\n        return formatDate(dateStr);\r\n      } catch (e) {\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Obtener icono según tipo de actividad\r\n    const getActivityIcon = (tipo) => {\r\n      switch (tipo) {\r\n        case 'login': return '🔑';\r\n        case 'user_created': return '👤';\r\n        case 'user_updated': return '✏️';\r\n        case 'payment': return '💰';\r\n        case 'backup': return '💾';\r\n        case 'error': return '⚠️';\r\n        default: return '🔔';\r\n      }\r\n    };\r\n    \r\n    // Obtener clase CSS según tipo de actividad\r\n    const getActivityIconClass = (tipo) => {\r\n      switch (tipo) {\r\n        case 'login': return 'login';\r\n        case 'user_created': case 'user_updated': return 'user';\r\n        case 'payment': return 'payment';\r\n        case 'backup': return 'backup';\r\n        case 'error': return 'error';\r\n        default: return '';\r\n      }\r\n    };\r\n    \r\n    // Crear respaldo ahora\r\n    const handleBackupNow = async () => {\r\n      try {\r\n        const confirmed = await confirm('¿Desea crear un respaldo del sistema ahora?');\r\n        \r\n        if (confirmed) {\r\n          loading.value = true;\r\n          const result = await createBackup();\r\n          \r\n          if (result && result.success) {\r\n            await alert('Respaldo creado exitosamente');\r\n            stats.value.lastBackup = new Date().toISOString();\r\n          } else {\r\n            throw new Error('Error al crear el respaldo');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al crear respaldo:', error);\r\n        await alert('Error al crear el respaldo: ' + error.message);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Enviar recordatorios de pago\r\n    const handleSendReminders = async () => {\r\n      try {\r\n        const confirmed = await confirm('¿Desea enviar recordatorios a todos los usuarios con pagos pendientes?');\r\n        \r\n        if (confirmed) {\r\n          loading.value = true;\r\n          \r\n          // Simulamos el envío de recordatorios\r\n          await new Promise(resolve => setTimeout(resolve, 2000));\r\n          \r\n          await alert(`Se han enviado ${stats.value.pendingPayments} recordatorios de pago.`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al enviar recordatorios:', error);\r\n        await alert('Error al enviar recordatorios: ' + error.message);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Verificar sistema\r\n    const handleSystemCheck = async () => {\r\n      try {\r\n        loading.value = true;\r\n        \r\n        // Simulamos una verificación\r\n        await new Promise(resolve => setTimeout(resolve, 2000));\r\n        \r\n        await alert('Sistema verificado correctamente. Todos los servicios funcionan correctamente.');\r\n      } catch (error) {\r\n        console.error('Error al verificar sistema:', error);\r\n        await alert('Error al verificar el sistema: ' + error.message);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Ver logs\r\n    const handleViewLogs = () => {\r\n      emit('change-tab', 'logs');\r\n    };\r\n    \r\n    return {\r\n      loading,\r\n      stats,\r\n      recentActivity,\r\n      formatNumber,\r\n      formatDate,\r\n      formatRelativeTime,\r\n      getActivityIcon,\r\n      getActivityIconClass,\r\n      handleBackupNow,\r\n      handleSendReminders,\r\n      handleSystemCheck,\r\n      handleViewLogs\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 300px;\r\n  gap: 15px;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  border: 3px solid #f3f3f3;\r\n  border-top: 3px solid #4CAF50;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* Estadísticas generales */\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.stat-card {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 6px 16px rgba(0,0,0,0.15);\r\n}\r\n\r\n.stat-icon {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n}\r\n\r\n.stat-icon.users {\r\n  background-color: #e3f2fd;\r\n  color: #1976d2;\r\n}\r\n\r\n.stat-icon.system {\r\n  background-color: #f3e5f5;\r\n  color: #7b1fa2;\r\n}\r\n\r\n.stat-content h3 {\r\n  margin: 0 0 5px 0;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n}\r\n\r\n.stat-content p {\r\n  margin: 0;\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.stat-details {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n}\r\n\r\n.stat-detail {\r\n  font-size: 12px;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n  background-color: #f1f1f1;\r\n  color: #333;\r\n}\r\n\r\n.stat-detail.active {\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.stat-detail.inactive {\r\n  background-color: #ffebee;\r\n  color: #d32f2f;\r\n}\r\n\r\n.stat-detail.income {\r\n  background-color: #e3f2fd;\r\n  color: #1976d2;\r\n}\r\n\r\n.stat-detail.overdue {\r\n  background-color: #ffebee;\r\n  color: #d32f2f;\r\n}\r\n\r\n/* Secciones */\r\n.section-panel {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-bottom: 30px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.section-subtitle {\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 30px;\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n/* Actividad reciente */\r\n.activity-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.activity-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #eee;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.activity-item:hover {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.activity-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.activity-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background-color: #f1f1f1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 15px;\r\n  font-size: 20px;\r\n}\r\n\r\n.activity-icon.login {\r\n  background-color: #e1f5fe;\r\n  color: #0288d1;\r\n}\r\n\r\n.activity-icon.user {\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.activity-icon.backup {\r\n  background-color: #f3e5f5;\r\n  color: #7b1fa2;\r\n}\r\n\r\n.activity-icon.error {\r\n  background-color: #ffebee;\r\n  color: #d32f2f;\r\n}\r\n\r\n.activity-details {\r\n  flex: 1;\r\n}\r\n\r\n.activity-message {\r\n  margin: 0 0 5px 0;\r\n}\r\n\r\n.activity-time {\r\n  font-size: 12px;\r\n  color: #666;\r\n}\r\n\r\n/* Acciones rápidas */\r\n.quick-actions-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 15px;\r\n}\r\n\r\n.action-button {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  padding: 20px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  background-color: #f9f9f9;\r\n  min-height: 120px;\r\n}\r\n\r\n.action-button .action-icon {\r\n  font-size: 32px;\r\n}\r\n\r\n.action-button:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.1);\r\n}\r\n\r\n.action-button.backup {\r\n  color: #7b1fa2;\r\n}\r\n\r\n.action-button.notify {\r\n  color: #f57c00;\r\n}\r\n\r\n.action-button.check {\r\n  color: #388e3c;\r\n}\r\n\r\n.action-button.logs {\r\n  color: #1976d2;\r\n}\r\n\r\n/* Responsive design */\r\n@media (max-width: 768px) {\r\n  .quick-actions-grid {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .quick-actions-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .action-button {\r\n    min-height: 100px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}