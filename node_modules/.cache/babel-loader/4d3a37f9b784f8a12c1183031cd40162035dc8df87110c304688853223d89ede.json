{"ast":null,"code":"import { ref, reactive, watch } from 'vue';\nimport eventBus from '@/utils/eventBus';\nimport { saveReservation, saveWhatsAppReservation } from '../../services/reservaService';\nexport default {\n  name: 'ReservaForm',\n  setup() {\n    console.log('ReservaForm montado');\n    // Estado para mostrar/ocultar el formulario\n    const showReservaForm = ref(false);\n\n    // Estado para los datos de la reserva\n    const reservationData = reactive({\n      fullName: '',\n      mobilePhone: '',\n      landlinePhone: '',\n      address: '',\n      email: '',\n      date: '',\n      time: '',\n      peopleCount: 1,\n      notes: ''\n    });\n\n    // Estado para el procesamiento de la reserva\n    const isProcessing = ref(false);\n\n    // Estado para las notificaciones toast\n    const toast = reactive({\n      show: false,\n      message: '',\n      type: 'info'\n    });\n\n    // Función para alternar la visibilidad del formulario\n    const toggleReservaForm = () => {\n      showReservaForm.value = !showReservaForm.value;\n    };\n\n    // Función para mostrar mensajes toast\n    const showToast = (message, type = 'info') => {\n      toast.message = message;\n      toast.type = type;\n      toast.show = true;\n\n      // Ocultar el toast después de 5 segundos\n      setTimeout(() => {\n        toast.show = false;\n      }, 5000);\n    };\n\n    // Función para validar el formulario\n    const validateForm = () => {\n      if (!reservationData.fullName.trim()) {\n        showToast('Por favor, ingresa tu nombre completo', 'error');\n        return false;\n      }\n      if (!reservationData.mobilePhone.trim()) {\n        showToast('Por favor, ingresa un número de teléfono móvil', 'error');\n        return false;\n      }\n      if (!reservationData.date) {\n        showToast('Por favor, selecciona una fecha para la reserva', 'error');\n        return false;\n      }\n      if (!reservationData.time) {\n        showToast('Por favor, selecciona una hora para la reserva', 'error');\n        return false;\n      }\n      if (!reservationData.peopleCount || reservationData.peopleCount < 1) {\n        showToast('Por favor, indica el número de personas', 'error');\n        return false;\n      }\n      return true;\n    };\n\n    // Función para procesar la reserva\n    const processReservation = async () => {\n      if (!validateForm()) return;\n      try {\n        isProcessing.value = true;\n\n        // Construir el objeto de reserva para el sistema\n        const reservationObject = {\n          fullName: reservationData.fullName,\n          mobilePhone: reservationData.mobilePhone,\n          landlinePhone: reservationData.landlinePhone || '',\n          email: reservationData.email || '',\n          address: reservationData.address || '',\n          date: reservationData.date,\n          time: reservationData.time,\n          peopleCount: reservationData.peopleCount,\n          notes: reservationData.notes || '',\n          status: 'pending',\n          source: 'menu'\n        };\n        console.log('Enviando reserva al sistema:', reservationObject);\n\n        // Preparar datos para WhatsApp (formato que espera el handler)\n        const whatsappData = {\n          nombre: reservationData.fullName,\n          telefono: reservationData.mobilePhone,\n          email: reservationData.email || '',\n          fecha: reservationData.date,\n          hora: reservationData.time,\n          personas: reservationData.peopleCount,\n          notas: `Reserva desde menú compartido: ${reservationData.notes || 'Sin notas adicionales'}`\n        };\n        console.log('Enviando reserva como mensaje de WhatsApp:', whatsappData);\n\n        // Enviar la reserva al sistema como si viniera de WhatsApp\n        // Esto garantiza que aparezca en la sección de Gestión de Reservas\n        const whatsappResult = await saveWhatsAppReservation(whatsappData);\n        console.log('Resultado de envío como WhatsApp:', whatsappResult);\n        if (!whatsappResult.success) {\n          throw new Error(whatsappResult.error || 'Error al guardar la reserva');\n        }\n\n        // Construir mensaje para WhatsApp (opcional, para que el cliente pueda confirmar)\n        const message = `\n*NUEVA RESERVA DE MESA*\n---------------------------\n*Nombre:* ${reservationData.fullName}\n*Teléfono móvil:* ${reservationData.mobilePhone}\n${reservationData.landlinePhone ? `*Teléfono fijo:* ${reservationData.landlinePhone}` : ''}\n${reservationData.email ? `*Email:* ${reservationData.email}` : ''}\n*Fecha:* ${reservationData.date}\n*Hora:* ${reservationData.time}\n*Personas:* ${reservationData.peopleCount}\n${reservationData.notes ? `*Notas:* ${reservationData.notes}` : ''}\n---------------------------\nEsta reserva fue realizada a través del sistema de reservas online.\n`;\n\n        // Abrir WhatsApp con el mensaje (opcional)\n        const encodedMessage = encodeURIComponent(message);\n        window.open(`https://wa.me/?text=${encodedMessage}`, '_blank');\n\n        // Mostrar mensaje de éxito\n        showToast('¡Reserva enviada correctamente! También puedes confirmarla por WhatsApp.', 'success');\n\n        // Limpiar el formulario\n        clearForm();\n      } catch (error) {\n        console.error('Error al procesar la reserva:', error);\n        showToast('Hubo un error al procesar tu reserva. Por favor, intenta nuevamente.', 'error');\n      } finally {\n        isProcessing.value = false;\n      }\n    };\n\n    // Función para limpiar el formulario\n    const clearForm = () => {\n      reservationData.fullName = '';\n      reservationData.mobilePhone = '';\n      reservationData.landlinePhone = '';\n      reservationData.address = '';\n      reservationData.email = '';\n      reservationData.date = '';\n      reservationData.time = '';\n      reservationData.peopleCount = 1;\n      reservationData.notes = '';\n    };\n    return {\n      showReservaForm,\n      reservationData,\n      isProcessing,\n      toast,\n      toggleReservaForm,\n      processReservation,\n      clearForm\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","watch","eventBus","saveReservation","saveWhatsAppReservation","name","setup","console","log","showReservaForm","reservationData","fullName","mobilePhone","landlinePhone","address","email","date","time","peopleCount","notes","isProcessing","toast","show","message","type","toggleReservaForm","value","showToast","setTimeout","validateForm","trim","processReservation","reservationObject","status","source","whatsappData","nombre","telefono","fecha","hora","personas","notas","whatsappResult","success","Error","error","encodedMessage","encodeURIComponent","window","open","clearForm"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\reservas\\ReservaForm.vue"],"sourcesContent":["<template>\n  <div class=\"reservas-section\">\n    <button @click=\"toggleReservaForm\" class=\"toggle-reserva-button\">\n      {{ showReservaForm ? 'Ocultar Formulario de Reserva' : 'Hacer una Reserva' }}\n    </button>\n    \n    <div v-if=\"showReservaForm\" class=\"reserva-form-container\">\n      <h3>Reserva tu Mesa</h3>\n      <form @submit.prevent=\"processReservation\" class=\"reserva-form\">\n        <div class=\"form-group\">\n          <label for=\"fullName\">Nombre Completo *</label>\n          <input \n            type=\"text\" \n            id=\"fullName\" \n            v-model=\"reservationData.fullName\" \n            placeholder=\"Ingresa tu nombre completo\"\n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"mobilePhone\">Teléfono Móvil *</label>\n          <input \n            type=\"tel\" \n            id=\"mobilePhone\" \n            v-model=\"reservationData.mobilePhone\" \n            placeholder=\"Ej. 612345678\"\n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"landlinePhone\">Teléfono Fijo</label>\n          <input \n            type=\"tel\" \n            id=\"landlinePhone\" \n            v-model=\"reservationData.landlinePhone\" \n            placeholder=\"Opcional\"\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"address\">Dirección</label>\n          <input \n            type=\"text\" \n            id=\"address\" \n            v-model=\"reservationData.address\" \n            placeholder=\"Tu dirección (opcional)\"\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"email\">Correo Electrónico</label>\n          <input \n            type=\"email\" \n            id=\"email\" \n            v-model=\"reservationData.email\" \n            placeholder=\"ejemplo@correo.com (opcional)\"\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"reservationDate\">Fecha de Reserva *</label>\n          <input \n            type=\"date\" \n            id=\"reservationDate\" \n            v-model=\"reservationData.date\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"reservationTime\">Hora de Reserva *</label>\n          <input \n            type=\"time\" \n            id=\"reservationTime\" \n            v-model=\"reservationData.time\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"peopleCount\">Número de Personas *</label>\n          <input \n            type=\"number\" \n            id=\"peopleCount\" \n            v-model=\"reservationData.peopleCount\" \n            min=\"1\" \n            max=\"20\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"specialNotes\">Notas Adicionales</label>\n          <textarea \n            id=\"specialNotes\" \n            v-model=\"reservationData.notes\" \n            placeholder=\"Instrucciones especiales, preferencias, etc.\"\n            rows=\"3\"\n          ></textarea>\n        </div>\n        \n        <div class=\"form-actions\">\n          <button \n            type=\"submit\" \n            class=\"submit-button\" \n            :disabled=\"isProcessing\"\n          >\n            {{ isProcessing ? 'Procesando...' : 'Reservar Mesa' }}\n          </button>\n          <button \n            type=\"button\" \n            class=\"clear-button\" \n            @click=\"clearForm\"\n            :disabled=\"isProcessing\"\n          >\n            Limpiar\n          </button>\n        </div>\n      </form>\n    </div>\n    \n    <!-- Toast de notificación -->\n    <div v-if=\"toast.show\" class=\"toast-notification\" :class=\"toast.type\">\n      {{ toast.message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, watch } from 'vue';\nimport eventBus from '@/utils/eventBus';\nimport { saveReservation, saveWhatsAppReservation } from '../../services/reservaService';\n\nexport default {\n  name: 'ReservaForm',\n  setup() {\n    console.log('ReservaForm montado');\n    // Estado para mostrar/ocultar el formulario\n    const showReservaForm = ref(false);\n    \n    // Estado para los datos de la reserva\n    const reservationData = reactive({\n      fullName: '',\n      mobilePhone: '',\n      landlinePhone: '',\n      address: '',\n      email: '',\n      date: '',\n      time: '',\n      peopleCount: 1,\n      notes: ''\n    });\n    \n    // Estado para el procesamiento de la reserva\n    const isProcessing = ref(false);\n    \n    // Estado para las notificaciones toast\n    const toast = reactive({\n      show: false,\n      message: '',\n      type: 'info'\n    });\n    \n    // Función para alternar la visibilidad del formulario\n    const toggleReservaForm = () => {\n      showReservaForm.value = !showReservaForm.value;\n    };\n    \n    // Función para mostrar mensajes toast\n    const showToast = (message, type = 'info') => {\n      toast.message = message;\n      toast.type = type;\n      toast.show = true;\n      \n      // Ocultar el toast después de 5 segundos\n      setTimeout(() => {\n        toast.show = false;\n      }, 5000);\n    };\n    \n    // Función para validar el formulario\n    const validateForm = () => {\n      if (!reservationData.fullName.trim()) {\n        showToast('Por favor, ingresa tu nombre completo', 'error');\n        return false;\n      }\n      \n      if (!reservationData.mobilePhone.trim()) {\n        showToast('Por favor, ingresa un número de teléfono móvil', 'error');\n        return false;\n      }\n      \n      if (!reservationData.date) {\n        showToast('Por favor, selecciona una fecha para la reserva', 'error');\n        return false;\n      }\n      \n      if (!reservationData.time) {\n        showToast('Por favor, selecciona una hora para la reserva', 'error');\n        return false;\n      }\n      \n      if (!reservationData.peopleCount || reservationData.peopleCount < 1) {\n        showToast('Por favor, indica el número de personas', 'error');\n        return false;\n      }\n      \n      return true;\n    };\n    \n    // Función para procesar la reserva\n    const processReservation = async () => {\n      if (!validateForm()) return;\n      \n      try {\n        isProcessing.value = true;\n        \n        // Construir el objeto de reserva para el sistema\n        const reservationObject = {\n          fullName: reservationData.fullName,\n          mobilePhone: reservationData.mobilePhone,\n          landlinePhone: reservationData.landlinePhone || '',\n          email: reservationData.email || '',\n          address: reservationData.address || '',\n          date: reservationData.date,\n          time: reservationData.time,\n          peopleCount: reservationData.peopleCount,\n          notes: reservationData.notes || '',\n          status: 'pending',\n          source: 'menu'\n        };\n        \n        console.log('Enviando reserva al sistema:', reservationObject);\n        \n        // Preparar datos para WhatsApp (formato que espera el handler)\n        const whatsappData = {\n          nombre: reservationData.fullName,\n          telefono: reservationData.mobilePhone,\n          email: reservationData.email || '',\n          fecha: reservationData.date,\n          hora: reservationData.time,\n          personas: reservationData.peopleCount,\n          notas: `Reserva desde menú compartido: ${reservationData.notes || 'Sin notas adicionales'}`\n        };\n        \n        console.log('Enviando reserva como mensaje de WhatsApp:', whatsappData);\n        \n        // Enviar la reserva al sistema como si viniera de WhatsApp\n        // Esto garantiza que aparezca en la sección de Gestión de Reservas\n        const whatsappResult = await saveWhatsAppReservation(whatsappData);\n        \n        console.log('Resultado de envío como WhatsApp:', whatsappResult);\n        \n        if (!whatsappResult.success) {\n          throw new Error(whatsappResult.error || 'Error al guardar la reserva');\n        }\n        \n        // Construir mensaje para WhatsApp (opcional, para que el cliente pueda confirmar)\n        const message = `\n*NUEVA RESERVA DE MESA*\n---------------------------\n*Nombre:* ${reservationData.fullName}\n*Teléfono móvil:* ${reservationData.mobilePhone}\n${reservationData.landlinePhone ? `*Teléfono fijo:* ${reservationData.landlinePhone}` : ''}\n${reservationData.email ? `*Email:* ${reservationData.email}` : ''}\n*Fecha:* ${reservationData.date}\n*Hora:* ${reservationData.time}\n*Personas:* ${reservationData.peopleCount}\n${reservationData.notes ? `*Notas:* ${reservationData.notes}` : ''}\n---------------------------\nEsta reserva fue realizada a través del sistema de reservas online.\n`;\n        \n        // Abrir WhatsApp con el mensaje (opcional)\n        const encodedMessage = encodeURIComponent(message);\n        window.open(`https://wa.me/?text=${encodedMessage}`, '_blank');\n        \n        // Mostrar mensaje de éxito\n        showToast('¡Reserva enviada correctamente! También puedes confirmarla por WhatsApp.', 'success');\n        \n        // Limpiar el formulario\n        clearForm();\n        \n      } catch (error) {\n        console.error('Error al procesar la reserva:', error);\n        showToast('Hubo un error al procesar tu reserva. Por favor, intenta nuevamente.', 'error');\n      } finally {\n        isProcessing.value = false;\n      }\n    };\n    \n    // Función para limpiar el formulario\n    const clearForm = () => {\n      reservationData.fullName = '';\n      reservationData.mobilePhone = '';\n      reservationData.landlinePhone = '';\n      reservationData.address = '';\n      reservationData.email = '';\n      reservationData.date = '';\n      reservationData.time = '';\n      reservationData.peopleCount = 1;\n      reservationData.notes = '';\n    };\n    \n    return {\n      showReservaForm,\n      reservationData,\n      isProcessing,\n      toast,\n      toggleReservaForm,\n      processReservation,\n      clearForm\n    };\n  }\n};\n</script>\n\n<style scoped>\n.reservas-section {\n  margin: 40px 0;\n  position: relative;\n  border: 5px solid red;  /* Borde rojo brillante para depuración */\n  padding: 20px;\n  background-color: rgb(165, 229, 245);  /* Fondo amarillo para depuración */\n}\n\n.toggle-reserva-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  display: block;\n  margin: 0 auto 20px;\n}\n\n.toggle-reserva-button:hover {\n  background-color: #388E3C;\n}\n\n.reserva-form-container {\n  background-color: #f8f8f8;\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 30px;\n  border: 1px solid #e0e0e0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.reserva-form-container h3 {\n  color: #333;\n  margin-top: 0;\n  margin-bottom: 20px;\n  border-bottom: 2px solid #4CAF50;\n  padding-bottom: 10px;\n}\n\n.reserva-form {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 15px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #333;\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n  transition: border-color 0.3s;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n  border-color: #4CAF50;\n  outline: none;\n}\n\n.form-actions {\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.submit-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 12px 24px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.submit-button:hover {\n  background-color: #388E3C;\n}\n\n.clear-button {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 12px 24px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.clear-button:hover {\n  background-color: #d32f2f;\n}\n\n.toast-notification {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  padding: 15px 20px;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  z-index: 1000;\n  animation: slideIn 0.3s ease, fadeOut 0.5s 4.5s ease forwards;\n  max-width: 300px;\n}\n\n.toast-notification.info {\n  background-color: #2196F3;\n}\n\n.toast-notification.success {\n  background-color: #4CAF50;\n}\n\n.toast-notification.error {\n  background-color: #f44336;\n}\n\n@keyframes slideIn {\n  from { transform: translateX(100%); }\n  to { transform: translateX(0); }\n}\n\n@keyframes fadeOut {\n  from { opacity: 1; }\n  to { opacity: 0; }\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .reserva-form {\n    grid-template-columns: 1fr;\n  }\n  \n  .form-actions {\n    flex-direction: column;\n  }\n  \n  .submit-button, .clear-button {\n    width: 100%;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}