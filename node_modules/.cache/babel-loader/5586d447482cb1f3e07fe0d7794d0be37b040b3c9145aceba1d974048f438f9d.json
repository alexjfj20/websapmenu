{"ast":null,"code":"// Configuración de la API base\nconst API_URL = process.env.VUE_APP_API_URL || '/api';\n\n// Variables para el usuario actual y token\nlet currentUser = null;\nlet authToken = localStorage.getItem('auth_token') || null;\n\n/**\r\n * Configura el token de autorización para las solicitudes API\r\n * @param {string} token - Token JWT\r\n */\nfunction setAuthToken(token) {\n  if (token) {\n    // No hacemos nada con axios ya que no lo usamos\n    localStorage.setItem('auth_token', token);\n    authToken = token;\n  } else {\n    localStorage.removeItem('auth_token');\n    authToken = null;\n  }\n}\n\n/**\r\n * Función para iniciar sesión con la API\r\n * @param {string} email - Correo electrónico del usuario\r\n * @param {string} password - Contraseña del usuario\r\n * @returns {Promise<Object>} - Datos del usuario autenticado\r\n */\nasync function login(email, password) {\n  console.log(\"Intentando iniciar sesión como:\", email);\n  try {\n    // Usar fetch en lugar de axios\n    const response = await fetch(`${API_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Error en la solicitud');\n    }\n    const data = await response.json();\n    const {\n      usuario,\n      token\n    } = data;\n\n    // Almacenar token\n    setAuthToken(token);\n\n    // Guardar usuario en memoria y localStorage\n    currentUser = usuario;\n    localStorage.setItem('current_user', JSON.stringify(usuario));\n    return usuario;\n  } catch (error) {\n    console.error(\"Error en login:\", error.message);\n    throw new Error(error.message || \"Error al iniciar sesión\");\n  }\n}\n\n// Cierra la sesión\nfunction logout() {\n  currentUser = null;\n  localStorage.removeItem('auth_token');\n  localStorage.removeItem('current_user');\n}\n\n// Verifica si el usuario está autenticado\nfunction isAuthenticated() {\n  if (!currentUser && localStorage.getItem('auth_token')) {\n    try {\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\n    } catch (e) {\n      console.error('Error al cargar usuario desde localStorage:', e);\n    }\n  }\n  return !!currentUser;\n}\n\n// Obtiene el usuario actual\nfunction getCurrentUser() {\n  if (!currentUser && localStorage.getItem('auth_token')) {\n    try {\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\n    } catch (e) {\n      console.error('Error al cargar usuario desde localStorage:', e);\n    }\n  }\n  return currentUser;\n}\n\n// Verifica si el usuario tiene un rol\nfunction hasRole(roleName) {\n  const user = getCurrentUser();\n  if (!user || !user.roles) {\n    return false;\n  }\n  return Array.isArray(user.roles) ? user.roles.includes(roleName) : user.roles === roleName;\n}\nexport { login, logout, isAuthenticated, hasRole, getCurrentUser };\nexport default {\n  login,\n  logout,\n  isAuthenticated,\n  hasRole,\n  getCurrentUser\n};","map":{"version":3,"names":["API_URL","process","env","VUE_APP_API_URL","currentUser","authToken","localStorage","getItem","setAuthToken","token","setItem","removeItem","login","email","password","console","log","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","usuario","error","logout","isAuthenticated","parse","e","getCurrentUser","hasRole","roleName","user","roles","Array","isArray","includes"],"sources":["F:/Driver google/VUE.JS-2/temp/websap/src/services/authService.js"],"sourcesContent":["// Configuración de la API base\r\nconst API_URL = process.env.VUE_APP_API_URL || '/api';\r\n\r\n// Variables para el usuario actual y token\r\nlet currentUser = null;\r\nlet authToken = localStorage.getItem('auth_token') || null;\r\n\r\n/**\r\n * Configura el token de autorización para las solicitudes API\r\n * @param {string} token - Token JWT\r\n */\r\nfunction setAuthToken(token) {\r\n  if (token) {\r\n    // No hacemos nada con axios ya que no lo usamos\r\n    localStorage.setItem('auth_token', token);\r\n    authToken = token;\r\n  } else {\r\n    localStorage.removeItem('auth_token');\r\n    authToken = null;\r\n  }\r\n}\r\n\r\n/**\r\n * Función para iniciar sesión con la API\r\n * @param {string} email - Correo electrónico del usuario\r\n * @param {string} password - Contraseña del usuario\r\n * @returns {Promise<Object>} - Datos del usuario autenticado\r\n */\r\nasync function login(email, password) {\r\n  console.log(\"Intentando iniciar sesión como:\", email);\r\n  \r\n  try {\r\n    // Usar fetch en lugar de axios\r\n    const response = await fetch(`${API_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Error en la solicitud');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    const { usuario, token } = data;\r\n    \r\n    // Almacenar token\r\n    setAuthToken(token);\r\n    \r\n    // Guardar usuario en memoria y localStorage\r\n    currentUser = usuario;\r\n    localStorage.setItem('current_user', JSON.stringify(usuario));\r\n    \r\n    return usuario;\r\n  } catch (error) {\r\n    console.error(\"Error en login:\", error.message);\r\n    throw new Error(error.message || \"Error al iniciar sesión\");\r\n  }\r\n}\r\n\r\n// Cierra la sesión\r\nfunction logout() {\r\n  currentUser = null;\r\n  localStorage.removeItem('auth_token');\r\n  localStorage.removeItem('current_user');\r\n}\r\n\r\n// Verifica si el usuario está autenticado\r\nfunction isAuthenticated() {\r\n  if (!currentUser && localStorage.getItem('auth_token')) {\r\n    try {\r\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\r\n    } catch (e) {\r\n      console.error('Error al cargar usuario desde localStorage:', e);\r\n    }\r\n  }\r\n  \r\n  return !!currentUser;\r\n}\r\n\r\n// Obtiene el usuario actual\r\nfunction getCurrentUser() {\r\n  if (!currentUser && localStorage.getItem('auth_token')) {\r\n    try {\r\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\r\n    } catch (e) {\r\n      console.error('Error al cargar usuario desde localStorage:', e);\r\n    }\r\n  }\r\n  \r\n  return currentUser;\r\n}\r\n\r\n// Verifica si el usuario tiene un rol\r\nfunction hasRole(roleName) {\r\n  const user = getCurrentUser();\r\n  \r\n  if (!user || !user.roles) {\r\n    return false;\r\n  }\r\n  \r\n  return Array.isArray(user.roles) \r\n    ? user.roles.includes(roleName) \r\n    : user.roles === roleName;\r\n}\r\n\r\nexport {\r\n  login,\r\n  logout,\r\n  isAuthenticated,\r\n  hasRole,\r\n  getCurrentUser\r\n};\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  isAuthenticated,\r\n  hasRole,\r\n  getCurrentUser\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}