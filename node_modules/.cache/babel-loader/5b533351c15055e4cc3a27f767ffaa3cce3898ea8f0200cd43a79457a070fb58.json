{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { getCurrentUser, logout, hasRole } from '../services/authService';\nimport { alert } from '../services/dialogService';\nimport AdminDashboard from '../components/admin/AdminDashboard.vue';\nimport AdminInventory from '../components/admin/AdminInventory.vue';\nimport AdminUsers from '../components/admin/AdminUsers.vue';\nimport AdminBackups from '../components/admin/AdminBackups.vue';\nimport AdminLogs from '../components/admin/AdminLogs.vue';\nimport MenuComponent from '../components/MenuComponent.vue';\nimport AdminReservas from '@/components/admin/AdminReservas.vue';\nimport eventBus from '@/utils/eventBus';\nexport default {\n  name: 'AdminView',\n  components: {\n    AdminDashboard,\n    AdminInventory,\n    AdminUsers,\n    AdminBackups,\n    AdminLogs,\n    MenuComponent,\n    AdminReservas\n  },\n  setup() {\n    const router = useRouter();\n    const activeTab = ref('dashboard');\n    const currentUser = ref(null);\n\n    // Definir pesta√±as disponibles\n    const tabs = [{\n      id: 'dashboard',\n      name: 'Dashboard',\n      icon: 'üìä'\n    }, {\n      id: 'users',\n      name: 'Usuarios',\n      icon: 'üë•'\n    }, {\n      id: 'inventory',\n      name: 'Inventario',\n      icon: 'üì¶'\n    }, {\n      id: 'reservas',\n      name: 'Reservas',\n      icon: 'üìÖ'\n    }, {\n      id: 'products',\n      name: 'Gesti√≥n de Productos',\n      icon: 'üçî'\n    }, {\n      id: 'restaurant-menu',\n      name: 'Men√∫ del Restaurante',\n      icon: 'üçΩÔ∏è'\n    }, {\n      id: 'backups',\n      name: 'Respaldos',\n      icon: 'üíæ'\n    }, {\n      id: 'logs',\n      name: 'Logs',\n      icon: 'üìù'\n    }, {\n      id: 'reports',\n      name: 'Reportes',\n      icon: 'üìà'\n    }];\n\n    // Referencia al componente AdminReservas\n    const adminReservasRef = ref(null);\n\n    // Configuraci√≥n de reservas\n    const reservasSettings = reactive({\n      maxPeople: 20,\n      advanceDays: 30,\n      timeSlots: ['12:00', '13:00', '14:00', '19:00', '20:00', '21:00'],\n      sendConfirmationEmail: true,\n      sendReminders: true\n    });\n\n    // Funci√≥n para a√±adir un nuevo horario\n    const addTimeSlot = () => {\n      reservasSettings.timeSlots.push('');\n    };\n\n    // Funci√≥n para eliminar un horario\n    const removeTimeSlot = index => {\n      reservasSettings.timeSlots.splice(index, 1);\n    };\n\n    // Funci√≥n para guardar la configuraci√≥n de reservas\n    const saveReservasSettings = async () => {\n      try {\n        // Aqu√≠ ir√≠a la l√≥gica para guardar en la base de datos\n        console.log('Guardando configuraci√≥n de reservas:', reservasSettings);\n\n        // Simulamos una operaci√≥n as√≠ncrona\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        // Mostrar mensaje de √©xito (simulado)\n        alert('Configuraci√≥n de reservas guardada correctamente');\n      } catch (error) {\n        console.error('Error al guardar la configuraci√≥n de reservas:', error);\n        alert('Error al guardar la configuraci√≥n. Por favor, intente nuevamente.');\n      }\n    };\n\n    // Funci√≥n para restablecer la configuraci√≥n de reservas\n    const resetReservasSettings = () => {\n      reservasSettings.maxPeople = 20;\n      reservasSettings.advanceDays = 30;\n      reservasSettings.timeSlots = ['12:00', '13:00', '14:00', '19:00', '20:00', '21:00'];\n      reservasSettings.sendConfirmationEmail = true;\n      reservasSettings.sendReminders = true;\n    };\n\n    // Escuchar eventos de nueva reserva - MUEVE ESTA FUNCI√ìN FUERA DEL onMounted\n    const handleNuevaReserva = () => {\n      // Si la pesta√±a activa es reservas, actualizamos inmediatamente\n      if (activeTab.value === 'reservas' && adminReservasRef.value) {\n        adminReservasRef.value.refreshReservations();\n      }\n    };\n    onMounted(async () => {\n      try {\n        // Verificar permisos de Administrador\n        const user = getCurrentUser();\n        if (!user) {\n          await alert('Debe iniciar sesi√≥n para acceder a esta secci√≥n', {\n            title: 'Acceso Restringido'\n          });\n          router.push('/login');\n          return;\n        }\n\n        // Verificar rol de Administrador\n        if (!hasRole('Administrador') && !hasRole('Superadministrador')) {\n          await alert('No tiene permisos para acceder a esta secci√≥n', {\n            title: 'Acceso Denegado'\n          });\n          router.push('/menu');\n          return;\n        }\n        currentUser.value = user;\n        eventBus.on('nueva-reserva', handleNuevaReserva);\n      } catch (error) {\n        console.error('Error al cargar la vista de Administrador:', error);\n      }\n    });\n    onUnmounted(() => {\n      eventBus.off('nueva-reserva', handleNuevaReserva);\n    });\n\n    // Cambiar de pesta√±a\n    const changeTab = tabId => {\n      if (tabs.some(tab => tab.id === tabId)) {\n        activeTab.value = tabId;\n      }\n    };\n\n    // Cerrar sesi√≥n\n    const handleLogout = async () => {\n      try {\n        logout();\n        router.push('/login');\n      } catch (error) {\n        console.error('Error al cerrar sesi√≥n:', error);\n        await alert('Error al cerrar sesi√≥n. Por favor, intente nuevamente.');\n      }\n    };\n\n    // Funci√≥n para refrescar el dashboard cuando se crea un usuario\n    const refreshDashboard = () => {\n      console.log(\"Se cre√≥ un nuevo usuario, se actualizar√° el dashboard\");\n      // Cambiar temporalmente a otra pesta√±a y luego volver a dashboard\n      // para forzar la recarga del componente\n      if (activeTab.value === 'dashboard') {\n        activeTab.value = '_temp';\n        setTimeout(() => {\n          activeTab.value = 'dashboard';\n        }, 10);\n      }\n    };\n    return {\n      activeTab,\n      currentUser,\n      tabs,\n      changeTab,\n      logout: handleLogout,\n      refreshDashboard,\n      adminReservasRef,\n      // Configuraci√≥n de reservas\n      reservasSettings,\n      addTimeSlot,\n      removeTimeSlot,\n      saveReservasSettings,\n      resetReservasSettings\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","reactive","useRouter","getCurrentUser","logout","hasRole","alert","AdminDashboard","AdminInventory","AdminUsers","AdminBackups","AdminLogs","MenuComponent","AdminReservas","eventBus","name","components","setup","router","activeTab","currentUser","tabs","id","icon","adminReservasRef","reservasSettings","maxPeople","advanceDays","timeSlots","sendConfirmationEmail","sendReminders","addTimeSlot","push","removeTimeSlot","index","splice","saveReservasSettings","console","log","Promise","resolve","setTimeout","error","resetReservasSettings","handleNuevaReserva","value","refreshReservations","user","title","on","off","changeTab","tabId","some","tab","handleLogout","refreshDashboard"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\views\\AdminView.vue"],"sourcesContent":["<template>\n  <div class=\"admin-container\">\n    <header class=\"admin-header\">\n      <h1>Panel de Administraci√≥n</h1>\n      <div class=\"user-info\">\n        <span>{{ currentUser?.nombre || 'Administrador' }}</span>\n        <button @click=\"logout\" class=\"logout-btn\">Cerrar Sesi√≥n</button>\n      </div>\n    </header>\n\n    <div class=\"admin-layout\">\n      <!-- Barra lateral de navegaci√≥n -->\n      <aside class=\"sidebar\">\n        <nav class=\"nav-menu\">\n          <button \n            v-for=\"tab in tabs\" \n            :key=\"tab.id\"\n            :class=\"['nav-item', { active: activeTab === tab.id }]\"\n            @click=\"activeTab = tab.id\"\n          >\n            <span class=\"nav-icon\">{{ tab.icon }}</span>\n            <span class=\"nav-text\">{{ tab.name }}</span>\n          </button>\n        </nav>\n      </aside>\n\n      <!-- Contenido principal -->\n      <main class=\"content\">\n        <!-- Dashboard -->\n        <div v-if=\"activeTab === 'dashboard'\" class=\"tab-content\">\n          <AdminDashboard @change-tab=\"changeTab\" />\n        </div>\n\n        <!-- Usuarios -->\n        <div v-if=\"activeTab === 'users'\" class=\"tab-content\">\n          <AdminUsers @user-created=\"refreshDashboard\" />\n        </div>\n\n        <!-- Inventario -->\n        <div v-if=\"activeTab === 'inventory'\" class=\"tab-content\">\n          <AdminInventory />\n        </div>\n\n        <!-- Gesti√≥n de productos -->\n        <div v-if=\"activeTab === 'products'\" class=\"tab-content\">\n          <MenuComponent />\n        </div>\n\n        <!-- Gesti√≥n de Reservas -->\n        <div v-if=\"activeTab === 'reservas'\" class=\"tab-content\">\n          <AdminReservas ref=\"adminReservasRef\" />\n        </div>\n\n        <!-- Men√∫ del Restaurante -->\n        <div v-if=\"activeTab === 'restaurant-menu'\" class=\"tab-content\">\n          <div class=\"restaurant-menu-section\">\n            <h2>Men√∫ del Restaurante</h2>\n            <MenuComponent />\n            \n            <!-- Secci√≥n de Reservas -->\n            <div class=\"reservas-config-section\">\n              <h2>Configuraci√≥n de Reservas</h2>\n              <p class=\"section-description\">Configure el sistema de reservas para su restaurante. Los clientes podr√°n realizar reservas desde la p√°gina de men√∫ compartido.</p>\n              \n              <div class=\"reservas-settings\">\n                <div class=\"settings-form\">\n                  <h3>Ajustes de Reservas</h3>\n                  <div class=\"form-group\">\n                    <label for=\"max-people\">N√∫mero m√°ximo de personas por reserva:</label>\n                    <input type=\"number\" id=\"max-people\" v-model=\"reservasSettings.maxPeople\" min=\"1\" max=\"50\">\n                  </div>\n                  \n                  <div class=\"form-group\">\n                    <label for=\"advance-days\">D√≠as de antelaci√≥n para reservar:</label>\n                    <input type=\"number\" id=\"advance-days\" v-model=\"reservasSettings.advanceDays\" min=\"1\" max=\"60\">\n                  </div>\n                  \n                  <div class=\"form-group\">\n                    <label for=\"time-slots\">Horarios disponibles:</label>\n                    <div class=\"time-slots-container\">\n                      <div v-for=\"(slot, index) in reservasSettings.timeSlots\" :key=\"index\" class=\"time-slot\">\n                        <input type=\"time\" v-model=\"reservasSettings.timeSlots[index]\">\n                        <button @click=\"removeTimeSlot(index)\" class=\"remove-btn\" title=\"Eliminar horario\">‚ùå</button>\n                      </div>\n                      <button @click=\"addTimeSlot\" class=\"add-btn\">A√±adir horario</button>\n                    </div>\n                  </div>\n                  \n                  <div class=\"form-group\">\n                    <label class=\"checkbox-label\">\n                      <input type=\"checkbox\" v-model=\"reservasSettings.sendConfirmationEmail\">\n                      Enviar correo de confirmaci√≥n autom√°tico\n                    </label>\n                  </div>\n                  \n                  <div class=\"form-group\">\n                    <label class=\"checkbox-label\">\n                      <input type=\"checkbox\" v-model=\"reservasSettings.sendReminders\">\n                      Enviar recordatorios (1 d√≠a antes y 1 hora antes)\n                    </label>\n                  </div>\n                  \n                  <div class=\"form-actions\">\n                    <button @click=\"saveReservasSettings\" class=\"save-btn\">Guardar Configuraci√≥n</button>\n                    <button @click=\"resetReservasSettings\" class=\"reset-btn\">Restablecer</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Respaldos -->\n        <div v-if=\"activeTab === 'backups'\" class=\"tab-content\">\n          <AdminBackups />\n        </div>\n\n        <!-- Logs -->\n        <div v-if=\"activeTab === 'logs'\" class=\"tab-content\">\n          <AdminLogs />\n        </div>\n\n        <!-- Reportes -->\n        <div v-if=\"activeTab === 'reports'\" class=\"tab-content\">\n          <div class=\"coming-soon\">\n            <h2>Reportes</h2>\n            <p>El m√≥dulo de reportes estar√° disponible pr√≥ximamente.</p>\n          </div>\n        </div>\n\n        <!-- Reservas -->\n        <div v-if=\"activeTab === 'reservas'\" class=\"tab-content\">\n          <AdminReservas ref=\"adminReservasRef\" />\n        </div>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { getCurrentUser, logout, hasRole } from '../services/authService';\nimport { alert } from '../services/dialogService';\nimport AdminDashboard from '../components/admin/AdminDashboard.vue';\nimport AdminInventory from '../components/admin/AdminInventory.vue';\nimport AdminUsers from '../components/admin/AdminUsers.vue';\nimport AdminBackups from '../components/admin/AdminBackups.vue';\nimport AdminLogs from '../components/admin/AdminLogs.vue';\nimport MenuComponent from '../components/MenuComponent.vue';\nimport AdminReservas from '@/components/admin/AdminReservas.vue';\nimport eventBus from '@/utils/eventBus';\n\nexport default {\n  name: 'AdminView',\n  components: {\n    AdminDashboard,\n    AdminInventory,\n    AdminUsers,\n    AdminBackups,\n    AdminLogs,\n    MenuComponent,\n    AdminReservas\n  },\n  setup() {\n    const router = useRouter();\n    const activeTab = ref('dashboard');\n    const currentUser = ref(null);\n    \n    // Definir pesta√±as disponibles\n    const tabs = [\n      { id: 'dashboard', name: 'Dashboard', icon: 'üìä' },\n      { id: 'users', name: 'Usuarios', icon: 'üë•' },\n      { id: 'inventory', name: 'Inventario', icon: 'üì¶' },\n      { id: 'reservas', name: 'Reservas', icon: 'üìÖ' },\n      { id: 'products', name: 'Gesti√≥n de Productos', icon: 'üçî' },\n      { id: 'restaurant-menu', name: 'Men√∫ del Restaurante', icon: 'üçΩÔ∏è' },\n      { id: 'backups', name: 'Respaldos', icon: 'üíæ' },\n      { id: 'logs', name: 'Logs', icon: 'üìù' },\n      { id: 'reports', name: 'Reportes', icon: 'üìà' }\n    ];\n\n    // Referencia al componente AdminReservas\n    const adminReservasRef = ref(null);\n    \n    // Configuraci√≥n de reservas\n    const reservasSettings = reactive({\n      maxPeople: 20,\n      advanceDays: 30,\n      timeSlots: ['12:00', '13:00', '14:00', '19:00', '20:00', '21:00'],\n      sendConfirmationEmail: true,\n      sendReminders: true\n    });\n    \n    // Funci√≥n para a√±adir un nuevo horario\n    const addTimeSlot = () => {\n      reservasSettings.timeSlots.push('');\n    };\n    \n    // Funci√≥n para eliminar un horario\n    const removeTimeSlot = (index) => {\n      reservasSettings.timeSlots.splice(index, 1);\n    };\n    \n    // Funci√≥n para guardar la configuraci√≥n de reservas\n    const saveReservasSettings = async () => {\n      try {\n        // Aqu√≠ ir√≠a la l√≥gica para guardar en la base de datos\n        console.log('Guardando configuraci√≥n de reservas:', reservasSettings);\n        \n        // Simulamos una operaci√≥n as√≠ncrona\n        await new Promise(resolve => setTimeout(resolve, 500));\n        \n        // Mostrar mensaje de √©xito (simulado)\n        alert('Configuraci√≥n de reservas guardada correctamente');\n      } catch (error) {\n        console.error('Error al guardar la configuraci√≥n de reservas:', error);\n        alert('Error al guardar la configuraci√≥n. Por favor, intente nuevamente.');\n      }\n    };\n    \n    // Funci√≥n para restablecer la configuraci√≥n de reservas\n    const resetReservasSettings = () => {\n      reservasSettings.maxPeople = 20;\n      reservasSettings.advanceDays = 30;\n      reservasSettings.timeSlots = ['12:00', '13:00', '14:00', '19:00', '20:00', '21:00'];\n      reservasSettings.sendConfirmationEmail = true;\n      reservasSettings.sendReminders = true;\n    };\n    \n    // Escuchar eventos de nueva reserva - MUEVE ESTA FUNCI√ìN FUERA DEL onMounted\n    const handleNuevaReserva = () => {\n      // Si la pesta√±a activa es reservas, actualizamos inmediatamente\n      if (activeTab.value === 'reservas' && adminReservasRef.value) {\n        adminReservasRef.value.refreshReservations();\n      }\n    };\n    \n    onMounted(async () => {\n      try {\n        // Verificar permisos de Administrador\n        const user = getCurrentUser();\n        \n        if (!user) {\n          await alert('Debe iniciar sesi√≥n para acceder a esta secci√≥n', {\n            title: 'Acceso Restringido'\n          });\n          router.push('/login');\n          return;\n        }\n        \n        // Verificar rol de Administrador\n        if (!hasRole('Administrador') && !hasRole('Superadministrador')) {\n          await alert('No tiene permisos para acceder a esta secci√≥n', {\n            title: 'Acceso Denegado'\n          });\n          router.push('/menu');\n          return;\n        }\n        \n        currentUser.value = user;\n\n        eventBus.on('nueva-reserva', handleNuevaReserva);\n      } catch (error) {\n        console.error('Error al cargar la vista de Administrador:', error);\n      }\n    });\n\n    onUnmounted(() => {\n      eventBus.off('nueva-reserva', handleNuevaReserva);\n    });\n\n    // Cambiar de pesta√±a\n    const changeTab = (tabId) => {\n      if (tabs.some(tab => tab.id === tabId)) {\n        activeTab.value = tabId;\n      }\n    };\n\n    // Cerrar sesi√≥n\n    const handleLogout = async () => {\n      try {\n        logout();\n        router.push('/login');\n      } catch (error) {\n        console.error('Error al cerrar sesi√≥n:', error);\n        await alert('Error al cerrar sesi√≥n. Por favor, intente nuevamente.');\n      }\n    };\n\n    // Funci√≥n para refrescar el dashboard cuando se crea un usuario\n    const refreshDashboard = () => {\n      console.log(\"Se cre√≥ un nuevo usuario, se actualizar√° el dashboard\");\n      // Cambiar temporalmente a otra pesta√±a y luego volver a dashboard\n      // para forzar la recarga del componente\n      if (activeTab.value === 'dashboard') {\n        activeTab.value = '_temp';\n        setTimeout(() => {\n          activeTab.value = 'dashboard';\n        }, 10);\n      }\n    };\n\n    return {\n      activeTab,\n      currentUser,\n      tabs,\n      changeTab,\n      logout: handleLogout,\n      refreshDashboard,\n      adminReservasRef,\n      // Configuraci√≥n de reservas\n      reservasSettings,\n      addTimeSlot,\n      removeTimeSlot,\n      saveReservasSettings,\n      resetReservasSettings\n    };\n  }\n};\n</script>\n\n<style scoped>\n.admin-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.admin-header {\n  background-color: #1c2b36;\n  color: white;\n  padding: 15px 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n.admin-header h1 {\n  font-size: 1.5rem;\n  margin: 0;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.logout-btn {\n  background-color: rgba(255,255,255,0.1);\n  color: white;\n  border: 1px solid rgba(255,255,255,0.2);\n  border-radius: 4px;\n  padding: 6px 12px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.logout-btn:hover {\n  background-color: rgba(255,255,255,0.2);\n}\n\n.admin-layout {\n  display: flex;\n  flex: 1;\n}\n\n.sidebar {\n  width: 250px;\n  background-color: #2c3e50;\n  color: white;\n  padding: 20px 0;\n  box-shadow: 2px 0 10px rgba(0,0,0,0.1);\n}\n\n.nav-menu {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.nav-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 12px 20px;\n  background: transparent;\n  border: none;\n  color: #ecf0f1;\n  cursor: pointer;\n  text-align: left;\n  transition: all 0.3s;\n  border-left: 3px solid transparent;\n}\n\n.nav-item:hover {\n  background-color: rgba(255,255,255,0.1);\n}\n\n.nav-item.active {\n  background-color: rgba(255,255,255,0.2);\n  border-left-color: #4CAF50;\n  font-weight: 600;\n}\n\n.nav-icon {\n  font-size: 20px;\n  width: 24px;\n  text-align: center;\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  background-color: #f5f5f5;\n  overflow-y: auto;\n}\n\n.tab-content {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  padding: 20px;\n  min-height: calc(100vh - 140px);\n}\n\n.coming-soon {\n  text-align: center;\n  padding: 40px 20px;\n  color: #666;\n}\n\n.coming-soon h2 {\n  color: #333;\n  margin-bottom: 10px;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .admin-layout {\n    flex-direction: column;\n  }\n  \n  .sidebar {\n    width: 100%;\n    padding: 10px 0;\n  }\n  \n  .nav-menu {\n    flex-direction: row;\n    overflow-x: auto;\n    white-space: nowrap;\n    gap: 0;\n  }\n  \n  .nav-item {\n    padding: 10px 15px;\n    border-left: none;\n    border-bottom: 3px solid transparent;\n  }\n  \n  .nav-item.active {\n    border-left-color: transparent;\n    border-bottom-color: #4CAF50;\n  }\n  \n  .nav-text {\n    display: none;\n  }\n  \n  .nav-icon {\n    font-size: 24px;\n  }\n}\n\n/* Estilos para la secci√≥n de configuraci√≥n de reservas */\n.reservas-config-section {\n  margin-top: 30px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.05);\n}\n\n.section-description {\n  color: #666;\n  margin-bottom: 20px;\n}\n\n.reservas-settings {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 1px 5px rgba(0,0,0,0.1);\n}\n\n.settings-form h3 {\n  margin-top: 0;\n  margin-bottom: 20px;\n  color: #333;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 10px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: 500;\n  color: #333;\n}\n\n.form-group input[type=\"number\"],\n.form-group input[type=\"time\"] {\n  width: 100%;\n  max-width: 200px;\n  padding: 8px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.checkbox-label {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.checkbox-label input[type=\"checkbox\"] {\n  margin-right: 8px;\n}\n\n.time-slots-container {\n  margin-top: 10px;\n}\n\n.time-slot {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.time-slot input {\n  flex: 1;\n  max-width: 150px;\n  margin-right: 10px;\n}\n\n.remove-btn {\n  background: none;\n  border: none;\n  color: #dc3545;\n  cursor: pointer;\n  font-size: 16px;\n  padding: 0 5px;\n}\n\n.add-btn {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 6px 12px;\n  margin-top: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.add-btn:hover {\n  background-color: #0069d9;\n}\n\n.form-actions {\n  margin-top: 25px;\n  display: flex;\n  gap: 10px;\n}\n\n.save-btn {\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 15px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.save-btn:hover {\n  background-color: #218838;\n}\n\n.reset-btn {\n  background-color: #6c757d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 15px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.reset-btn:hover {\n  background-color: #5a6268;\n}\n\n.restaurant-menu-section h2 {\n  margin-bottom: 20px;\n  color: #333;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 10px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}