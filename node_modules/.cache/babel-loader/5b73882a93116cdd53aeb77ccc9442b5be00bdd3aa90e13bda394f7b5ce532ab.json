{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, onMounted } from 'vue';\nimport { getBackups, createBackup, restoreBackup, deleteBackup as deleteBackupFromDB } from '../../services/backupService';\nimport { confirm, alert } from '../../services/dialogService';\nexport default {\n  name: 'AdminBackups',\n  setup() {\n    const backups = ref([]);\n    const loading = ref(true);\n    const creating = ref(false);\n    const restoring = ref(null);\n    const deleting = ref(null);\n    const selectedBackup = ref(null);\n    const showRestoreModal = ref(false);\n\n    // Cargar respaldos al montar el componente\n    onMounted(async () => {\n      await fetchBackups();\n    });\n\n    // Obtener respaldos\n    const fetchBackups = async () => {\n      try {\n        loading.value = true;\n        const response = await getBackups();\n        if (response && response.success) {\n          backups.value = response.data || [];\n\n          // Ordenar por fecha (más reciente primero)\n          backups.value.sort((a, b) => new Date(b.fecha) - new Date(a.fecha));\n        } else {\n          throw new Error('Error al cargar respaldos');\n        }\n      } catch (error) {\n        console.error('Error al obtener respaldos:', error);\n        await alert('Error al cargar los respaldos: ' + (error.message || 'Error desconocido'));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Formatear fecha\n    const formatDate = dateStr => {\n      if (!dateStr) return 'N/A';\n      try {\n        const date = new Date(dateStr);\n        if (isNaN(date.getTime())) return 'Fecha inválida';\n        return new Intl.DateTimeFormat('es-ES', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit'\n        }).format(date);\n      } catch (e) {\n        return 'Fecha inválida';\n      }\n    };\n\n    // Crear nuevo respaldo\n    const createNewBackup = async () => {\n      try {\n        creating.value = true;\n        const result = await createBackup();\n        if (result && result.success) {\n          // Agregar el nuevo respaldo a la lista\n          backups.value.unshift(result.data);\n          await alert('Respaldo creado correctamente');\n        } else {\n          throw new Error('Error al crear el respaldo');\n        }\n      } catch (error) {\n        console.error('Error al crear respaldo:', error);\n        await alert('Error al crear respaldo: ' + (error.message || 'Error desconocido'));\n      } finally {\n        creating.value = false;\n      }\n    };\n\n    // Iniciar proceso de restauración\n    const restoreBackup = backup => {\n      selectedBackup.value = backup;\n      showRestoreModal.value = true;\n    };\n\n    // Cancelar restauración\n    const cancelRestore = () => {\n      showRestoreModal.value = false;\n      selectedBackup.value = null;\n    };\n\n    // Confirmar restauración\n    const confirmRestore = async () => {\n      try {\n        if (!selectedBackup.value) return;\n        showRestoreModal.value = false;\n        restoring.value = selectedBackup.value.id;\n        const result = await restoreBackup(selectedBackup.value.id);\n        if (result && result.success) {\n          await alert('Respaldo restaurado correctamente. Se recargará la página para aplicar los cambios.');\n          // Recargar la página\n          window.location.reload();\n        } else {\n          throw new Error('Error al restaurar el respaldo');\n        }\n      } catch (error) {\n        console.error('Error al restaurar respaldo:', error);\n        await alert('Error al restaurar respaldo: ' + (error.message || 'Error desconocido'));\n      } finally {\n        restoring.value = null;\n        selectedBackup.value = null;\n      }\n    };\n\n    // Descargar respaldo\n    const downloadBackup = async backup => {\n      try {\n        // En una implementación real, esto descargaría el archivo del servidor\n        // Para el prototipo, simulamos la descarga\n        const element = document.createElement('a');\n        element.setAttribute('href', 'data:application/zip;charset=utf-8,' + encodeURIComponent('Contenido simulado de respaldo'));\n        element.setAttribute('download', backup.archivo);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n        await alert('Respaldo descargado correctamente');\n      } catch (error) {\n        console.error('Error al descargar respaldo:', error);\n        await alert('Error al descargar respaldo: ' + (error.message || 'Error desconocido'));\n      }\n    };\n\n    // Eliminar respaldo\n    const deleteBackup = async backup => {\n      try {\n        const confirmed = await confirm(`¿Estás seguro de eliminar el respaldo \"${backup.archivo}\"?`, {\n          title: 'Confirmar eliminación',\n          confirmText: 'Eliminar',\n          cancelText: 'Cancelar'\n        });\n        if (confirmed) {\n          deleting.value = backup.id;\n          const result = await deleteBackupFromDB(backup.id);\n          if (result && result.success) {\n            // Eliminar el respaldo de la lista\n            backups.value = backups.value.filter(b => b.id !== backup.id);\n            await alert('Respaldo eliminado correctamente');\n          } else {\n            throw new Error('Error al eliminar el respaldo');\n          }\n        }\n      } catch (error) {\n        console.error('Error al eliminar respaldo:', error);\n        await alert('Error al eliminar respaldo: ' + (error.message || 'Error desconocido'));\n      } finally {\n        deleting.value = null;\n      }\n    };\n    return {\n      backups,\n      loading,\n      creating,\n      restoring,\n      deleting,\n      selectedBackup,\n      showRestoreModal,\n      formatDate,\n      createNewBackup,\n      restoreBackup,\n      cancelRestore,\n      confirmRestore,\n      downloadBackup,\n      deleteBackup\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","getBackups","createBackup","restoreBackup","deleteBackup","deleteBackupFromDB","confirm","alert","name","setup","backups","loading","creating","restoring","deleting","selectedBackup","showRestoreModal","fetchBackups","value","response","success","data","sort","a","b","Date","fecha","Error","error","console","message","formatDate","dateStr","date","isNaN","getTime","Intl","DateTimeFormat","day","month","year","hour","minute","second","format","e","createNewBackup","result","unshift","backup","cancelRestore","confirmRestore","id","window","location","reload","downloadBackup","element","document","createElement","setAttribute","encodeURIComponent","archivo","style","display","body","appendChild","click","removeChild","confirmed","title","confirmText","cancelText","filter"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\admin\\AdminBackups.vue"],"sourcesContent":["<template>\r\n  <div class=\"backups-container\">\r\n    <h2 class=\"section-title\">Gestión de Respaldos</h2>\r\n    \r\n    <div class=\"backups-actions\">\r\n      <button @click=\"createNewBackup\" class=\"create-backup-btn\" :disabled=\"creating\">\r\n        <span v-if=\"creating\">\r\n          <span class=\"loading-spinner\"></span> Creando respaldo...\r\n        </span>\r\n        <span v-else>\r\n          <span class=\"action-icon\">💾</span> Crear respaldo ahora\r\n        </span>\r\n      </button>\r\n    </div>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando respaldos...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"backups.length === 0\" class=\"empty-state\">\r\n      <div class=\"empty-icon\">📂</div>\r\n      <p>No hay respaldos disponibles</p>\r\n      <p class=\"empty-desc\">Crea tu primer respaldo haciendo clic en el botón \"Crear respaldo ahora\"</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"backups-grid\">\r\n      <div v-for=\"backup in backups\" :key=\"backup.id\" class=\"backup-card\">\r\n        <div class=\"backup-icon\">💾</div>\r\n        <div class=\"backup-info\">\r\n          <h3>{{ backup.archivo }}</h3>\r\n          <p class=\"backup-date\">Fecha: {{ formatDate(backup.fecha) }}</p>\r\n          <p class=\"backup-size\">Tamaño: {{ backup.tamano }}</p>\r\n        </div>\r\n        <div class=\"backup-actions\">\r\n          <button @click=\"restoreBackup(backup)\" class=\"restore-btn\" :disabled=\"restoring === backup.id\">\r\n            <span v-if=\"restoring === backup.id\">Restaurando...</span>\r\n            <span v-else>Restaurar</span>\r\n          </button>\r\n          <button @click=\"downloadBackup(backup)\" class=\"download-btn\">Descargar</button>\r\n          <button @click=\"deleteBackup(backup)\" class=\"delete-btn\" :disabled=\"deleting === backup.id\">\r\n            <span v-if=\"deleting === backup.id\">Eliminando...</span>\r\n            <span v-else>Eliminar</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Modal de confirmación para restaurar respaldo -->\r\n    <div v-if=\"showRestoreModal\" class=\"modal-overlay\" @click.self=\"cancelRestore\">\r\n      <div class=\"modal-container\">\r\n        <div class=\"modal-header\">\r\n          <h3>Confirmar restauración</h3>\r\n          <button @click=\"cancelRestore\" class=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p class=\"warning-text\">\r\n            <span class=\"warning-icon\">⚠️</span>\r\n            Estás a punto de restaurar el sistema a partir del respaldo seleccionado. Esta acción sobrescribirá los datos actuales.\r\n          </p>\r\n          <p>¿Estás seguro de que deseas continuar?</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"cancelRestore\" class=\"cancel-btn\">Cancelar</button>\r\n          <button @click=\"confirmRestore\" class=\"confirm-btn\">Confirmar restauración</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { getBackups, createBackup, restoreBackup, deleteBackup as deleteBackupFromDB } from '../../services/backupService';\r\nimport { confirm, alert } from '../../services/dialogService';\r\n\r\nexport default {\r\n  name: 'AdminBackups',\r\n  setup() {\r\n    const backups = ref([]);\r\n    const loading = ref(true);\r\n    const creating = ref(false);\r\n    const restoring = ref(null);\r\n    const deleting = ref(null);\r\n    const selectedBackup = ref(null);\r\n    const showRestoreModal = ref(false);\r\n    \r\n    // Cargar respaldos al montar el componente\r\n    onMounted(async () => {\r\n      await fetchBackups();\r\n    });\r\n    \r\n    // Obtener respaldos\r\n    const fetchBackups = async () => {\r\n      try {\r\n        loading.value = true;\r\n        const response = await getBackups();\r\n        \r\n        if (response && response.success) {\r\n          backups.value = response.data || [];\r\n          \r\n          // Ordenar por fecha (más reciente primero)\r\n          backups.value.sort((a, b) => new Date(b.fecha) - new Date(a.fecha));\r\n        } else {\r\n          throw new Error('Error al cargar respaldos');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener respaldos:', error);\r\n        await alert('Error al cargar los respaldos: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Formatear fecha\r\n    const formatDate = (dateStr) => {\r\n      if (!dateStr) return 'N/A';\r\n      \r\n      try {\r\n        const date = new Date(dateStr);\r\n        if (isNaN(date.getTime())) return 'Fecha inválida';\r\n        \r\n        return new Intl.DateTimeFormat('es-ES', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit'\r\n        }).format(date);\r\n      } catch (e) {\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Crear nuevo respaldo\r\n    const createNewBackup = async () => {\r\n      try {\r\n        creating.value = true;\r\n        const result = await createBackup();\r\n        \r\n        if (result && result.success) {\r\n          // Agregar el nuevo respaldo a la lista\r\n          backups.value.unshift(result.data);\r\n          await alert('Respaldo creado correctamente');\r\n        } else {\r\n          throw new Error('Error al crear el respaldo');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al crear respaldo:', error);\r\n        await alert('Error al crear respaldo: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        creating.value = false;\r\n      }\r\n    };\r\n    \r\n    // Iniciar proceso de restauración\r\n    const restoreBackup = (backup) => {\r\n      selectedBackup.value = backup;\r\n      showRestoreModal.value = true;\r\n    };\r\n    \r\n    // Cancelar restauración\r\n    const cancelRestore = () => {\r\n      showRestoreModal.value = false;\r\n      selectedBackup.value = null;\r\n    };\r\n    \r\n    // Confirmar restauración\r\n    const confirmRestore = async () => {\r\n      try {\r\n        if (!selectedBackup.value) return;\r\n        \r\n        showRestoreModal.value = false;\r\n        restoring.value = selectedBackup.value.id;\r\n        \r\n        const result = await restoreBackup(selectedBackup.value.id);\r\n        \r\n        if (result && result.success) {\r\n          await alert('Respaldo restaurado correctamente. Se recargará la página para aplicar los cambios.');\r\n          // Recargar la página\r\n          window.location.reload();\r\n        } else {\r\n          throw new Error('Error al restaurar el respaldo');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al restaurar respaldo:', error);\r\n        await alert('Error al restaurar respaldo: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        restoring.value = null;\r\n        selectedBackup.value = null;\r\n      }\r\n    };\r\n    \r\n    // Descargar respaldo\r\n    const downloadBackup = async (backup) => {\r\n      try {\r\n        // En una implementación real, esto descargaría el archivo del servidor\r\n        // Para el prototipo, simulamos la descarga\r\n        const element = document.createElement('a');\r\n        element.setAttribute('href', 'data:application/zip;charset=utf-8,' + encodeURIComponent('Contenido simulado de respaldo'));\r\n        element.setAttribute('download', backup.archivo);\r\n        \r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        \r\n        element.click();\r\n        \r\n        document.body.removeChild(element);\r\n        \r\n        await alert('Respaldo descargado correctamente');\r\n      } catch (error) {\r\n        console.error('Error al descargar respaldo:', error);\r\n        await alert('Error al descargar respaldo: ' + (error.message || 'Error desconocido'));\r\n      }\r\n    };\r\n    \r\n    // Eliminar respaldo\r\n    const deleteBackup = async (backup) => {\r\n      try {\r\n        const confirmed = await confirm(`¿Estás seguro de eliminar el respaldo \"${backup.archivo}\"?`, {\r\n          title: 'Confirmar eliminación',\r\n          confirmText: 'Eliminar',\r\n          cancelText: 'Cancelar'\r\n        });\r\n        \r\n        if (confirmed) {\r\n          deleting.value = backup.id;\r\n          const result = await deleteBackupFromDB(backup.id);\r\n          \r\n          if (result && result.success) {\r\n            // Eliminar el respaldo de la lista\r\n            backups.value = backups.value.filter(b => b.id !== backup.id);\r\n            await alert('Respaldo eliminado correctamente');\r\n          } else {\r\n            throw new Error('Error al eliminar el respaldo');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al eliminar respaldo:', error);\r\n        await alert('Error al eliminar respaldo: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        deleting.value = null;\r\n      }\r\n    };\r\n    \r\n    return {\r\n      backups,\r\n      loading,\r\n      creating,\r\n      restoring,\r\n      deleting,\r\n      selectedBackup,\r\n      showRestoreModal,\r\n      formatDate,\r\n      createNewBackup,\r\n      restoreBackup,\r\n      cancelRestore,\r\n      confirmRestore,\r\n      downloadBackup,\r\n      deleteBackup\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.backups-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.backups-actions {\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.create-backup-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 12px 20px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.create-backup-btn:hover:not(:disabled) {\r\n  background-color: #45a049;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.create-backup-btn:disabled {\r\n  background-color: #a5d6a7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.action-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 300px;\r\n  gap: 15px;\r\n}\r\n\r\n.spinner, .loading-spinner {\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  border: 3px solid rgba(255,255,255,0.3);\r\n  border-top: 3px solid white;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid #f3f3f3;\r\n  border-top: 3px solid #4CAF50;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 50px 20px;\r\n  color: #666;\r\n  text-align: center;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  border: 1px dashed #ddd;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n  opacity: 0.5;\r\n}\r\n\r\n.empty-desc {\r\n  font-style: italic;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n  color: #888;\r\n}\r\n\r\n.backups-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.backup-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.backup-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n}\r\n\r\n.backup-icon {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n  height: 80px;\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.backup-info {\r\n  padding: 15px;\r\n}\r\n\r\n.backup-info h3 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 16px;\r\n  color: #333;\r\n  word-break: break-all;\r\n}\r\n\r\n.backup-date, .backup-size {\r\n  margin: 5px 0;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.backup-actions {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 8px;\r\n  padding: 15px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.backup-actions button {\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.restore-btn {\r\n  grid-column: 1 / 3;\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.restore-btn:hover:not(:disabled) {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.download-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.download-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\n.delete-btn:hover:not(:disabled) {\r\n  background-color: #d32f2f;\r\n}\r\n\r\n.restore-btn:disabled,\r\n.delete-btn:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Modal styles */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-container {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.3);\r\n  animation: fadeIn 0.3s;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(-20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #666;\r\n}\r\n\r\n.modal-body {\r\n  padding: 20px;\r\n}\r\n\r\n.warning-text {\r\n  background-color: #fff3e0;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n}\r\n\r\n.warning-icon {\r\n  font-size: 20px;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.cancel-btn, .confirm-btn {\r\n  padding: 8px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #f1f1f1;\r\n  color: #333;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background-color: #e1e1f1;\r\n}\r\n\r\n.confirm-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.confirm-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .backups-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .backup-actions {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .restore-btn {\r\n    grid-column: auto;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}