{"ast":null,"code":"// Importaciones necesarias\nimport axios from 'axios';\n\n// Configuración de la API base\nconst API_URL = process.env.VUE_APP_API_URL || '/api';\n\n// Variables para el usuario actual y token\nlet currentUser = null;\n\n/**\r\n * Función para iniciar sesión\r\n * @param {string} email - Correo electrónico del usuario\r\n * @param {string} password - Contraseña del usuario\r\n * @returns {Promise<Object>} - Datos del usuario autenticado\r\n */\nasync function login(email, password) {\n  console.log(\"Intentando iniciar sesión como:\", email);\n  try {\n    // Realizar solicitud de login al backend\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    });\n    const {\n      usuario,\n      token\n    } = response.data;\n\n    // Guardar usuario en memoria y localStorage\n    currentUser = usuario;\n    localStorage.setItem('auth_token', token);\n    localStorage.setItem('current_user', JSON.stringify(usuario));\n    return usuario;\n  } catch (error) {\n    console.error(\"Error en login:\", error.response?.data?.message || error.message);\n    throw new Error(error.response?.data?.message || \"Error al iniciar sesión\");\n  }\n}\n\n// Cierra la sesión\nfunction logout() {\n  currentUser = null;\n  localStorage.removeItem('auth_token');\n  localStorage.removeItem('current_user');\n}\n\n// Verifica si el usuario está autenticado\nfunction isAuthenticated() {\n  if (!currentUser && localStorage.getItem('auth_token')) {\n    try {\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\n    } catch (e) {\n      console.error('Error al cargar usuario desde localStorage:', e);\n    }\n  }\n  return !!currentUser;\n}\n\n// Obtiene el usuario actual\nfunction getCurrentUser() {\n  if (!currentUser && localStorage.getItem('auth_token')) {\n    try {\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\n    } catch (e) {\n      console.error('Error al cargar usuario desde localStorage:', e);\n    }\n  }\n  return currentUser;\n}\n\n// Verifica si el usuario tiene un rol\nfunction hasRole(roleName) {\n  const user = getCurrentUser();\n  if (!user || !user.roles) {\n    return false;\n  }\n  return Array.isArray(user.roles) ? user.roles.includes(roleName) : user.roles === roleName;\n}\nexport { login, logout, isAuthenticated, hasRole, getCurrentUser };\nexport default {\n  login,\n  logout,\n  isAuthenticated,\n  hasRole,\n  getCurrentUser\n};","map":{"version":3,"names":["axios","API_URL","process","env","VUE_APP_API_URL","currentUser","login","email","password","console","log","response","post","usuario","token","data","localStorage","setItem","JSON","stringify","error","message","Error","logout","removeItem","isAuthenticated","getItem","parse","e","getCurrentUser","hasRole","roleName","user","roles","Array","isArray","includes"],"sources":["F:/Driver google/VUE.JS-2/temp/websap/src/services/authService.js"],"sourcesContent":["// Importaciones necesarias\r\nimport axios from 'axios';\r\n\r\n// Configuración de la API base\r\nconst API_URL = process.env.VUE_APP_API_URL || '/api';\r\n\r\n// Variables para el usuario actual y token\r\nlet currentUser = null;\r\n\r\n/**\r\n * Función para iniciar sesión\r\n * @param {string} email - Correo electrónico del usuario\r\n * @param {string} password - Contraseña del usuario\r\n * @returns {Promise<Object>} - Datos del usuario autenticado\r\n */\r\nasync function login(email, password) {\r\n  console.log(\"Intentando iniciar sesión como:\", email);\r\n  \r\n  try {\r\n    // Realizar solicitud de login al backend\r\n    const response = await axios.post(`${API_URL}/auth/login`, {\r\n      email,\r\n      password\r\n    });\r\n    \r\n    const { usuario, token } = response.data;\r\n    \r\n    // Guardar usuario en memoria y localStorage\r\n    currentUser = usuario;\r\n    localStorage.setItem('auth_token', token);\r\n    localStorage.setItem('current_user', JSON.stringify(usuario));\r\n    \r\n    return usuario;\r\n  } catch (error) {\r\n    console.error(\"Error en login:\", error.response?.data?.message || error.message);\r\n    throw new Error(error.response?.data?.message || \"Error al iniciar sesión\");\r\n  }\r\n}\r\n\r\n// Cierra la sesión\r\nfunction logout() {\r\n  currentUser = null;\r\n  localStorage.removeItem('auth_token');\r\n  localStorage.removeItem('current_user');\r\n}\r\n\r\n// Verifica si el usuario está autenticado\r\nfunction isAuthenticated() {\r\n  if (!currentUser && localStorage.getItem('auth_token')) {\r\n    try {\r\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\r\n    } catch (e) {\r\n      console.error('Error al cargar usuario desde localStorage:', e);\r\n    }\r\n  }\r\n  \r\n  return !!currentUser;\r\n}\r\n\r\n// Obtiene el usuario actual\r\nfunction getCurrentUser() {\r\n  if (!currentUser && localStorage.getItem('auth_token')) {\r\n    try {\r\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\r\n    } catch (e) {\r\n      console.error('Error al cargar usuario desde localStorage:', e);\r\n    }\r\n  }\r\n  \r\n  return currentUser;\r\n}\r\n\r\n// Verifica si el usuario tiene un rol\r\nfunction hasRole(roleName) {\r\n  const user = getCurrentUser();\r\n  \r\n  if (!user || !user.roles) {\r\n    return false;\r\n  }\r\n  \r\n  return Array.isArray(user.roles) \r\n    ? user.roles.includes(roleName) \r\n    : user.roles === roleName;\r\n}\r\n\r\nexport {\r\n  login,\r\n  logout,\r\n  isAuthenticated,\r\n  hasRole,\r\n  getCurrentUser\r\n};\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  isAuthenticated,\r\n  hasRole,\r\n  getCurrentUser\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}