{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { getSharedMenu } from '../services/menuService';\nexport default {\n  name: 'SharedMenuView',\n  setup() {\n    const route = useRoute();\n    const menuData = ref({\n      items: [],\n      businessInfo: {}\n    });\n    const isLoading = ref(true);\n    const error = ref(null);\n    const cartItems = ref([]);\n    const orderRef = ref(null);\n    const isProcessingOrder = ref(false);\n    console.log(\"SharedMenuView montado, ID del menú:\", route.params.id);\n\n    // Sistema de notificaciones toast\n    const toast = ref({\n      visible: false,\n      message: '',\n      type: 'success',\n      // 'success', 'warning', 'error'\n      timeoutId: null\n    });\n\n    // Cargar menú cuando el componente se monte\n    onMounted(() => {\n      loadMenu();\n\n      // Probar sistema de notificaciones después de 2 segundos\n      setTimeout(testToasts, 2000);\n    });\n\n    // Cargar el menú desde la API\n    async function loadMenu() {\n      try {\n        isLoading.value = true;\n        console.log(\"Cargando menú con ID:\", route.params.id);\n        if (!route.params.id) {\n          error.value = 'ID de menú no especificado';\n          isLoading.value = false;\n          return;\n        }\n\n        // Intenta cargar desde localStorage primero (por si hay un carrito guardado)\n        const savedCart = localStorage.getItem(`cart_${route.params.id}`);\n        if (savedCart) {\n          try {\n            cartItems.value = JSON.parse(savedCart);\n            console.log(\"Carrito recuperado de localStorage:\", cartItems.value);\n          } catch (e) {\n            console.error(\"Error al parsear carrito de localStorage:\", e);\n          }\n        }\n        const data = await getSharedMenu(route.params.id);\n        if (data) {\n          menuData.value = data;\n          console.log(\"Menú cargado con éxito:\", menuData.value);\n\n          // Mostrar toast al cargar el menú correctamente - AÑADIR ESTA LÍNEA\n          setTimeout(() => {\n            showToast('Menú cargado correctamente', 'success', 5000);\n          }, 1000);\n        } else {\n          error.value = \"No se encontró el menú solicitado\";\n        }\n      } catch (err) {\n        console.error(\"Error al cargar el menú:\", err);\n        error.value = `Error al cargar el menú: ${err.message || 'Error desconocido'}`;\n      } finally {\n        isLoading.value = false;\n      }\n    }\n\n    // Verificar si hay información de pago\n    const hasPaymentInfo = computed(() => {\n      return menuData.value?.businessInfo?.paymentInfo && (menuData.value.businessInfo.paymentInfo.qrImage || menuData.value.businessInfo.paymentInfo.nequiNumber || menuData.value.businessInfo.paymentInfo.nequiImage);\n    });\n\n    // Contador total de items\n    const totalItems = computed(() => {\n      return cartItems.value.reduce((total, item) => total + item.quantity, 0);\n    });\n\n    // Total del carrito\n    const cartTotal = computed(() => {\n      return cartItems.value.reduce((total, item) => {\n        return total + item.price * item.quantity;\n      }, 0);\n    });\n\n    // Formatear precio\n    function formatPrice(price) {\n      if (isNaN(Number(price))) return '0,00';\n\n      // Convertir a número y formatear con 2 decimales fijos\n      const numero = Number(price).toFixed(2);\n\n      // Separar parte entera y decimal\n      const [parteEntera, parteDecimal] = numero.split('.');\n\n      // Formatear parte entera con puntos como separadores de miles\n      const parteEnteraFormateada = parteEntera.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n\n      // Unir con coma como separador decimal\n      return `${parteEnteraFormateada},${parteDecimal}`;\n    }\n\n    // Agregar al carrito con verificación de disponibilidad\n    async function addToCart(item) {\n      // Primero verificar disponibilidad\n      const isAvailable = await checkAvailability(item);\n      if (!isAvailable) return;\n      const existingItem = cartItems.value.find(i => {\n        // Asegurar que ambos items tienen ID y compararlos, o comparar por nombre si no hay ID\n        if (item.id && i.id) {\n          return i.id === item.id;\n        }\n        return i.name === item.name;\n      });\n      if (existingItem) {\n        existingItem.quantity++;\n      } else {\n        cartItems.value.push({\n          id: item.id || Date.now().toString(),\n          name: item.name,\n          price: item.price,\n          quantity: 1,\n          availableQuantity: item.availableQuantity || 10 // Temporal: 10 por defecto\n        });\n      }\n\n      // Guardar carrito en localStorage\n      saveCartToLocalStorage();\n\n      // Mostrar notificación de éxito\n      showToast(`${item.name} añadido al carrito`, 'success');\n    }\n\n    // Mostrar notificaciones toast\n    function showToast(message, type = 'success', duration = 5000) {\n      // Aumentar a 5 segundos\n      console.log(`[Toast] Mostrando notificación: ${message} (${type})`);\n\n      // Si ya hay un toast visible, limpiamos su timeout\n      if (toast.value.timeoutId) {\n        clearTimeout(toast.value.timeoutId);\n      }\n\n      // Configurar el nuevo toast\n      toast.value.message = message;\n      toast.value.type = type;\n      toast.value.visible = true;\n\n      // Debug: verificar que el estado del toast cambió\n      console.log(`[Toast] Estado: visible=${toast.value.visible}, message=${toast.value.message}`);\n\n      // Configurar timeout para ocultar después de la duración\n      toast.value.timeoutId = setTimeout(() => {\n        console.log(`[Toast] Ocultando notificación después de ${duration}ms`);\n        toast.value.visible = false;\n      }, duration);\n    }\n\n    // Guardar carrito en localStorage\n    function saveCartToLocalStorage() {\n      try {\n        localStorage.setItem(`cart_${route.params.id}`, JSON.stringify(cartItems.value));\n      } catch (e) {\n        console.error(\"Error al guardar carrito en localStorage:\", e);\n      }\n    }\n\n    // Incrementar cantidad\n    function increaseQuantity(index) {\n      cartItems.value[index].quantity++;\n      saveCartToLocalStorage();\n    }\n\n    // Decrementar cantidad\n    function decreaseQuantity(index) {\n      if (cartItems.value[index].quantity > 1) {\n        cartItems.value[index].quantity--;\n        saveCartToLocalStorage();\n      } else {\n        removeFromCart(index);\n      }\n    }\n\n    // Eliminar del carrito\n    function removeFromCart(index) {\n      cartItems.value.splice(index, 1);\n      saveCartToLocalStorage();\n    }\n\n    // Completar pedido con actualización de inventario\n    async function completeOrder() {\n      // Validación de datos mínimos\n      if (!customerInfo.value.name || !customerInfo.value.phone) {\n        showToast('Por favor ingresa al menos tu nombre y teléfono para completar el pedido', 'error');\n        return;\n      }\n\n      // Variable para indicar que el pedido está en proceso\n      isProcessingOrder.value = true;\n      try {\n        // Actualizar inventario\n        const inventoryUpdated = await updateInventory();\n        if (!inventoryUpdated) {\n          showToast('Error al actualizar el inventario. Por favor intenta nuevamente.', 'error');\n          isProcessingOrder.value = false;\n          return;\n        }\n\n        // Construir mensaje de confirmación incluyendo datos del cliente\n        let confirmationMessage = `Pedido completado por un total de $${formatPrice(cartTotal.value)}\\n`;\n        confirmationMessage += `Cliente: ${customerInfo.value.name}\\n`;\n        confirmationMessage += `Teléfono: ${customerInfo.value.phone}\\n`;\n        confirmationMessage += `Forma de pago: ${selectedPaymentMethod.value === 'qr' ? 'Código QR' : selectedPaymentMethod.value === 'nequi' ? 'Nequi' : 'Contra entrega'}\\n`;\n        confirmationMessage += `\\nGracias por tu compra!`;\n\n        // Mostrar notificación de éxito\n        showToast('¡Pedido completado con éxito!', 'success');\n\n        // Limpiar carrito y datos del cliente\n        cartItems.value = [];\n        saveCartToLocalStorage();\n\n        // Opcional: limpiar también los datos del cliente después de completar\n        customerInfo.value = {\n          name: '',\n          phone: '',\n          email: '',\n          address: ''\n        };\n        additionalMessage.value = '';\n      } catch (error) {\n        console.error('Error al procesar el pedido:', error);\n        showToast('Error al procesar el pedido. Por favor intenta nuevamente.', 'error');\n      } finally {\n        isProcessingOrder.value = false;\n      }\n    }\n\n    // Desplazarse a la sección del pedido\n    function scrollToOrder() {\n      const orderSection = document.querySelector('.order-section');\n      if (orderSection) {\n        orderSection.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n\n    // Función para compartir el pedido por WhatsApp (usando símbolos compatibles)\n    function shareOrderByWhatsApp() {\n      try {\n        // Validación de datos mínimos\n        if (!customerInfo.value.name || !customerInfo.value.phone) {\n          alert('Por favor ingresa al menos tu nombre y teléfono antes de enviar el pedido');\n          return;\n        }\n\n        // Preparar mensaje con detalles del pedido usando símbolos compatibles\n        let message = `*❆ NUEVO PEDIDO ❆*\\n\\n`;\n\n        // Información del restaurante\n        message += `*${menuData.value.businessInfo?.name || 'Restaurante'}*\\n\\n`;\n\n        // Datos del cliente\n        message += `*✦ DATOS DEL CLIENTE:*\\n`;\n        message += `♢ Nombre: ${customerInfo.value.name}\\n`;\n        message += `☏ Teléfono: ${customerInfo.value.phone}\\n`;\n        if (customerInfo.value.email) {\n          message += `♜ Email: ${customerInfo.value.email}\\n`;\n        }\n        if (customerInfo.value.address) {\n          message += `➤ Dirección: ${customerInfo.value.address}\\n`;\n        }\n        message += `\\n*★ PRODUCTOS:*\\n`;\n\n        // Agregar items del carrito con símbolos ASCII seguros\n        cartItems.value.forEach((item, index) => {\n          // Usar símbolos compatibles de la lista proporcionada\n          const symbols = ['✦', '✧', '♣', '♠', '♥', '♫'];\n          const symbol = symbols[index % symbols.length];\n          message += `${symbol} ${item.name} x${item.quantity} - $${formatPrice(item.price * item.quantity)}\\n`;\n        });\n\n        // Agregar total con formato destacado\n        message += `\\n*➤ TOTAL: $${formatPrice(cartTotal.value)}*\\n`;\n\n        // Agregar método de pago\n        const paymentMethodText = selectedPaymentMethod.value === 'qr' ? 'Código QR' : selectedPaymentMethod.value === 'nequi' ? 'Nequi' : 'Contra entrega';\n        message += `\\n*➤ FORMA DE PAGO:* ${paymentMethodText}\\n`;\n\n        // Incluir mensaje adicional si existe\n        if (additionalMessage.value.trim()) {\n          message += `\\n*✎ MENSAJE:*\\n${additionalMessage.value.trim()}\\n`;\n        }\n\n        // Agregar información de contacto del restaurante\n        if (menuData.value.businessInfo?.contact) {\n          message += `\\n*✆ Contacto restaurante:* ${menuData.value.businessInfo.contact}\\n`;\n        }\n        if (menuData.value.businessInfo?.address) {\n          message += `\\n*➤ Ubicación:* ${menuData.value.businessInfo.address}\\n`;\n        }\n\n        // Agregar fecha y hora del pedido\n        const now = new Date();\n        message += `\\n*✰ Fecha y hora:* ${now.toLocaleString()}\\n`;\n\n        // Crear URL para WhatsApp\n        const phoneNumber = menuData.value.businessInfo?.paymentInfo?.nequiNumber || '';\n        let whatsappUrl = '';\n        if (phoneNumber && phoneNumber.trim() !== '') {\n          // Si hay un número, enviar directamente a ese número\n          const formattedPhone = phoneNumber.replace(/\\D/g, ''); // Quitar caracteres no numéricos\n          whatsappUrl = `https://wa.me/${formattedPhone}?text=${encodeURIComponent(message)}`;\n        } else {\n          // Si no hay número, usar la opción de compartir\n          whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\n        }\n\n        // Abrir WhatsApp\n        window.open(whatsappUrl, '_blank');\n      } catch (error) {\n        console.error('Error al compartir por WhatsApp:', error);\n        alert('Error al compartir el pedido. Por favor intenta nuevamente.');\n      }\n    }\n\n    // Verificar disponibilidad de inventario\n    async function checkAvailability(item) {\n      // Obtener la cantidad disponible actual (simulada para esta implementación)\n      const availableQuantity = item.availableQuantity || 10; // Temporal: 10 por defecto\n\n      // Obtener la cantidad actual en el carrito\n      const cartItem = cartItems.value.find(i => i.id === item.id);\n      const cartQuantity = cartItem ? cartItem.quantity : 0;\n\n      // Verificar la disponibilidad\n      if (availableQuantity <= 0) {\n        showToast(`Lo sentimos, \"${item.name}\" no está disponible actualmente`, 'error');\n        return false;\n      } else if (cartQuantity >= availableQuantity) {\n        showToast(`No hay más unidades disponibles de \"${item.name}\"`, 'warning');\n        return false;\n      } else if (availableQuantity <= 5) {\n        showToast(`¡Solo quedan ${availableQuantity} unidades de \"${item.name}\"!`, 'warning');\n        return true;\n      }\n      return true;\n    }\n\n    // Actualizar inventario al completar pedido\n    async function updateInventory() {\n      try {\n        // En una aplicación real, aquí habría una llamada a la API\n        console.log('Actualizando inventario para los siguientes productos:');\n        cartItems.value.forEach(item => {\n          console.log(`- ${item.name}: ${item.quantity} unidades`);\n          // Aquí iría el código real para actualizar la base de datos\n        });\n\n        // Simular un pequeño retraso para que sea más realista\n        await new Promise(resolve => setTimeout(resolve, 800));\n        return true; // Éxito\n      } catch (error) {\n        console.error('Error al actualizar inventario:', error);\n        return false; // Error\n      }\n    }\n\n    // Datos del cliente\n    const customerInfo = ref({\n      name: '',\n      phone: '',\n      email: '',\n      address: ''\n    });\n\n    // Método de pago seleccionado\n    const selectedPaymentMethod = ref('cash'); // Por defecto contra entrega\n\n    // Mensaje adicional\n    const additionalMessage = ref('');\n\n    // Filtrar items regulares y especiales\n    const regularItems = computed(() => {\n      if (!menuData.value || !menuData.value.items) return [];\n      const filtered = menuData.value.items.filter(item => !item.isSpecial);\n      console.log('Platos regulares:', filtered.length, filtered.map(i => i.name));\n      return filtered;\n    });\n    const specialItems = computed(() => {\n      if (!menuData.value || !menuData.value.items) return [];\n      const filtered = menuData.value.items.filter(item => item.isSpecial === true);\n      console.log('Platos especiales:', filtered.length, filtered.map(i => i.name));\n      return filtered;\n    });\n\n    // Añadir esta función dentro del setup()\n    function testToasts() {\n      console.log(\"Probando sistema de notificaciones...\");\n\n      // Probar notificación de éxito\n      showToast(\"Esto es una notificación de éxito\", \"success\", 5000);\n\n      // Probar notificación de advertencia después de 6 segundos\n      setTimeout(() => {\n        showToast(\"Esto es una notificación de advertencia\", \"warning\", 5000);\n      }, 6000);\n\n      // Probar notificación de error después de 12 segundos\n      setTimeout(() => {\n        showToast(\"Esto es una notificación de error\", \"error\", 5000);\n      }, 12000);\n    }\n    return {\n      menuData,\n      isLoading,\n      error,\n      cartItems,\n      cartTotal,\n      totalItems,\n      hasPaymentInfo,\n      regularItems,\n      specialItems,\n      formatPrice,\n      addToCart,\n      increaseQuantity,\n      decreaseQuantity,\n      removeFromCart,\n      completeOrder,\n      scrollToOrder,\n      shareOrderByWhatsApp,\n      orderRef,\n      customerInfo,\n      selectedPaymentMethod,\n      additionalMessage,\n      toast // Añadir el toast al objeto return\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRoute","getSharedMenu","name","setup","route","menuData","items","businessInfo","isLoading","error","cartItems","orderRef","isProcessingOrder","console","log","params","id","toast","visible","message","type","timeoutId","loadMenu","setTimeout","testToasts","value","savedCart","localStorage","getItem","JSON","parse","e","data","showToast","err","hasPaymentInfo","paymentInfo","qrImage","nequiNumber","nequiImage","totalItems","reduce","total","item","quantity","cartTotal","price","formatPrice","isNaN","Number","numero","toFixed","parteEntera","parteDecimal","split","parteEnteraFormateada","replace","addToCart","isAvailable","checkAvailability","existingItem","find","i","push","Date","now","toString","availableQuantity","saveCartToLocalStorage","duration","clearTimeout","setItem","stringify","increaseQuantity","index","decreaseQuantity","removeFromCart","splice","completeOrder","customerInfo","phone","inventoryUpdated","updateInventory","confirmationMessage","selectedPaymentMethod","email","address","additionalMessage","scrollToOrder","orderSection","document","querySelector","scrollIntoView","behavior","shareOrderByWhatsApp","alert","forEach","symbols","symbol","length","paymentMethodText","trim","contact","toLocaleString","phoneNumber","whatsappUrl","formattedPhone","encodeURIComponent","window","open","cartItem","cartQuantity","Promise","resolve","regularItems","filtered","filter","isSpecial","map","specialItems"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\views\\SharedMenuView.vue"],"sourcesContent":["<template>\r\n  <div class=\"shared-menu-container\">\r\n    <div v-if=\"isLoading\" class=\"loading\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando menú...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"error\">\r\n      <p>{{ error }}</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"menu-content\">\r\n      <!-- Información del negocio -->\r\n      <div v-if=\"menuData.businessInfo\" class=\"business-info\">\r\n        <img v-if=\"menuData.businessInfo.logo\" :src=\"menuData.businessInfo.logo\" alt=\"Logo\" class=\"business-logo\">\r\n        <h1>{{ menuData.businessInfo.name }}</h1>\r\n        <p class=\"description\">{{ menuData.businessInfo.description }}</p>\r\n        <div class=\"contact-info\" v-if=\"menuData.businessInfo.contact || menuData.businessInfo.address\">\r\n          <p v-if=\"menuData.businessInfo.contact\"><strong>Contacto:</strong> {{ menuData.businessInfo.contact }}</p>\r\n          <p v-if=\"menuData.businessInfo.address\"><strong>Dirección:</strong> {{ menuData.businessInfo.address }}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Lista de productos -->\r\n      <div>\r\n        <!-- Platos regulares -->\r\n        <div class=\"menu-list\">\r\n          <h2>Nuestro Menú</h2>\r\n          <div class=\"menu-items\">\r\n            <div v-for=\"(item, index) in regularItems\" :key=\"index\" class=\"menu-item\">\r\n              <div class=\"item-image-container\">\r\n                <img v-if=\"item.image\" :src=\"item.image\" alt=\"Imagen del producto\" class=\"item-image\">\r\n                <div v-else class=\"no-image\">Sin imagen</div>\r\n              </div>\r\n              <div class=\"item-details\">\r\n                <h3>{{ item.name }}</h3>\r\n                <p class=\"item-description\">{{ item.description }}</p>\r\n                <p class=\"item-price\">${{ formatPrice(item.price) }}</p>\r\n                <p class=\"includes-drink\" v-if=\"item.includesDrink\">Incluye refresco</p>\r\n                <button @click=\"addToCart(item)\" class=\"add-to-cart-btn\">\r\n                  <span class=\"btn-icon\">🛒</span> Añadir al pedido\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Platos especiales (solo se muestra si hay platos especiales) -->\r\n        <div v-if=\"specialItems.length > 0\" class=\"menu-list special-menu-list\">\r\n          <h2>Platos Especiales</h2>\r\n          <div class=\"menu-items\">\r\n            <div v-for=\"(item, index) in specialItems\" :key=\"index\" class=\"menu-item special-item\">\r\n              <div class=\"item-image-container\">\r\n                <img v-if=\"item.image\" :src=\"item.image\" alt=\"Imagen del producto\" class=\"item-image\">\r\n                <div v-else class=\"no-image\">Sin imagen</div>\r\n              </div>\r\n              <div class=\"item-details\">\r\n                <h3>{{ item.name }}</h3>\r\n                <p class=\"item-description\">{{ item.description }}</p>\r\n                <p class=\"item-price\">${{ formatPrice(item.price) }}</p>\r\n                <p class=\"includes-drink\" v-if=\"item.includesDrink\">Incluye refresco</p>\r\n                <button @click=\"addToCart(item)\" class=\"add-to-cart-btn special-button\">\r\n                  <span class=\"btn-icon\">🛒</span> Añadir al pedido\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Sección de \"Tu Pedido\" - Siempre visible aunque vacía -->\r\n      <div class=\"order-section\" ref=\"orderSection\">\r\n        <h2>Tu Pedido</h2>\r\n        \r\n        <div v-if=\"cartItems.length === 0\" class=\"empty-cart\">\r\n          <p>Tu pedido está vacío</p>\r\n          <p class=\"empty-cart-message\">Añade productos del menú para comenzar tu pedido</p>\r\n        </div>\r\n        \r\n        <div v-else class=\"cart-items\">\r\n          <div v-for=\"(item, index) in cartItems\" :key=\"index\" class=\"cart-item\">\r\n            <div class=\"cart-item-details\">\r\n              <h3>{{ item.name }}</h3>\r\n              <p>${{ formatPrice(item.price) }} x {{ item.quantity }}</p>\r\n            </div>\r\n            <div class=\"cart-item-actions\">\r\n              <button @click=\"decreaseQuantity(index)\" class=\"quantity-btn\">-</button>\r\n              <span class=\"quantity-display\">{{ item.quantity }}</span>\r\n              <button @click=\"increaseQuantity(index)\" class=\"quantity-btn\">+</button>\r\n              <button @click=\"removeFromCart(index)\" class=\"remove-btn\">\r\n                <span class=\"btn-icon\">🗑️</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"cart-total\">\r\n            <h3>Total: ${{ formatPrice(cartTotal) }}</h3>\r\n            \r\n            <!-- Formulario de datos del cliente -->\r\n            <div class=\"customer-form\">\r\n              <h4>Datos del Cliente</h4>\r\n              <div class=\"form-row\">\r\n                <input type=\"text\" v-model=\"customerInfo.name\" placeholder=\"Nombres completos\" class=\"form-input\">\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <input type=\"tel\" v-model=\"customerInfo.phone\" placeholder=\"Teléfono\" class=\"form-input\">\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <input type=\"email\" v-model=\"customerInfo.email\" placeholder=\"Correo electrónico\" class=\"form-input\">\r\n              </div>\r\n              <div class=\"form-row\">\r\n                <input type=\"text\" v-model=\"customerInfo.address\" placeholder=\"Dirección de entrega\" class=\"form-input\">\r\n              </div>\r\n              \r\n              <!-- Lista horizontal de métodos de pago -->\r\n              <div class=\"payment-methods-selection\">\r\n                <h4>Forma de Pago</h4>\r\n                <div class=\"payment-options\">\r\n                  <label class=\"payment-option\">\r\n                    <input type=\"radio\" v-model=\"selectedPaymentMethod\" value=\"qr\" name=\"paymentMethod\">\r\n                    <span class=\"payment-option-text\">QR</span>\r\n                  </label>\r\n                  <label class=\"payment-option\">\r\n                    <input type=\"radio\" v-model=\"selectedPaymentMethod\" value=\"nequi\" name=\"paymentMethod\">\r\n                    <span class=\"payment-option-text\">Nequi</span>\r\n                  </label>\r\n                  <label class=\"payment-option\">\r\n                    <input type=\"radio\" v-model=\"selectedPaymentMethod\" value=\"cash\" name=\"paymentMethod\">\r\n                    <span class=\"payment-option-text\">Contra entrega</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              <!-- Campo de mensaje adicional -->\r\n              <div class=\"form-row\">\r\n                <textarea v-model=\"additionalMessage\" placeholder=\"Mensaje o instrucciones adicionales\" class=\"form-textarea\"></textarea>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"order-actions\">\r\n              <button @click=\"completeOrder\" class=\"complete-order-btn\">\r\n                <span class=\"btn-icon\">✓</span> Completar Pedido\r\n              </button>\r\n              <button @click=\"shareOrderByWhatsApp\" class=\"whatsapp-order-btn\">\r\n                <span class=\"btn-icon\">📱</span> Enviar por WhatsApp\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Botón flotante para ver pedido (visible cuando hay items y se hace scroll) -->\r\n      <div v-if=\"cartItems.length > 0\" class=\"floating-cart-button\" @click=\"scrollToOrder\">\r\n        <span class=\"cart-items-count\">{{ totalItems }}</span>\r\n        <span>Ver Pedido</span>\r\n      </div>\r\n      \r\n      <!-- Nueva sección: Forma de Pago -->\r\n      <div v-if=\"hasPaymentInfo\" class=\"payment-section\">\r\n        <h2>Forma de Pago</h2>\r\n        <div class=\"payment-methods\">\r\n          <div v-if=\"menuData.businessInfo?.paymentInfo?.qrImage\" class=\"payment-method\">\r\n            <h3>{{ menuData.businessInfo.paymentInfo.qrTitle || 'Código QR de Pago' }}</h3>\r\n            <img \r\n              :src=\"menuData.businessInfo.paymentInfo.qrImage\" \r\n              alt=\"QR de Pago\" \r\n              class=\"payment-image\"\r\n            >\r\n          </div>\r\n          \r\n          <div v-if=\"menuData.businessInfo?.paymentInfo?.nequiNumber || menuData.businessInfo?.paymentInfo?.nequiImage\" class=\"payment-method\">\r\n            <h3>Pago con Nequi</h3>\r\n            <img \r\n              v-if=\"menuData.businessInfo.paymentInfo.nequiImage\" \r\n              :src=\"menuData.businessInfo.paymentInfo.nequiImage\" \r\n              alt=\"Nequi\" \r\n              class=\"payment-image\"\r\n            >\r\n            <p v-if=\"menuData.businessInfo.paymentInfo.nequiNumber\" class=\"payment-detail\">\r\n              <strong>Número:</strong> {{ menuData.businessInfo.paymentInfo.nequiNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Sistema de notificaciones toast -->\r\n      <div v-if=\"toast.visible\" \r\n           class=\"toast-notification\" \r\n           :class=\"toast.type\">\r\n        {{ toast.message }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { getSharedMenu } from '../services/menuService';\r\n\r\nexport default {\r\n  name: 'SharedMenuView',\r\n  setup() {\r\n    const route = useRoute();\r\n    const menuData = ref({ items: [], businessInfo: {} });\r\n    const isLoading = ref(true);\r\n    const error = ref(null);\r\n    const cartItems = ref([]);\r\n    const orderRef = ref(null);\r\n    const isProcessingOrder = ref(false);\r\n    \r\n    console.log(\"SharedMenuView montado, ID del menú:\", route.params.id);\r\n\r\n    // Sistema de notificaciones toast\r\n    const toast = ref({\r\n      visible: false,\r\n      message: '',\r\n      type: 'success', // 'success', 'warning', 'error'\r\n      timeoutId: null\r\n    });\r\n\r\n    // Cargar menú cuando el componente se monte\r\n    onMounted(() => {\r\n      loadMenu();\r\n      \r\n      // Probar sistema de notificaciones después de 2 segundos\r\n      setTimeout(testToasts, 2000);\r\n    });\r\n\r\n    // Cargar el menú desde la API\r\n    async function loadMenu() {\r\n      try {\r\n        isLoading.value = true;\r\n        console.log(\"Cargando menú con ID:\", route.params.id);\r\n        \r\n        if (!route.params.id) {\r\n          error.value = 'ID de menú no especificado';\r\n          isLoading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Intenta cargar desde localStorage primero (por si hay un carrito guardado)\r\n        const savedCart = localStorage.getItem(`cart_${route.params.id}`);\r\n        if (savedCart) {\r\n          try {\r\n            cartItems.value = JSON.parse(savedCart);\r\n            console.log(\"Carrito recuperado de localStorage:\", cartItems.value);\r\n          } catch (e) {\r\n            console.error(\"Error al parsear carrito de localStorage:\", e);\r\n          }\r\n        }\r\n        \r\n        const data = await getSharedMenu(route.params.id);\r\n        \r\n        if (data) {\r\n          menuData.value = data;\r\n          console.log(\"Menú cargado con éxito:\", menuData.value);\r\n          \r\n          // Mostrar toast al cargar el menú correctamente - AÑADIR ESTA LÍNEA\r\n          setTimeout(() => {\r\n            showToast('Menú cargado correctamente', 'success', 5000);\r\n          }, 1000);\r\n        } else {\r\n          error.value = \"No se encontró el menú solicitado\";\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error al cargar el menú:\", err);\r\n        error.value = `Error al cargar el menú: ${err.message || 'Error desconocido'}`;\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    }\r\n\r\n    // Verificar si hay información de pago\r\n    const hasPaymentInfo = computed(() => {\r\n      return menuData.value?.businessInfo?.paymentInfo && (\r\n        menuData.value.businessInfo.paymentInfo.qrImage ||\r\n        menuData.value.businessInfo.paymentInfo.nequiNumber ||\r\n        menuData.value.businessInfo.paymentInfo.nequiImage\r\n      );\r\n    });\r\n    \r\n    // Contador total de items\r\n    const totalItems = computed(() => {\r\n      return cartItems.value.reduce((total, item) => total + item.quantity, 0);\r\n    });\r\n\r\n    // Total del carrito\r\n    const cartTotal = computed(() => {\r\n      return cartItems.value.reduce((total, item) => {\r\n        return total + (item.price * item.quantity);\r\n      }, 0);\r\n    });\r\n\r\n    // Formatear precio\r\n    function formatPrice(price) {\r\n      if (isNaN(Number(price))) return '0,00';\r\n      \r\n      // Convertir a número y formatear con 2 decimales fijos\r\n      const numero = Number(price).toFixed(2);\r\n      \r\n      // Separar parte entera y decimal\r\n      const [parteEntera, parteDecimal] = numero.split('.');\r\n      \r\n      // Formatear parte entera con puntos como separadores de miles\r\n      const parteEnteraFormateada = parteEntera.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n      \r\n      // Unir con coma como separador decimal\r\n      return `${parteEnteraFormateada},${parteDecimal}`;\r\n    }\r\n\r\n    // Agregar al carrito con verificación de disponibilidad\r\n    async function addToCart(item) {\r\n      // Primero verificar disponibilidad\r\n      const isAvailable = await checkAvailability(item);\r\n      if (!isAvailable) return;\r\n      \r\n      const existingItem = cartItems.value.find(i => {\r\n        // Asegurar que ambos items tienen ID y compararlos, o comparar por nombre si no hay ID\r\n        if (item.id && i.id) {\r\n          return i.id === item.id;\r\n        }\r\n        return i.name === item.name;\r\n      });\r\n      \r\n      if (existingItem) {\r\n        existingItem.quantity++;\r\n      } else {\r\n        cartItems.value.push({\r\n          id: item.id || Date.now().toString(),\r\n          name: item.name,\r\n          price: item.price,\r\n          quantity: 1,\r\n          availableQuantity: item.availableQuantity || 10 // Temporal: 10 por defecto\r\n        });\r\n      }\r\n      \r\n      // Guardar carrito en localStorage\r\n      saveCartToLocalStorage();\r\n      \r\n      // Mostrar notificación de éxito\r\n      showToast(`${item.name} añadido al carrito`, 'success');\r\n    }\r\n    \r\n    // Mostrar notificaciones toast\r\n    function showToast(message, type = 'success', duration = 5000) { // Aumentar a 5 segundos\r\n      console.log(`[Toast] Mostrando notificación: ${message} (${type})`);\r\n      \r\n      // Si ya hay un toast visible, limpiamos su timeout\r\n      if (toast.value.timeoutId) {\r\n        clearTimeout(toast.value.timeoutId);\r\n      }\r\n      \r\n      // Configurar el nuevo toast\r\n      toast.value.message = message;\r\n      toast.value.type = type;\r\n      toast.value.visible = true;\r\n      \r\n      // Debug: verificar que el estado del toast cambió\r\n      console.log(`[Toast] Estado: visible=${toast.value.visible}, message=${toast.value.message}`);\r\n      \r\n      // Configurar timeout para ocultar después de la duración\r\n      toast.value.timeoutId = setTimeout(() => {\r\n        console.log(`[Toast] Ocultando notificación después de ${duration}ms`);\r\n        toast.value.visible = false;\r\n      }, duration);\r\n    }\r\n\r\n    // Guardar carrito en localStorage\r\n    function saveCartToLocalStorage() {\r\n      try {\r\n        localStorage.setItem(`cart_${route.params.id}`, JSON.stringify(cartItems.value));\r\n      } catch (e) {\r\n        console.error(\"Error al guardar carrito en localStorage:\", e);\r\n      }\r\n    }\r\n\r\n    // Incrementar cantidad\r\n    function increaseQuantity(index) {\r\n      cartItems.value[index].quantity++;\r\n      saveCartToLocalStorage();\r\n    }\r\n\r\n    // Decrementar cantidad\r\n    function decreaseQuantity(index) {\r\n      if (cartItems.value[index].quantity > 1) {\r\n        cartItems.value[index].quantity--;\r\n        saveCartToLocalStorage();\r\n      } else {\r\n        removeFromCart(index);\r\n      }\r\n    }\r\n\r\n    // Eliminar del carrito\r\n    function removeFromCart(index) {\r\n      cartItems.value.splice(index, 1);\r\n      saveCartToLocalStorage();\r\n    }\r\n    \r\n    // Completar pedido con actualización de inventario\r\n    async function completeOrder() {\r\n      // Validación de datos mínimos\r\n      if (!customerInfo.value.name || !customerInfo.value.phone) {\r\n        showToast('Por favor ingresa al menos tu nombre y teléfono para completar el pedido', 'error');\r\n        return;\r\n      }\r\n      \r\n      // Variable para indicar que el pedido está en proceso\r\n      isProcessingOrder.value = true;\r\n      \r\n      try {\r\n        // Actualizar inventario\r\n        const inventoryUpdated = await updateInventory();\r\n        \r\n        if (!inventoryUpdated) {\r\n          showToast('Error al actualizar el inventario. Por favor intenta nuevamente.', 'error');\r\n          isProcessingOrder.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Construir mensaje de confirmación incluyendo datos del cliente\r\n        let confirmationMessage = `Pedido completado por un total de $${formatPrice(cartTotal.value)}\\n`;\r\n        confirmationMessage += `Cliente: ${customerInfo.value.name}\\n`;\r\n        confirmationMessage += `Teléfono: ${customerInfo.value.phone}\\n`;\r\n        confirmationMessage += `Forma de pago: ${selectedPaymentMethod.value === 'qr' ? 'Código QR' : \r\n                             (selectedPaymentMethod.value === 'nequi' ? 'Nequi' : 'Contra entrega')}\\n`;\r\n        confirmationMessage += `\\nGracias por tu compra!`;\r\n        \r\n        // Mostrar notificación de éxito\r\n        showToast('¡Pedido completado con éxito!', 'success');\r\n        \r\n        // Limpiar carrito y datos del cliente\r\n        cartItems.value = [];\r\n        saveCartToLocalStorage();\r\n        \r\n        // Opcional: limpiar también los datos del cliente después de completar\r\n        customerInfo.value = {\r\n          name: '',\r\n          phone: '',\r\n          email: '',\r\n          address: ''\r\n        };\r\n        additionalMessage.value = '';\r\n      } catch (error) {\r\n        console.error('Error al procesar el pedido:', error);\r\n        showToast('Error al procesar el pedido. Por favor intenta nuevamente.', 'error');\r\n      } finally {\r\n        isProcessingOrder.value = false;\r\n      }\r\n    }\r\n    \r\n    // Desplazarse a la sección del pedido\r\n    function scrollToOrder() {\r\n      const orderSection = document.querySelector('.order-section');\r\n      if (orderSection) {\r\n        orderSection.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    }\r\n\r\n    // Función para compartir el pedido por WhatsApp (usando símbolos compatibles)\r\n    function shareOrderByWhatsApp() {\r\n      try {\r\n        // Validación de datos mínimos\r\n        if (!customerInfo.value.name || !customerInfo.value.phone) {\r\n          alert('Por favor ingresa al menos tu nombre y teléfono antes de enviar el pedido');\r\n          return;\r\n        }\r\n        \r\n        // Preparar mensaje con detalles del pedido usando símbolos compatibles\r\n        let message = `*❆ NUEVO PEDIDO ❆*\\n\\n`;\r\n        \r\n        // Información del restaurante\r\n        message += `*${menuData.value.businessInfo?.name || 'Restaurante'}*\\n\\n`;\r\n        \r\n        // Datos del cliente\r\n        message += `*✦ DATOS DEL CLIENTE:*\\n`;\r\n        message += `♢ Nombre: ${customerInfo.value.name}\\n`;\r\n        message += `☏ Teléfono: ${customerInfo.value.phone}\\n`;\r\n        \r\n        if (customerInfo.value.email) {\r\n          message += `♜ Email: ${customerInfo.value.email}\\n`;\r\n        }\r\n        \r\n        if (customerInfo.value.address) {\r\n          message += `➤ Dirección: ${customerInfo.value.address}\\n`;\r\n        }\r\n        \r\n        message += `\\n*★ PRODUCTOS:*\\n`;\r\n        \r\n        // Agregar items del carrito con símbolos ASCII seguros\r\n        cartItems.value.forEach((item, index) => {\r\n          // Usar símbolos compatibles de la lista proporcionada\r\n          const symbols = ['✦', '✧', '♣', '♠', '♥', '♫'];\r\n          const symbol = symbols[index % symbols.length];\r\n          message += `${symbol} ${item.name} x${item.quantity} - $${formatPrice(item.price * item.quantity)}\\n`;\r\n        });\r\n        \r\n        // Agregar total con formato destacado\r\n        message += `\\n*➤ TOTAL: $${formatPrice(cartTotal.value)}*\\n`;\r\n        \r\n        // Agregar método de pago\r\n        const paymentMethodText = selectedPaymentMethod.value === 'qr' ? 'Código QR' : \r\n                               (selectedPaymentMethod.value === 'nequi' ? 'Nequi' : 'Contra entrega');\r\n                               \r\n        message += `\\n*➤ FORMA DE PAGO:* ${paymentMethodText}\\n`;\r\n        \r\n        // Incluir mensaje adicional si existe\r\n        if (additionalMessage.value.trim()) {\r\n          message += `\\n*✎ MENSAJE:*\\n${additionalMessage.value.trim()}\\n`;\r\n        }\r\n        \r\n        // Agregar información de contacto del restaurante\r\n        if (menuData.value.businessInfo?.contact) {\r\n          message += `\\n*✆ Contacto restaurante:* ${menuData.value.businessInfo.contact}\\n`;\r\n        }\r\n        \r\n        if (menuData.value.businessInfo?.address) {\r\n          message += `\\n*➤ Ubicación:* ${menuData.value.businessInfo.address}\\n`;\r\n        }\r\n        \r\n        // Agregar fecha y hora del pedido\r\n        const now = new Date();\r\n        message += `\\n*✰ Fecha y hora:* ${now.toLocaleString()}\\n`;\r\n        \r\n        // Crear URL para WhatsApp\r\n        const phoneNumber = menuData.value.businessInfo?.paymentInfo?.nequiNumber || '';\r\n        let whatsappUrl = '';\r\n        \r\n        if (phoneNumber && phoneNumber.trim() !== '') {\r\n          // Si hay un número, enviar directamente a ese número\r\n          const formattedPhone = phoneNumber.replace(/\\D/g, ''); // Quitar caracteres no numéricos\r\n          whatsappUrl = `https://wa.me/${formattedPhone}?text=${encodeURIComponent(message)}`;\r\n        } else {\r\n          // Si no hay número, usar la opción de compartir\r\n          whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\r\n        }\r\n        \r\n        // Abrir WhatsApp\r\n        window.open(whatsappUrl, '_blank');\r\n      } catch (error) {\r\n        console.error('Error al compartir por WhatsApp:', error);\r\n        alert('Error al compartir el pedido. Por favor intenta nuevamente.');\r\n      }\r\n    }\r\n\r\n    // Verificar disponibilidad de inventario\r\n    async function checkAvailability(item) {\r\n      // Obtener la cantidad disponible actual (simulada para esta implementación)\r\n      const availableQuantity = item.availableQuantity || 10; // Temporal: 10 por defecto\r\n      \r\n      // Obtener la cantidad actual en el carrito\r\n      const cartItem = cartItems.value.find(i => i.id === item.id);\r\n      const cartQuantity = cartItem ? cartItem.quantity : 0;\r\n      \r\n      // Verificar la disponibilidad\r\n      if (availableQuantity <= 0) {\r\n        showToast(`Lo sentimos, \"${item.name}\" no está disponible actualmente`, 'error');\r\n        return false;\r\n      } else if (cartQuantity >= availableQuantity) {\r\n        showToast(`No hay más unidades disponibles de \"${item.name}\"`, 'warning');\r\n        return false;\r\n      } else if (availableQuantity <= 5) {\r\n        showToast(`¡Solo quedan ${availableQuantity} unidades de \"${item.name}\"!`, 'warning');\r\n        return true;\r\n      }\r\n      \r\n      return true;\r\n    }\r\n\r\n    // Actualizar inventario al completar pedido\r\n    async function updateInventory() {\r\n      try {\r\n        // En una aplicación real, aquí habría una llamada a la API\r\n        console.log('Actualizando inventario para los siguientes productos:');\r\n        \r\n        cartItems.value.forEach(item => {\r\n          console.log(`- ${item.name}: ${item.quantity} unidades`);\r\n          // Aquí iría el código real para actualizar la base de datos\r\n        });\r\n        \r\n        // Simular un pequeño retraso para que sea más realista\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n        \r\n        return true; // Éxito\r\n      } catch (error) {\r\n        console.error('Error al actualizar inventario:', error);\r\n        return false; // Error\r\n      }\r\n    }\r\n\r\n    // Datos del cliente\r\n    const customerInfo = ref({\r\n      name: '',\r\n      phone: '',\r\n      email: '',\r\n      address: ''\r\n    });\r\n\r\n    // Método de pago seleccionado\r\n    const selectedPaymentMethod = ref('cash'); // Por defecto contra entrega\r\n\r\n    // Mensaje adicional\r\n    const additionalMessage = ref('');\r\n\r\n    // Filtrar items regulares y especiales\r\n    const regularItems = computed(() => {\r\n      if (!menuData.value || !menuData.value.items) return [];\r\n      const filtered = menuData.value.items.filter(item => !item.isSpecial);\r\n      console.log('Platos regulares:', filtered.length, filtered.map(i => i.name));\r\n      return filtered;\r\n    });\r\n\r\n    const specialItems = computed(() => {\r\n      if (!menuData.value || !menuData.value.items) return [];\r\n      const filtered = menuData.value.items.filter(item => item.isSpecial === true);\r\n      console.log('Platos especiales:', filtered.length, filtered.map(i => i.name));\r\n      return filtered;\r\n    });\r\n\r\n    // Añadir esta función dentro del setup()\r\n    function testToasts() {\r\n      console.log(\"Probando sistema de notificaciones...\");\r\n      \r\n      // Probar notificación de éxito\r\n      showToast(\"Esto es una notificación de éxito\", \"success\", 5000);\r\n      \r\n      // Probar notificación de advertencia después de 6 segundos\r\n      setTimeout(() => {\r\n        showToast(\"Esto es una notificación de advertencia\", \"warning\", 5000);\r\n      }, 6000);\r\n      \r\n      // Probar notificación de error después de 12 segundos\r\n      setTimeout(() => {\r\n        showToast(\"Esto es una notificación de error\", \"error\", 5000);\r\n      }, 12000);\r\n    }\r\n\r\n    return {\r\n      menuData,\r\n      isLoading,\r\n      error,\r\n      cartItems,\r\n      cartTotal,\r\n      totalItems,\r\n      hasPaymentInfo,\r\n      regularItems,\r\n      specialItems,\r\n      formatPrice,\r\n      addToCart,\r\n      increaseQuantity,\r\n      decreaseQuantity,\r\n      removeFromCart,\r\n      completeOrder,\r\n      scrollToOrder,\r\n      shareOrderByWhatsApp,\r\n      orderRef,\r\n      customerInfo,\r\n      selectedPaymentMethod,\r\n      additionalMessage,\r\n      toast  // Añadir el toast al objeto return\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.shared-menu-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n.loading, .error {\r\n  text-align: center;\r\n  padding: 50px;\r\n  font-size: 18px;\r\n}\r\n\r\n.error {\r\n  color: #d9534f;\r\n}\r\n\r\n.business-info {\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.business-logo {\r\n  max-width: 100%;\r\n  max-height: 150px;\r\n  object-fit: contain;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.business-info h1 {\r\n  color: #343a40;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.description {\r\n  font-style: italic;\r\n  color: #6c757d;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.contact-info {\r\n  font-size: 14px;\r\n  color: #495057;\r\n}\r\n\r\n.menu-list {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.menu-list h2 {\r\n  color: #28a745;\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #28a745;\r\n}\r\n\r\n.menu-items {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.menu-item {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.menu-item:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n}\r\n\r\n.item-image-container {\r\n  width: 100%;\r\n  height: 200px;\r\n  overflow: hidden;\r\n}\r\n\r\n.item-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.no-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f8f9fa;\r\n  color: #6c757d;\r\n  font-style: italic;\r\n}\r\n\r\n.item-details {\r\n  padding: 15px;\r\n}\r\n\r\n.item-details h3 {\r\n  margin-top: 0;\r\n  color: #343a40;\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.item-description {\r\n  color: #6c757d;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.item-price {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #28a745;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.includes-drink {\r\n  font-size: 14px;\r\n  color: #6c757d;\r\n  font-style: italic;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-to-cart-btn {\r\n  width: 100%;\r\n  padding: 8px 15px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  font-weight: bold;\r\n}\r\n\r\n.add-to-cart-btn:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n/* Estilos mejorados para la sección de \"Tu Pedido\" */\r\n.order-section {\r\n  margin: 30px auto;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  max-width: 800px;\r\n  border: 2px solid #28a745;\r\n  position: relative;\r\n}\r\n\r\n.order-section::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 10px solid transparent;\r\n  border-right: 10px solid transparent;\r\n  border-bottom: 10px solid #28a745;\r\n}\r\n\r\n.order-section h2 {\r\n  color: #343a40;\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #28a745;\r\n}\r\n\r\n.cart-items {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #dee2e6;\r\n  animation: fadeIn 0.3s ease;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(-10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.cart-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.cart-item-details h3 {\r\n  margin: 0 0 5px 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.cart-item-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.quantity-btn {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #28a745;\r\n  color: #28a745;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.quantity-btn:hover {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.remove-btn {\r\n  padding: 5px 10px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.remove-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.cart-total {\r\n  text-align: right;\r\n  padding-top: 15px;\r\n  border-top: 2px solid #28a745;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.cart-total h3 {\r\n  color: #343a40;\r\n  margin: 0;\r\n}\r\n\r\n/* Botón flotante para ver pedido */\r\n.floating-cart-button {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border-radius: 50px;\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.2);\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  z-index: 98; /* Mantener por debajo del toast (9999) */\r\n  font-weight: bold;\r\n}\r\n\r\n.floating-cart-button:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 6px 15px rgba(0,0,0,0.25);\r\n}\r\n\r\n.cart-items-count {\r\n  background-color: white;\r\n  color: #28a745;\r\n  border-radius: 50%;\r\n  width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Estilos para la sección de forma de pago */\r\n.payment-section {\r\n  margin: 30px auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  max-width: 800px;\r\n}\r\n\r\n.payment-section h2 {\r\n  color: #333;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.payment-methods {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  justify-content: center;\r\n}\r\n\r\n.payment-method {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\r\n  padding: 15px;\r\n  width: 280px;\r\n  text-align: center;\r\n}\r\n\r\n.payment-method h3 {\r\n  margin-top: 0;\r\n  color: #333;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.payment-image {\r\n  width: 200px;\r\n  height: 200px;\r\n  object-fit: contain;\r\n  margin: 0 auto;\r\n  display: block;\r\n}\r\n\r\n.payment-detail {\r\n  margin-top: 15px;\r\n  font-size: 1rem;\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .payment-methods {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .payment-method {\r\n    width: 100%;\r\n  }\r\n  \r\n  .floating-cart-button {\r\n    bottom: 10px;\r\n    right: 10px;\r\n    padding: 8px 16px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n/* Spinner de carga mejorado */\r\n.loading {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 80px 20px;\r\n  text-align: center;\r\n}\r\n\r\n.spinner {\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 5px solid #f3f3f3;\r\n  border-top: 5px solid #28a745;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* Mejoras en la sección de Tu Pedido */\r\n.empty-cart {\r\n  padding: 40px 0;\r\n  text-align: center;\r\n  color: #6c757d;\r\n}\r\n\r\n.empty-cart p {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.empty-cart-message {\r\n  font-style: italic;\r\n  font-size: 14px;\r\n}\r\n\r\n/* Notificación de producto añadido */\r\n.add-to-cart-notification {\r\n  position: fixed;\r\n  bottom: -60px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-color: #28a745;\r\n  color: white;\r\n  padding: 12px 25px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.2);\r\n  transition: bottom 0.5s ease;\r\n  z-index: 1000;\r\n}\r\n\r\n.add-to-cart-notification.show {\r\n  bottom: 30px;\r\n}\r\n\r\n/* Mejoras en botones */\r\n.btn-icon {\r\n  margin-right: 5px;\r\n}\r\n\r\n.add-to-cart-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  font-weight: bold;\r\n}\r\n\r\n.add-to-cart-btn:hover {\r\n  background-color: #218838;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.quantity-display {\r\n  min-width: 30px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Estilos para acciones de pedido */\r\n.order-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-top: 15px;\r\n  gap: 10px;\r\n}\r\n\r\n.complete-order-btn,\r\n.whatsapp-order-btn {\r\n  border: none;\r\n  padding: 12px 20px;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.3s ease;\r\n  gap: 8px;\r\n  height: 48px;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.complete-order-btn {\r\n  background-color: #28a745;\r\n  color: white;\r\n  margin: 0;\r\n}\r\n\r\ncomplete-order-btn:hover {\r\n  background-color: #218838;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2);\r\n}\r\n\r\n.whatsapp-order-btn {\r\n  background-color: #25D366;\r\n  color: white;\r\n  margin: 0;\r\n}\r\n\r\n.whatsapp-order-btn:hover {\r\n  background-color: #128C7E;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2);\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .order-actions {\r\n    flex-direction: row;\r\n    gap: 15px;\r\n  }\r\n  \r\n  .complete-order-btn,\r\n  .whatsapp-order-btn {\r\n    flex: 1;\r\n  }\r\n}\r\n\r\n/* Estilos para el formulario de cliente */\r\n.customer-form {\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.customer-form h4 {\r\n  margin: 0 0 15px 0;\r\n  color: #333;\r\n  font-size: 16px;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 8px;\r\n}\r\n\r\n.form-row {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.form-input, .form-textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.form-input:focus, .form-textarea:focus {\r\n  border-color: #28a745;\r\n  outline: none;\r\n}\r\n\r\n.form-textarea {\r\n  min-height: 80px;\r\n  resize: vertical;\r\n}\r\n\r\n/* Estilos para las opciones de pago */\r\n.payment-methods-selection {\r\n  margin: 15px 0;\r\n}\r\n\r\n.payment-methods-selection h4 {\r\n  margin: 0 0 15px 0;\r\n  color: #333;\r\n  font-size: 16px;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 8px;\r\n}\r\n\r\n.payment-options {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.payment-option {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  border: 1px solid #ddd;\r\n  padding: 8px 15px;\r\n  border-radius: 20px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.payment-option:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.payment-option input[type=\"radio\"] {\r\n  margin: 0;\r\n}\r\n\r\n.payment-option input[type=\"radio\"]:checked + .payment-option-text {\r\n  font-weight: bold;\r\n  color: #28a745;\r\n}\r\n\r\n.payment-option:has(input[type=\"radio\"]:checked) {\r\n  border-color: #28a745;\r\n  background-color: rgba(40, 167, 69, 0.1);\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .payment-options {\r\n    flex-direction: column;\r\n    gap: 8px;\r\n  }\r\n  \r\n  .payment-option {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n/* Agregar al final del <style> */\r\n.special-menu-list h2 {\r\n  color: #d4af37; /* Color dorado para el título de platos especiales */\r\n  border-bottom-color: #d4af37;\r\n}\r\n\r\n.special-item {\r\n  border: 2px solid #d4af37;\r\n  position: relative;\r\n}\r\n\r\n.special-item::before {\r\n  content: '★ Especial';\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background-color: #d4af37;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border-radius: 20px;\r\n  z-index: 2;\r\n}\r\n\r\n.special-button {\r\n  background-color: #d4af37;\r\n}\r\n\r\n.special-button:hover {\r\n  background-color: #c6a22c;\r\n}\r\n\r\n/* Estilos para la notificación toast */\r\n.toast-notification {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  padding: 15px 25px;\r\n  border-radius: 5px;\r\n  z-index: 9999 !important; /* Asegurar que esté por encima de todo */\r\n  color: white;\r\n  font-weight: bold;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.3);\r\n  animation: slideIn 0.5s;\r\n  max-width: 300px;\r\n  font-size: 16px !important;\r\n  opacity: 0.95 !important;\r\n  transform: scale(1.05); /* Ligeramente más grande */\r\n  border: 2px solid rgba(255,255,255,0.2);\r\n}\r\n\r\n.toast-notification.success {\r\n  background-color: #28a745 !important;\r\n}\r\n\r\n.toast-notification.warning {\r\n  background-color: #ffc107 !important;\r\n  color: #333 !important;\r\n  border-color: #333 !important;\r\n}\r\n\r\n.toast-notification.error {\r\n  background-color: #dc3545 !important;\r\n}\r\n\r\n@keyframes slideIn {\r\n  from { \r\n    transform: translateY(-50px) scale(0.8); \r\n    opacity: 0; \r\n  }\r\n  to { \r\n    transform: translateY(0) scale(1.05); \r\n    opacity: 0.95 !important; \r\n  }\r\n}\r\n\r\n.menu-content {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n/* Estilos de depuración - para remover después */\r\n.toast-notification::before {\r\n  content: '✓';\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  font-size: 20px;\r\n}\r\n\r\n.toast-notification.success::before {\r\n  content: '✓';\r\n}\r\n\r\n.toast-notification.warning::before {\r\n  content: '⚠️';\r\n}\r\n\r\n.toast-notification.error::before {\r\n  content: '✗';\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}