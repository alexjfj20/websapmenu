{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"direct-delete-container\"\n};\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"confirmation-dialog\"\n};\nconst _hoisted_4 = {\n  class: \"confirmation-content\"\n};\nconst _hoisted_5 = {\n  class: \"confirmation-actions\"\n};\nconst _hoisted_6 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.showConfirmation = true),\n    class: \"direct-delete-button\",\n    disabled: $setup.isDeleting\n  }, _toDisplayString($setup.isDeleting ? 'Eliminando...' : 'Eliminar Directamente'), 9 /* TEXT, PROPS */, _hoisted_2), $setup.showConfirmation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"Confirmar Eliminación\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createTextVNode(\"¿Estás seguro de que deseas eliminar el plato \")), _createElementVNode(\"strong\", null, _toDisplayString($props.platoName), 1 /* TEXT */), _cache[4] || (_cache[4] = _createTextVNode(\"?\"))]), _cache[6] || (_cache[6] = _createElementVNode(\"p\", null, \"Esta acción eliminará el plato directamente de la base de datos MySQL y no se puede deshacer.\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.showConfirmation = false),\n    class: \"cancel-button\"\n  }, \"Cancelar\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.executeDelete && $setup.executeDelete(...args)),\n    class: \"confirm-button\",\n    disabled: $setup.isDeleting\n  }, _toDisplayString($setup.isDeleting ? 'Eliminando...' : 'Confirmar Eliminación'), 9 /* TEXT, PROPS */, _hoisted_6)])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","$event","$setup","showConfirmation","disabled","isDeleting","_hoisted_2","_hoisted_3","_hoisted_4","_createTextVNode","_toDisplayString","$props","platoName","_hoisted_5","args","executeDelete","_hoisted_6","_createCommentVNode"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\DirectDeleteButton.vue"],"sourcesContent":["// src/components/DirectDeleteButton.vue\n\n<template>\n  <div class=\"direct-delete-container\">\n    <button \n      @click=\"showConfirmation = true\" \n      class=\"direct-delete-button\"\n      :disabled=\"isDeleting\"\n    >\n      {{ isDeleting ? 'Eliminando...' : 'Eliminar Directamente' }}\n    </button>\n    \n    <div v-if=\"showConfirmation\" class=\"confirmation-dialog\">\n      <div class=\"confirmation-content\">\n        <h3>Confirmar Eliminación</h3>\n        <p>¿Estás seguro de que deseas eliminar el plato <strong>{{ platoName }}</strong>?</p>\n        <p>Esta acción eliminará el plato directamente de la base de datos MySQL y no se puede deshacer.</p>\n        \n        <div class=\"confirmation-actions\">\n          <button @click=\"showConfirmation = false\" class=\"cancel-button\">Cancelar</button>\n          <button @click=\"executeDelete\" class=\"confirm-button\" :disabled=\"isDeleting\">\n            {{ isDeleting ? 'Eliminando...' : 'Confirmar Eliminación' }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'DirectDeleteButton',\n  \n  props: {\n    platoId: {\n      type: String,\n      required: true\n    },\n    platoName: {\n      type: String,\n      default: 'este plato'\n    }\n  },\n  \n  emits: ['deleted', 'error'],\n  \n  setup(props, { emit }) {\n    const isDeleting = ref(false);\n    const showConfirmation = ref(false);\n    const deleteStatus = ref('');\n    \n    const executeDelete = async () => {\n      isDeleting.value = true;\n      deleteStatus.value = 'Iniciando eliminación...';\n      \n      try {\n        // Usar el endpoint de eliminación directa mejorado\n        const response = await fetch(`http://localhost:3000/direct-delete?id=${encodeURIComponent(props.platoId)}`, {\n          method: 'GET',\n          headers: {\n            'Cache-Control': 'no-cache'\n          }\n        });\n        \n        console.log(`Respuesta del servidor: Status ${response.status}`);\n        \n        if (response.ok) {\n          const result = await response.json();\n          console.log('Respuesta completa:', result);\n          \n          if (result.success) {\n            deleteStatus.value = 'Plato eliminado con éxito';\n            emit('deleted', props.platoId);\n            showConfirmation.value = false;\n            \n            // También eliminar de IndexedDB para mantener todo sincronizado\n            try {\n              const db = await window.indexedDB.open('websap', 3);\n              db.onsuccess = function(event) {\n                const database = event.target.result;\n                const transaction = database.transaction(['platos'], 'readwrite');\n                const store = transaction.objectStore('platos');\n                store.delete(props.platoId);\n                \n                transaction.oncomplete = function() {\n                  console.log(`Plato ${props.platoId} también eliminado de IndexedDB`);\n                };\n              };\n            } catch (localDbError) {\n              console.warn('No se pudo eliminar de IndexedDB, pero se eliminó de MySQL:', localDbError);\n            }\n            \n            alert(`El plato \"${props.platoName}\" ha sido eliminado correctamente de la base de datos MySQL.`);\n          } else {\n            deleteStatus.value = `Error: ${result.message}`;\n            emit('error', { id: props.platoId, message: result.message });\n            alert(`Error al eliminar el plato: ${result.message}`);\n          }\n        } else {\n          const errorText = await response.text();\n          deleteStatus.value = `Error: ${response.status} - ${errorText}`;\n          emit('error', { id: props.platoId, status: response.status, message: errorText });\n          alert(`Error al eliminar el plato. Status: ${response.status}\\n${errorText}`);\n        }\n      } catch (error) {\n        deleteStatus.value = `Error: ${error.message}`;\n        emit('error', { id: props.platoId, message: error.message });\n        alert(`Error al eliminar el plato: ${error.message}`);\n      } finally {\n        isDeleting.value = false;\n      }\n    };\n    \n    return {\n      isDeleting,\n      showConfirmation,\n      deleteStatus,\n      executeDelete\n    };\n  }\n};\n</script>\n\n<style scoped>\n.direct-delete-button {\n  background-color: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.3s;\n  margin-top: 10px;\n  width: 100%;\n}\n\n.direct-delete-button:hover {\n  background-color: #c82333;\n}\n\n.direct-delete-button:disabled {\n  background-color: #6c757d;\n  cursor: not-allowed;\n}\n\n.confirmation-dialog {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.confirmation-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  max-width: 400px;\n  width: 90%;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.confirmation-content h3 {\n  margin-top: 0;\n  color: #dc3545;\n}\n\n.confirmation-actions {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n  gap: 10px;\n}\n\n.cancel-button {\n  background-color: #6c757d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n}\n\n.confirm-button {\n  background-color: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.confirm-button:disabled {\n  background-color: #6c757d;\n  cursor: not-allowed;\n}\n</style>\n"],"mappings":";;EAGOA,KAAK,EAAC;AAAyB;mBAHtC;;EAAAC,GAAA;EAYiCD,KAAK,EAAC;;;EAC5BA,KAAK,EAAC;AAAsB;;EAK1BA,KAAK,EAAC;AAAsB;mBAlBzC;;uBAGEE,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,mBAAA,CAMS;IALNC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,gBAAgB;IACxBT,KAAK,EAAC,sBAAsB;IAC3BU,QAAQ,EAAEF,MAAA,CAAAG;sBAERH,MAAA,CAAAG,UAAU,oEATnBC,UAAA,GAYeJ,MAAA,CAAAC,gBAAgB,I,cAA3BP,mBAAA,CAaM,OAbNW,UAaM,GAZJT,mBAAA,CAWM,OAXNU,UAWM,G,0BAVJV,mBAAA,CAA8B,YAA1B,uBAAqB,sBACzBA,mBAAA,CAAsF,Y,0BAf9FW,gBAAA,CAeW,gDAA8C,IAAAX,mBAAA,CAAgC,gBAAAY,gBAAA,CAArBC,MAAA,CAAAC,SAAS,kB,0BAf7EH,gBAAA,CAeyF,GAAC,G,6BAClFX,mBAAA,CAAoG,WAAjG,+FAA6F,sBAEhGA,mBAAA,CAKM,OALNe,UAKM,GAJJf,mBAAA,CAAiF;IAAxEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,gBAAgB;IAAUT,KAAK,EAAC;KAAgB,UAAQ,GACxEI,mBAAA,CAES;IAFAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAc,IAAA,KAAEZ,MAAA,CAAAa,aAAA,IAAAb,MAAA,CAAAa,aAAA,IAAAD,IAAA,CAAa;IAAEpB,KAAK,EAAC,gBAAgB;IAAEU,QAAQ,EAAEF,MAAA,CAAAG;sBAC5DH,MAAA,CAAAG,UAAU,oEArBzBW,UAAA,E,SAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}