{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"indexeddb-backup\"\n};\nconst _hoisted_2 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.backupIndexedDB && $setup.backupIndexedDB(...args)),\n    class: \"backup-button\",\n    disabled: $setup.isBackingUp\n  }, _toDisplayString($setup.isBackingUp ? 'Procesando...' : 'Sincronizar imágenes originales'), 9, _hoisted_2), $setup.message ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['backup-message', $setup.messageType])\n  }, _toDisplayString($setup.message), 3)) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$setup","backupIndexedDB","disabled","isBackingUp","_hoisted_2","message","key","_normalizeClass","messageType","_createCommentVNode"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\utils\\IndexedDBBackup.vue"],"sourcesContent":["// src/components/utils/IndexedDBBackup.vue\n\n<template>\n  <div class=\"indexeddb-backup\">\n    <button @click=\"backupIndexedDB\" class=\"backup-button\" :disabled=\"isBackingUp\">\n      {{ isBackingUp ? 'Procesando...' : 'Sincronizar imágenes originales' }}\n    </button>\n    <div v-if=\"message\" :class=\"['backup-message', messageType]\">\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { extractIndexedDBImages } from '@/scripts/extractIndexedDBImages';\nimport { optimizeImageForSync } from '@/services/imageService';\n\nexport default {\n  name: 'IndexedDBBackup',\n  setup() {\n    const isBackingUp = ref(false);\n    const message = ref('');\n    const messageType = ref('info');\n\n    // Función para hacer respaldo de IndexedDB\n    const backupIndexedDB = async () => {\n      try {\n        isBackingUp.value = true;\n        message.value = 'Recuperando y optimizando imágenes originales...';\n        messageType.value = 'info';\n        \n        // Extraer imágenes de IndexedDB y sincronizarlas con MySQL\n        const result = await extractIndexedDBImages();\n        \n        if (result.success) {\n          message.value = result.message;\n          messageType.value = 'success';\n        } else {\n          message.value = result.message;\n          messageType.value = 'error';\n        }\n      } catch (error) {\n        console.error('Error al recuperar imágenes originales:', error);\n        message.value = 'Error al recuperar imágenes originales: ' + error.message;\n        messageType.value = 'error';\n      } finally {\n        isBackingUp.value = false;\n        \n        // Limpiar el mensaje después de 10 segundos\n        setTimeout(() => {\n          message.value = '';\n        }, 10000);\n      }\n    };\n\n    return {\n      isBackingUp,\n      message,\n      messageType,\n      backupIndexedDB\n    };\n  }\n};\n</script>\n\n<style scoped>\n.indexeddb-backup {\n  margin: 20px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.backup-button {\n  padding: 10px 15px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.backup-button:hover {\n  background-color: #45a049;\n}\n\n.backup-button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.backup-message {\n  margin-top: 10px;\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 14px;\n  max-width: 400px;\n  text-align: center;\n}\n\n.backup-message.info {\n  background-color: #e7f3fe;\n  border: 1px solid #b6d4fe;\n  color: #084298;\n}\n\n.backup-message.success {\n  background-color: #d1e7dd;\n  border: 1px solid #badbcc;\n  color: #0f5132;\n}\n\n.backup-message.warning {\n  background-color: #fff3cd;\n  border: 1px solid #ffecb5;\n  color: #664d03;\n}\n\n.backup-message.error {\n  background-color: #f8d7da;\n  border: 1px solid #f5c2c7;\n  color: #842029;\n}\n</style>\n"],"mappings":";;EAGOA,KAAK,EAAC;AAAkB;mBAH/B;;uBAGEC,mBAAA,CAOM,OAPNC,UAOM,GANJC,mBAAA,CAES;IAFAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,eAAA,IAAAD,MAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;IAAEN,KAAK,EAAC,eAAe;IAAES,QAAQ,EAAEF,MAAA,CAAAG;sBAC7DH,MAAA,CAAAG,WAAW,4DALpBC,UAAA,GAOeJ,MAAA,CAAAK,OAAO,I,cAAlBX,mBAAA,CAEM;IATVY,GAAA;IAOyBb,KAAK,EAP9Bc,eAAA,oBAOmDP,MAAA,CAAAQ,WAAW;sBACrDR,MAAA,CAAAK,OAAO,SARhBI,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}