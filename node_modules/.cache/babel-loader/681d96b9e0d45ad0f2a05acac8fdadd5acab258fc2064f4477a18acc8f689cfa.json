{"ast":null,"code":"// Simulador de mensajes de WhatsApp para pruebas\nimport eventBus from './eventBus';\n\n/**\n * Utilidad para simular el env√≠o de reservas desde WhatsApp\n * Esta es una herramienta de desarrollo que permite probar la funcionalidad\n * de recepci√≥n de reservas desde WhatsApp sin necesidad de integrar realmente\n * con la API de WhatsApp.\n */\n\n/**\n * Funci√≥n para simular el env√≠o de una reserva desde WhatsApp\n * @param {Object} customData - Datos personalizados para la reserva\n * @returns {Promise<boolean>} - Resultado de la operaci√≥n\n */\nexport function simulateWhatsAppReservation(customData = {}) {\n  try {\n    // Datos por defecto para la reserva\n    const defaultData = {\n      nombre: 'Cliente de Prueba WhatsApp',\n      telefono: '612345678',\n      email: 'whatsapp@example.com',\n      fecha: new Date().toISOString().split('T')[0],\n      // Hoy\n      hora: '20:00',\n      personas: 2,\n      notas: 'Reserva realizada desde WhatsApp'\n    };\n\n    // Combinar datos por defecto con datos personalizados\n    const whatsappData = {\n      ...defaultData,\n      ...customData\n    };\n    console.log('üì± Simulando mensaje de WhatsApp con datos:', whatsappData);\n\n    // Crear un evento con la estructura esperada por el handler\n    const whatsappEvent = {\n      type: 'whatsapp_reservation',\n      reservation: whatsappData,\n      timestamp: Date.now()\n    };\n\n    // Enviar el evento a trav√©s de eventBus (m√©todo 1)\n    eventBus.emit('whatsapp_message', whatsappEvent);\n\n    // Enviar el evento a trav√©s de window.postMessage (m√©todo 2)\n    window.postMessage({\n      type: 'whatsapp_reservation',\n      reservation: whatsappData,\n      timestamp: Date.now()\n    }, '*');\n\n    // Tambi√©n intentar enviar directamente al backend si est√° disponible\n    try {\n      fetch('/api/whatsapp/reservas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(whatsappData)\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          console.log('‚úÖ Reserva enviada directamente al backend:', data);\n        }\n      }).catch(error => {\n        console.warn('‚ö†Ô∏è No se pudo enviar directamente al backend:', error);\n      });\n    } catch (fetchError) {\n      console.warn('‚ö†Ô∏è Error al intentar enviar al backend:', fetchError);\n    }\n    console.log('‚úÖ Simulaci√≥n de mensaje de WhatsApp completada');\n    return true;\n  } catch (error) {\n    console.error('‚ùå Error al simular mensaje de WhatsApp:', error);\n    return false;\n  }\n}\n\n/**\n * Funci√≥n para probar la simulaci√≥n de reserva desde la consola del navegador\n * Ejemplo de uso: window.testWhatsAppReservation()\n */\nexport function setupWhatsAppSimulatorForConsole() {\n  // Exponer la funci√≥n en el objeto window para poder llamarla desde la consola\n  window.testWhatsAppReservation = simulateWhatsAppReservation;\n  console.log('Simulador de WhatsApp configurado. Usa window.testWhatsAppReservation() para probar.');\n}\nexport default {\n  simulateWhatsAppReservation\n};","map":{"version":3,"names":["eventBus","simulateWhatsAppReservation","customData","defaultData","nombre","telefono","email","fecha","Date","toISOString","split","hora","personas","notas","whatsappData","console","log","whatsappEvent","type","reservation","timestamp","now","emit","window","postMessage","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","catch","error","warn","fetchError","setupWhatsAppSimulatorForConsole","testWhatsAppReservation"],"sources":["F:/Driver google/VUE.JS-2/VUE-JS/websap/src/utils/whatsappSimulator.js"],"sourcesContent":["// Simulador de mensajes de WhatsApp para pruebas\nimport eventBus from './eventBus';\n\n/**\n * Utilidad para simular el env√≠o de reservas desde WhatsApp\n * Esta es una herramienta de desarrollo que permite probar la funcionalidad\n * de recepci√≥n de reservas desde WhatsApp sin necesidad de integrar realmente\n * con la API de WhatsApp.\n */\n\n/**\n * Funci√≥n para simular el env√≠o de una reserva desde WhatsApp\n * @param {Object} customData - Datos personalizados para la reserva\n * @returns {Promise<boolean>} - Resultado de la operaci√≥n\n */\nexport function simulateWhatsAppReservation(customData = {}) {\n  try {\n    // Datos por defecto para la reserva\n    const defaultData = {\n      nombre: 'Cliente de Prueba WhatsApp',\n      telefono: '612345678',\n      email: 'whatsapp@example.com',\n      fecha: new Date().toISOString().split('T')[0], // Hoy\n      hora: '20:00',\n      personas: 2,\n      notas: 'Reserva realizada desde WhatsApp'\n    };\n\n    // Combinar datos por defecto con datos personalizados\n    const whatsappData = { ...defaultData, ...customData };\n    \n    console.log('üì± Simulando mensaje de WhatsApp con datos:', whatsappData);\n    \n    // Crear un evento con la estructura esperada por el handler\n    const whatsappEvent = {\n      type: 'whatsapp_reservation',\n      reservation: whatsappData,\n      timestamp: Date.now()\n    };\n    \n    // Enviar el evento a trav√©s de eventBus (m√©todo 1)\n    eventBus.emit('whatsapp_message', whatsappEvent);\n    \n    // Enviar el evento a trav√©s de window.postMessage (m√©todo 2)\n    window.postMessage({\n      type: 'whatsapp_reservation',\n      reservation: whatsappData,\n      timestamp: Date.now()\n    }, '*');\n    \n    // Tambi√©n intentar enviar directamente al backend si est√° disponible\n    try {\n      fetch('/api/whatsapp/reservas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(whatsappData)\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          console.log('‚úÖ Reserva enviada directamente al backend:', data);\n        }\n      })\n      .catch(error => {\n        console.warn('‚ö†Ô∏è No se pudo enviar directamente al backend:', error);\n      });\n    } catch (fetchError) {\n      console.warn('‚ö†Ô∏è Error al intentar enviar al backend:', fetchError);\n    }\n    \n    console.log('‚úÖ Simulaci√≥n de mensaje de WhatsApp completada');\n    return true;\n  } catch (error) {\n    console.error('‚ùå Error al simular mensaje de WhatsApp:', error);\n    return false;\n  }\n}\n\n/**\n * Funci√≥n para probar la simulaci√≥n de reserva desde la consola del navegador\n * Ejemplo de uso: window.testWhatsAppReservation()\n */\nexport function setupWhatsAppSimulatorForConsole() {\n  // Exponer la funci√≥n en el objeto window para poder llamarla desde la consola\n  window.testWhatsAppReservation = simulateWhatsAppReservation;\n  \n  console.log('Simulador de WhatsApp configurado. Usa window.testWhatsAppReservation() para probar.');\n}\n\nexport default {\n  simulateWhatsAppReservation\n};\n"],"mappings":"AAAA;AACA,OAAOA,QAAQ,MAAM,YAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,2BAA2BA,CAACC,UAAU,GAAG,CAAC,CAAC,EAAE;EAC3D,IAAI;IACF;IACA,MAAMC,WAAW,GAAG;MAClBC,MAAM,EAAE,4BAA4B;MACpCC,QAAQ,EAAE,WAAW;MACrBC,KAAK,EAAE,sBAAsB;MAC7BC,KAAK,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAAE;MAC/CC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE;IACT,CAAC;;IAED;IACA,MAAMC,YAAY,GAAG;MAAE,GAAGX,WAAW;MAAE,GAAGD;IAAW,CAAC;IAEtDa,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEF,YAAY,CAAC;;IAExE;IACA,MAAMG,aAAa,GAAG;MACpBC,IAAI,EAAE,sBAAsB;MAC5BC,WAAW,EAAEL,YAAY;MACzBM,SAAS,EAAEZ,IAAI,CAACa,GAAG,CAAC;IACtB,CAAC;;IAED;IACArB,QAAQ,CAACsB,IAAI,CAAC,kBAAkB,EAAEL,aAAa,CAAC;;IAEhD;IACAM,MAAM,CAACC,WAAW,CAAC;MACjBN,IAAI,EAAE,sBAAsB;MAC5BC,WAAW,EAAEL,YAAY;MACzBM,SAAS,EAAEZ,IAAI,CAACa,GAAG,CAAC;IACtB,CAAC,EAAE,GAAG,CAAC;;IAEP;IACA,IAAI;MACFI,KAAK,CAAC,wBAAwB,EAAE;QAC9BC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,YAAY;MACnC,CAAC,CAAC,CACDiB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZ,IAAIA,IAAI,CAACC,OAAO,EAAE;UAChBpB,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEkB,IAAI,CAAC;QACjE;MACF,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;QACdtB,OAAO,CAACuB,IAAI,CAAC,+CAA+C,EAAED,KAAK,CAAC;MACtE,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,UAAU,EAAE;MACnBxB,OAAO,CAACuB,IAAI,CAAC,yCAAyC,EAAEC,UAAU,CAAC;IACrE;IAEAxB,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IAC7D,OAAO,IAAI;EACb,CAAC,CAAC,OAAOqB,KAAK,EAAE;IACdtB,OAAO,CAACsB,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,OAAO,KAAK;EACd;AACF;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASG,gCAAgCA,CAAA,EAAG;EACjD;EACAjB,MAAM,CAACkB,uBAAuB,GAAGxC,2BAA2B;EAE5Dc,OAAO,CAACC,GAAG,CAAC,sFAAsF,CAAC;AACrG;AAEA,eAAe;EACbf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}