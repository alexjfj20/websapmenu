{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\nimport { useToast } from '@/composables/useToast';\nexport default {\n  name: 'AdminReservas',\n  props: {\n    readOnly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const reservations = ref([]);\n    const isLoading = ref(true);\n    const selectedReservation = ref(null);\n    const {\n      showToast\n    } = useToast();\n\n    // Función para cargar las reservas\n    const loadReservations = async () => {\n      isLoading.value = true;\n      try {\n        // En una aplicación real, esto sería una llamada a API\n        // Por ahora mantenemos el código existente simulado\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // Datos de ejemplo (reemplazar con datos reales)\n        reservations.value = [{\n          id: '1',\n          fullName: 'Juan Pérez',\n          mobilePhone: '612345678',\n          email: 'juan@example.com',\n          date: '2023-07-15',\n          time: '20:30',\n          peopleCount: 4,\n          status: 'confirmed',\n          notes: 'Mesa cerca de la ventana si es posible'\n        }, {\n          id: '2',\n          fullName: 'María López',\n          mobilePhone: '698765432',\n          landlinePhone: '912345678',\n          date: '2023-07-16',\n          time: '21:00',\n          peopleCount: 2,\n          status: 'pending'\n        }, {\n          id: '3',\n          fullName: 'Carlos Ruiz',\n          mobilePhone: '654321987',\n          email: 'carlos@example.com',\n          date: '2023-07-14',\n          time: '14:30',\n          peopleCount: 6,\n          status: 'cancelled',\n          notes: 'Celebración de cumpleaños'\n        }];\n      } catch (error) {\n        console.error('Error al cargar reservas:', error);\n        showToast('Error al cargar las reservas', 'error');\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // Cargar las reservas al montar el componente\n    onMounted(loadReservations);\n\n    // Función para actualizar la lista de reservas (llamada cuando hay una nueva)\n    const refreshReservations = () => {\n      loadReservations();\n    };\n\n    // Exponer método para que pueda ser llamado por componentes padres o eventos\n    defineExpose({\n      refreshReservations\n    });\n\n    // Formatear fecha (YYYY-MM-DD a DD/MM/YYYY)\n    const formatDate = dateString => {\n      if (!dateString) return '';\n      const [year, month, day] = dateString.split('-');\n      return `${day}/${month}/${year}`;\n    };\n\n    // Obtener etiqueta del estado\n    const getStatusLabel = status => {\n      switch (status) {\n        case 'confirmed':\n          return 'Confirmada';\n        case 'pending':\n          return 'Pendiente';\n        case 'cancelled':\n          return 'Cancelada';\n        default:\n          return 'Desconocido';\n      }\n    };\n\n    // Ver detalles de la reserva\n    const viewReservation = reservation => {\n      selectedReservation.value = reservation;\n    };\n\n    // Confirmar reserva\n    const confirmReservation = reservation => {\n      if (reservation.status === 'confirmed') return;\n\n      // Aquí iría la lógica para confirmar la reserva en la API\n      const index = reservations.value.findIndex(r => r.id === reservation.id);\n      if (index !== -1) {\n        reservations.value[index].status = 'confirmed';\n        if (selectedReservation.value && selectedReservation.value.id === reservation.id) {\n          selectedReservation.value.status = 'confirmed';\n        }\n      }\n    };\n\n    // Cancelar reserva\n    const cancelReservation = reservation => {\n      if (reservation.status === 'cancelled') return;\n\n      // Aquí iría la lógica para cancelar la reserva en la API\n      const index = reservations.value.findIndex(r => r.id === reservation.id);\n      if (index !== -1) {\n        reservations.value[index].status = 'cancelled';\n        if (selectedReservation.value && selectedReservation.value.id === reservation.id) {\n          selectedReservation.value.status = 'cancelled';\n        }\n      }\n    };\n\n    // Contactar al cliente\n    const contactCustomer = reservation => {\n      // Abrir WhatsApp con el número del cliente\n      window.open(`https://wa.me/${reservation.mobilePhone.replace(/\\D/g, '')}`, '_blank');\n    };\n    return {\n      reservations,\n      isLoading,\n      selectedReservation,\n      formatDate,\n      getStatusLabel,\n      viewReservation,\n      confirmReservation,\n      cancelReservation,\n      contactCustomer,\n      refreshReservations\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","useToast","name","props","readOnly","type","Boolean","default","setup","reservations","isLoading","selectedReservation","showToast","loadReservations","value","Promise","resolve","setTimeout","id","fullName","mobilePhone","email","date","time","peopleCount","status","notes","landlinePhone","error","console","refreshReservations","defineExpose","formatDate","dateString","year","month","day","split","getStatusLabel","viewReservation","reservation","confirmReservation","index","findIndex","r","cancelReservation","contactCustomer","window","open","replace"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\admin\\AdminReservas.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-reservas\">\r\n    <h2 class=\"admin-section-title\">Gestión de Reservas</h2>\r\n    \r\n    <div class=\"reservas-container\">\r\n      <div v-if=\"isLoading\" class=\"loading-spinner\">\r\n        <div class=\"spinner\"></div>\r\n        <p>Cargando reservas...</p>\r\n      </div>\r\n      \r\n      <div v-else-if=\"reservations.length === 0\" class=\"no-reservations\">\r\n        <p>Aún no hay reservas registradas</p>\r\n      </div>\r\n      \r\n      <div v-else class=\"reservations-list\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"reservation-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Fecha</th>\r\n                <th>Hora</th>\r\n                <th>Cliente</th>\r\n                <th>Teléfono</th>\r\n                <th>Personas</th>\r\n                <th>Estado</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(reservation, index) in reservations\" :key=\"index\" :class=\"{ 'confirmed': reservation.status === 'confirmed', 'pending': reservation.status === 'pending', 'cancelled': reservation.status === 'cancelled' }\">\r\n                <td>{{ formatDate(reservation.date) }}</td>\r\n                <td>{{ reservation.time }}</td>\r\n                <td>{{ reservation.fullName }}</td>\r\n                <td>\r\n                  <a :href=\"`tel:${reservation.mobilePhone}`\">{{ reservation.mobilePhone }}</a>\r\n                </td>\r\n                <td>{{ reservation.peopleCount }}</td>\r\n                <td>\r\n                  <span class=\"status-badge\" :class=\"reservation.status\">\r\n                    {{ getStatusLabel(reservation.status) }}\r\n                  </span>\r\n                </td>\r\n                <td class=\"actions-cell\">\r\n                  <button @click=\"viewReservation(reservation)\" class=\"action-btn view-btn\" title=\"Ver detalles\">\r\n                    👁️\r\n                  </button>\r\n                  <button @click=\"confirmReservation(reservation)\" class=\"action-btn confirm-btn\" title=\"Confirmar reserva\" :disabled=\"reservation.status === 'confirmed'\">\r\n                    ✅\r\n                  </button>\r\n                  <button @click=\"cancelReservation(reservation)\" class=\"action-btn cancel-btn\" title=\"Cancelar reserva\" :disabled=\"reservation.status === 'cancelled'\">\r\n                    ❌\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Modal para ver detalles de la reserva -->\r\n    <div v-if=\"selectedReservation\" class=\"reservation-modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close-modal\" @click=\"selectedReservation = null\">&times;</span>\r\n        <h3>Detalles de la Reserva</h3>\r\n        \r\n        <div class=\"reservation-details\">\r\n          <p><strong>Cliente:</strong> {{ selectedReservation.fullName }}</p>\r\n          <p><strong>Teléfono Móvil:</strong> {{ selectedReservation.mobilePhone }}</p>\r\n          <p v-if=\"selectedReservation.landlinePhone\"><strong>Teléfono Fijo:</strong> {{ selectedReservation.landlinePhone }}</p>\r\n          <p v-if=\"selectedReservation.email\"><strong>Email:</strong> {{ selectedReservation.email }}</p>\r\n          <p v-if=\"selectedReservation.address\"><strong>Dirección:</strong> {{ selectedReservation.address }}</p>\r\n          <p><strong>Fecha:</strong> {{ formatDate(selectedReservation.date) }}</p>\r\n          <p><strong>Hora:</strong> {{ selectedReservation.time }}</p>\r\n          <p><strong>Número de Personas:</strong> {{ selectedReservation.peopleCount }}</p>\r\n          <p v-if=\"selectedReservation.notes\"><strong>Notas Adicionales:</strong> {{ selectedReservation.notes }}</p>\r\n          <p><strong>Estado:</strong> <span class=\"status-badge\" :class=\"selectedReservation.status\">{{ getStatusLabel(selectedReservation.status) }}</span></p>\r\n        </div>\r\n        \r\n        <div class=\"modal-actions\">\r\n          <button @click=\"confirmReservation(selectedReservation)\" class=\"action-btn confirm-btn\" :disabled=\"selectedReservation.status === 'confirmed'\">\r\n            Confirmar Reserva\r\n          </button>\r\n          <button @click=\"cancelReservation(selectedReservation)\" class=\"action-btn cancel-btn\" :disabled=\"selectedReservation.status === 'cancelled'\">\r\n            Cancelar Reserva\r\n          </button>\r\n          <button @click=\"contactCustomer(selectedReservation)\" class=\"action-btn contact-btn\">\r\n            Contactar Cliente\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport { useToast } from '@/composables/useToast';\r\n\r\nexport default {\r\n  name: 'AdminReservas',\r\n  props: {\r\n    readOnly: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  setup(props) {\r\n    const reservations = ref([]);\r\n    const isLoading = ref(true);\r\n    const selectedReservation = ref(null);\r\n    const { showToast } = useToast();\r\n    \r\n    // Función para cargar las reservas\r\n    const loadReservations = async () => {\r\n      isLoading.value = true;\r\n      try {\r\n        // En una aplicación real, esto sería una llamada a API\r\n        // Por ahora mantenemos el código existente simulado\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        \r\n        // Datos de ejemplo (reemplazar con datos reales)\r\n        reservations.value = [\r\n          {\r\n            id: '1',\r\n            fullName: 'Juan Pérez',\r\n            mobilePhone: '612345678',\r\n            email: 'juan@example.com',\r\n            date: '2023-07-15',\r\n            time: '20:30',\r\n            peopleCount: 4,\r\n            status: 'confirmed',\r\n            notes: 'Mesa cerca de la ventana si es posible'\r\n          },\r\n          {\r\n            id: '2',\r\n            fullName: 'María López',\r\n            mobilePhone: '698765432',\r\n            landlinePhone: '912345678',\r\n            date: '2023-07-16',\r\n            time: '21:00',\r\n            peopleCount: 2,\r\n            status: 'pending'\r\n          },\r\n          {\r\n            id: '3',\r\n            fullName: 'Carlos Ruiz',\r\n            mobilePhone: '654321987',\r\n            email: 'carlos@example.com',\r\n            date: '2023-07-14',\r\n            time: '14:30',\r\n            peopleCount: 6,\r\n            status: 'cancelled',\r\n            notes: 'Celebración de cumpleaños'\r\n          }\r\n        ];\r\n      } catch (error) {\r\n        console.error('Error al cargar reservas:', error);\r\n        showToast('Error al cargar las reservas', 'error');\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Cargar las reservas al montar el componente\r\n    onMounted(loadReservations);\r\n    \r\n    // Función para actualizar la lista de reservas (llamada cuando hay una nueva)\r\n    const refreshReservations = () => {\r\n      loadReservations();\r\n    };\r\n    \r\n    // Exponer método para que pueda ser llamado por componentes padres o eventos\r\n    defineExpose({ refreshReservations });\r\n    \r\n    // Formatear fecha (YYYY-MM-DD a DD/MM/YYYY)\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return '';\r\n      const [year, month, day] = dateString.split('-');\r\n      return `${day}/${month}/${year}`;\r\n    };\r\n    \r\n    // Obtener etiqueta del estado\r\n    const getStatusLabel = (status) => {\r\n      switch (status) {\r\n        case 'confirmed': return 'Confirmada';\r\n        case 'pending': return 'Pendiente';\r\n        case 'cancelled': return 'Cancelada';\r\n        default: return 'Desconocido';\r\n      }\r\n    };\r\n    \r\n    // Ver detalles de la reserva\r\n    const viewReservation = (reservation) => {\r\n      selectedReservation.value = reservation;\r\n    };\r\n    \r\n    // Confirmar reserva\r\n    const confirmReservation = (reservation) => {\r\n      if (reservation.status === 'confirmed') return;\r\n      \r\n      // Aquí iría la lógica para confirmar la reserva en la API\r\n      const index = reservations.value.findIndex(r => r.id === reservation.id);\r\n      if (index !== -1) {\r\n        reservations.value[index].status = 'confirmed';\r\n        \r\n        if (selectedReservation.value && selectedReservation.value.id === reservation.id) {\r\n          selectedReservation.value.status = 'confirmed';\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Cancelar reserva\r\n    const cancelReservation = (reservation) => {\r\n      if (reservation.status === 'cancelled') return;\r\n      \r\n      // Aquí iría la lógica para cancelar la reserva en la API\r\n      const index = reservations.value.findIndex(r => r.id === reservation.id);\r\n      if (index !== -1) {\r\n        reservations.value[index].status = 'cancelled';\r\n        \r\n        if (selectedReservation.value && selectedReservation.value.id === reservation.id) {\r\n          selectedReservation.value.status = 'cancelled';\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Contactar al cliente\r\n    const contactCustomer = (reservation) => {\r\n      // Abrir WhatsApp con el número del cliente\r\n      window.open(`https://wa.me/${reservation.mobilePhone.replace(/\\D/g, '')}`, '_blank');\r\n    };\r\n    \r\n    return {\r\n      reservations,\r\n      isLoading,\r\n      selectedReservation,\r\n      formatDate,\r\n      getStatusLabel,\r\n      viewReservation,\r\n      confirmReservation,\r\n      cancelReservation,\r\n      contactCustomer,\r\n      refreshReservations\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-reservas {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.admin-section-title {\r\n  color: #333;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #4CAF50;\r\n}\r\n\r\n.loading-spinner {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 40px;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #4CAF50;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.no-reservations {\r\n  text-align: center;\r\n  padding: 40px;\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.table-responsive {\r\n  overflow-x: auto;\r\n}\r\n\r\n.reservation-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.reservation-table th, \r\n.reservation-table td {\r\n  padding: 12px 15px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.reservation-table th {\r\n  background-color: #f5f5f5;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.reservation-table tr:hover {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.reservation-table tr.confirmed {\r\n  background-color: rgba(76, 175, 80, 0.1);\r\n}\r\n\r\n.reservation-table tr.pending {\r\n  background-color: rgba(255, 193, 7, 0.1);\r\n}\r\n\r\n.reservation-table tr.cancelled {\r\n  background-color: rgba(244, 67, 54, 0.1);\r\n}\r\n\r\n.status-badge {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.status-badge.confirmed {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.status-badge.pending {\r\n  background-color: #FFC107;\r\n  color: #333;\r\n}\r\n\r\n.status-badge.cancelled {\r\n  background-color: #F44336;\r\n  color: white;\r\n}\r\n\r\n.actions-cell {\r\n  white-space: nowrap;\r\n}\r\n\r\n.action-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n  margin: 0 3px;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.action-btn:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.action-btn:disabled {\r\n  opacity: 0.3;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.view-btn:hover {\r\n  background-color: #e3f2fd;\r\n}\r\n\r\n.confirm-btn:hover {\r\n  background-color: #e8f5e9;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background-color: #ffebee;\r\n}\r\n\r\n/* Estilos para el modal */\r\n.reservation-modal {\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  max-height: 80vh;\r\n  overflow-y: auto;\r\n  position: relative;\r\n  box-shadow: 0 4px 20px rgba(0,0,0,0.2);\r\n}\r\n\r\n.close-modal {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #666;\r\n}\r\n\r\n.close-modal:hover {\r\n  color: #000;\r\n}\r\n\r\n.modal-content h3 {\r\n  margin-top: 0;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid #eee;\r\n  color: #333;\r\n}\r\n\r\n.reservation-details p {\r\n  margin: 8px 0;\r\n  line-height: 1.5;\r\n}\r\n\r\n.modal-actions {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.modal-actions .action-btn {\r\n  flex: 1;\r\n  padding: 10px;\r\n  font-size: 0.9rem;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  min-width: 120px;\r\n}\r\n\r\n.modal-actions .confirm-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.modal-actions .cancel-btn {\r\n  background-color: #F44336;\r\n  color: white;\r\n}\r\n\r\n.modal-actions .contact-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.modal-actions .action-btn:hover {\r\n  opacity: 0.9;\r\n}\r\n\r\n.modal-actions .action-btn:disabled {\r\n  background-color: #ccc;\r\n  color: #666;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .reservation-table th, \r\n  .reservation-table td {\r\n    padding: 8px 10px;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .actions-cell {\r\n    display: flex;\r\n  }\r\n  \r\n  .modal-actions {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .modal-content {\r\n    width: 95%;\r\n    padding: 15px;\r\n  }\r\n}\r\n</style> "],"mappings":"AAgGA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAI,QAAS,KAAK;AAC3C,SAASC,QAAO,QAAS,wBAAwB;AAEjD,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAKA,CAACL,KAAK,EAAE;IACX,MAAMM,YAAW,GAAIX,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMY,SAAQ,GAAIZ,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMa,mBAAkB,GAAIb,GAAG,CAAC,IAAI,CAAC;IACrC,MAAM;MAAEc;IAAU,IAAIX,QAAQ,CAAC,CAAC;;IAEhC;IACA,MAAMY,gBAAe,GAAI,MAAAA,CAAA,KAAY;MACnCH,SAAS,CAACI,KAAI,GAAI,IAAI;MACtB,IAAI;QACF;QACA;QACA,MAAM,IAAIC,OAAO,CAACC,OAAM,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;QAEvD;QACAP,YAAY,CAACK,KAAI,GAAI,CACnB;UACEI,EAAE,EAAE,GAAG;UACPC,QAAQ,EAAE,YAAY;UACtBC,WAAW,EAAE,WAAW;UACxBC,KAAK,EAAE,kBAAkB;UACzBC,IAAI,EAAE,YAAY;UAClBC,IAAI,EAAE,OAAO;UACbC,WAAW,EAAE,CAAC;UACdC,MAAM,EAAE,WAAW;UACnBC,KAAK,EAAE;QACT,CAAC,EACD;UACER,EAAE,EAAE,GAAG;UACPC,QAAQ,EAAE,aAAa;UACvBC,WAAW,EAAE,WAAW;UACxBO,aAAa,EAAE,WAAW;UAC1BL,IAAI,EAAE,YAAY;UAClBC,IAAI,EAAE,OAAO;UACbC,WAAW,EAAE,CAAC;UACdC,MAAM,EAAE;QACV,CAAC,EACD;UACEP,EAAE,EAAE,GAAG;UACPC,QAAQ,EAAE,aAAa;UACvBC,WAAW,EAAE,WAAW;UACxBC,KAAK,EAAE,oBAAoB;UAC3BC,IAAI,EAAE,YAAY;UAClBC,IAAI,EAAE,OAAO;UACbC,WAAW,EAAE,CAAC;UACdC,MAAM,EAAE,WAAW;UACnBC,KAAK,EAAE;QACT,EACD;MACH,EAAE,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDhB,SAAS,CAAC,8BAA8B,EAAE,OAAO,CAAC;MACpD,UAAU;QACRF,SAAS,CAACI,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;;IAED;IACAf,SAAS,CAACc,gBAAgB,CAAC;;IAE3B;IACA,MAAMiB,mBAAkB,GAAIA,CAAA,KAAM;MAChCjB,gBAAgB,CAAC,CAAC;IACpB,CAAC;;IAED;IACAkB,YAAY,CAAC;MAAED;IAAoB,CAAC,CAAC;;IAErC;IACA,MAAME,UAAS,GAAKC,UAAU,IAAK;MACjC,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;MAC1B,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,GAAG,IAAIH,UAAU,CAACI,KAAK,CAAC,GAAG,CAAC;MAChD,OAAO,GAAGD,GAAG,IAAID,KAAK,IAAID,IAAI,EAAE;IAClC,CAAC;;IAED;IACA,MAAMI,cAAa,GAAKb,MAAM,IAAK;MACjC,QAAQA,MAAM;QACZ,KAAK,WAAW;UAAE,OAAO,YAAY;QACrC,KAAK,SAAS;UAAE,OAAO,WAAW;QAClC,KAAK,WAAW;UAAE,OAAO,WAAW;QACpC;UAAS,OAAO,aAAa;MAC/B;IACF,CAAC;;IAED;IACA,MAAMc,eAAc,GAAKC,WAAW,IAAK;MACvC7B,mBAAmB,CAACG,KAAI,GAAI0B,WAAW;IACzC,CAAC;;IAED;IACA,MAAMC,kBAAiB,GAAKD,WAAW,IAAK;MAC1C,IAAIA,WAAW,CAACf,MAAK,KAAM,WAAW,EAAE;;MAExC;MACA,MAAMiB,KAAI,GAAIjC,YAAY,CAACK,KAAK,CAAC6B,SAAS,CAACC,CAAA,IAAKA,CAAC,CAAC1B,EAAC,KAAMsB,WAAW,CAACtB,EAAE,CAAC;MACxE,IAAIwB,KAAI,KAAM,CAAC,CAAC,EAAE;QAChBjC,YAAY,CAACK,KAAK,CAAC4B,KAAK,CAAC,CAACjB,MAAK,GAAI,WAAW;QAE9C,IAAId,mBAAmB,CAACG,KAAI,IAAKH,mBAAmB,CAACG,KAAK,CAACI,EAAC,KAAMsB,WAAW,CAACtB,EAAE,EAAE;UAChFP,mBAAmB,CAACG,KAAK,CAACW,MAAK,GAAI,WAAW;QAChD;MACF;IACF,CAAC;;IAED;IACA,MAAMoB,iBAAgB,GAAKL,WAAW,IAAK;MACzC,IAAIA,WAAW,CAACf,MAAK,KAAM,WAAW,EAAE;;MAExC;MACA,MAAMiB,KAAI,GAAIjC,YAAY,CAACK,KAAK,CAAC6B,SAAS,CAACC,CAAA,IAAKA,CAAC,CAAC1B,EAAC,KAAMsB,WAAW,CAACtB,EAAE,CAAC;MACxE,IAAIwB,KAAI,KAAM,CAAC,CAAC,EAAE;QAChBjC,YAAY,CAACK,KAAK,CAAC4B,KAAK,CAAC,CAACjB,MAAK,GAAI,WAAW;QAE9C,IAAId,mBAAmB,CAACG,KAAI,IAAKH,mBAAmB,CAACG,KAAK,CAACI,EAAC,KAAMsB,WAAW,CAACtB,EAAE,EAAE;UAChFP,mBAAmB,CAACG,KAAK,CAACW,MAAK,GAAI,WAAW;QAChD;MACF;IACF,CAAC;;IAED;IACA,MAAMqB,eAAc,GAAKN,WAAW,IAAK;MACvC;MACAO,MAAM,CAACC,IAAI,CAAC,iBAAiBR,WAAW,CAACpB,WAAW,CAAC6B,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAC;IACtF,CAAC;IAED,OAAO;MACLxC,YAAY;MACZC,SAAS;MACTC,mBAAmB;MACnBqB,UAAU;MACVM,cAAc;MACdC,eAAe;MACfE,kBAAkB;MAClBI,iBAAiB;MACjBC,eAAe;MACfhB;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}