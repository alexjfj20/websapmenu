{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { saveMenu } from '../services/menuService';\nimport { formatShareLinkMessage } from '../utils/messageFormatter';\nimport { copyToClipboard } from '../utils/clipboardUtils';\nimport SalesChartComponent from './SalesChartComponent.vue';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nimport { getMenuItems, saveMenuItems, getBusinessInfo, saveBusinessInfo as saveBusinessInfoToDB, getSoldItems, saveSoldItems, deleteMenuItemFromDB, migrateFromLocalStorage, compressImage, updateItemAvailability } from '../services/storageService';\nimport { confirm, alert } from '../services/dialogService';\nimport { getCurrentUser, hasRole } from '../services/authService';\nimport { guardarPlato } from '@/services/indexedDBService';\nexport default {\n  name: 'MenuComponent',\n  components: {\n    SalesChartComponent\n  },\n  props: {\n    viewOnly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    // Estado para información del negocio\n    const businessInfo = ref({\n      name: '',\n      description: '',\n      contact: '',\n      address: '',\n      logo: ''\n    });\n    const showBusinessForm = ref(false);\n\n    // Estado para información de pago\n    const paymentInfo = ref({\n      qrTitle: '',\n      qrImage: '',\n      nequiNumber: '',\n      nequiImage: ''\n    });\n    const showPaymentForm = ref(false);\n\n    // Estado para platos del menú\n    const newItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const menuItems = ref([]);\n    const showMenuForm = ref(false);\n    const isEditing = ref(false);\n    const editingIndex = ref(-1);\n\n    // Estado para ventas e inventario\n    const soldItems = ref([]);\n    const searchTerm = ref('');\n    const sortBy = ref('');\n    const categoryFilter = ref('');\n    const selectedChartType = ref('bar');\n\n    // Estado para compartir\n    const shareLink = ref('');\n    const showCopiedMessage = ref(false);\n\n    // Estado para mostrar progreso de migración\n    const migrationStatus = ref({\n      inProgress: false,\n      completed: false,\n      message: ''\n    });\n\n    // Estado para errores del gráfico\n    const chartError = ref(null);\n\n    // Primero, añadir el componente Toast\n    const toast = ref({\n      show: false,\n      message: '',\n      type: 'success' // success, error, warning\n    });\n\n    // Manejar errores del gráfico\n    const handleChartError = error => {\n      console.error(\"Error en el gráfico:\", error);\n      chartError.value = error;\n    };\n\n    // Estado para mensajes de notificación\n    const notification = ref({\n      show: false,\n      message: '',\n      type: 'success',\n      // 'success', 'error'\n      timeout: null\n    });\n\n    // Estado para platos especiales\n    const newSpecialItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const specialMenuItems = ref([]);\n    const showSpecialMenuForm = ref(false);\n    const isEditingSpecial = ref(false);\n    const editingSpecialIndex = ref(-1);\n\n    // Cargar datos guardados\n    onMounted(async () => {\n      try {\n        migrationStatus.value.inProgress = true;\n        migrationStatus.value.message = 'Cargando datos...';\n        const hasLocalData = localStorage.getItem('businessInfo') || localStorage.getItem('menuItems') || localStorage.getItem('soldItems');\n        if (hasLocalData) {\n          migrationStatus.value.message = 'Migrando datos desde localStorage a IndexedDB...';\n          const migrationResult = await migrateFromLocalStorage();\n          if (migrationResult) {\n            migrationStatus.value.completed = true;\n            migrationStatus.value.message = 'Migración completada exitosamente';\n            localStorage.removeItem('businessInfo');\n            localStorage.removeItem('menuItems');\n            localStorage.removeItem('soldItems');\n          } else {\n            migrationStatus.value.message = 'Error en la migración de datos';\n          }\n        }\n        const dbBusinessInfo = await getBusinessInfo();\n        if (dbBusinessInfo && dbBusinessInfo.name) {\n          businessInfo.value = dbBusinessInfo;\n        }\n        const dbMenuItems = await getMenuItems();\n        if (dbMenuItems && dbMenuItems.length > 0) {\n          // Separar los platos regulares de los especiales\n          const regularItems = dbMenuItems.filter(item => !item.isSpecial);\n          const specialItems = dbMenuItems.filter(item => item.isSpecial === true);\n          menuItems.value = regularItems;\n          if (specialItems.length > 0) {\n            specialMenuItems.value = specialItems;\n          }\n        }\n        const dbSoldItems = await getSoldItems();\n        if (dbSoldItems && dbSoldItems.length > 0) {\n          soldItems.value = dbSoldItems;\n        }\n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 1500);\n      } catch (error) {\n        console.error('Error al cargar datos:', error);\n        migrationStatus.value.message = 'Error al cargar datos: ' + error.message;\n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 3000);\n      }\n    });\n\n    // Métodos para información del negocio\n    const toggleBusinessForm = () => {\n      showBusinessForm.value = !showBusinessForm.value;\n    };\n    const onLogoChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedLogo = await compressImage(e.target.result);\n          businessInfo.value.logo = compressedLogo;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveBusinessInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        await saveBusinessInfoToDB(businessInfo.value);\n        notification.value = {\n          show: true,\n          message: 'Información del negocio guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información del negocio:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    const clearBusinessForm = async () => {\n      const confirmed = await confirm('¿Estás seguro de querer limpiar el formulario?');\n      if (confirmed) {\n        businessInfo.value = {\n          name: '',\n          description: '',\n          contact: '',\n          address: '',\n          logo: ''\n        };\n      }\n    };\n\n    // Métodos para información de pago\n    const togglePaymentForm = () => {\n      showPaymentForm.value = !showPaymentForm.value;\n    };\n    const onQRImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          paymentInfo.value.qrImage = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const onNequiImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          paymentInfo.value.nequiImage = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const savePaymentInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        businessInfo.value.paymentInfo = {\n          ...paymentInfo.value\n        };\n        await saveBusinessInfoToDB(businessInfo.value);\n        notification.value = {\n          show: true,\n          message: 'Información de pago guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información de pago:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información de pago. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    const clearPaymentForm = async () => {\n      const confirmed = await confirm('¿Estás seguro de querer limpiar la información de pago?');\n      if (confirmed) {\n        paymentInfo.value = {\n          qrTitle: '',\n          qrImage: '',\n          nequiNumber: '',\n          nequiImage: ''\n        };\n      }\n    };\n\n    // Métodos para platos del menú\n    const toggleMenuForm = () => {\n      showMenuForm.value = !showMenuForm.value;\n      if (!showMenuForm.value) {\n        clearMenuForm();\n      }\n    };\n    const onImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          newItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveMenuItem = async () => {\n      try {\n        // Validaciones iniciales\n        if (!newItem.value.name || !newItem.value.price) {\n          showNotification('El nombre y el precio son obligatorios', 'error');\n          return;\n        }\n        if (newItem.value.availableQuantity < 0) {\n          showNotification('La cantidad disponible no puede ser negativa', 'error');\n          return;\n        }\n\n        // Generar ID si no existe\n        if (!newItem.value.id) {\n          newItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n        try {\n          console.log('📝 Datos del plato antes de guardar:', newItem.value);\n\n          // Guardar en la base de datos\n          const savedPlato = await guardarPlato(newItem.value);\n          console.log('✅ Plato guardado correctamente:', savedPlato);\n          if (isEditing.value) {\n            // Actualizar el plato existente en la lista\n            const index = menuItems.value.findIndex(item => item.id === savedPlato.id);\n            if (index !== -1) {\n              menuItems.value[index] = {\n                ...savedPlato\n              };\n              showNotification('Plato actualizado exitosamente', 'success');\n            }\n          } else {\n            // Agregar el nuevo plato a la lista\n            menuItems.value.push({\n              ...savedPlato\n            });\n            showNotification('Plato creado exitosamente', 'success');\n          }\n\n          // Guardar la lista completa\n          await saveMenuItems(menuItems.value);\n\n          // Limpiar el formulario\n          clearMenuForm();\n        } catch (error) {\n          console.error('❌ Error al guardar en la base de datos:', error);\n          showNotification(`Error al guardar el plato: ${error.message || 'Intente nuevamente'}`, 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error general en saveMenuItem:', error);\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\n      }\n    };\n    const clearMenuForm = () => {\n      newItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditing.value = false;\n      editingIndex.value = -1;\n    };\n    const editMenuItem = index => {\n      newItem.value = {\n        ...menuItems.value[index]\n      };\n      isEditing.value = true;\n      editingIndex.value = index;\n      showMenuForm.value = true;\n    };\n    const deleteMenuItem = async index => {\n      try {\n        const item = menuItems.value[index];\n        if (!item) {\n          console.error('Error: Elemento del menú no encontrado en el índice', index);\n          await alert('Error: No se encontró el elemento a eliminar');\n          return;\n        }\n\n        // Confirmar eliminación\n        if (!confirm(`¿Estás seguro de que deseas eliminar \"${item.name || 'este plato'}\" del menú?`)) {\n          return;\n        }\n\n        // Eliminar del backend MySQL directamente\n        try {\n          console.log(`Eliminando plato con ID: ${item.id} del servidor MySQL`);\n          const response = await fetch(`http://localhost:3000/direct-delete?id=${encodeURIComponent(item.id)}`, {\n            method: 'GET',\n            headers: {\n              'Cache-Control': 'no-cache'\n            }\n          });\n          const result = await response.json();\n          console.log('Resultado de la eliminación directa:', result);\n          if (!result.success) {\n            console.error('Error al eliminar plato del servidor:', result.message);\n            alert(`Error al eliminar plato: ${result.message}`);\n          }\n        } catch (serverError) {\n          console.error('Error al comunicarse con el servidor:', serverError);\n        }\n\n        // Eliminar de IndexedDB\n        if (item.id) {\n          try {\n            console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n            const deleteResult = await deleteMenuItemFromDB(item.id);\n            console.log(`Resultado de la eliminación de IndexedDB: ${deleteResult}`);\n          } catch (deleteError) {\n            console.error('Error al eliminar item del almacén local:', deleteError);\n          }\n        }\n\n        // Eliminar de la lista local\n        menuItems.value.splice(index, 1);\n\n        // Mostrar notificación de éxito\n        showNotification('Plato eliminado correctamente', 'success');\n      } catch (error) {\n        console.error('Error al eliminar elemento del menú:', error);\n        showNotification('Error al eliminar el plato', 'error');\n      }\n    };\n    const sellMenuItem = async index => {\n      try {\n        const item = menuItems.value[index];\n\n        // Validar disponibilidad\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\n          showNotification('Este plato está agotado', 'error');\n          return;\n        }\n        const confirmed = await confirm(`¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`);\n        if (confirmed) {\n          try {\n            const newQuantity = item.availableQuantity - 1;\n\n            // Actualizar en la base de datos\n            await updateItemAvailability(item.id, newQuantity);\n\n            // Actualizar en el estado local\n            item.availableQuantity = newQuantity;\n\n            // Registrar la venta\n            const currentDate = new Date().toISOString();\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\n            if (soldItem) {\n              soldItem.quantity += 1;\n              soldItem.date = currentDate;\n            } else {\n              soldItems.value.push({\n                name: item.name,\n                quantity: 1,\n                price: item.price,\n                includesDrink: item.includesDrink,\n                date: currentDate\n              });\n            }\n\n            // Guardar items vendidos\n            await saveSoldItems(soldItems.value);\n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\n            if (newQuantity <= 5) {\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\n            }\n          } catch (error) {\n            console.error('Error al procesar la venta:', error);\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar la venta:', error);\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    // Métodos para platos especiales\n    const toggleSpecialMenuForm = () => {\n      showSpecialMenuForm.value = !showSpecialMenuForm.value;\n      if (!showSpecialMenuForm.value) {\n        clearSpecialMenuForm();\n      }\n    };\n    const onSpecialImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          newSpecialItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveSpecialMenuItem = async () => {\n      try {\n        if (!newSpecialItem.value.name || !newSpecialItem.value.price) {\n          showNotification('El nombre y el precio son obligatorios', 'error');\n          return;\n        }\n        if (!newSpecialItem.value.id) {\n          newSpecialItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n\n        // Marcar como plato especial\n        newSpecialItem.value.isSpecial = true;\n        try {\n          console.log('📝 Datos del plato especial antes de guardar:', newSpecialItem.value);\n\n          // Guardar en la base de datos\n          const savedPlato = await guardarPlato(newSpecialItem.value);\n          console.log('✅ Plato especial guardado correctamente:', savedPlato);\n          if (isEditingSpecial.value) {\n            // Actualizar el plato existente en la lista\n            const index = specialMenuItems.value.findIndex(item => item.id === savedPlato.id);\n            if (index !== -1) {\n              specialMenuItems.value[index] = {\n                ...savedPlato\n              };\n              showNotification('Plato especial actualizado exitosamente', 'success');\n            }\n            isEditingSpecial.value = false;\n            editingSpecialIndex.value = -1;\n          } else {\n            const existingItem = specialMenuItems.value.find(item => item.name.toLowerCase() === savedPlato.name.toLowerCase());\n            if (existingItem) {\n              const confirmed = await confirm(`Ya existe un plato especial llamado \"${savedPlato.name}\". ¿Desea actualizarlo?`, {\n                title: 'Actualizar plato especial existente'\n              });\n              if (confirmed) {\n                const index = specialMenuItems.value.findIndex(item => item.id === existingItem.id);\n                if (index !== -1) {\n                  // Conservar el ID original pero actualizar los demás datos\n                  const updatedPlato = {\n                    ...savedPlato,\n                    id: existingItem.id\n                  };\n\n                  // Actualizar en la base de datos\n                  await guardarPlato(updatedPlato);\n\n                  // Actualizar en la lista local\n                  specialMenuItems.value[index] = {\n                    ...updatedPlato\n                  };\n                  showNotification('Plato especial actualizado exitosamente', 'success');\n                }\n              } else {\n                return;\n              }\n            } else {\n              // Agregar el nuevo plato a la lista\n              specialMenuItems.value.push({\n                ...savedPlato\n              });\n              showNotification('Plato especial creado exitosamente', 'success');\n            }\n          }\n\n          // Guardar todos los elementos\n          await saveMenuItems([...menuItems.value, ...specialMenuItems.value]);\n\n          // Limpiar el formulario\n          clearSpecialMenuForm();\n        } catch (error) {\n          console.error('❌ Error al guardar plato especial:', error);\n          showNotification(`Error al guardar el plato especial: ${error.message || 'Intente nuevamente'}`, 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error general en saveSpecialMenuItem:', error);\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\n      }\n    };\n    const clearSpecialMenuForm = () => {\n      newSpecialItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditingSpecial.value = false;\n      editingSpecialIndex.value = -1;\n    };\n    const editSpecialMenuItem = index => {\n      newSpecialItem.value = {\n        ...specialMenuItems.value[index]\n      };\n      isEditingSpecial.value = true;\n      editingSpecialIndex.value = index;\n      showSpecialMenuForm.value = true;\n    };\n    const deleteSpecialMenuItem = async index => {\n      try {\n        const item = specialMenuItems.value[index];\n        if (!item) {\n          console.error('Error: Elemento del menú especial no encontrado en el índice', index);\n          await alert('Error: No se encontró el elemento a eliminar');\n          return;\n        }\n\n        // Confirmar eliminación\n        if (!confirm(`¿Estás seguro de que deseas eliminar \"${item.name || 'este plato'}\" del menú especial?`)) {\n          return;\n        }\n\n        // Eliminar del backend MySQL directamente\n        try {\n          console.log(`Eliminando plato con ID: ${item.id} del servidor MySQL`);\n          const response = await fetch(`http://localhost:3000/direct-delete?id=${encodeURIComponent(item.id)}`, {\n            method: 'GET',\n            headers: {\n              'Cache-Control': 'no-cache'\n            }\n          });\n          const result = await response.json();\n          console.log('Resultado de la eliminación directa:', result);\n          if (!result.success) {\n            console.error('Error al eliminar plato del servidor:', result.message);\n            alert(`Error al eliminar plato: ${result.message}`);\n          }\n        } catch (serverError) {\n          console.error('Error al comunicarse con el servidor:', serverError);\n        }\n\n        // Eliminar de IndexedDB\n        if (item.id) {\n          try {\n            console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n            const deleteResult = await deleteMenuItemFromDB(item.id);\n            console.log(`Resultado de la eliminación de IndexedDB: ${deleteResult}`);\n          } catch (deleteError) {\n            console.error('Error al eliminar item del almacén local:', deleteError);\n          }\n        }\n\n        // Eliminar de la lista local\n        specialMenuItems.value.splice(index, 1);\n\n        // Mostrar notificación de éxito\n        showNotification('Plato eliminado correctamente', 'success');\n      } catch (error) {\n        console.error('Error al eliminar elemento del menú especial:', error);\n        showNotification('Error al eliminar el plato', 'error');\n      }\n    };\n    const sellSpecialMenuItem = async index => {\n      try {\n        const item = specialMenuItems.value[index];\n\n        // Validar disponibilidad\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\n          showNotification('Este plato especial está agotado', 'error');\n          return;\n        }\n        const confirmed = await confirm(`¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`);\n        if (confirmed) {\n          try {\n            const newQuantity = item.availableQuantity - 1;\n\n            // Actualizar en la base de datos\n            await updateItemAvailability(item.id, newQuantity);\n\n            // Actualizar en el estado local\n            item.availableQuantity = newQuantity;\n\n            // Registrar la venta\n            const currentDate = new Date().toISOString();\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\n            if (soldItem) {\n              soldItem.quantity += 1;\n              soldItem.date = currentDate;\n            } else {\n              soldItems.value.push({\n                name: item.name,\n                quantity: 1,\n                price: item.price,\n                includesDrink: item.includesDrink,\n                date: currentDate\n              });\n            }\n\n            // Guardar items vendidos\n            await saveSoldItems(soldItems.value);\n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\n            if (newQuantity <= 5) {\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\n            }\n          } catch (error) {\n            console.error('Error al procesar la venta:', error);\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar la venta:', error);\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    // Métodos para compartir\n    const shareByWhatsApp = async () => {\n      try {\n        await alert('Procesando imágenes para compartir...');\n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\n        if (totalItems > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\n          return;\n        }\n\n        // Combinar platos regulares y especiales\n        const itemsToShare = [...menuItems.value.map(item => ({\n          ...item,\n          isSpecial: false\n        })), ...specialMenuItems.value.map(item => ({\n          ...item,\n          isSpecial: true\n        }))];\n        console.log(`Preparando para compartir ${itemsToShare.length} elementos...`);\n        console.log('Items regulares:', menuItems.value.length);\n        console.log('Items especiales:', specialMenuItems.value.length);\n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        const message = formatShareLinkMessage(url, businessInfo.value.name);\n        const whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\n        window.open(whatsappUrl, '_blank');\n      } catch (error) {\n        console.error('Error al compartir por WhatsApp:', error);\n        await alert(`Error al compartir el menú: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\n      }\n    };\n    const copyLink = async () => {\n      try {\n        const loadingMessage = 'Procesando imágenes para compartir...';\n        showCopiedMessage.value = true;\n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\n        if (totalItems > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\n          showCopiedMessage.value = false;\n          return;\n        }\n\n        // Combinar platos regulares y especiales\n        const itemsToShare = [...menuItems.value.map(item => ({\n          ...item,\n          isSpecial: false\n        })), ...specialMenuItems.value.map(item => ({\n          ...item,\n          isSpecial: true\n        }))];\n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        try {\n          await copyToClipboard(url);\n          showCopiedMessage.value = true;\n          setTimeout(() => {\n            showCopiedMessage.value = false;\n          }, 3000);\n        } catch (clipboardError) {\n          console.error('Error al copiar al portapapeles:', clipboardError);\n          await alert('No se pudo copiar automáticamente. Por favor, copia manualmente este enlace: ' + url);\n        }\n      } catch (error) {\n        console.error('Error al generar enlace para compartir:', error);\n        showCopiedMessage.value = false;\n        await alert(`Error al generar el enlace: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\n      }\n    };\n\n    // Computados\n    const totalSales = computed(() => {\n      return soldItems.value.reduce((total, item) => {\n        return total + item.quantity * item.price;\n      }, 0);\n    });\n    const formatPrice = price => {\n      if (isNaN(Number(price))) return '0,00';\n      const fixed = Number(price).toFixed(2);\n      const [intPart, decPart] = fixed.split('.');\n      const formattedIntPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n      return `${formattedIntPart},${decPart}`;\n    };\n    const formatDate = dateStr => {\n      if (!dateStr) return 'N/A';\n      const date = new Date(dateStr);\n      if (isNaN(date.getTime())) return 'Fecha inválida';\n      return new Intl.DateTimeFormat('es-ES', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n    const filterInventoryItems = computed(() => {\n      return items => {\n        if (!items || !Array.isArray(items)) {\n          console.warn('filterInventoryItems recibió un valor no array:', items);\n          return [];\n        }\n        if (searchTerm.value) {\n          const term = searchTerm.value.toLowerCase().trim();\n          items = items.filter(item => {\n            if (item && typeof item === 'object') {\n              const name = String(item.name || '').toLowerCase();\n              return name.includes(term);\n            }\n            return false;\n          });\n        }\n        if (categoryFilter.value) {\n          if (categoryFilter.value === 'drinks') {\n            items = items.filter(item => item && item.includesDrink === true);\n          } else if (categoryFilter.value === 'nodrinks') {\n            items = items.filter(item => item && item.includesDrink === false);\n          }\n        }\n        if (sortBy.value) {\n          switch (sortBy.value) {\n            case 'name':\n              items.sort((a, b) => {\n                const nameA = a && a.name ? a.name.toLowerCase() : '';\n                const nameB = b && b.name ? b.name.toLowerCase() : '';\n                return nameA.localeCompare(nameB);\n              });\n              break;\n            case 'quantity-desc':\n              items.sort((a, b) => {\n                const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n                const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n                return qtyB - qtyA;\n              });\n              break;\n            case 'quantity-asc':\n              items.sort((a, b) => {\n                const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n                const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n                return qtyA - qtyB;\n              });\n              break;\n            case 'price-desc':\n              items.sort((a, b) => {\n                const priceA = a && typeof a.price === 'number' ? a.price : 0;\n                const priceB = b && typeof b.price === 'number' ? b.price : 0;\n                return priceB - priceA;\n              });\n              break;\n            case 'price-asc':\n              items.sort((a, b) => {\n                const priceA = a && typeof a.price === 'number' ? a.price : 0;\n                const priceB = b && typeof b.price === 'number' ? b.price : 0;\n                return priceA - priceB;\n              });\n              break;\n            case 'date-desc':\n              items.sort((a, b) => {\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\n                return dateB - dateA;\n              });\n              break;\n            case 'date-asc':\n              items.sort((a, b) => {\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\n                return dateA - dateB;\n              });\n              break;\n            default:\n              break;\n          }\n        }\n        return items;\n      };\n    });\n    const filteredSoldItems = computed(() => {\n      return filterInventoryItems.value(soldItems.value);\n    });\n    const exportToExcel = () => {\n      // Crear un array con los datos a exportar\n      const data = [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal', 'Acciones'], ...filteredSoldItems.value.map(item => [item.name, item.includesDrink ? 'Con refresco' : 'Sin refresco', item.quantity, `$${formatPrice(item.price)}`, formatDate(item.date), `$${formatPrice(item.quantity * item.price)}`, '']), ['', '', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]];\n\n      // Crear un libro de Excel y una hoja de cálculo\n      const ws = XLSX.utils.aoa_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Ventas');\n\n      // Generar el archivo Excel y descargarlo\n      const excelBuffer = XLSX.write(wb, {\n        bookType: 'xlsx',\n        type: 'array'\n      });\n      const blob = new Blob([excelBuffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      saveAs(blob, `ventas_${new Date().toLocaleDateString()}.xlsx`);\n    };\n    const exportToPDF = () => {\n      // Crear un nuevo documento PDF\n      const doc = new jsPDF();\n\n      // Añadir título\n      doc.setFontSize(18);\n      doc.text('Reporte de Ventas', 14, 22);\n      doc.setFontSize(11);\n      doc.text(`Fecha: ${new Date().toLocaleDateString()}`, 14, 32);\n\n      // Crear la tabla con los datos\n      const tableData = filteredSoldItems.value.map(item => [item.name, item.includesDrink ? 'Con refresco' : 'Sin refresco', item.quantity, `$${formatPrice(item.price)}`, formatDate(item.date), `$${formatPrice(item.quantity * item.price)}`]);\n\n      // Añadir la tabla\n      doc.autoTable({\n        head: [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal']],\n        body: tableData,\n        foot: [['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]],\n        startY: 40,\n        theme: 'striped',\n        headStyles: {\n          fillColor: [76, 175, 80]\n        },\n        footStyles: {\n          fillColor: [240, 240, 240],\n          textColor: [0, 0, 0],\n          fontStyle: 'bold'\n        }\n      });\n\n      // Guardar el PDF de exportación\n      doc.save(`ventas_${new Date().toLocaleDateString()}.pdf`);\n    };\n    const returnSoldItem = async item => {\n      try {\n        // Buscar el plato en el menú para incrementar su stock\n        const menuItem = menuItems.value.find(mi => mi.name === item.name) || specialMenuItems.value.find(smi => smi.name === item.name);\n        if (!menuItem) {\n          showNotification('No se encontró el plato en el inventario actual', 'error');\n          return;\n        }\n        const confirmed = await confirm(`¿Desea devolver una unidad de \"${item.name}\" al stock?`);\n        if (confirmed) {\n          // Incrementar el stock del plato\n          const newQuantity = (menuItem.availableQuantity || 0) + 1;\n\n          // Actualizar en la base de datos\n          await updateItemAvailability(menuItem.id, newQuantity);\n\n          // Actualizar en el estado local\n          menuItem.availableQuantity = newQuantity;\n\n          // Reducir la cantidad vendida\n          if (item.quantity > 1) {\n            item.quantity -= 1;\n          } else {\n            // Si solo queda 1, eliminar el item de la lista\n            const index = soldItems.value.findIndex(si => si.name === item.name);\n            if (index !== -1) {\n              soldItems.value.splice(index, 1);\n            }\n          }\n\n          // Guardar items vendidos actualizados\n          await saveSoldItems(soldItems.value);\n          showNotification(`Se ha devuelto una unidad de ${item.name} al stock`, 'success');\n        }\n      } catch (error) {\n        console.error('Error al devolver plato al stock:', error);\n        showNotification('Error al procesar la devolución. Por favor, intente nuevamente.', 'error');\n      }\n    };\n    const canClearList = computed(() => {\n      if (soldItems.value.length === 0) return false;\n\n      // Encontrar la fecha de venta más reciente\n      const mostRecentDate = soldItems.value.reduce((latest, item) => {\n        const itemDate = new Date(item.date);\n        return itemDate > latest ? itemDate : latest;\n      }, new Date(0));\n\n      // Calcular si han pasado 24 horas\n      const now = new Date();\n      const hoursPassed = (now - mostRecentDate) / (1000 * 60 * 60);\n      return hoursPassed >= 24;\n    });\n    const clearListTooltip = computed(() => {\n      if (soldItems.value.length === 0) {\n        return 'No hay platos vendidos para borrar';\n      }\n      if (canClearList.value) {\n        return 'Borrar todos los platos vendidos';\n      } else {\n        // Encontrar la fecha de venta más reciente\n        const mostRecentDate = soldItems.value.reduce((latest, item) => {\n          const itemDate = new Date(item.date);\n          return itemDate > latest ? itemDate : latest;\n        }, new Date(0));\n\n        // Calcular tiempo restante\n        const now = new Date();\n        const hoursPassed = (now - mostRecentDate) / (1000 * 60 * 60);\n        const hoursRemaining = Math.ceil(24 - hoursPassed);\n        return `Debe esperar ${hoursRemaining} horas más para borrar la lista`;\n      }\n    });\n    const clearAllSoldItems = async () => {\n      if (!canClearList.value) {\n        showNotification('Debe esperar 24 horas desde la última venta para borrar la lista', 'error');\n        return;\n      }\n      const confirmed = await confirm('¿Está seguro de que desea borrar toda la lista de platos vendidos? Esta acción no se puede deshacer.');\n      if (confirmed) {\n        try {\n          // Vaciar la lista de platos vendidos\n          soldItems.value = [];\n\n          // Guardar en la base de datos\n          await saveSoldItems([]);\n          showNotification('Lista de platos vendidos borrada exitosamente', 'success');\n        } catch (error) {\n          console.error('Error al borrar la lista de platos vendidos:', error);\n          showNotification('Error al borrar la lista. Por favor, intente nuevamente.', 'error');\n        }\n      }\n    };\n\n    // Función para mostrar notificaciones\n    const showNotification = (message, type) => {\n      notification.value = {\n        show: true,\n        message,\n        type\n      };\n      setTimeout(() => {\n        notification.value.show = false;\n      }, 3000); // 3 segundos como acordado\n    };\n    const checkAvailabilityToast = async itemId => {\n      try {\n        // Buscar el item en ambos menús\n        const item = menuItems.value.find(i => i.id === itemId) || specialMenuItems.value.find(i => i.id === itemId);\n        if (item) {\n          if (item.availableQuantity > 5) {\n            showNotification(`Disponible: ${item.availableQuantity} unidades`, 'success');\n          } else if (item.availableQuantity > 0) {\n            showNotification(`¡Quedan solo ${item.availableQuantity} unidades!`, 'warning');\n          } else {\n            showNotification('Producto agotado', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al verificar disponibilidad:', error);\n      }\n    };\n\n    // Añadir propiedad isEmployee\n    const isEmployee = computed(() => {\n      return hasRole('Empleado') && !hasRole('Administrador') && !hasRole('Superadministrador');\n    });\n    const removeDuplicates = array => {\n      return [...new Set(array)];\n    };\n    return {\n      businessInfo,\n      showBusinessForm,\n      toggleBusinessForm,\n      onLogoChange,\n      saveBusinessInfo,\n      clearBusinessForm,\n      paymentInfo,\n      showPaymentForm,\n      togglePaymentForm,\n      onQRImageChange,\n      onNequiImageChange,\n      savePaymentInfo,\n      clearPaymentForm,\n      newItem,\n      menuItems,\n      showMenuForm,\n      isEditing,\n      toggleMenuForm,\n      onImageChange,\n      saveMenuItem,\n      clearMenuForm,\n      editMenuItem,\n      deleteMenuItem,\n      sellMenuItem,\n      soldItems,\n      totalSales,\n      searchTerm,\n      sortBy,\n      categoryFilter,\n      selectedChartType,\n      shareLink,\n      showCopiedMessage,\n      shareByWhatsApp,\n      copyLink,\n      exportToExcel,\n      exportToPDF,\n      filteredSoldItems,\n      migrationStatus,\n      chartError,\n      handleChartError,\n      notification,\n      newSpecialItem,\n      specialMenuItems,\n      showSpecialMenuForm,\n      isEditingSpecial,\n      editingSpecialIndex,\n      toggleSpecialMenuForm,\n      onSpecialImageChange,\n      saveSpecialMenuItem,\n      clearSpecialMenuForm,\n      editSpecialMenuItem,\n      deleteSpecialMenuItem,\n      sellSpecialMenuItem,\n      toast,\n      showNotification,\n      checkAvailabilityToast,\n      isEmployee,\n      filterInventoryItems,\n      returnSoldItem,\n      canClearList,\n      clearListTooltip,\n      clearAllSoldItems,\n      removeDuplicates\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","saveMenu","formatShareLinkMessage","copyToClipboard","SalesChartComponent","saveAs","XLSX","jsPDF","getMenuItems","saveMenuItems","getBusinessInfo","saveBusinessInfo","saveBusinessInfoToDB","getSoldItems","saveSoldItems","deleteMenuItemFromDB","migrateFromLocalStorage","compressImage","updateItemAvailability","confirm","alert","getCurrentUser","hasRole","guardarPlato","name","components","props","viewOnly","type","Boolean","default","setup","businessInfo","description","contact","address","logo","showBusinessForm","paymentInfo","qrTitle","qrImage","nequiNumber","nequiImage","showPaymentForm","newItem","price","includesDrink","availableQuantity","image","id","menuItems","showMenuForm","isEditing","editingIndex","soldItems","searchTerm","sortBy","categoryFilter","selectedChartType","shareLink","showCopiedMessage","migrationStatus","inProgress","completed","message","chartError","toast","show","handleChartError","error","console","value","notification","timeout","newSpecialItem","specialMenuItems","showSpecialMenuForm","isEditingSpecial","editingSpecialIndex","hasLocalData","localStorage","getItem","migrationResult","removeItem","dbBusinessInfo","dbMenuItems","length","regularItems","filter","item","isSpecial","specialItems","dbSoldItems","setTimeout","toggleBusinessForm","onLogoChange","event","file","target","files","reader","FileReader","onload","e","compressedLogo","result","readAsDataURL","clearTimeout","clearBusinessForm","confirmed","togglePaymentForm","onQRImageChange","compressedImage","onNequiImageChange","savePaymentInfo","clearPaymentForm","toggleMenuForm","clearMenuForm","onImageChange","saveMenuItem","showNotification","Date","now","Math","random","toString","substring","log","savedPlato","index","findIndex","push","editMenuItem","deleteMenuItem","response","fetch","encodeURIComponent","method","headers","json","success","serverError","deleteResult","deleteError","splice","sellMenuItem","newQuantity","currentDate","toISOString","soldItem","find","sold","quantity","date","toggleSpecialMenuForm","clearSpecialMenuForm","onSpecialImageChange","saveSpecialMenuItem","existingItem","toLowerCase","title","updatedPlato","editSpecialMenuItem","deleteSpecialMenuItem","sellSpecialMenuItem","shareByWhatsApp","totalItems","itemsToShare","map","menuId","url","window","location","origin","whatsappUrl","open","copyLink","loadingMessage","clipboardError","totalSales","reduce","total","formatPrice","isNaN","Number","fixed","toFixed","intPart","decPart","split","formattedIntPart","replace","formatDate","dateStr","getTime","Intl","DateTimeFormat","day","month","year","hour","minute","format","filterInventoryItems","items","Array","isArray","warn","term","trim","String","includes","sort","a","b","nameA","nameB","localeCompare","qtyA","qtyB","priceA","priceB","dateA","dateB","filteredSoldItems","exportToExcel","data","ws","utils","aoa_to_sheet","wb","book_new","book_append_sheet","excelBuffer","write","bookType","blob","Blob","toLocaleDateString","exportToPDF","doc","setFontSize","text","tableData","autoTable","head","body","foot","startY","theme","headStyles","fillColor","footStyles","textColor","fontStyle","save","returnSoldItem","menuItem","mi","smi","si","canClearList","mostRecentDate","latest","itemDate","hoursPassed","clearListTooltip","hoursRemaining","ceil","clearAllSoldItems","checkAvailabilityToast","itemId","i","isEmployee","removeDuplicates","array","Set"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\MenuComponent.vue"],"sourcesContent":["<template>\n  <!-- ... -->\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue';\nimport { saveMenu } from '../services/menuService';\nimport { formatShareLinkMessage } from '../utils/messageFormatter';\nimport { copyToClipboard } from '../utils/clipboardUtils';\nimport SalesChartComponent from './SalesChartComponent.vue';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nimport { \n  getMenuItems, \n  saveMenuItems,\n  getBusinessInfo, \n  saveBusinessInfo as saveBusinessInfoToDB,\n  getSoldItems, \n  saveSoldItems,\n  deleteMenuItemFromDB,\n  migrateFromLocalStorage,\n  compressImage,\n  updateItemAvailability\n} from '../services/storageService';\nimport { confirm, alert } from '../services/dialogService';\nimport { getCurrentUser, hasRole } from '../services/authService';\nimport { guardarPlato } from '@/services/indexedDBService';\n\nexport default {\n  name: 'MenuComponent',\n  components: {\n    SalesChartComponent\n  },\n  props: {\n    viewOnly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    // Estado para información del negocio\n    const businessInfo = ref({\n      name: '',\n      description: '',\n      contact: '',\n      address: '',\n      logo: ''\n    });\n    const showBusinessForm = ref(false);\n\n    // Estado para información de pago\n    const paymentInfo = ref({\n      qrTitle: '',\n      qrImage: '',\n      nequiNumber: '',\n      nequiImage: ''\n    });\n    const showPaymentForm = ref(false);\n\n    // Estado para platos del menú\n    const newItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const menuItems = ref([]);\n    const showMenuForm = ref(false);\n    const isEditing = ref(false);\n    const editingIndex = ref(-1);\n\n    // Estado para ventas e inventario\n    const soldItems = ref([]);\n    const searchTerm = ref('');\n    const sortBy = ref('');\n    const categoryFilter = ref('');\n    const selectedChartType = ref('bar');\n\n    // Estado para compartir\n    const shareLink = ref('');\n    const showCopiedMessage = ref(false);\n    \n    // Estado para mostrar progreso de migración\n    const migrationStatus = ref({\n      inProgress: false,\n      completed: false,\n      message: ''\n    });\n\n    // Estado para errores del gráfico\n    const chartError = ref(null);\n    \n    // Primero, añadir el componente Toast\n    const toast = ref({\n      show: false,\n      message: '',\n      type: 'success' // success, error, warning\n    });\n\n    // Manejar errores del gráfico\n    const handleChartError = (error) => {\n      console.error(\"Error en el gráfico:\", error);\n      chartError.value = error;\n    };\n\n    // Estado para mensajes de notificación\n    const notification = ref({\n      show: false,\n      message: '',\n      type: 'success', // 'success', 'error'\n      timeout: null\n    });\n\n    // Estado para platos especiales\n    const newSpecialItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const specialMenuItems = ref([]);\n    const showSpecialMenuForm = ref(false);\n    const isEditingSpecial = ref(false);\n    const editingSpecialIndex = ref(-1);\n\n    // Cargar datos guardados\n    onMounted(async () => {\n      try {\n        migrationStatus.value.inProgress = true;\n        migrationStatus.value.message = 'Cargando datos...';\n        \n        const hasLocalData = localStorage.getItem('businessInfo') || \n                             localStorage.getItem('menuItems') ||\n                             localStorage.getItem('soldItems');\n          \n        if (hasLocalData) {\n          migrationStatus.value.message = 'Migrando datos desde localStorage a IndexedDB...';\n          \n          const migrationResult = await migrateFromLocalStorage();\n          \n          if (migrationResult) {\n            migrationStatus.value.completed = true;\n            migrationStatus.value.message = 'Migración completada exitosamente';\n            localStorage.removeItem('businessInfo');\n            localStorage.removeItem('menuItems');\n            localStorage.removeItem('soldItems');\n          } else {\n            migrationStatus.value.message = 'Error en la migración de datos';\n          }\n        }\n\n        const dbBusinessInfo = await getBusinessInfo();\n        if (dbBusinessInfo && dbBusinessInfo.name) {\n          businessInfo.value = dbBusinessInfo;\n        }\n\n        const dbMenuItems = await getMenuItems();\n        if (dbMenuItems && dbMenuItems.length > 0) {\n          // Separar los platos regulares de los especiales\n          const regularItems = dbMenuItems.filter(item => !item.isSpecial);\n          const specialItems = dbMenuItems.filter(item => item.isSpecial === true);\n          \n          menuItems.value = regularItems;\n          \n          if (specialItems.length > 0) {\n            specialMenuItems.value = specialItems;\n          }\n        }\n\n        const dbSoldItems = await getSoldItems();\n        if (dbSoldItems && dbSoldItems.length > 0) {\n          soldItems.value = dbSoldItems;\n        }\n        \n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 1500);\n      } catch (error) {\n        console.error('Error al cargar datos:', error);\n        migrationStatus.value.message = 'Error al cargar datos: ' + error.message;\n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 3000);\n      }\n    });\n\n    // Métodos para información del negocio\n    const toggleBusinessForm = () => {\n      showBusinessForm.value = !showBusinessForm.value;\n    };\n\n    const onLogoChange = async (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const compressedLogo = await compressImage(e.target.result);\n          businessInfo.value.logo = compressedLogo;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const saveBusinessInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        await saveBusinessInfoToDB(businessInfo.value);\n        \n        notification.value = {\n          show: true,\n          message: 'Información del negocio guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información del negocio:', error);\n        \n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n\n    const clearBusinessForm = async () => {\n      const confirmed = await confirm('¿Estás seguro de querer limpiar el formulario?');\n      if (confirmed) {\n        businessInfo.value = {\n          name: '',\n          description: '',\n          contact: '',\n          address: '',\n          logo: ''\n        };\n      }\n    };\n\n    // Métodos para información de pago\n    const togglePaymentForm = () => {\n      showPaymentForm.value = !showPaymentForm.value;\n    };\n\n    const onQRImageChange = async (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const compressedImage = await compressImage(e.target.result);\n          paymentInfo.value.qrImage = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const onNequiImageChange = async (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const compressedImage = await compressImage(e.target.result);\n          paymentInfo.value.nequiImage = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const savePaymentInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        businessInfo.value.paymentInfo = { ...paymentInfo.value };\n        \n        await saveBusinessInfoToDB(businessInfo.value);\n        \n        notification.value = {\n          show: true,\n          message: 'Información de pago guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información de pago:', error);\n        \n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información de pago. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n\n    const clearPaymentForm = async () => {\n      const confirmed = await confirm('¿Estás seguro de querer limpiar la información de pago?');\n      if (confirmed) {\n        paymentInfo.value = {\n          qrTitle: '',\n          qrImage: '',\n          nequiNumber: '',\n          nequiImage: ''\n        };\n      }\n    };\n\n    // Métodos para platos del menú\n    const toggleMenuForm = () => {\n      showMenuForm.value = !showMenuForm.value;\n      if (!showMenuForm.value) {\n        clearMenuForm();\n      }\n    };\n\n    const onImageChange = async (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const compressedImage = await compressImage(e.target.result);\n          newItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const saveMenuItem = async () => {\n      try {\n        // Validaciones iniciales\n        if (!newItem.value.name || !newItem.value.price) {\n          showNotification('El nombre y el precio son obligatorios', 'error');\n          return;\n        }\n\n        if (newItem.value.availableQuantity < 0) {\n          showNotification('La cantidad disponible no puede ser negativa', 'error');\n          return;\n        }\n\n        // Generar ID si no existe\n        if (!newItem.value.id) {\n          newItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n\n        try {\n          console.log('📝 Datos del plato antes de guardar:', newItem.value);\n          \n          // Guardar en la base de datos\n          const savedPlato = await guardarPlato(newItem.value);\n          console.log('✅ Plato guardado correctamente:', savedPlato);\n          \n          if (isEditing.value) {\n            // Actualizar el plato existente en la lista\n            const index = menuItems.value.findIndex(item => item.id === savedPlato.id);\n            if (index !== -1) {\n              menuItems.value[index] = { ...savedPlato };\n              showNotification('Plato actualizado exitosamente', 'success');\n            }\n          } else {\n            // Agregar el nuevo plato a la lista\n            menuItems.value.push({ ...savedPlato });\n            showNotification('Plato creado exitosamente', 'success');\n          }\n\n          // Guardar la lista completa\n          await saveMenuItems(menuItems.value);\n          \n          // Limpiar el formulario\n          clearMenuForm();\n          \n        } catch (error) {\n          console.error('❌ Error al guardar en la base de datos:', error);\n          showNotification(`Error al guardar el plato: ${error.message || 'Intente nuevamente'}`, 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error general en saveMenuItem:', error);\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\n      }\n    };\n\n    const clearMenuForm = () => {\n      newItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditing.value = false;\n      editingIndex.value = -1;\n    };\n\n    const editMenuItem = (index) => {\n      newItem.value = { ...menuItems.value[index] };\n      isEditing.value = true;\n      editingIndex.value = index;\n      showMenuForm.value = true;\n    };\n\n    const deleteMenuItem = async (index) => {\n      try {\n        const item = menuItems.value[index];\n        \n        if (!item) {\n          console.error('Error: Elemento del menú no encontrado en el índice', index);\n          await alert('Error: No se encontró el elemento a eliminar');\n          return;\n        }\n        \n        // Confirmar eliminación\n        if (!confirm(`¿Estás seguro de que deseas eliminar \"${item.name || 'este plato'}\" del menú?`)) {\n          return;\n        }\n        \n        // Eliminar del backend MySQL directamente\n        try {\n          console.log(`Eliminando plato con ID: ${item.id} del servidor MySQL`);\n          const response = await fetch(`http://localhost:3000/direct-delete?id=${encodeURIComponent(item.id)}`, {\n            method: 'GET',\n            headers: {\n              'Cache-Control': 'no-cache'\n            }\n          });\n          \n          const result = await response.json();\n          console.log('Resultado de la eliminación directa:', result);\n          \n          if (!result.success) {\n            console.error('Error al eliminar plato del servidor:', result.message);\n            alert(`Error al eliminar plato: ${result.message}`);\n          }\n        } catch (serverError) {\n          console.error('Error al comunicarse con el servidor:', serverError);\n        }\n        \n        // Eliminar de IndexedDB\n        if (item.id) {\n          try {\n            console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n            const deleteResult = await deleteMenuItemFromDB(item.id);\n            console.log(`Resultado de la eliminación de IndexedDB: ${deleteResult}`);\n          } catch (deleteError) {\n            console.error('Error al eliminar item del almacén local:', deleteError);\n          }\n        }\n        \n        // Eliminar de la lista local\n        menuItems.value.splice(index, 1);\n        \n        // Mostrar notificación de éxito\n        showNotification('Plato eliminado correctamente', 'success');\n        \n      } catch (error) {\n        console.error('Error al eliminar elemento del menú:', error);\n        showNotification('Error al eliminar el plato', 'error');\n      }\n    };\n\n    const sellMenuItem = async (index) => {\n      try {\n        const item = menuItems.value[index];\n        \n        // Validar disponibilidad\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\n          showNotification('Este plato está agotado', 'error');\n          return;\n        }\n\n        const confirmed = await confirm(\n          `¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`\n        );\n\n        if (confirmed) {\n          try {\n            const newQuantity = item.availableQuantity - 1;\n            \n            // Actualizar en la base de datos\n            await updateItemAvailability(item.id, newQuantity);\n            \n            // Actualizar en el estado local\n            item.availableQuantity = newQuantity;\n            \n            // Registrar la venta\n            const currentDate = new Date().toISOString();\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\n            \n            if (soldItem) {\n              soldItem.quantity += 1;\n              soldItem.date = currentDate;\n            } else {\n              soldItems.value.push({\n                name: item.name,\n                quantity: 1,\n                price: item.price,\n                includesDrink: item.includesDrink,\n                date: currentDate\n              });\n            }\n            \n            // Guardar items vendidos\n            await saveSoldItems(soldItems.value);\n            \n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\n            \n            if (newQuantity <= 5) {\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\n            }\n          } catch (error) {\n            console.error('Error al procesar la venta:', error);\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar la venta:', error);\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    // Métodos para platos especiales\n    const toggleSpecialMenuForm = () => {\n      showSpecialMenuForm.value = !showSpecialMenuForm.value;\n      if (!showSpecialMenuForm.value) {\n        clearSpecialMenuForm();\n      }\n    };\n\n    const onSpecialImageChange = async (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const compressedImage = await compressImage(e.target.result);\n          newSpecialItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const saveSpecialMenuItem = async () => {\n      try {\n        if (!newSpecialItem.value.name || !newSpecialItem.value.price) {\n          showNotification('El nombre y el precio son obligatorios', 'error');\n          return;\n        }\n        \n        if (!newSpecialItem.value.id) {\n          newSpecialItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n        \n        // Marcar como plato especial\n        newSpecialItem.value.isSpecial = true;\n        \n        try {\n          console.log('📝 Datos del plato especial antes de guardar:', newSpecialItem.value);\n          \n          // Guardar en la base de datos\n          const savedPlato = await guardarPlato(newSpecialItem.value);\n          console.log('✅ Plato especial guardado correctamente:', savedPlato);\n          \n          if (isEditingSpecial.value) {\n            // Actualizar el plato existente en la lista\n            const index = specialMenuItems.value.findIndex(item => item.id === savedPlato.id);\n            if (index !== -1) {\n              specialMenuItems.value[index] = { ...savedPlato };\n              showNotification('Plato especial actualizado exitosamente', 'success');\n            }\n            isEditingSpecial.value = false;\n            editingSpecialIndex.value = -1;\n          } else {\n            const existingItem = specialMenuItems.value.find(item => \n              item.name.toLowerCase() === savedPlato.name.toLowerCase()\n            );\n            \n            if (existingItem) {\n              const confirmed = await confirm(\n                `Ya existe un plato especial llamado \"${savedPlato.name}\". ¿Desea actualizarlo?`,\n                { title: 'Actualizar plato especial existente' }\n              );\n              \n              if (confirmed) {\n                const index = specialMenuItems.value.findIndex(item => item.id === existingItem.id);\n                if (index !== -1) {\n                  // Conservar el ID original pero actualizar los demás datos\n                  const updatedPlato = {\n                    ...savedPlato,\n                    id: existingItem.id\n                  };\n                  \n                  // Actualizar en la base de datos\n                  await guardarPlato(updatedPlato);\n                  \n                  // Actualizar en la lista local\n                  specialMenuItems.value[index] = { ...updatedPlato };\n                  showNotification('Plato especial actualizado exitosamente', 'success');\n                }\n              } else {\n                return;\n              }\n            } else {\n              // Agregar el nuevo plato a la lista\n              specialMenuItems.value.push({ ...savedPlato });\n              showNotification('Plato especial creado exitosamente', 'success');\n            }\n          }\n          \n          // Guardar todos los elementos\n          await saveMenuItems([...menuItems.value, ...specialMenuItems.value]);\n          \n          // Limpiar el formulario\n          clearSpecialMenuForm();\n        } catch (error) {\n          console.error('❌ Error al guardar plato especial:', error);\n          showNotification(`Error al guardar el plato especial: ${error.message || 'Intente nuevamente'}`, 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error general en saveSpecialMenuItem:', error);\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\n      }\n    };\n\n    const clearSpecialMenuForm = () => {\n      newSpecialItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditingSpecial.value = false;\n      editingSpecialIndex.value = -1;\n    };\n\n    const editSpecialMenuItem = (index) => {\n      newSpecialItem.value = { ...specialMenuItems.value[index] };\n      isEditingSpecial.value = true;\n      editingSpecialIndex.value = index;\n      showSpecialMenuForm.value = true;\n    };\n\n    const deleteSpecialMenuItem = async (index) => {\n      try {\n        const item = specialMenuItems.value[index];\n        \n        if (!item) {\n          console.error('Error: Elemento del menú especial no encontrado en el índice', index);\n          await alert('Error: No se encontró el elemento a eliminar');\n          return;\n        }\n        \n        // Confirmar eliminación\n        if (!confirm(`¿Estás seguro de que deseas eliminar \"${item.name || 'este plato'}\" del menú especial?`)) {\n          return;\n        }\n        \n        // Eliminar del backend MySQL directamente\n        try {\n          console.log(`Eliminando plato con ID: ${item.id} del servidor MySQL`);\n          const response = await fetch(`http://localhost:3000/direct-delete?id=${encodeURIComponent(item.id)}`, {\n            method: 'GET',\n            headers: {\n              'Cache-Control': 'no-cache'\n            }\n          });\n          \n          const result = await response.json();\n          console.log('Resultado de la eliminación directa:', result);\n          \n          if (!result.success) {\n            console.error('Error al eliminar plato del servidor:', result.message);\n            alert(`Error al eliminar plato: ${result.message}`);\n          }\n        } catch (serverError) {\n          console.error('Error al comunicarse con el servidor:', serverError);\n        }\n        \n        // Eliminar de IndexedDB\n        if (item.id) {\n          try {\n            console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n            const deleteResult = await deleteMenuItemFromDB(item.id);\n            console.log(`Resultado de la eliminación de IndexedDB: ${deleteResult}`);\n          } catch (deleteError) {\n            console.error('Error al eliminar item del almacén local:', deleteError);\n          }\n        }\n        \n        // Eliminar de la lista local\n        specialMenuItems.value.splice(index, 1);\n        \n        // Mostrar notificación de éxito\n        showNotification('Plato eliminado correctamente', 'success');\n        \n      } catch (error) {\n        console.error('Error al eliminar elemento del menú especial:', error);\n        showNotification('Error al eliminar el plato', 'error');\n      }\n    };\n\n    const sellSpecialMenuItem = async (index) => {\n      try {\n        const item = specialMenuItems.value[index];\n        \n        // Validar disponibilidad\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\n          showNotification('Este plato especial está agotado', 'error');\n          return;\n        }\n\n        const confirmed = await confirm(\n          `¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`\n        );\n\n        if (confirmed) {\n          try {\n            const newQuantity = item.availableQuantity - 1;\n            \n            // Actualizar en la base de datos\n            await updateItemAvailability(item.id, newQuantity);\n            \n            // Actualizar en el estado local\n            item.availableQuantity = newQuantity;\n            \n            // Registrar la venta\n            const currentDate = new Date().toISOString();\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\n            \n            if (soldItem) {\n              soldItem.quantity += 1;\n              soldItem.date = currentDate;\n            } else {\n              soldItems.value.push({\n                name: item.name,\n                quantity: 1,\n                price: item.price,\n                includesDrink: item.includesDrink,\n                date: currentDate\n              });\n            }\n            \n            // Guardar items vendidos\n            await saveSoldItems(soldItems.value);\n            \n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\n            \n            if (newQuantity <= 5) {\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\n            }\n          } catch (error) {\n            console.error('Error al procesar la venta:', error);\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar la venta:', error);\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    // Métodos para compartir\n    const shareByWhatsApp = async () => {\n      try {\n        await alert('Procesando imágenes para compartir...');\n        \n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\n        if (totalItems > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\n          return;\n        }\n        \n        // Combinar platos regulares y especiales\n        const itemsToShare = [\n          ...menuItems.value.map(item => ({\n            ...item,\n            isSpecial: false\n          })),\n          ...specialMenuItems.value.map(item => ({\n            ...item,\n            isSpecial: true\n          }))\n        ];\n        \n        console.log(`Preparando para compartir ${itemsToShare.length} elementos...`);\n        console.log('Items regulares:', menuItems.value.length);\n        console.log('Items especiales:', specialMenuItems.value.length);\n        \n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        \n        const message = formatShareLinkMessage(url, businessInfo.value.name);\n        const whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\n        window.open(whatsappUrl, '_blank');\n      } catch (error) {\n        console.error('Error al compartir por WhatsApp:', error);\n        await alert(`Error al compartir el menú: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\n      }\n    };\n\n    const copyLink = async () => {\n      try {\n        const loadingMessage = 'Procesando imágenes para compartir...';\n        showCopiedMessage.value = true;\n        \n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\n        if (totalItems > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\n          showCopiedMessage.value = false;\n          return;\n        }\n        \n        // Combinar platos regulares y especiales\n        const itemsToShare = [\n          ...menuItems.value.map(item => ({\n            ...item,\n            isSpecial: false\n          })),\n          ...specialMenuItems.value.map(item => ({\n            ...item,\n            isSpecial: true\n          }))\n        ];\n        \n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        \n        try {\n          await copyToClipboard(url);\n          showCopiedMessage.value = true;\n          setTimeout(() => {\n            showCopiedMessage.value = false;\n          }, 3000);\n        } catch (clipboardError) {\n          console.error('Error al copiar al portapapeles:', clipboardError);\n          await alert('No se pudo copiar automáticamente. Por favor, copia manualmente este enlace: ' + url);\n        }\n      } catch (error) {\n        console.error('Error al generar enlace para compartir:', error);\n        showCopiedMessage.value = false;\n        await alert(`Error al generar el enlace: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\n      }\n    };\n\n    // Computados\n    const totalSales = computed(() => {\n      return soldItems.value.reduce((total, item) => {\n        return total + (item.quantity * item.price);\n      }, 0);\n    });\n\n    const formatPrice = (price) => {\n      if (isNaN(Number(price))) return '0,00';\n      const fixed = Number(price).toFixed(2);\n      const [intPart, decPart] = fixed.split('.');\n      const formattedIntPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n      return `${formattedIntPart},${decPart}`;\n    };\n    \n    const formatDate = (dateStr) => {\n      if (!dateStr) return 'N/A';\n      const date = new Date(dateStr);\n      if (isNaN(date.getTime())) return 'Fecha inválida';\n      return new Intl.DateTimeFormat('es-ES', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n\n    const filterInventoryItems = computed(() => {\n      return (items) => {\n        if (!items || !Array.isArray(items)) {\n          console.warn('filterInventoryItems recibió un valor no array:', items);\n          return [];\n        }\n        if (searchTerm.value) {\n          const term = searchTerm.value.toLowerCase().trim();\n          \n          items = items.filter(item => {\n            if (item && typeof item === 'object') {\n              const name = String(item.name || '').toLowerCase();\n              return name.includes(term);\n            }\n            return false;\n          });\n        }\n        if (categoryFilter.value) {\n          if (categoryFilter.value === 'drinks') {\n            items = items.filter(item => item && item.includesDrink === true);\n          } else if (categoryFilter.value === 'nodrinks') {\n            items = items.filter(item => item && item.includesDrink === false);\n          }\n        }\n        if (sortBy.value) {\n          switch (sortBy.value) {\n            case 'name':\n              items.sort((a, b) => {\n                const nameA = (a && a.name) ? a.name.toLowerCase() : '';\n                const nameB = (b && b.name) ? b.name.toLowerCase() : '';\n                return nameA.localeCompare(nameB);\n              });\n              break;\n            case 'quantity-desc':\n              items.sort((a, b) => {\n                const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\n                const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\n                return qtyB - qtyA;\n              });\n              break;\n            case 'quantity-asc':\n              items.sort((a, b) => {\n                const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\n                const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\n                return qtyA - qtyB;\n              });\n              break;\n            case 'price-desc':\n              items.sort((a, b) => {\n                const priceA = (a && typeof a.price === 'number') ? a.price : 0;\n                const priceB = (b && typeof b.price === 'number') ? b.price : 0;\n                return priceB - priceA;\n              });\n              break;\n            case 'price-asc':\n              items.sort((a, b) => {\n                const priceA = (a && typeof a.price === 'number') ? a.price : 0;\n                const priceB = (b && typeof b.price === 'number') ? b.price : 0;\n                return priceA - priceB;\n              });\n              break;\n            case 'date-desc':\n              items.sort((a, b) => {\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\n                return dateB - dateA;\n              });\n              break;\n            case 'date-asc':\n              items.sort((a, b) => {\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\n                return dateA - dateB;\n              });\n              break;\n            default:\n              break;\n          }\n        }\n        return items;\n      };\n    });\n\n    const filteredSoldItems = computed(() => {\n      return filterInventoryItems.value(soldItems.value);\n    });\n\n    const exportToExcel = () => {\n      // Crear un array con los datos a exportar\n      const data = [\n        ['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal', 'Acciones'],\n        ...filteredSoldItems.value.map(item => [\n          item.name,\n          item.includesDrink ? 'Con refresco' : 'Sin refresco',\n          item.quantity,\n          `$${formatPrice(item.price)}`,\n          formatDate(item.date),\n          `$${formatPrice(item.quantity * item.price)}`,\n          ''\n        ]),\n        ['', '', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]\n      ];\n\n      // Crear un libro de Excel y una hoja de cálculo\n      const ws = XLSX.utils.aoa_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Ventas');\n\n      // Generar el archivo Excel y descargarlo\n      const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n      const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      saveAs(blob, `ventas_${new Date().toLocaleDateString()}.xlsx`);\n    };\n\n    const exportToPDF = () => {\n      // Crear un nuevo documento PDF\n      const doc = new jsPDF();\n      \n      // Añadir título\n      doc.setFontSize(18);\n      doc.text('Reporte de Ventas', 14, 22);\n      doc.setFontSize(11);\n      doc.text(`Fecha: ${new Date().toLocaleDateString()}`, 14, 32);\n\n      // Crear la tabla con los datos\n      const tableData = filteredSoldItems.value.map(item => [\n        item.name,\n        item.includesDrink ? 'Con refresco' : 'Sin refresco',\n        item.quantity,\n        `$${formatPrice(item.price)}`,\n        formatDate(item.date),\n        `$${formatPrice(item.quantity * item.price)}`\n      ]);\n\n      // Añadir la tabla\n      doc.autoTable({\n        head: [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal']],\n        body: tableData,\n        foot: [['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]],\n        startY: 40,\n        theme: 'striped',\n        headStyles: { fillColor: [76, 175, 80] },\n        footStyles: { fillColor: [240, 240, 240], textColor: [0, 0, 0], fontStyle: 'bold' }\n      });\n\n      // Guardar el PDF de exportación\n      doc.save(`ventas_${new Date().toLocaleDateString()}.pdf`);\n    };\n\n    const returnSoldItem = async (item) => {\n      try {\n        // Buscar el plato en el menú para incrementar su stock\n        const menuItem = menuItems.value.find(mi => mi.name === item.name) || \n                         specialMenuItems.value.find(smi => smi.name === item.name);\n        \n        if (!menuItem) {\n          showNotification('No se encontró el plato en el inventario actual', 'error');\n          return;\n        }\n        \n        const confirmed = await confirm(\n          `¿Desea devolver una unidad de \"${item.name}\" al stock?`\n        );\n        \n        if (confirmed) {\n          // Incrementar el stock del plato\n          const newQuantity = (menuItem.availableQuantity || 0) + 1;\n          \n          // Actualizar en la base de datos\n          await updateItemAvailability(menuItem.id, newQuantity);\n          \n          // Actualizar en el estado local\n          menuItem.availableQuantity = newQuantity;\n          \n          // Reducir la cantidad vendida\n          if (item.quantity > 1) {\n            item.quantity -= 1;\n          } else {\n            // Si solo queda 1, eliminar el item de la lista\n            const index = soldItems.value.findIndex(si => si.name === item.name);\n            if (index !== -1) {\n              soldItems.value.splice(index, 1);\n            }\n          }\n          \n          // Guardar items vendidos actualizados\n          await saveSoldItems(soldItems.value);\n          \n          showNotification(`Se ha devuelto una unidad de ${item.name} al stock`, 'success');\n        }\n      } catch (error) {\n        console.error('Error al devolver plato al stock:', error);\n        showNotification('Error al procesar la devolución. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    const canClearList = computed(() => {\n      if (soldItems.value.length === 0) return false;\n      \n      // Encontrar la fecha de venta más reciente\n      const mostRecentDate = soldItems.value.reduce((latest, item) => {\n        const itemDate = new Date(item.date);\n        return itemDate > latest ? itemDate : latest;\n      }, new Date(0));\n      \n      // Calcular si han pasado 24 horas\n      const now = new Date();\n      const hoursPassed = (now - mostRecentDate) / (1000 * 60 * 60);\n      \n      return hoursPassed >= 24;\n    });\n\n    const clearListTooltip = computed(() => {\n      if (soldItems.value.length === 0) {\n        return 'No hay platos vendidos para borrar';\n      }\n      \n      if (canClearList.value) {\n        return 'Borrar todos los platos vendidos';\n      } else {\n        // Encontrar la fecha de venta más reciente\n        const mostRecentDate = soldItems.value.reduce((latest, item) => {\n          const itemDate = new Date(item.date);\n          return itemDate > latest ? itemDate : latest;\n        }, new Date(0));\n        \n        // Calcular tiempo restante\n        const now = new Date();\n        const hoursPassed = (now - mostRecentDate) / (1000 * 60 * 60);\n        const hoursRemaining = Math.ceil(24 - hoursPassed);\n        \n        return `Debe esperar ${hoursRemaining} horas más para borrar la lista`;\n      }\n    });\n\n    const clearAllSoldItems = async () => {\n      if (!canClearList.value) {\n        showNotification('Debe esperar 24 horas desde la última venta para borrar la lista', 'error');\n        return;\n      }\n      \n      const confirmed = await confirm(\n        '¿Está seguro de que desea borrar toda la lista de platos vendidos? Esta acción no se puede deshacer.'\n      );\n      \n      if (confirmed) {\n        try {\n          // Vaciar la lista de platos vendidos\n          soldItems.value = [];\n          \n          // Guardar en la base de datos\n          await saveSoldItems([]);\n          \n          showNotification('Lista de platos vendidos borrada exitosamente', 'success');\n        } catch (error) {\n          console.error('Error al borrar la lista de platos vendidos:', error);\n          showNotification('Error al borrar la lista. Por favor, intente nuevamente.', 'error');\n        }\n      }\n    };\n\n    // Función para mostrar notificaciones\n    const showNotification = (message, type) => {\n      notification.value = {\n        show: true,\n        message,\n        type\n      };\n      \n      setTimeout(() => {\n        notification.value.show = false;\n      }, 3000); // 3 segundos como acordado\n    };\n\n    const checkAvailabilityToast = async (itemId) => {\n      try {\n        // Buscar el item en ambos menús\n        const item = menuItems.value.find(i => i.id === itemId) || \n                    specialMenuItems.value.find(i => i.id === itemId);\n        \n        if (item) {\n          if (item.availableQuantity > 5) {\n            showNotification(`Disponible: ${item.availableQuantity} unidades`, 'success');\n          } else if (item.availableQuantity > 0) {\n            showNotification(`¡Quedan solo ${item.availableQuantity} unidades!`, 'warning');\n          } else {\n            showNotification('Producto agotado', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al verificar disponibilidad:', error);\n      }\n    };\n\n    // Añadir propiedad isEmployee\n    const isEmployee = computed(() => {\n      return hasRole('Empleado') && !hasRole('Administrador') && !hasRole('Superadministrador');\n    });\n\n    const removeDuplicates = (array) => {\n      return [...new Set(array)];\n    };\n\n    return {\n      businessInfo,\n      showBusinessForm,\n      toggleBusinessForm,\n      onLogoChange,\n      saveBusinessInfo,\n      clearBusinessForm,\n      paymentInfo,\n      showPaymentForm,\n      togglePaymentForm,\n      onQRImageChange,\n      onNequiImageChange,\n      savePaymentInfo,\n      clearPaymentForm,\n      newItem,\n      menuItems,\n      showMenuForm,\n      isEditing,\n      toggleMenuForm,\n      onImageChange,\n      saveMenuItem,\n      clearMenuForm,\n      editMenuItem,\n      deleteMenuItem,\n      sellMenuItem,\n      soldItems,\n      totalSales,\n      searchTerm,\n      sortBy,\n      categoryFilter,\n      selectedChartType,\n      shareLink,\n      showCopiedMessage,\n      shareByWhatsApp,\n      copyLink,\n      exportToExcel,\n      exportToPDF,\n      filteredSoldItems,\n      migrationStatus,\n      chartError,\n      handleChartError,\n      notification,\n      newSpecialItem,\n      specialMenuItems,\n      showSpecialMenuForm,\n      isEditingSpecial,\n      editingSpecialIndex,\n      toggleSpecialMenuForm,\n      onSpecialImageChange,\n      saveSpecialMenuItem,\n      clearSpecialMenuForm,\n      editSpecialMenuItem,\n      deleteSpecialMenuItem,\n      sellSpecialMenuItem,\n      toast,\n      showNotification,\n      checkAvailabilityToast,\n      isEmployee,\n      filterInventoryItems,\n      returnSoldItem,\n      canClearList,\n      clearListTooltip,\n      clearAllSoldItems,\n      removeDuplicates\n    };\n  }\n};\n</script>\n\n<style scoped>\n.menu-container {\n  padding: 20px;\n}\n\nsection {\n  margin-bottom: 40px;\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background-color: #fff;\n}\n\nh2 {\n  color: #333;\n  font-size: 24px;\n  margin-bottom: 20px;\n  border-bottom: 2px solid #4CAF50;\n  padding-bottom: 10px;\n}\n\n.toggle-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.toggle-button:hover {\n  background-color: #45a049;\n}\n\nform {\n  display: grid;\n  gap: 15px;\n}\n\nlabel {\n  font-weight: bold;\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.button-group {\n  display: flex;\n  gap: 10px;\n  margin-top: 15px;\n}\n\n.save-button {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  cursor: pointer;\n  flex: 1;\n}\n\n.save-button:hover {\n  background-color: #0056b3;\n}\n\n.clear-button {\n  background-color: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  cursor: pointer;\n  flex: 1;\n}\n\n.clear-button:hover {\n  background-color: #c82333;\n}\n\n.business-preview {\n  margin-top: 20px;\n  padding: 15px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: #f9f9f9;\n}\n\n/* Mejoras a la lista de platos */\n.menu-items-list, .menu-special-items-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.menu-item-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  display: flex;\n  flex-direction: column;\n}\n\n.menu-item-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n}\n\n.menu-item-image-container {\n  width: 100%;\n  height: 200px;\n  position: relative;\n  overflow: hidden;\n  background-color: #f0f0f0;\n}\n\n.menu-item-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.5s ease;\n}\n\n.menu-item-card:hover .menu-item-image {\n  transform: scale(1.05);\n}\n\n.no-image-placeholder {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #999;\n  font-style: italic;\n}\n\n.menu-item-details {\n  padding: 15px;\n  flex-grow: 1;\n}\n\n.menu-item-details h3 {\n  margin-top: 0;\n  color: #333;\n  font-size: 18px;\n}\n\n.menu-item-actions {\n  display: flex;\n  gap: 10px;\n  padding: 0 15px 15px;\n}\n\n.edit-button, .sell-button, .delete-button {\n  flex: 1;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.3s;\n}\n\n.edit-button {\n  background-color: #ffc107;\n  color: #333;\n}\n\n.edit-button:hover {\n  background-color: #e0a800;\n}\n\n.sell-button {\n  background-color: #28a745;\n  color: white;\n}\n\n.sell-button:hover {\n  background-color: #218838;\n}\n\n.delete-button {\n  background-color: #dc3545;\n  color: white;\n}\n\n.delete-button:hover {\n  background-color: #c82333;\n}\n\n/* Mejoras a la sección de inventario */\n.inventory-section {\n  margin-top: 30px;\n}\n\n.inventory-controls {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin-bottom: 20px;\n  align-items: center;\n}\n\n.inventory-search-container {\n  flex: 1;\n  min-width: 200px;\n}\n\n.inventory-search-input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.inventory-filters {\n  display: flex;\n  gap: 10px;\n}\n\n.inventory-filter {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: white;\n}\n\n.inventory-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.export-button {\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-weight: bold;\n}\n\n.excel {\n  background-color: #217346;\n  color: white;\n}\n\n.excel:hover {\n  background-color: #1a5c38;\n}\n\n.pdf {\n  background-color: #f40f02;\n  color: white;\n}\n\n.pdf:hover {\n  background-color: #d30902;\n}\n\n.clear-all-button {\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-weight: bold;\n  background-color: #dc3545;\n  color: white;\n}\n\n.clear-all-button:hover {\n  background-color: #c82333;\n}\n\n.clear-all-button:disabled {\n  background-color: #6c757d;\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.return-button {\n  background-color: #17a2b8;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 6px 10px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s;\n}\n\n.return-button:hover {\n  background-color: #138496;\n}\n\n.action-icon {\n  font-size: 16px;\n}\n\n.sales-chart-container {\n  margin: 20px 0;\n  height: 300px;\n  background-color: #f9f9f9;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.inventory-table {\n  overflow-x: auto;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth, td {\n  padding: 15px;\n  text-align: left;\n}\n\nthead {\n  background-color: #4CAF50;\n  color: white;\n}\n\nthead th {\n  font-weight: 600;\n}\n\ntbody tr:hover {\n  background-color: #f1f1f1;\n}\n\n.alternate-row {\n  background-color: #f9f9f9;\n}\n\ntfoot {\n  background-color: #e9e9e9;\n  font-weight: bold;\n}\n\ntfoot td {\n  padding: 12px 15px;\n}\n\n.share-buttons {\n  display: flex;\n  gap: 15px;\n  margin-top: 20px;\n}\n\n.whatsapp-button, .copy-button {\n  flex: 1;\n  padding: 12px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.whatsapp-button {\n  background-color: #25D366;\n  color: white;\n}\n\n.whatsapp-button:hover {\n  background-color: #128C7E;\n}\n\n.copy-button {\n  background-color: #6c757d;\n  color: white;\n}\n\n.copy-button:hover {\n  background-color: #5a6268;\n}\n\n.emoji {\n  font-size: 1.2em;\n  margin-right: 8px;\n}\n\n.copied-message {\n  color: #28a745;\n  margin-top: 10px;\n}\n\n.share-link {\n  margin-top: 15px;\n  padding: 10px;\n  background-color: #f8f9fa;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  word-break: break-all;\n}\n\n.migration-status {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background-color: #ffeb3b;\n  color: #333;\n  padding: 15px 20px;\n  border-radius: 6px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n  max-width: 300px;\n  transition: all 0.3s ease;\n}\n\n.migration-status.completed {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.migration-message {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.loading-spinner {\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  border: 3px solid rgba(0, 0, 0, 0.1);\n  border-top-color: #333;\n  animation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n/* Estilos para notificaciones */\n.notification {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  padding: 15px 20px;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  z-index: 1001;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  min-width: 300px;\n  max-width: 500px;\n  animation: slide-in 0.3s ease-out;\n}\n\n.notification.success {\n  background-color: #4CAF50;\n}\n\n.notification.error {\n  background-color: #f44336;\n}\n\n.notification-close {\n  background: transparent;\n  border: none;\n  color: white;\n  font-size: 20px;\n  margin-left: 15px;\n  cursor: pointer;\n  padding: 0 5px;\n}\n\n@keyframes slide-in {\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n/* Estilos del toast */\n.toast-notification {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  padding: 15px 20px;\n  border-radius: 8px;\n  color: white;\n  z-index: 1000;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  animation: fadeIn 0.3s, fadeOut 0.3s 2.7s;\n}\n\n.toast-notification.success {\n  background-color: #4CAF50;\n}\n\n.toast-notification.error {\n  background-color: #f44336;\n}\n\n.toast-notification.warning {\n  background-color: #ff9800;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(-20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n@keyframes fadeOut {\n  from { opacity: 1; transform: translateY(0); }\n  to { opacity: 0; transform: translateY(-20px); }\n}\n\n/* Estilos del tooltip */\n.tooltip-container {\n  position: relative;\n}\n\n.tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 8px 12px;\n  background-color: #333;\n  color: white;\n  border-radius: 6px;\n  font-size: 14px;\n  white-space: nowrap;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.3s, visibility 0.3s;\n}\n\n.tooltip::after {\n  content: '';\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  border: 6px solid transparent;\n  border-top-color: #333;\n}\n\n.tooltip-visible {\n  opacity: 1;\n  visibility: visible;\n}\n\n.action-button:hover .tooltip {\n  opacity: 1;\n  visibility: visible;\n}\n\n/* Añadir estilos para botones deshabilitados */\n.toggle-button:disabled {\n  background-color: #cccccc;\n  color: #666666;\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n</style>"],"mappings":";;;;;;;;;;;;;AAKA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAC9C,SAASC,QAAO,QAAS,yBAAyB;AAClD,SAASC,sBAAqB,QAAS,2BAA2B;AAClE,SAASC,eAAc,QAAS,yBAAyB;AACzD,OAAOC,mBAAkB,MAAO,2BAA2B;AAC3D,SAASC,MAAK,QAAS,YAAY;AACnC,OAAO,KAAKC,IAAG,MAAO,MAAM;AAC5B,SAASC,KAAI,QAAS,OAAO;AAC7B,OAAO,iBAAiB;AACxB,SACEC,YAAY,EACZC,aAAa,EACbC,eAAe,EACfC,gBAAe,IAAKC,oBAAoB,EACxCC,YAAY,EACZC,aAAa,EACbC,oBAAoB,EACpBC,uBAAuB,EACvBC,aAAa,EACbC,sBAAqB,QAChB,4BAA4B;AACnC,SAASC,OAAO,EAAEC,KAAI,QAAS,2BAA2B;AAC1D,SAASC,cAAc,EAAEC,OAAM,QAAS,yBAAyB;AACjE,SAASC,YAAW,QAAS,6BAA6B;AAE1D,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACVrB;EACF,CAAC;EACDsB,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAKA,CAACL,KAAK,EAAE;IACX;IACA,MAAMM,YAAW,GAAIlC,GAAG,CAAC;MACvB0B,IAAI,EAAE,EAAE;MACRS,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,MAAMC,gBAAe,GAAIvC,GAAG,CAAC,KAAK,CAAC;;IAEnC;IACA,MAAMwC,WAAU,GAAIxC,GAAG,CAAC;MACtByC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE;IACd,CAAC,CAAC;IACF,MAAMC,eAAc,GAAI7C,GAAG,CAAC,KAAK,CAAC;;IAElC;IACA,MAAM8C,OAAM,GAAI9C,GAAG,CAAC;MAClB0B,IAAI,EAAE,EAAE;MACRS,WAAW,EAAE,EAAE;MACfY,KAAK,EAAE,CAAC;MACRC,aAAa,EAAE,KAAK;MACpBC,iBAAiB,EAAE,CAAC;MACpBC,KAAK,EAAE,EAAE;MACTC,EAAE,EAAE;IACN,CAAC,CAAC;IACF,MAAMC,SAAQ,GAAIpD,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMqD,YAAW,GAAIrD,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMsD,SAAQ,GAAItD,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMuD,YAAW,GAAIvD,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE5B;IACA,MAAMwD,SAAQ,GAAIxD,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMyD,UAAS,GAAIzD,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAM0D,MAAK,GAAI1D,GAAG,CAAC,EAAE,CAAC;IACtB,MAAM2D,cAAa,GAAI3D,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAM4D,iBAAgB,GAAI5D,GAAG,CAAC,KAAK,CAAC;;IAEpC;IACA,MAAM6D,SAAQ,GAAI7D,GAAG,CAAC,EAAE,CAAC;IACzB,MAAM8D,iBAAgB,GAAI9D,GAAG,CAAC,KAAK,CAAC;;IAEpC;IACA,MAAM+D,eAAc,GAAI/D,GAAG,CAAC;MAC1BgE,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACA,MAAMC,UAAS,GAAInE,GAAG,CAAC,IAAI,CAAC;;IAE5B;IACA,MAAMoE,KAAI,GAAIpE,GAAG,CAAC;MAChBqE,IAAI,EAAE,KAAK;MACXH,OAAO,EAAE,EAAE;MACXpC,IAAI,EAAE,SAAQ,CAAE;IAClB,CAAC,CAAC;;IAEF;IACA,MAAMwC,gBAAe,GAAKC,KAAK,IAAK;MAClCC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CJ,UAAU,CAACM,KAAI,GAAIF,KAAK;IAC1B,CAAC;;IAED;IACA,MAAMG,YAAW,GAAI1E,GAAG,CAAC;MACvBqE,IAAI,EAAE,KAAK;MACXH,OAAO,EAAE,EAAE;MACXpC,IAAI,EAAE,SAAS;MAAE;MACjB6C,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACA,MAAMC,cAAa,GAAI5E,GAAG,CAAC;MACzB0B,IAAI,EAAE,EAAE;MACRS,WAAW,EAAE,EAAE;MACfY,KAAK,EAAE,CAAC;MACRC,aAAa,EAAE,KAAK;MACpBC,iBAAiB,EAAE,CAAC;MACpBC,KAAK,EAAE,EAAE;MACTC,EAAE,EAAE;IACN,CAAC,CAAC;IACF,MAAM0B,gBAAe,GAAI7E,GAAG,CAAC,EAAE,CAAC;IAChC,MAAM8E,mBAAkB,GAAI9E,GAAG,CAAC,KAAK,CAAC;IACtC,MAAM+E,gBAAe,GAAI/E,GAAG,CAAC,KAAK,CAAC;IACnC,MAAMgF,mBAAkB,GAAIhF,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEnC;IACAE,SAAS,CAAC,YAAY;MACpB,IAAI;QACF6D,eAAe,CAACU,KAAK,CAACT,UAAS,GAAI,IAAI;QACvCD,eAAe,CAACU,KAAK,CAACP,OAAM,GAAI,mBAAmB;QAEnD,MAAMe,YAAW,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,KACnCD,YAAY,CAACC,OAAO,CAAC,WAAW,KAChCD,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAEtD,IAAIF,YAAY,EAAE;UAChBlB,eAAe,CAACU,KAAK,CAACP,OAAM,GAAI,kDAAkD;UAElF,MAAMkB,eAAc,GAAI,MAAMlE,uBAAuB,CAAC,CAAC;UAEvD,IAAIkE,eAAe,EAAE;YACnBrB,eAAe,CAACU,KAAK,CAACR,SAAQ,GAAI,IAAI;YACtCF,eAAe,CAACU,KAAK,CAACP,OAAM,GAAI,mCAAmC;YACnEgB,YAAY,CAACG,UAAU,CAAC,cAAc,CAAC;YACvCH,YAAY,CAACG,UAAU,CAAC,WAAW,CAAC;YACpCH,YAAY,CAACG,UAAU,CAAC,WAAW,CAAC;UACtC,OAAO;YACLtB,eAAe,CAACU,KAAK,CAACP,OAAM,GAAI,gCAAgC;UAClE;QACF;QAEA,MAAMoB,cAAa,GAAI,MAAM1E,eAAe,CAAC,CAAC;QAC9C,IAAI0E,cAAa,IAAKA,cAAc,CAAC5D,IAAI,EAAE;UACzCQ,YAAY,CAACuC,KAAI,GAAIa,cAAc;QACrC;QAEA,MAAMC,WAAU,GAAI,MAAM7E,YAAY,CAAC,CAAC;QACxC,IAAI6E,WAAU,IAAKA,WAAW,CAACC,MAAK,GAAI,CAAC,EAAE;UACzC;UACA,MAAMC,YAAW,GAAIF,WAAW,CAACG,MAAM,CAACC,IAAG,IAAK,CAACA,IAAI,CAACC,SAAS,CAAC;UAChE,MAAMC,YAAW,GAAIN,WAAW,CAACG,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,SAAQ,KAAM,IAAI,CAAC;UAExExC,SAAS,CAACqB,KAAI,GAAIgB,YAAY;UAE9B,IAAII,YAAY,CAACL,MAAK,GAAI,CAAC,EAAE;YAC3BX,gBAAgB,CAACJ,KAAI,GAAIoB,YAAY;UACvC;QACF;QAEA,MAAMC,WAAU,GAAI,MAAM/E,YAAY,CAAC,CAAC;QACxC,IAAI+E,WAAU,IAAKA,WAAW,CAACN,MAAK,GAAI,CAAC,EAAE;UACzChC,SAAS,CAACiB,KAAI,GAAIqB,WAAW;QAC/B;QAEAC,UAAU,CAAC,MAAM;UACfhC,eAAe,CAACU,KAAK,CAACT,UAAS,GAAI,KAAK;QAC1C,CAAC,EAAE,IAAI,CAAC;MACV,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CR,eAAe,CAACU,KAAK,CAACP,OAAM,GAAI,yBAAwB,GAAIK,KAAK,CAACL,OAAO;QACzE6B,UAAU,CAAC,MAAM;UACfhC,eAAe,CAACU,KAAK,CAACT,UAAS,GAAI,KAAK;QAC1C,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC,CAAC;;IAEF;IACA,MAAMgC,kBAAiB,GAAIA,CAAA,KAAM;MAC/BzD,gBAAgB,CAACkC,KAAI,GAAI,CAAClC,gBAAgB,CAACkC,KAAK;IAClD,CAAC;IAED,MAAMwB,YAAW,GAAI,MAAOC,KAAK,IAAK;MACpC,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAOC,CAAC,IAAK;UAC3B,MAAMC,cAAa,GAAI,MAAMvF,aAAa,CAACsF,CAAC,CAACL,MAAM,CAACO,MAAM,CAAC;UAC3DzE,YAAY,CAACuC,KAAK,CAACnC,IAAG,GAAIoE,cAAc;QAC1C,CAAC;QACDJ,MAAM,CAACM,aAAa,CAACT,IAAI,CAAC;MAC5B;IACF,CAAC;IAED,MAAMtF,gBAAe,GAAI,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,IAAI6D,YAAY,CAACD,KAAK,CAACE,OAAO,EAAE;UAC9BkC,YAAY,CAACnC,YAAY,CAACD,KAAK,CAACE,OAAO,CAAC;QAC1C;QAEA,MAAM7D,oBAAoB,CAACoB,YAAY,CAACuC,KAAK,CAAC;QAE9CC,YAAY,CAACD,KAAI,GAAI;UACnBJ,IAAI,EAAE,IAAI;UACVH,OAAO,EAAE,6CAA6C;UACtDpC,IAAI,EAAE,SAAS;UACf6C,OAAO,EAAEoB,UAAU,CAAC,MAAM;YACxBrB,YAAY,CAACD,KAAK,CAACJ,IAAG,GAAI,KAAK;UACjC,CAAC,EAAE,IAAI;QACT,CAAC;MACH,EAAE,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;QAEjEG,YAAY,CAACD,KAAI,GAAI;UACnBJ,IAAI,EAAE,IAAI;UACVH,OAAO,EAAE,iEAAiE;UAC1EpC,IAAI,EAAE,OAAO;UACb6C,OAAO,EAAEoB,UAAU,CAAC,MAAM;YACxBrB,YAAY,CAACD,KAAK,CAACJ,IAAG,GAAI,KAAK;UACjC,CAAC,EAAE,IAAI;QACT,CAAC;MACH;IACF,CAAC;IAED,MAAMyC,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,MAAMC,SAAQ,GAAI,MAAM1F,OAAO,CAAC,gDAAgD,CAAC;MACjF,IAAI0F,SAAS,EAAE;QACb7E,YAAY,CAACuC,KAAI,GAAI;UACnB/C,IAAI,EAAE,EAAE;UACRS,WAAW,EAAE,EAAE;UACfC,OAAO,EAAE,EAAE;UACXC,OAAO,EAAE,EAAE;UACXC,IAAI,EAAE;QACR,CAAC;MACH;IACF,CAAC;;IAED;IACA,MAAM0E,iBAAgB,GAAIA,CAAA,KAAM;MAC9BnE,eAAe,CAAC4B,KAAI,GAAI,CAAC5B,eAAe,CAAC4B,KAAK;IAChD,CAAC;IAED,MAAMwC,eAAc,GAAI,MAAOf,KAAK,IAAK;MACvC,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAOC,CAAC,IAAK;UAC3B,MAAMS,eAAc,GAAI,MAAM/F,aAAa,CAACsF,CAAC,CAACL,MAAM,CAACO,MAAM,CAAC;UAC5DnE,WAAW,CAACiC,KAAK,CAAC/B,OAAM,GAAIwE,eAAe;QAC7C,CAAC;QACDZ,MAAM,CAACM,aAAa,CAACT,IAAI,CAAC;MAC5B;IACF,CAAC;IAED,MAAMgB,kBAAiB,GAAI,MAAOjB,KAAK,IAAK;MAC1C,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAOC,CAAC,IAAK;UAC3B,MAAMS,eAAc,GAAI,MAAM/F,aAAa,CAACsF,CAAC,CAACL,MAAM,CAACO,MAAM,CAAC;UAC5DnE,WAAW,CAACiC,KAAK,CAAC7B,UAAS,GAAIsE,eAAe;QAChD,CAAC;QACDZ,MAAM,CAACM,aAAa,CAACT,IAAI,CAAC;MAC5B;IACF,CAAC;IAED,MAAMiB,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,IAAI1C,YAAY,CAACD,KAAK,CAACE,OAAO,EAAE;UAC9BkC,YAAY,CAACnC,YAAY,CAACD,KAAK,CAACE,OAAO,CAAC;QAC1C;QAEAzC,YAAY,CAACuC,KAAK,CAACjC,WAAU,GAAI;UAAE,GAAGA,WAAW,CAACiC;QAAM,CAAC;QAEzD,MAAM3D,oBAAoB,CAACoB,YAAY,CAACuC,KAAK,CAAC;QAE9CC,YAAY,CAACD,KAAI,GAAI;UACnBJ,IAAI,EAAE,IAAI;UACVH,OAAO,EAAE,yCAAyC;UAClDpC,IAAI,EAAE,SAAS;UACf6C,OAAO,EAAEoB,UAAU,CAAC,MAAM;YACxBrB,YAAY,CAACD,KAAK,CAACJ,IAAG,GAAI,KAAK;UACjC,CAAC,EAAE,IAAI;QACT,CAAC;MACH,EAAE,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAE7DG,YAAY,CAACD,KAAI,GAAI;UACnBJ,IAAI,EAAE,IAAI;UACVH,OAAO,EAAE,yEAAyE;UAClFpC,IAAI,EAAE,OAAO;UACb6C,OAAO,EAAEoB,UAAU,CAAC,MAAM;YACxBrB,YAAY,CAACD,KAAK,CAACJ,IAAG,GAAI,KAAK;UACjC,CAAC,EAAE,IAAI;QACT,CAAC;MACH;IACF,CAAC;IAED,MAAMgD,gBAAe,GAAI,MAAAA,CAAA,KAAY;MACnC,MAAMN,SAAQ,GAAI,MAAM1F,OAAO,CAAC,yDAAyD,CAAC;MAC1F,IAAI0F,SAAS,EAAE;QACbvE,WAAW,CAACiC,KAAI,GAAI;UAClBhC,OAAO,EAAE,EAAE;UACXC,OAAO,EAAE,EAAE;UACXC,WAAW,EAAE,EAAE;UACfC,UAAU,EAAE;QACd,CAAC;MACH;IACF,CAAC;;IAED;IACA,MAAM0E,cAAa,GAAIA,CAAA,KAAM;MAC3BjE,YAAY,CAACoB,KAAI,GAAI,CAACpB,YAAY,CAACoB,KAAK;MACxC,IAAI,CAACpB,YAAY,CAACoB,KAAK,EAAE;QACvB8C,aAAa,CAAC,CAAC;MACjB;IACF,CAAC;IAED,MAAMC,aAAY,GAAI,MAAOtB,KAAK,IAAK;MACrC,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAOC,CAAC,IAAK;UAC3B,MAAMS,eAAc,GAAI,MAAM/F,aAAa,CAACsF,CAAC,CAACL,MAAM,CAACO,MAAM,CAAC;UAC5D7D,OAAO,CAAC2B,KAAK,CAACvB,KAAI,GAAIgE,eAAe;QACvC,CAAC;QACDZ,MAAM,CAACM,aAAa,CAACT,IAAI,CAAC;MAC5B;IACF,CAAC;IAED,MAAMsB,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA,IAAI,CAAC3E,OAAO,CAAC2B,KAAK,CAAC/C,IAAG,IAAK,CAACoB,OAAO,CAAC2B,KAAK,CAAC1B,KAAK,EAAE;UAC/C2E,gBAAgB,CAAC,wCAAwC,EAAE,OAAO,CAAC;UACnE;QACF;QAEA,IAAI5E,OAAO,CAAC2B,KAAK,CAACxB,iBAAgB,GAAI,CAAC,EAAE;UACvCyE,gBAAgB,CAAC,8CAA8C,EAAE,OAAO,CAAC;UACzE;QACF;;QAEA;QACA,IAAI,CAAC5E,OAAO,CAAC2B,KAAK,CAACtB,EAAE,EAAE;UACrBL,OAAO,CAAC2B,KAAK,CAACtB,EAAC,GAAIwE,IAAI,CAACC,GAAG,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;QAC7E;QAEA,IAAI;UACFxD,OAAO,CAACyD,GAAG,CAAC,sCAAsC,EAAEnF,OAAO,CAAC2B,KAAK,CAAC;;UAElE;UACA,MAAMyD,UAAS,GAAI,MAAMzG,YAAY,CAACqB,OAAO,CAAC2B,KAAK,CAAC;UACpDD,OAAO,CAACyD,GAAG,CAAC,iCAAiC,EAAEC,UAAU,CAAC;UAE1D,IAAI5E,SAAS,CAACmB,KAAK,EAAE;YACnB;YACA,MAAM0D,KAAI,GAAI/E,SAAS,CAACqB,KAAK,CAAC2D,SAAS,CAACzC,IAAG,IAAKA,IAAI,CAACxC,EAAC,KAAM+E,UAAU,CAAC/E,EAAE,CAAC;YAC1E,IAAIgF,KAAI,KAAM,CAAC,CAAC,EAAE;cAChB/E,SAAS,CAACqB,KAAK,CAAC0D,KAAK,IAAI;gBAAE,GAAGD;cAAW,CAAC;cAC1CR,gBAAgB,CAAC,gCAAgC,EAAE,SAAS,CAAC;YAC/D;UACF,OAAO;YACL;YACAtE,SAAS,CAACqB,KAAK,CAAC4D,IAAI,CAAC;cAAE,GAAGH;YAAW,CAAC,CAAC;YACvCR,gBAAgB,CAAC,2BAA2B,EAAE,SAAS,CAAC;UAC1D;;UAEA;UACA,MAAM/G,aAAa,CAACyC,SAAS,CAACqB,KAAK,CAAC;;UAEpC;UACA8C,aAAa,CAAC,CAAC;QAEjB,EAAE,OAAOhD,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;UAC/DmD,gBAAgB,CAAC,8BAA8BnD,KAAK,CAACL,OAAM,IAAK,oBAAoB,EAAE,EAAE,OAAO,CAAC;QAClG;MACF,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDmD,gBAAgB,CAAC,qBAAqBnD,KAAK,CAACL,OAAM,IAAK,oBAAoB,EAAE,EAAE,OAAO,CAAC;MACzF;IACF,CAAC;IAED,MAAMqD,aAAY,GAAIA,CAAA,KAAM;MAC1BzE,OAAO,CAAC2B,KAAI,GAAI;QACd/C,IAAI,EAAE,EAAE;QACRS,WAAW,EAAE,EAAE;QACfY,KAAK,EAAE,CAAC;QACRC,aAAa,EAAE,KAAK;QACpBC,iBAAiB,EAAE,CAAC;QACpBC,KAAK,EAAE,EAAE;QACTC,EAAE,EAAE;MACN,CAAC;MACDG,SAAS,CAACmB,KAAI,GAAI,KAAK;MACvBlB,YAAY,CAACkB,KAAI,GAAI,CAAC,CAAC;IACzB,CAAC;IAED,MAAM6D,YAAW,GAAKH,KAAK,IAAK;MAC9BrF,OAAO,CAAC2B,KAAI,GAAI;QAAE,GAAGrB,SAAS,CAACqB,KAAK,CAAC0D,KAAK;MAAE,CAAC;MAC7C7E,SAAS,CAACmB,KAAI,GAAI,IAAI;MACtBlB,YAAY,CAACkB,KAAI,GAAI0D,KAAK;MAC1B9E,YAAY,CAACoB,KAAI,GAAI,IAAI;IAC3B,CAAC;IAED,MAAM8D,cAAa,GAAI,MAAOJ,KAAK,IAAK;MACtC,IAAI;QACF,MAAMxC,IAAG,GAAIvC,SAAS,CAACqB,KAAK,CAAC0D,KAAK,CAAC;QAEnC,IAAI,CAACxC,IAAI,EAAE;UACTnB,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAE4D,KAAK,CAAC;UAC3E,MAAM7G,KAAK,CAAC,8CAA8C,CAAC;UAC3D;QACF;;QAEA;QACA,IAAI,CAACD,OAAO,CAAC,yCAAyCsE,IAAI,CAACjE,IAAG,IAAK,YAAY,aAAa,CAAC,EAAE;UAC7F;QACF;;QAEA;QACA,IAAI;UACF8C,OAAO,CAACyD,GAAG,CAAC,4BAA4BtC,IAAI,CAACxC,EAAE,qBAAqB,CAAC;UACrE,MAAMqF,QAAO,GAAI,MAAMC,KAAK,CAAC,0CAA0CC,kBAAkB,CAAC/C,IAAI,CAACxC,EAAE,CAAC,EAAE,EAAE;YACpGwF,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACP,eAAe,EAAE;YACnB;UACF,CAAC,CAAC;UAEF,MAAMjC,MAAK,GAAI,MAAM6B,QAAQ,CAACK,IAAI,CAAC,CAAC;UACpCrE,OAAO,CAACyD,GAAG,CAAC,sCAAsC,EAAEtB,MAAM,CAAC;UAE3D,IAAI,CAACA,MAAM,CAACmC,OAAO,EAAE;YACnBtE,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEoC,MAAM,CAACzC,OAAO,CAAC;YACtE5C,KAAK,CAAC,4BAA4BqF,MAAM,CAACzC,OAAO,EAAE,CAAC;UACrD;QACF,EAAE,OAAO6E,WAAW,EAAE;UACpBvE,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEwE,WAAW,CAAC;QACrE;;QAEA;QACA,IAAIpD,IAAI,CAACxC,EAAE,EAAE;UACX,IAAI;YACFqB,OAAO,CAACyD,GAAG,CAAC,4CAA4CtC,IAAI,CAACxC,EAAE,EAAE,CAAC;YAClE,MAAM6F,YAAW,GAAI,MAAM/H,oBAAoB,CAAC0E,IAAI,CAACxC,EAAE,CAAC;YACxDqB,OAAO,CAACyD,GAAG,CAAC,6CAA6Ce,YAAY,EAAE,CAAC;UAC1E,EAAE,OAAOC,WAAW,EAAE;YACpBzE,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAE0E,WAAW,CAAC;UACzE;QACF;;QAEA;QACA7F,SAAS,CAACqB,KAAK,CAACyE,MAAM,CAACf,KAAK,EAAE,CAAC,CAAC;;QAEhC;QACAT,gBAAgB,CAAC,+BAA+B,EAAE,SAAS,CAAC;MAE9D,EAAE,OAAOnD,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5DmD,gBAAgB,CAAC,4BAA4B,EAAE,OAAO,CAAC;MACzD;IACF,CAAC;IAED,MAAMyB,YAAW,GAAI,MAAOhB,KAAK,IAAK;MACpC,IAAI;QACF,MAAMxC,IAAG,GAAIvC,SAAS,CAACqB,KAAK,CAAC0D,KAAK,CAAC;;QAEnC;QACA,IAAI,CAACxC,IAAI,CAAC1C,iBAAgB,IAAK0C,IAAI,CAAC1C,iBAAgB,IAAK,CAAC,EAAE;UAC1DyE,gBAAgB,CAAC,yBAAyB,EAAE,OAAO,CAAC;UACpD;QACF;QAEA,MAAMX,SAAQ,GAAI,MAAM1F,OAAO,CAC7B,gCAAgCsE,IAAI,CAACjE,IAAI,oBAAoBiE,IAAI,CAAC1C,iBAAiB,EACrF,CAAC;QAED,IAAI8D,SAAS,EAAE;UACb,IAAI;YACF,MAAMqC,WAAU,GAAIzD,IAAI,CAAC1C,iBAAgB,GAAI,CAAC;;YAE9C;YACA,MAAM7B,sBAAsB,CAACuE,IAAI,CAACxC,EAAE,EAAEiG,WAAW,CAAC;;YAElD;YACAzD,IAAI,CAAC1C,iBAAgB,GAAImG,WAAW;;YAEpC;YACA,MAAMC,WAAU,GAAI,IAAI1B,IAAI,CAAC,CAAC,CAAC2B,WAAW,CAAC,CAAC;YAC5C,MAAMC,QAAO,GAAI/F,SAAS,CAACiB,KAAK,CAAC+E,IAAI,CAACC,IAAG,IAAKA,IAAI,CAAC/H,IAAG,KAAMiE,IAAI,CAACjE,IAAI,CAAC;YAEtE,IAAI6H,QAAQ,EAAE;cACZA,QAAQ,CAACG,QAAO,IAAK,CAAC;cACtBH,QAAQ,CAACI,IAAG,GAAIN,WAAW;YAC7B,OAAO;cACL7F,SAAS,CAACiB,KAAK,CAAC4D,IAAI,CAAC;gBACnB3G,IAAI,EAAEiE,IAAI,CAACjE,IAAI;gBACfgI,QAAQ,EAAE,CAAC;gBACX3G,KAAK,EAAE4C,IAAI,CAAC5C,KAAK;gBACjBC,aAAa,EAAE2C,IAAI,CAAC3C,aAAa;gBACjC2G,IAAI,EAAEN;cACR,CAAC,CAAC;YACJ;;YAEA;YACA,MAAMrI,aAAa,CAACwC,SAAS,CAACiB,KAAK,CAAC;YAEpCiD,gBAAgB,CAAC,+BAA+B/B,IAAI,CAACjE,IAAI,EAAE,EAAE,SAAS,CAAC;YAEvE,IAAI0H,WAAU,IAAK,CAAC,EAAE;cACpB1B,gBAAgB,CAAC,0BAA0B0B,WAAW,gBAAgBzD,IAAI,CAACjE,IAAI,EAAE,EAAE,SAAS,CAAC;YAC/F;UACF,EAAE,OAAO6C,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;YACnDmD,gBAAgB,CAAC,4DAA4D,EAAE,OAAO,CAAC;UACzF;QACF;MACF,EAAE,OAAOnD,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDmD,gBAAgB,CAAC,4DAA4D,EAAE,OAAO,CAAC;MACzF;IACF,CAAC;;IAED;IACA,MAAMkC,qBAAoB,GAAIA,CAAA,KAAM;MAClC9E,mBAAmB,CAACL,KAAI,GAAI,CAACK,mBAAmB,CAACL,KAAK;MACtD,IAAI,CAACK,mBAAmB,CAACL,KAAK,EAAE;QAC9BoF,oBAAoB,CAAC,CAAC;MACxB;IACF,CAAC;IAED,MAAMC,oBAAmB,GAAI,MAAO5D,KAAK,IAAK;MAC5C,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAOC,CAAC,IAAK;UAC3B,MAAMS,eAAc,GAAI,MAAM/F,aAAa,CAACsF,CAAC,CAACL,MAAM,CAACO,MAAM,CAAC;UAC5D/B,cAAc,CAACH,KAAK,CAACvB,KAAI,GAAIgE,eAAe;QAC9C,CAAC;QACDZ,MAAM,CAACM,aAAa,CAACT,IAAI,CAAC;MAC5B;IACF,CAAC;IAED,MAAM4D,mBAAkB,GAAI,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,IAAI,CAACnF,cAAc,CAACH,KAAK,CAAC/C,IAAG,IAAK,CAACkD,cAAc,CAACH,KAAK,CAAC1B,KAAK,EAAE;UAC7D2E,gBAAgB,CAAC,wCAAwC,EAAE,OAAO,CAAC;UACnE;QACF;QAEA,IAAI,CAAC9C,cAAc,CAACH,KAAK,CAACtB,EAAE,EAAE;UAC5ByB,cAAc,CAACH,KAAK,CAACtB,EAAC,GAAIwE,IAAI,CAACC,GAAG,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;QACpF;;QAEA;QACApD,cAAc,CAACH,KAAK,CAACmB,SAAQ,GAAI,IAAI;QAErC,IAAI;UACFpB,OAAO,CAACyD,GAAG,CAAC,+CAA+C,EAAErD,cAAc,CAACH,KAAK,CAAC;;UAElF;UACA,MAAMyD,UAAS,GAAI,MAAMzG,YAAY,CAACmD,cAAc,CAACH,KAAK,CAAC;UAC3DD,OAAO,CAACyD,GAAG,CAAC,0CAA0C,EAAEC,UAAU,CAAC;UAEnE,IAAInD,gBAAgB,CAACN,KAAK,EAAE;YAC1B;YACA,MAAM0D,KAAI,GAAItD,gBAAgB,CAACJ,KAAK,CAAC2D,SAAS,CAACzC,IAAG,IAAKA,IAAI,CAACxC,EAAC,KAAM+E,UAAU,CAAC/E,EAAE,CAAC;YACjF,IAAIgF,KAAI,KAAM,CAAC,CAAC,EAAE;cAChBtD,gBAAgB,CAACJ,KAAK,CAAC0D,KAAK,IAAI;gBAAE,GAAGD;cAAW,CAAC;cACjDR,gBAAgB,CAAC,yCAAyC,EAAE,SAAS,CAAC;YACxE;YACA3C,gBAAgB,CAACN,KAAI,GAAI,KAAK;YAC9BO,mBAAmB,CAACP,KAAI,GAAI,CAAC,CAAC;UAChC,OAAO;YACL,MAAMuF,YAAW,GAAInF,gBAAgB,CAACJ,KAAK,CAAC+E,IAAI,CAAC7D,IAAG,IAClDA,IAAI,CAACjE,IAAI,CAACuI,WAAW,CAAC,MAAM/B,UAAU,CAACxG,IAAI,CAACuI,WAAW,CAAC,CAC1D,CAAC;YAED,IAAID,YAAY,EAAE;cAChB,MAAMjD,SAAQ,GAAI,MAAM1F,OAAO,CAC7B,wCAAwC6G,UAAU,CAACxG,IAAI,yBAAyB,EAChF;gBAAEwI,KAAK,EAAE;cAAsC,CACjD,CAAC;cAED,IAAInD,SAAS,EAAE;gBACb,MAAMoB,KAAI,GAAItD,gBAAgB,CAACJ,KAAK,CAAC2D,SAAS,CAACzC,IAAG,IAAKA,IAAI,CAACxC,EAAC,KAAM6G,YAAY,CAAC7G,EAAE,CAAC;gBACnF,IAAIgF,KAAI,KAAM,CAAC,CAAC,EAAE;kBAChB;kBACA,MAAMgC,YAAW,GAAI;oBACnB,GAAGjC,UAAU;oBACb/E,EAAE,EAAE6G,YAAY,CAAC7G;kBACnB,CAAC;;kBAED;kBACA,MAAM1B,YAAY,CAAC0I,YAAY,CAAC;;kBAEhC;kBACAtF,gBAAgB,CAACJ,KAAK,CAAC0D,KAAK,IAAI;oBAAE,GAAGgC;kBAAa,CAAC;kBACnDzC,gBAAgB,CAAC,yCAAyC,EAAE,SAAS,CAAC;gBACxE;cACF,OAAO;gBACL;cACF;YACF,OAAO;cACL;cACA7C,gBAAgB,CAACJ,KAAK,CAAC4D,IAAI,CAAC;gBAAE,GAAGH;cAAW,CAAC,CAAC;cAC9CR,gBAAgB,CAAC,oCAAoC,EAAE,SAAS,CAAC;YACnE;UACF;;UAEA;UACA,MAAM/G,aAAa,CAAC,CAAC,GAAGyC,SAAS,CAACqB,KAAK,EAAE,GAAGI,gBAAgB,CAACJ,KAAK,CAAC,CAAC;;UAEpE;UACAoF,oBAAoB,CAAC,CAAC;QACxB,EAAE,OAAOtF,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;UAC1DmD,gBAAgB,CAAC,uCAAuCnD,KAAK,CAACL,OAAM,IAAK,oBAAoB,EAAE,EAAE,OAAO,CAAC;QAC3G;MACF,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QAC/DmD,gBAAgB,CAAC,qBAAqBnD,KAAK,CAACL,OAAM,IAAK,oBAAoB,EAAE,EAAE,OAAO,CAAC;MACzF;IACF,CAAC;IAED,MAAM2F,oBAAmB,GAAIA,CAAA,KAAM;MACjCjF,cAAc,CAACH,KAAI,GAAI;QACrB/C,IAAI,EAAE,EAAE;QACRS,WAAW,EAAE,EAAE;QACfY,KAAK,EAAE,CAAC;QACRC,aAAa,EAAE,KAAK;QACpBC,iBAAiB,EAAE,CAAC;QACpBC,KAAK,EAAE,EAAE;QACTC,EAAE,EAAE;MACN,CAAC;MACD4B,gBAAgB,CAACN,KAAI,GAAI,KAAK;MAC9BO,mBAAmB,CAACP,KAAI,GAAI,CAAC,CAAC;IAChC,CAAC;IAED,MAAM2F,mBAAkB,GAAKjC,KAAK,IAAK;MACrCvD,cAAc,CAACH,KAAI,GAAI;QAAE,GAAGI,gBAAgB,CAACJ,KAAK,CAAC0D,KAAK;MAAE,CAAC;MAC3DpD,gBAAgB,CAACN,KAAI,GAAI,IAAI;MAC7BO,mBAAmB,CAACP,KAAI,GAAI0D,KAAK;MACjCrD,mBAAmB,CAACL,KAAI,GAAI,IAAI;IAClC,CAAC;IAED,MAAM4F,qBAAoB,GAAI,MAAOlC,KAAK,IAAK;MAC7C,IAAI;QACF,MAAMxC,IAAG,GAAId,gBAAgB,CAACJ,KAAK,CAAC0D,KAAK,CAAC;QAE1C,IAAI,CAACxC,IAAI,EAAE;UACTnB,OAAO,CAACD,KAAK,CAAC,8DAA8D,EAAE4D,KAAK,CAAC;UACpF,MAAM7G,KAAK,CAAC,8CAA8C,CAAC;UAC3D;QACF;;QAEA;QACA,IAAI,CAACD,OAAO,CAAC,yCAAyCsE,IAAI,CAACjE,IAAG,IAAK,YAAY,sBAAsB,CAAC,EAAE;UACtG;QACF;;QAEA;QACA,IAAI;UACF8C,OAAO,CAACyD,GAAG,CAAC,4BAA4BtC,IAAI,CAACxC,EAAE,qBAAqB,CAAC;UACrE,MAAMqF,QAAO,GAAI,MAAMC,KAAK,CAAC,0CAA0CC,kBAAkB,CAAC/C,IAAI,CAACxC,EAAE,CAAC,EAAE,EAAE;YACpGwF,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACP,eAAe,EAAE;YACnB;UACF,CAAC,CAAC;UAEF,MAAMjC,MAAK,GAAI,MAAM6B,QAAQ,CAACK,IAAI,CAAC,CAAC;UACpCrE,OAAO,CAACyD,GAAG,CAAC,sCAAsC,EAAEtB,MAAM,CAAC;UAE3D,IAAI,CAACA,MAAM,CAACmC,OAAO,EAAE;YACnBtE,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEoC,MAAM,CAACzC,OAAO,CAAC;YACtE5C,KAAK,CAAC,4BAA4BqF,MAAM,CAACzC,OAAO,EAAE,CAAC;UACrD;QACF,EAAE,OAAO6E,WAAW,EAAE;UACpBvE,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEwE,WAAW,CAAC;QACrE;;QAEA;QACA,IAAIpD,IAAI,CAACxC,EAAE,EAAE;UACX,IAAI;YACFqB,OAAO,CAACyD,GAAG,CAAC,4CAA4CtC,IAAI,CAACxC,EAAE,EAAE,CAAC;YAClE,MAAM6F,YAAW,GAAI,MAAM/H,oBAAoB,CAAC0E,IAAI,CAACxC,EAAE,CAAC;YACxDqB,OAAO,CAACyD,GAAG,CAAC,6CAA6Ce,YAAY,EAAE,CAAC;UAC1E,EAAE,OAAOC,WAAW,EAAE;YACpBzE,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAE0E,WAAW,CAAC;UACzE;QACF;;QAEA;QACApE,gBAAgB,CAACJ,KAAK,CAACyE,MAAM,CAACf,KAAK,EAAE,CAAC,CAAC;;QAEvC;QACAT,gBAAgB,CAAC,+BAA+B,EAAE,SAAS,CAAC;MAE9D,EAAE,OAAOnD,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;QACrEmD,gBAAgB,CAAC,4BAA4B,EAAE,OAAO,CAAC;MACzD;IACF,CAAC;IAED,MAAM4C,mBAAkB,GAAI,MAAOnC,KAAK,IAAK;MAC3C,IAAI;QACF,MAAMxC,IAAG,GAAId,gBAAgB,CAACJ,KAAK,CAAC0D,KAAK,CAAC;;QAE1C;QACA,IAAI,CAACxC,IAAI,CAAC1C,iBAAgB,IAAK0C,IAAI,CAAC1C,iBAAgB,IAAK,CAAC,EAAE;UAC1DyE,gBAAgB,CAAC,kCAAkC,EAAE,OAAO,CAAC;UAC7D;QACF;QAEA,MAAMX,SAAQ,GAAI,MAAM1F,OAAO,CAC7B,gCAAgCsE,IAAI,CAACjE,IAAI,oBAAoBiE,IAAI,CAAC1C,iBAAiB,EACrF,CAAC;QAED,IAAI8D,SAAS,EAAE;UACb,IAAI;YACF,MAAMqC,WAAU,GAAIzD,IAAI,CAAC1C,iBAAgB,GAAI,CAAC;;YAE9C;YACA,MAAM7B,sBAAsB,CAACuE,IAAI,CAACxC,EAAE,EAAEiG,WAAW,CAAC;;YAElD;YACAzD,IAAI,CAAC1C,iBAAgB,GAAImG,WAAW;;YAEpC;YACA,MAAMC,WAAU,GAAI,IAAI1B,IAAI,CAAC,CAAC,CAAC2B,WAAW,CAAC,CAAC;YAC5C,MAAMC,QAAO,GAAI/F,SAAS,CAACiB,KAAK,CAAC+E,IAAI,CAACC,IAAG,IAAKA,IAAI,CAAC/H,IAAG,KAAMiE,IAAI,CAACjE,IAAI,CAAC;YAEtE,IAAI6H,QAAQ,EAAE;cACZA,QAAQ,CAACG,QAAO,IAAK,CAAC;cACtBH,QAAQ,CAACI,IAAG,GAAIN,WAAW;YAC7B,OAAO;cACL7F,SAAS,CAACiB,KAAK,CAAC4D,IAAI,CAAC;gBACnB3G,IAAI,EAAEiE,IAAI,CAACjE,IAAI;gBACfgI,QAAQ,EAAE,CAAC;gBACX3G,KAAK,EAAE4C,IAAI,CAAC5C,KAAK;gBACjBC,aAAa,EAAE2C,IAAI,CAAC3C,aAAa;gBACjC2G,IAAI,EAAEN;cACR,CAAC,CAAC;YACJ;;YAEA;YACA,MAAMrI,aAAa,CAACwC,SAAS,CAACiB,KAAK,CAAC;YAEpCiD,gBAAgB,CAAC,+BAA+B/B,IAAI,CAACjE,IAAI,EAAE,EAAE,SAAS,CAAC;YAEvE,IAAI0H,WAAU,IAAK,CAAC,EAAE;cACpB1B,gBAAgB,CAAC,0BAA0B0B,WAAW,gBAAgBzD,IAAI,CAACjE,IAAI,EAAE,EAAE,SAAS,CAAC;YAC/F;UACF,EAAE,OAAO6C,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;YACnDmD,gBAAgB,CAAC,4DAA4D,EAAE,OAAO,CAAC;UACzF;QACF;MACF,EAAE,OAAOnD,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDmD,gBAAgB,CAAC,4DAA4D,EAAE,OAAO,CAAC;MACzF;IACF,CAAC;;IAED;IACA,MAAM6C,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMjJ,KAAK,CAAC,uCAAuC,CAAC;QAEpD,MAAMkJ,UAAS,GAAIpH,SAAS,CAACqB,KAAK,CAACe,MAAK,GAAIX,gBAAgB,CAACJ,KAAK,CAACe,MAAM;QACzE,IAAIgF,UAAS,GAAI,EAAE,EAAE;UACnB,MAAMlJ,KAAK,CAAC,wFAAwF,CAAC;UACrG;QACF;;QAEA;QACA,MAAMmJ,YAAW,GAAI,CACnB,GAAGrH,SAAS,CAACqB,KAAK,CAACiG,GAAG,CAAC/E,IAAG,KAAM;UAC9B,GAAGA,IAAI;UACPC,SAAS,EAAE;QACb,CAAC,CAAC,CAAC,EACH,GAAGf,gBAAgB,CAACJ,KAAK,CAACiG,GAAG,CAAC/E,IAAG,KAAM;UACrC,GAAGA,IAAI;UACPC,SAAS,EAAE;QACb,CAAC,CAAC,EACH;QAEDpB,OAAO,CAACyD,GAAG,CAAC,6BAA6BwC,YAAY,CAACjF,MAAM,eAAe,CAAC;QAC5EhB,OAAO,CAACyD,GAAG,CAAC,kBAAkB,EAAE7E,SAAS,CAACqB,KAAK,CAACe,MAAM,CAAC;QACvDhB,OAAO,CAACyD,GAAG,CAAC,mBAAmB,EAAEpD,gBAAgB,CAACJ,KAAK,CAACe,MAAM,CAAC;QAE/D,MAAMmF,MAAK,GAAI,MAAMxK,QAAQ,CAACsK,YAAY,CAAC;QAC3C,MAAMG,GAAE,GAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,SAASJ,MAAM,EAAE;QACtD9G,SAAS,CAACY,KAAI,GAAImG,GAAG;QAErB,MAAM1G,OAAM,GAAI9D,sBAAsB,CAACwK,GAAG,EAAE1I,YAAY,CAACuC,KAAK,CAAC/C,IAAI,CAAC;QACpE,MAAMsJ,WAAU,GAAI,sCAAsCtC,kBAAkB,CAACxE,OAAO,CAAC,EAAE;QACvF2G,MAAM,CAACI,IAAI,CAACD,WAAW,EAAE,QAAQ,CAAC;MACpC,EAAE,OAAOzG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxD,MAAMjD,KAAK,CAAC,+BAA+BiD,KAAK,CAACL,OAAM,IAAK,mBAAmB,kFAAkF,CAAC;MACpK;IACF,CAAC;IAED,MAAMgH,QAAO,GAAI,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,cAAa,GAAI,uCAAuC;QAC9DrH,iBAAiB,CAACW,KAAI,GAAI,IAAI;QAE9B,MAAM+F,UAAS,GAAIpH,SAAS,CAACqB,KAAK,CAACe,MAAK,GAAIX,gBAAgB,CAACJ,KAAK,CAACe,MAAM;QACzE,IAAIgF,UAAS,GAAI,EAAE,EAAE;UACnB,MAAMlJ,KAAK,CAAC,wFAAwF,CAAC;UACrGwC,iBAAiB,CAACW,KAAI,GAAI,KAAK;UAC/B;QACF;;QAEA;QACA,MAAMgG,YAAW,GAAI,CACnB,GAAGrH,SAAS,CAACqB,KAAK,CAACiG,GAAG,CAAC/E,IAAG,KAAM;UAC9B,GAAGA,IAAI;UACPC,SAAS,EAAE;QACb,CAAC,CAAC,CAAC,EACH,GAAGf,gBAAgB,CAACJ,KAAK,CAACiG,GAAG,CAAC/E,IAAG,KAAM;UACrC,GAAGA,IAAI;UACPC,SAAS,EAAE;QACb,CAAC,CAAC,EACH;QAED,MAAM+E,MAAK,GAAI,MAAMxK,QAAQ,CAACsK,YAAY,CAAC;QAC3C,MAAMG,GAAE,GAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,SAASJ,MAAM,EAAE;QACtD9G,SAAS,CAACY,KAAI,GAAImG,GAAG;QAErB,IAAI;UACF,MAAMvK,eAAe,CAACuK,GAAG,CAAC;UAC1B9G,iBAAiB,CAACW,KAAI,GAAI,IAAI;UAC9BsB,UAAU,CAAC,MAAM;YACfjC,iBAAiB,CAACW,KAAI,GAAI,KAAK;UACjC,CAAC,EAAE,IAAI,CAAC;QACV,EAAE,OAAO2G,cAAc,EAAE;UACvB5G,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAE6G,cAAc,CAAC;UACjE,MAAM9J,KAAK,CAAC,+EAA8E,GAAIsJ,GAAG,CAAC;QACpG;MACF,EAAE,OAAOrG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QAC/DT,iBAAiB,CAACW,KAAI,GAAI,KAAK;QAC/B,MAAMnD,KAAK,CAAC,+BAA+BiD,KAAK,CAACL,OAAM,IAAK,mBAAmB,kFAAkF,CAAC;MACpK;IACF,CAAC;;IAED;IACA,MAAMmH,UAAS,GAAIpL,QAAQ,CAAC,MAAM;MAChC,OAAOuD,SAAS,CAACiB,KAAK,CAAC6G,MAAM,CAAC,CAACC,KAAK,EAAE5F,IAAI,KAAK;QAC7C,OAAO4F,KAAI,GAAK5F,IAAI,CAAC+D,QAAO,GAAI/D,IAAI,CAAC5C,KAAM;MAC7C,CAAC,EAAE,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,MAAMyI,WAAU,GAAKzI,KAAK,IAAK;MAC7B,IAAI0I,KAAK,CAACC,MAAM,CAAC3I,KAAK,CAAC,CAAC,EAAE,OAAO,MAAM;MACvC,MAAM4I,KAAI,GAAID,MAAM,CAAC3I,KAAK,CAAC,CAAC6I,OAAO,CAAC,CAAC,CAAC;MACtC,MAAM,CAACC,OAAO,EAAEC,OAAO,IAAIH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC;MAC3C,MAAMC,gBAAe,GAAIH,OAAO,CAACI,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;MACtE,OAAO,GAAGD,gBAAgB,IAAIF,OAAO,EAAE;IACzC,CAAC;IAED,MAAMI,UAAS,GAAKC,OAAO,IAAK;MAC9B,IAAI,CAACA,OAAO,EAAE,OAAO,KAAK;MAC1B,MAAMxC,IAAG,GAAI,IAAIhC,IAAI,CAACwE,OAAO,CAAC;MAC9B,IAAIV,KAAK,CAAC9B,IAAI,CAACyC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,gBAAgB;MAClD,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;QACtCC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,MAAM,CAACjD,IAAI,CAAC;IACjB,CAAC;IAED,MAAMkD,oBAAmB,GAAI5M,QAAQ,CAAC,MAAM;MAC1C,OAAQ6M,KAAK,IAAK;QAChB,IAAI,CAACA,KAAI,IAAK,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;UACnCtI,OAAO,CAACyI,IAAI,CAAC,iDAAiD,EAAEH,KAAK,CAAC;UACtE,OAAO,EAAE;QACX;QACA,IAAIrJ,UAAU,CAACgB,KAAK,EAAE;UACpB,MAAMyI,IAAG,GAAIzJ,UAAU,CAACgB,KAAK,CAACwF,WAAW,CAAC,CAAC,CAACkD,IAAI,CAAC,CAAC;UAElDL,KAAI,GAAIA,KAAK,CAACpH,MAAM,CAACC,IAAG,IAAK;YAC3B,IAAIA,IAAG,IAAK,OAAOA,IAAG,KAAM,QAAQ,EAAE;cACpC,MAAMjE,IAAG,GAAI0L,MAAM,CAACzH,IAAI,CAACjE,IAAG,IAAK,EAAE,CAAC,CAACuI,WAAW,CAAC,CAAC;cAClD,OAAOvI,IAAI,CAAC2L,QAAQ,CAACH,IAAI,CAAC;YAC5B;YACA,OAAO,KAAK;UACd,CAAC,CAAC;QACJ;QACA,IAAIvJ,cAAc,CAACc,KAAK,EAAE;UACxB,IAAId,cAAc,CAACc,KAAI,KAAM,QAAQ,EAAE;YACrCqI,KAAI,GAAIA,KAAK,CAACpH,MAAM,CAACC,IAAG,IAAKA,IAAG,IAAKA,IAAI,CAAC3C,aAAY,KAAM,IAAI,CAAC;UACnE,OAAO,IAAIW,cAAc,CAACc,KAAI,KAAM,UAAU,EAAE;YAC9CqI,KAAI,GAAIA,KAAK,CAACpH,MAAM,CAACC,IAAG,IAAKA,IAAG,IAAKA,IAAI,CAAC3C,aAAY,KAAM,KAAK,CAAC;UACpE;QACF;QACA,IAAIU,MAAM,CAACe,KAAK,EAAE;UAChB,QAAQf,MAAM,CAACe,KAAK;YAClB,KAAK,MAAM;cACTqI,KAAK,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;gBACnB,MAAMC,KAAI,GAAKF,CAAA,IAAKA,CAAC,CAAC7L,IAAI,GAAI6L,CAAC,CAAC7L,IAAI,CAACuI,WAAW,CAAC,IAAI,EAAE;gBACvD,MAAMyD,KAAI,GAAKF,CAAA,IAAKA,CAAC,CAAC9L,IAAI,GAAI8L,CAAC,CAAC9L,IAAI,CAACuI,WAAW,CAAC,IAAI,EAAE;gBACvD,OAAOwD,KAAK,CAACE,aAAa,CAACD,KAAK,CAAC;cACnC,CAAC,CAAC;cACF;YACF,KAAK,eAAe;cAClBZ,KAAK,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;gBACnB,MAAMI,IAAG,GAAKL,CAAA,IAAK,OAAOA,CAAC,CAAC7D,QAAO,KAAM,QAAQ,GAAI6D,CAAC,CAAC7D,QAAO,GAAI,CAAC;gBACnE,MAAMmE,IAAG,GAAKL,CAAA,IAAK,OAAOA,CAAC,CAAC9D,QAAO,KAAM,QAAQ,GAAI8D,CAAC,CAAC9D,QAAO,GAAI,CAAC;gBACnE,OAAOmE,IAAG,GAAID,IAAI;cACpB,CAAC,CAAC;cACF;YACF,KAAK,cAAc;cACjBd,KAAK,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;gBACnB,MAAMI,IAAG,GAAKL,CAAA,IAAK,OAAOA,CAAC,CAAC7D,QAAO,KAAM,QAAQ,GAAI6D,CAAC,CAAC7D,QAAO,GAAI,CAAC;gBACnE,MAAMmE,IAAG,GAAKL,CAAA,IAAK,OAAOA,CAAC,CAAC9D,QAAO,KAAM,QAAQ,GAAI8D,CAAC,CAAC9D,QAAO,GAAI,CAAC;gBACnE,OAAOkE,IAAG,GAAIC,IAAI;cACpB,CAAC,CAAC;cACF;YACF,KAAK,YAAY;cACff,KAAK,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;gBACnB,MAAMM,MAAK,GAAKP,CAAA,IAAK,OAAOA,CAAC,CAACxK,KAAI,KAAM,QAAQ,GAAIwK,CAAC,CAACxK,KAAI,GAAI,CAAC;gBAC/D,MAAMgL,MAAK,GAAKP,CAAA,IAAK,OAAOA,CAAC,CAACzK,KAAI,KAAM,QAAQ,GAAIyK,CAAC,CAACzK,KAAI,GAAI,CAAC;gBAC/D,OAAOgL,MAAK,GAAID,MAAM;cACxB,CAAC,CAAC;cACF;YACF,KAAK,WAAW;cACdhB,KAAK,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;gBACnB,MAAMM,MAAK,GAAKP,CAAA,IAAK,OAAOA,CAAC,CAACxK,KAAI,KAAM,QAAQ,GAAIwK,CAAC,CAACxK,KAAI,GAAI,CAAC;gBAC/D,MAAMgL,MAAK,GAAKP,CAAA,IAAK,OAAOA,CAAC,CAACzK,KAAI,KAAM,QAAQ,GAAIyK,CAAC,CAACzK,KAAI,GAAI,CAAC;gBAC/D,OAAO+K,MAAK,GAAIC,MAAM;cACxB,CAAC,CAAC;cACF;YACF,KAAK,WAAW;cACdjB,KAAK,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;gBACnB,MAAMQ,KAAI,GAAIT,CAAA,IAAKA,CAAC,CAAC5D,IAAG,GAAI,IAAIhC,IAAI,CAAC4F,CAAC,CAAC5D,IAAI,IAAI,IAAIhC,IAAI,CAAC,CAAC,CAAC;gBAC1D,MAAMsG,KAAI,GAAIT,CAAA,IAAKA,CAAC,CAAC7D,IAAG,GAAI,IAAIhC,IAAI,CAAC6F,CAAC,CAAC7D,IAAI,IAAI,IAAIhC,IAAI,CAAC,CAAC,CAAC;gBAC1D,OAAOsG,KAAI,GAAID,KAAK;cACtB,CAAC,CAAC;cACF;YACF,KAAK,UAAU;cACblB,KAAK,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;gBACnB,MAAMQ,KAAI,GAAIT,CAAA,IAAKA,CAAC,CAAC5D,IAAG,GAAI,IAAIhC,IAAI,CAAC4F,CAAC,CAAC5D,IAAI,IAAI,IAAIhC,IAAI,CAAC,CAAC,CAAC;gBAC1D,MAAMsG,KAAI,GAAIT,CAAA,IAAKA,CAAC,CAAC7D,IAAG,GAAI,IAAIhC,IAAI,CAAC6F,CAAC,CAAC7D,IAAI,IAAI,IAAIhC,IAAI,CAAC,CAAC,CAAC;gBAC1D,OAAOqG,KAAI,GAAIC,KAAK;cACtB,CAAC,CAAC;cACF;YACF;cACE;UACJ;QACF;QACA,OAAOnB,KAAK;MACd,CAAC;IACH,CAAC,CAAC;IAEF,MAAMoB,iBAAgB,GAAIjO,QAAQ,CAAC,MAAM;MACvC,OAAO4M,oBAAoB,CAACpI,KAAK,CAACjB,SAAS,CAACiB,KAAK,CAAC;IACpD,CAAC,CAAC;IAEF,MAAM0J,aAAY,GAAIA,CAAA,KAAM;MAC1B;MACA,MAAMC,IAAG,GAAI,CACX,CAAC,kBAAkB,EAAE,WAAW,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,UAAU,EAAE,UAAU,CAAC,EACpH,GAAGF,iBAAiB,CAACzJ,KAAK,CAACiG,GAAG,CAAC/E,IAAG,IAAK,CACrCA,IAAI,CAACjE,IAAI,EACTiE,IAAI,CAAC3C,aAAY,GAAI,cAAa,GAAI,cAAc,EACpD2C,IAAI,CAAC+D,QAAQ,EACb,IAAI8B,WAAW,CAAC7F,IAAI,CAAC5C,KAAK,CAAC,EAAE,EAC7BmJ,UAAU,CAACvG,IAAI,CAACgE,IAAI,CAAC,EACrB,IAAI6B,WAAW,CAAC7F,IAAI,CAAC+D,QAAO,GAAI/D,IAAI,CAAC5C,KAAK,CAAC,EAAE,EAC7C,EAAC,CACF,CAAC,EACF,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAIyI,WAAW,CAACH,UAAU,CAAC5G,KAAK,CAAC,EAAE,EAClE;;MAED;MACA,MAAM4J,EAAC,GAAI7N,IAAI,CAAC8N,KAAK,CAACC,YAAY,CAACH,IAAI,CAAC;MACxC,MAAMI,EAAC,GAAIhO,IAAI,CAAC8N,KAAK,CAACG,QAAQ,CAAC,CAAC;MAChCjO,IAAI,CAAC8N,KAAK,CAACI,iBAAiB,CAACF,EAAE,EAAEH,EAAE,EAAE,QAAQ,CAAC;;MAE9C;MACA,MAAMM,WAAU,GAAInO,IAAI,CAACoO,KAAK,CAACJ,EAAE,EAAE;QAAEK,QAAQ,EAAE,MAAM;QAAE/M,IAAI,EAAE;MAAQ,CAAC,CAAC;MACvE,MAAMgN,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACJ,WAAW,CAAC,EAAE;QAAE7M,IAAI,EAAE;MAAoE,CAAC,CAAC;MACnHvB,MAAM,CAACuO,IAAI,EAAE,UAAU,IAAInH,IAAI,CAAC,CAAC,CAACqH,kBAAkB,CAAC,CAAC,OAAO,CAAC;IAChE,CAAC;IAED,MAAMC,WAAU,GAAIA,CAAA,KAAM;MACxB;MACA,MAAMC,GAAE,GAAI,IAAIzO,KAAK,CAAC,CAAC;;MAEvB;MACAyO,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;MACnBD,GAAG,CAACE,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE,EAAE,CAAC;MACrCF,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;MACnBD,GAAG,CAACE,IAAI,CAAC,UAAU,IAAIzH,IAAI,CAAC,CAAC,CAACqH,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;MAE7D;MACA,MAAMK,SAAQ,GAAInB,iBAAiB,CAACzJ,KAAK,CAACiG,GAAG,CAAC/E,IAAG,IAAK,CACpDA,IAAI,CAACjE,IAAI,EACTiE,IAAI,CAAC3C,aAAY,GAAI,cAAa,GAAI,cAAc,EACpD2C,IAAI,CAAC+D,QAAQ,EACb,IAAI8B,WAAW,CAAC7F,IAAI,CAAC5C,KAAK,CAAC,EAAE,EAC7BmJ,UAAU,CAACvG,IAAI,CAACgE,IAAI,CAAC,EACrB,IAAI6B,WAAW,CAAC7F,IAAI,CAAC+D,QAAO,GAAI/D,IAAI,CAAC5C,KAAK,CAAC,EAAC,CAC7C,CAAC;;MAEF;MACAmM,GAAG,CAACI,SAAS,CAAC;QACZC,IAAI,EAAE,CAAC,CAAC,kBAAkB,EAAE,WAAW,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,UAAU,CAAC,CAAC;QAChHC,IAAI,EAAEH,SAAS;QACfI,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAIjE,WAAW,CAACH,UAAU,CAAC5G,KAAK,CAAC,EAAE,CAAC,CAAC;QACtEiL,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,SAAS;QAChBC,UAAU,EAAE;UAAEC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE;QAAE,CAAC;QACxCC,UAAU,EAAE;UAAED,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;UAAEE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAAEC,SAAS,EAAE;QAAO;MACpF,CAAC,CAAC;;MAEF;MACAd,GAAG,CAACe,IAAI,CAAC,UAAU,IAAItI,IAAI,CAAC,CAAC,CAACqH,kBAAkB,CAAC,CAAC,MAAM,CAAC;IAC3D,CAAC;IAED,MAAMkB,cAAa,GAAI,MAAOvK,IAAI,IAAK;MACrC,IAAI;QACF;QACA,MAAMwK,QAAO,GAAI/M,SAAS,CAACqB,KAAK,CAAC+E,IAAI,CAAC4G,EAAC,IAAKA,EAAE,CAAC1O,IAAG,KAAMiE,IAAI,CAACjE,IAAI,KAChDmD,gBAAgB,CAACJ,KAAK,CAAC+E,IAAI,CAAC6G,GAAE,IAAKA,GAAG,CAAC3O,IAAG,KAAMiE,IAAI,CAACjE,IAAI,CAAC;QAE3E,IAAI,CAACyO,QAAQ,EAAE;UACbzI,gBAAgB,CAAC,iDAAiD,EAAE,OAAO,CAAC;UAC5E;QACF;QAEA,MAAMX,SAAQ,GAAI,MAAM1F,OAAO,CAC7B,kCAAkCsE,IAAI,CAACjE,IAAI,aAC7C,CAAC;QAED,IAAIqF,SAAS,EAAE;UACb;UACA,MAAMqC,WAAU,GAAI,CAAC+G,QAAQ,CAAClN,iBAAgB,IAAK,CAAC,IAAI,CAAC;;UAEzD;UACA,MAAM7B,sBAAsB,CAAC+O,QAAQ,CAAChN,EAAE,EAAEiG,WAAW,CAAC;;UAEtD;UACA+G,QAAQ,CAAClN,iBAAgB,GAAImG,WAAW;;UAExC;UACA,IAAIzD,IAAI,CAAC+D,QAAO,GAAI,CAAC,EAAE;YACrB/D,IAAI,CAAC+D,QAAO,IAAK,CAAC;UACpB,OAAO;YACL;YACA,MAAMvB,KAAI,GAAI3E,SAAS,CAACiB,KAAK,CAAC2D,SAAS,CAACkI,EAAC,IAAKA,EAAE,CAAC5O,IAAG,KAAMiE,IAAI,CAACjE,IAAI,CAAC;YACpE,IAAIyG,KAAI,KAAM,CAAC,CAAC,EAAE;cAChB3E,SAAS,CAACiB,KAAK,CAACyE,MAAM,CAACf,KAAK,EAAE,CAAC,CAAC;YAClC;UACF;;UAEA;UACA,MAAMnH,aAAa,CAACwC,SAAS,CAACiB,KAAK,CAAC;UAEpCiD,gBAAgB,CAAC,gCAAgC/B,IAAI,CAACjE,IAAI,WAAW,EAAE,SAAS,CAAC;QACnF;MACF,EAAE,OAAO6C,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDmD,gBAAgB,CAAC,iEAAiE,EAAE,OAAO,CAAC;MAC9F;IACF,CAAC;IAED,MAAM6I,YAAW,GAAItQ,QAAQ,CAAC,MAAM;MAClC,IAAIuD,SAAS,CAACiB,KAAK,CAACe,MAAK,KAAM,CAAC,EAAE,OAAO,KAAK;;MAE9C;MACA,MAAMgL,cAAa,GAAIhN,SAAS,CAACiB,KAAK,CAAC6G,MAAM,CAAC,CAACmF,MAAM,EAAE9K,IAAI,KAAK;QAC9D,MAAM+K,QAAO,GAAI,IAAI/I,IAAI,CAAChC,IAAI,CAACgE,IAAI,CAAC;QACpC,OAAO+G,QAAO,GAAID,MAAK,GAAIC,QAAO,GAAID,MAAM;MAC9C,CAAC,EAAE,IAAI9I,IAAI,CAAC,CAAC,CAAC,CAAC;;MAEf;MACA,MAAMC,GAAE,GAAI,IAAID,IAAI,CAAC,CAAC;MACtB,MAAMgJ,WAAU,GAAI,CAAC/I,GAAE,GAAI4I,cAAc,KAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC;MAE7D,OAAOG,WAAU,IAAK,EAAE;IAC1B,CAAC,CAAC;IAEF,MAAMC,gBAAe,GAAI3Q,QAAQ,CAAC,MAAM;MACtC,IAAIuD,SAAS,CAACiB,KAAK,CAACe,MAAK,KAAM,CAAC,EAAE;QAChC,OAAO,oCAAoC;MAC7C;MAEA,IAAI+K,YAAY,CAAC9L,KAAK,EAAE;QACtB,OAAO,kCAAkC;MAC3C,OAAO;QACL;QACA,MAAM+L,cAAa,GAAIhN,SAAS,CAACiB,KAAK,CAAC6G,MAAM,CAAC,CAACmF,MAAM,EAAE9K,IAAI,KAAK;UAC9D,MAAM+K,QAAO,GAAI,IAAI/I,IAAI,CAAChC,IAAI,CAACgE,IAAI,CAAC;UACpC,OAAO+G,QAAO,GAAID,MAAK,GAAIC,QAAO,GAAID,MAAM;QAC9C,CAAC,EAAE,IAAI9I,IAAI,CAAC,CAAC,CAAC,CAAC;;QAEf;QACA,MAAMC,GAAE,GAAI,IAAID,IAAI,CAAC,CAAC;QACtB,MAAMgJ,WAAU,GAAI,CAAC/I,GAAE,GAAI4I,cAAc,KAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC;QAC7D,MAAMK,cAAa,GAAIhJ,IAAI,CAACiJ,IAAI,CAAC,EAAC,GAAIH,WAAW,CAAC;QAElD,OAAO,gBAAgBE,cAAc,iCAAiC;MACxE;IACF,CAAC,CAAC;IAEF,MAAME,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,IAAI,CAACR,YAAY,CAAC9L,KAAK,EAAE;QACvBiD,gBAAgB,CAAC,kEAAkE,EAAE,OAAO,CAAC;QAC7F;MACF;MAEA,MAAMX,SAAQ,GAAI,MAAM1F,OAAO,CAC7B,sGACF,CAAC;MAED,IAAI0F,SAAS,EAAE;QACb,IAAI;UACF;UACAvD,SAAS,CAACiB,KAAI,GAAI,EAAE;;UAEpB;UACA,MAAMzD,aAAa,CAAC,EAAE,CAAC;UAEvB0G,gBAAgB,CAAC,+CAA+C,EAAE,SAAS,CAAC;QAC9E,EAAE,OAAOnD,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;UACpEmD,gBAAgB,CAAC,0DAA0D,EAAE,OAAO,CAAC;QACvF;MACF;IACF,CAAC;;IAED;IACA,MAAMA,gBAAe,GAAIA,CAACxD,OAAO,EAAEpC,IAAI,KAAK;MAC1C4C,YAAY,CAACD,KAAI,GAAI;QACnBJ,IAAI,EAAE,IAAI;QACVH,OAAO;QACPpC;MACF,CAAC;MAEDiE,UAAU,CAAC,MAAM;QACfrB,YAAY,CAACD,KAAK,CAACJ,IAAG,GAAI,KAAK;MACjC,CAAC,EAAE,IAAI,CAAC,EAAE;IACZ,CAAC;IAED,MAAM2M,sBAAqB,GAAI,MAAOC,MAAM,IAAK;MAC/C,IAAI;QACF;QACA,MAAMtL,IAAG,GAAIvC,SAAS,CAACqB,KAAK,CAAC+E,IAAI,CAAC0H,CAAA,IAAKA,CAAC,CAAC/N,EAAC,KAAM8N,MAAM,KAC1CpM,gBAAgB,CAACJ,KAAK,CAAC+E,IAAI,CAAC0H,CAAA,IAAKA,CAAC,CAAC/N,EAAC,KAAM8N,MAAM,CAAC;QAE7D,IAAItL,IAAI,EAAE;UACR,IAAIA,IAAI,CAAC1C,iBAAgB,GAAI,CAAC,EAAE;YAC9ByE,gBAAgB,CAAC,eAAe/B,IAAI,CAAC1C,iBAAiB,WAAW,EAAE,SAAS,CAAC;UAC/E,OAAO,IAAI0C,IAAI,CAAC1C,iBAAgB,GAAI,CAAC,EAAE;YACrCyE,gBAAgB,CAAC,gBAAgB/B,IAAI,CAAC1C,iBAAiB,YAAY,EAAE,SAAS,CAAC;UACjF,OAAO;YACLyE,gBAAgB,CAAC,kBAAkB,EAAE,OAAO,CAAC;UAC/C;QACF;MACF,EAAE,OAAOnD,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;;IAED;IACA,MAAM4M,UAAS,GAAIlR,QAAQ,CAAC,MAAM;MAChC,OAAOuB,OAAO,CAAC,UAAU,KAAK,CAACA,OAAO,CAAC,eAAe,KAAK,CAACA,OAAO,CAAC,oBAAoB,CAAC;IAC3F,CAAC,CAAC;IAEF,MAAM4P,gBAAe,GAAKC,KAAK,IAAK;MAClC,OAAO,CAAC,GAAG,IAAIC,GAAG,CAACD,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,OAAO;MACLnP,YAAY;MACZK,gBAAgB;MAChByD,kBAAkB;MAClBC,YAAY;MACZpF,gBAAgB;MAChBiG,iBAAiB;MACjBtE,WAAW;MACXK,eAAe;MACfmE,iBAAiB;MACjBC,eAAe;MACfE,kBAAkB;MAClBC,eAAe;MACfC,gBAAgB;MAChBvE,OAAO;MACPM,SAAS;MACTC,YAAY;MACZC,SAAS;MACTgE,cAAc;MACdE,aAAa;MACbC,YAAY;MACZF,aAAa;MACbe,YAAY;MACZC,cAAc;MACdY,YAAY;MACZ3F,SAAS;MACT6H,UAAU;MACV5H,UAAU;MACVC,MAAM;MACNC,cAAc;MACdC,iBAAiB;MACjBC,SAAS;MACTC,iBAAiB;MACjByG,eAAe;MACfW,QAAQ;MACRiD,aAAa;MACbc,WAAW;MACXf,iBAAiB;MACjBnK,eAAe;MACfI,UAAU;MACVG,gBAAgB;MAChBI,YAAY;MACZE,cAAc;MACdC,gBAAgB;MAChBC,mBAAmB;MACnBC,gBAAgB;MAChBC,mBAAmB;MACnB4E,qBAAqB;MACrBE,oBAAoB;MACpBC,mBAAmB;MACnBF,oBAAoB;MACpBO,mBAAmB;MACnBC,qBAAqB;MACrBC,mBAAmB;MACnBlG,KAAK;MACLsD,gBAAgB;MAChBsJ,sBAAsB;MACtBG,UAAU;MACVtE,oBAAoB;MACpBqD,cAAc;MACdK,YAAY;MACZK,gBAAgB;MAChBG,iBAAiB;MACjBK;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}