{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-container\"\n};\nconst _hoisted_2 = {\n  key: 2,\n  class: \"no-data-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Bar = _resolveComponent(\"Bar\");\n  const _component_Line = _resolveComponent(\"Line\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_ctx.chartType === 'bar' && _ctx.chartData && _ctx.chartData.datasets ? (_openBlock(), _createBlock(_component_Bar, {\n    key: 0,\n    data: _ctx.chartData,\n    options: _ctx.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])) : _ctx.chartType === 'line' && _ctx.chartData && _ctx.chartData.datasets ? (_openBlock(), _createBlock(_component_Line, {\n    key: 1,\n    data: _ctx.chartData,\n    options: _ctx.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" No hay suficientes datos para mostrar el gráfico \"))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_ctx","chartType","chartData","datasets","_createBlock","_component_Bar","data","options","chartOptions","_component_Line","_hoisted_2"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\SalesChartComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <Bar v-if=\"chartType === 'bar' && chartData && chartData.datasets\" :data=\"chartData\" :options=\"chartOptions\" />\r\n    <Line v-else-if=\"chartType === 'line' && chartData && chartData.datasets\" :data=\"chartData\" :options=\"chartOptions\" />\r\n    <div v-else class=\"no-data-message\">\r\n      No hay suficientes datos para mostrar el gráfico\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, computed, watch } from 'vue';\r\nimport { Bar, Line } from 'vue-chartjs';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, PointElement, LineElement } from 'chart.js';\r\n\r\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, PointElement, LineElement);\r\n\r\nexport default defineComponent({\r\n  name: 'SalesChartComponent',\r\n  components: { Bar, Line },\r\n  props: {\r\n    chartType: {\r\n      type: String,\r\n      default: 'bar'\r\n    },\r\n    items: {\r\n      type: Array,\r\n      required: true,\r\n      default: () => []\r\n    }\r\n  },\r\n  setup(props) {\r\n    // Utilizar ref para el chartData para asegurarnos de que exista antes de renderizar\r\n    const chartDataRef = ref(null);\r\n\r\n    // Actualizar chartData cuando cambian los items\r\n    const updateChartData = () => {\r\n      if (!props.items || props.items.length === 0) {\r\n        chartDataRef.value = null;\r\n        return;\r\n      }\r\n\r\n      const labels = props.items.map(item => item.name);\r\n      const data = props.items.map(item => item.quantity);\r\n      const backgroundColor = props.items.map(() => `rgba(${Math.floor(Math.random() * 155) + 100}, ${Math.floor(Math.random() * 155) + 100}, ${Math.floor(Math.random() * 155) + 100}, 0.6)`);\r\n\r\n      chartDataRef.value = {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: 'Cantidad vendida',\r\n            data,\r\n            backgroundColor,\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 1\r\n          }\r\n        ]\r\n      };\r\n    };\r\n\r\n    // Ejecutar updateChartData inicialmente\r\n    updateChartData();\r\n\r\n    // Observar cambios en los items para actualizar el chartData\r\n    watch(() => props.items, () => {\r\n      updateChartData();\r\n    }, { deep: true });\r\n\r\n    const chartOptions = computed(() => {\r\n      return {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            title: {\r\n              display: true,\r\n              text: 'Cantidad'\r\n            },\r\n            ticks: {\r\n              precision: 0\r\n            }\r\n          },\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: 'Productos'\r\n            }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: true,\r\n            position: 'top'\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: props.chartType === 'bar' ? 'Productos más vendidos' : 'Tendencia de ventas'\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n    return {\r\n      chartData: chartDataRef,\r\n      chartOptions\r\n    };\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  position: relative;\r\n  height: 400px;\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.no-data-message {\r\n  color: #666;\r\n  font-style: italic;\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAD9BC,GAAA;EAIgBD,KAAK,EAAC;;;;;uBAHpBE,mBAAA,CAMM,OANNC,UAMM,GALOC,IAAA,CAAAC,SAAS,cAAcD,IAAA,CAAAE,SAAS,IAAIF,IAAA,CAAAE,SAAS,CAACC,QAAQ,I,cAAjEC,YAAA,CAA+GC,cAAA;IAFnHR,GAAA;IAEwES,IAAI,EAAEN,IAAA,CAAAE,SAAS;IAAGK,OAAO,EAAEP,IAAA,CAAAQ;kDAC9ER,IAAA,CAAAC,SAAS,eAAeD,IAAA,CAAAE,SAAS,IAAIF,IAAA,CAAAE,SAAS,CAACC,QAAQ,I,cAAxEC,YAAA,CAAsHK,eAAA;IAH1HZ,GAAA;IAG+ES,IAAI,EAAEN,IAAA,CAAAE,SAAS;IAAGK,OAAO,EAAEP,IAAA,CAAAQ;iEACtGV,mBAAA,CAEM,OAFNY,UAEM,EAF8B,oDAEpC,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}