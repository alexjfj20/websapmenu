{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { createPlato } from '@/services/indexedDBService';\nexport default {\n  name: 'PlatoForm',\n  props: {\n    editPlato: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['plato-saved', 'plato-updated', 'cancel'],\n  setup(props, {\n    emit\n  }) {\n    // Estado del formulario\n    const form = reactive({\n      name: '',\n      description: '',\n      price: 0,\n      category: '',\n      is_available: true,\n      image_url: ''\n    });\n\n    // Estados para validación y UI\n    const errors = reactive({\n      name: '',\n      price: ''\n    });\n    const isSubmitting = ref(false);\n    const errorMessage = ref('');\n    const success = ref('');\n\n    // Determinar si estamos editando o creando\n    const isEditing = computed(() => !!props.editPlato);\n\n    // Inicializar el formulario con datos si estamos editando\n    onMounted(() => {\n      if (props.editPlato) {\n        Object.assign(form, props.editPlato);\n      }\n    });\n\n    // Validar el formulario\n    const validateForm = () => {\n      let isValid = true;\n\n      // Validar nombre\n      if (!form.name.trim()) {\n        errors.name = 'El nombre del plato es obligatorio';\n        isValid = false;\n      } else {\n        errors.name = '';\n      }\n\n      // Validar precio\n      if (form.price === null || form.price === undefined || isNaN(form.price)) {\n        errors.price = 'El precio debe ser un número válido';\n        isValid = false;\n      } else if (form.price < 0) {\n        errors.price = 'El precio no puede ser negativo';\n        isValid = false;\n      } else {\n        errors.price = '';\n      }\n      return isValid;\n    };\n\n    // Manejar el envío del formulario\n    const handleSubmit = async () => {\n      console.log('Enviando formulario', form);\n\n      // Reiniciar mensajes\n      success.value = '';\n      errorMessage.value = '';\n\n      // Validar formulario\n      if (!validateForm()) {\n        console.log('Formulario inválido', errors);\n        return;\n      }\n      isSubmitting.value = true;\n      try {\n        if (isEditing.value) {\n          // Lógica para edición (a implementar)\n          // Por ahora solo emitimos el evento\n          emit('plato-updated', form);\n          success.value = 'Plato actualizado correctamente';\n        } else {\n          // Crear nuevo plato usando la función createPlato\n          console.log('Llamando a createPlato con:', form);\n          const savedPlato = await createPlato({\n            ...form,\n            price: Number(form.price) // Asegurar que price es un número\n          });\n          console.log('Plato guardado exitosamente:', savedPlato);\n          success.value = 'Plato guardado correctamente';\n\n          // Emitir evento con el plato guardado\n          emit('plato-saved', savedPlato);\n\n          // Resetear el formulario\n          resetForm();\n        }\n      } catch (error) {\n        console.error('Error al guardar el plato:', error);\n        errorMessage.value = `Error al guardar el plato: ${error.message || 'Error desconocido'}`;\n      } finally {\n        isSubmitting.value = false;\n      }\n    };\n\n    // Resetear el formulario\n    const resetForm = () => {\n      // Si estamos editando, mantener los valores originales\n      if (isEditing.value && props.editPlato) {\n        Object.assign(form, props.editPlato);\n      } else {\n        // Si estamos creando, limpiar todos los campos\n        form.name = '';\n        form.description = '';\n        form.price = 0;\n        form.category = '';\n        form.is_available = true;\n        form.image_url = '';\n      }\n\n      // Limpiar errores\n      errors.name = '';\n      errors.price = '';\n\n      // Limpiar mensajes\n      errorMessage.value = '';\n      success.value = '';\n\n      // Emitir evento de cancelación\n      emit('cancel');\n    };\n    return {\n      form,\n      errors,\n      isSubmitting,\n      errorMessage,\n      success,\n      isEditing,\n      handleSubmit,\n      resetForm\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","createPlato","name","props","editPlato","type","Object","default","emits","setup","emit","form","description","price","category","is_available","image_url","errors","isSubmitting","errorMessage","success","isEditing","assign","validateForm","isValid","trim","undefined","isNaN","handleSubmit","console","log","value","savedPlato","Number","resetForm","error","message"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\PlatoForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"plato-form\">\r\n    <h3>{{ isEditing ? 'Editar Plato' : 'Crear Nuevo Plato' }}</h3>\r\n    \r\n    <form @submit.prevent=\"handleSubmit\" class=\"form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Nombre del Plato *</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"name\" \r\n          v-model=\"form.name\" \r\n          required\r\n          class=\"form-control\"\r\n        />\r\n        <div v-if=\"errors.name\" class=\"error-text\">{{ errors.name }}</div>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"description\">Descripción</label>\r\n        <textarea \r\n          id=\"description\" \r\n          v-model=\"form.description\"\r\n          class=\"form-control\"\r\n        ></textarea>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"price\">Precio *</label>\r\n        <input \r\n          type=\"number\" \r\n          id=\"price\" \r\n          v-model.number=\"form.price\" \r\n          min=\"0\" \r\n          step=\"0.01\" \r\n          required\r\n          class=\"form-control\"\r\n        />\r\n        <div v-if=\"errors.price\" class=\"error-text\">{{ errors.price }}</div>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"category\">Categoría</label>\r\n        <select\r\n          id=\"category\"\r\n          v-model=\"form.category\"\r\n          class=\"form-control\"\r\n        >\r\n          <option value=\"\">Seleccionar categoría</option>\r\n          <option value=\"Entradas\">Entradas</option>\r\n          <option value=\"Platos Principales\">Platos Principales</option>\r\n          <option value=\"Postres\">Postres</option>\r\n          <option value=\"Bebidas\">Bebidas</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label class=\"checkbox-label\">\r\n          <input \r\n            type=\"checkbox\" \r\n            v-model=\"form.is_available\"\r\n          />\r\n          <span>Disponible</span>\r\n        </label>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"image_url\">URL de Imagen</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"image_url\" \r\n          v-model=\"form.image_url\"\r\n          class=\"form-control\"\r\n          placeholder=\"http://ejemplo.com/imagen.jpg\"\r\n        />\r\n      </div>\r\n      \r\n      <div class=\"actions\">\r\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isSubmitting\">\r\n          {{ isSubmitting ? 'Guardando...' : (isEditing ? 'Actualizar' : 'Guardar') }}\r\n        </button>\r\n        <button type=\"button\" @click=\"resetForm\" class=\"btn btn-secondary\" :disabled=\"isSubmitting\">\r\n          Cancelar\r\n        </button>\r\n      </div>\r\n    </form>\r\n    \r\n    <div v-if=\"success\" class=\"success-message\">\r\n      {{ success }}\r\n    </div>\r\n    \r\n    <div v-if=\"errorMessage\" class=\"error-message\">\r\n      {{ errorMessage }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\nimport { createPlato } from '@/services/indexedDBService';\r\n\r\nexport default {\r\n  name: 'PlatoForm',\r\n  \r\n  props: {\r\n    editPlato: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  \r\n  emits: ['plato-saved', 'plato-updated', 'cancel'],\r\n  \r\n  setup(props, { emit }) {\r\n    // Estado del formulario\r\n    const form = reactive({\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      category: '',\r\n      is_available: true,\r\n      image_url: ''\r\n    });\r\n    \r\n    // Estados para validación y UI\r\n    const errors = reactive({\r\n      name: '',\r\n      price: ''\r\n    });\r\n    const isSubmitting = ref(false);\r\n    const errorMessage = ref('');\r\n    const success = ref('');\r\n    \r\n    // Determinar si estamos editando o creando\r\n    const isEditing = computed(() => !!props.editPlato);\r\n    \r\n    // Inicializar el formulario con datos si estamos editando\r\n    onMounted(() => {\r\n      if (props.editPlato) {\r\n        Object.assign(form, props.editPlato);\r\n      }\r\n    });\r\n    \r\n    // Validar el formulario\r\n    const validateForm = () => {\r\n      let isValid = true;\r\n      \r\n      // Validar nombre\r\n      if (!form.name.trim()) {\r\n        errors.name = 'El nombre del plato es obligatorio';\r\n        isValid = false;\r\n      } else {\r\n        errors.name = '';\r\n      }\r\n      \r\n      // Validar precio\r\n      if (form.price === null || form.price === undefined || isNaN(form.price)) {\r\n        errors.price = 'El precio debe ser un número válido';\r\n        isValid = false;\r\n      } else if (form.price < 0) {\r\n        errors.price = 'El precio no puede ser negativo';\r\n        isValid = false;\r\n      } else {\r\n        errors.price = '';\r\n      }\r\n      \r\n      return isValid;\r\n    };\r\n    \r\n    // Manejar el envío del formulario\r\n    const handleSubmit = async () => {\r\n      console.log('Enviando formulario', form);\r\n      \r\n      // Reiniciar mensajes\r\n      success.value = '';\r\n      errorMessage.value = '';\r\n      \r\n      // Validar formulario\r\n      if (!validateForm()) {\r\n        console.log('Formulario inválido', errors);\r\n        return;\r\n      }\r\n      \r\n      isSubmitting.value = true;\r\n      \r\n      try {\r\n        if (isEditing.value) {\r\n          // Lógica para edición (a implementar)\r\n          // Por ahora solo emitimos el evento\r\n          emit('plato-updated', form);\r\n          success.value = 'Plato actualizado correctamente';\r\n        } else {\r\n          // Crear nuevo plato usando la función createPlato\r\n          console.log('Llamando a createPlato con:', form);\r\n          const savedPlato = await createPlato({\r\n            ...form,\r\n            price: Number(form.price) // Asegurar que price es un número\r\n          });\r\n          \r\n          console.log('Plato guardado exitosamente:', savedPlato);\r\n          success.value = 'Plato guardado correctamente';\r\n          \r\n          // Emitir evento con el plato guardado\r\n          emit('plato-saved', savedPlato);\r\n          \r\n          // Resetear el formulario\r\n          resetForm();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al guardar el plato:', error);\r\n        errorMessage.value = `Error al guardar el plato: ${error.message || 'Error desconocido'}`;\r\n      } finally {\r\n        isSubmitting.value = false;\r\n      }\r\n    };\r\n    \r\n    // Resetear el formulario\r\n    const resetForm = () => {\r\n      // Si estamos editando, mantener los valores originales\r\n      if (isEditing.value && props.editPlato) {\r\n        Object.assign(form, props.editPlato);\r\n      } else {\r\n        // Si estamos creando, limpiar todos los campos\r\n        form.name = '';\r\n        form.description = '';\r\n        form.price = 0;\r\n        form.category = '';\r\n        form.is_available = true;\r\n        form.image_url = '';\r\n      }\r\n      \r\n      // Limpiar errores\r\n      errors.name = '';\r\n      errors.price = '';\r\n      \r\n      // Limpiar mensajes\r\n      errorMessage.value = '';\r\n      success.value = '';\r\n      \r\n      // Emitir evento de cancelación\r\n      emit('cancel');\r\n    };\r\n    \r\n    return {\r\n      form,\r\n      errors,\r\n      isSubmitting,\r\n      errorMessage,\r\n      success,\r\n      isEditing,\r\n      handleSubmit,\r\n      resetForm\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.plato-form {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\n.form-control {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.checkbox-label {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.btn {\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n  background-color: #388E3C;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #9E9E9E;\r\n  color: white;\r\n}\r\n\r\n.btn-secondary:hover:not(:disabled) {\r\n  background-color: #757575;\r\n}\r\n\r\n.error-text {\r\n  color: #F44336;\r\n  font-size: 14px;\r\n  margin-top: 4px;\r\n}\r\n\r\n.success-message {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  background-color: #E8F5E9;\r\n  color: #2E7D32;\r\n  border: 1px solid #81C784;\r\n}\r\n\r\n.error-message {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  background-color: #FFEBEE;\r\n  color: #C62828;\r\n  border: 1px solid #EF9A9A;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}