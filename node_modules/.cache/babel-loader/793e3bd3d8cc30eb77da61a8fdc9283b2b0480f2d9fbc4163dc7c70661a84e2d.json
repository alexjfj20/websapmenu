{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { getDashboardStats } from '../../services/adminService';\nexport default {\n  name: 'AdminDashboard',\n  emits: ['change-tab'],\n  setup() {\n    const stats = ref({\n      totalUsers: 0,\n      activeUsers: 0,\n      inactiveUsers: 0,\n      activePayments: 0,\n      pendingPayments: 0,\n      overduePayments: 0,\n      totalIncome: 0,\n      status: 'Cargando...',\n      lastBackup: null,\n      recentActivity: []\n    });\n    const loading = ref(true);\n    const error = ref(null);\n\n    // Cargar estad√≠sticas\n    const loadStats = async () => {\n      try {\n        loading.value = true;\n        error.value = null;\n        const response = await getDashboardStats();\n        if (response && response.success) {\n          stats.value = response.data;\n        } else if (response && response.data) {\n          // Incluso si hay error, podemos tener datos parciales\n          stats.value = {\n            ...stats.value,\n            ...response.data\n          };\n          throw new Error(response.message || 'Error al cargar estad√≠sticas');\n        } else {\n          throw new Error('No se pudieron cargar las estad√≠sticas');\n        }\n      } catch (err) {\n        console.error('Error al cargar estad√≠sticas:', err);\n        error.value = err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Cargar al montar el componente\n    onMounted(() => {\n      loadStats();\n    });\n    return {\n      stats,\n      loading,\n      error,\n      loadStats\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","getDashboardStats","name","emits","setup","stats","totalUsers","activeUsers","inactiveUsers","activePayments","pendingPayments","overduePayments","totalIncome","status","lastBackup","recentActivity","loading","error","loadStats","value","response","success","data","Error","message","err","console"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\admin\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <h2 class=\"section-title\">Dashboard</h2>\r\n    \r\n    <div class=\"stats-grid\">\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon users\">üë•</div>\r\n        <div class=\"stat-content\">\r\n          <h3>{{ stats.userCount || 0 }}</h3>\r\n          <p>Usuarios Registrados</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon menus\">üçΩÔ∏è</div>\r\n        <div class=\"stat-content\">\r\n          <h3>{{ stats.menuItemsCount || 0 }}</h3>\r\n          <p>Platos en Men√∫</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon sales\">üí∞</div>\r\n        <div class=\"stat-content\">\r\n          <h3>{{ stats.totalSales || 0 }}</h3>\r\n          <p>Ventas Totales</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon system\">‚öôÔ∏è</div>\r\n        <div class=\"stat-content\">\r\n          <h3>{{ stats.systemStatus || 'Normal' }}</h3>\r\n          <p>Estado del Sistema</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"dashboard-actions\">\r\n      <button @click=\"$emit('change-tab', 'backups')\" class=\"action-button\">\r\n        <span class=\"action-icon\">üíæ</span> Gestionar Respaldos\r\n      </button>\r\n      <button @click=\"$emit('change-tab', 'logs')\" class=\"action-button\">\r\n        <span class=\"action-icon\">üìã</span> Ver Registros\r\n      </button>\r\n      <button @click=\"$emit('change-tab', 'users')\" class=\"action-button\">\r\n        <span class=\"action-icon\">üë•</span> Gestionar Usuarios\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { getDashboardStats } from '../../services/adminService';\r\n\r\nexport default {\r\n  name: 'AdminDashboard',\r\n  emits: ['change-tab'],\r\n  setup() {\r\n    const stats = ref({\r\n      totalUsers: 0,\r\n      activeUsers: 0,\r\n      inactiveUsers: 0,\r\n      activePayments: 0,\r\n      pendingPayments: 0,\r\n      overduePayments: 0,\r\n      totalIncome: 0,\r\n      status: 'Cargando...',\r\n      lastBackup: null,\r\n      recentActivity: []\r\n    });\r\n    \r\n    const loading = ref(true);\r\n    const error = ref(null);\r\n    \r\n    // Cargar estad√≠sticas\r\n    const loadStats = async () => {\r\n      try {\r\n        loading.value = true;\r\n        error.value = null;\r\n        \r\n        const response = await getDashboardStats();\r\n        \r\n        if (response && response.success) {\r\n          stats.value = response.data;\r\n        } else if (response && response.data) {\r\n          // Incluso si hay error, podemos tener datos parciales\r\n          stats.value = { ...stats.value, ...response.data };\r\n          throw new Error(response.message || 'Error al cargar estad√≠sticas');\r\n        } else {\r\n          throw new Error('No se pudieron cargar las estad√≠sticas');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error al cargar estad√≠sticas:', err);\r\n        error.value = err.message;\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Cargar al montar el componente\r\n    onMounted(() => {\r\n      loadStats();\r\n    });\r\n    \r\n    return {\r\n      stats,\r\n      loading,\r\n      error,\r\n      loadStats\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.stat-card {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 6px 15px rgba(0,0,0,0.15);\r\n}\r\n\r\n.stat-icon {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n}\r\n\r\n.stat-icon.users {\r\n  background-color: #e3f2fd;\r\n  color: #1976d2;\r\n}\r\n\r\n.stat-icon.menus {\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.stat-icon.sales {\r\n  background-color: #fff8e1;\r\n  color: #ffa000;\r\n}\r\n\r\n.stat-icon.system {\r\n  background-color: #f3e5f5;\r\n  color: #7b1fa2;\r\n}\r\n\r\n.stat-content h3 {\r\n  font-size: 24px;\r\n  margin: 0 0 5px 0;\r\n  color: #333;\r\n}\r\n\r\n.stat-content p {\r\n  margin: 0;\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.dashboard-actions {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 15px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.action-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 15px 20px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #45a049;\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 4px 10px rgba(0,0,0,0.2);\r\n}\r\n\r\n.action-icon {\r\n  font-size: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAqDA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,iBAAgB,QAAS,6BAA6B;AAE/D,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE,CAAC,YAAY,CAAC;EACrBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,GAAG,CAAC;MAChBO,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC;MACdC,aAAa,EAAE,CAAC;MAChBC,cAAc,EAAE,CAAC;MACjBC,eAAe,EAAE,CAAC;MAClBC,eAAe,EAAE,CAAC;MAClBC,WAAW,EAAE,CAAC;MACdC,MAAM,EAAE,aAAa;MACrBC,UAAU,EAAE,IAAI;MAChBC,cAAc,EAAE;IAClB,CAAC,CAAC;IAEF,MAAMC,OAAM,GAAIjB,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMkB,KAAI,GAAIlB,GAAG,CAAC,IAAI,CAAC;;IAEvB;IACA,MAAMmB,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFF,OAAO,CAACG,KAAI,GAAI,IAAI;QACpBF,KAAK,CAACE,KAAI,GAAI,IAAI;QAElB,MAAMC,QAAO,GAAI,MAAMnB,iBAAiB,CAAC,CAAC;QAE1C,IAAImB,QAAO,IAAKA,QAAQ,CAACC,OAAO,EAAE;UAChChB,KAAK,CAACc,KAAI,GAAIC,QAAQ,CAACE,IAAI;QAC7B,OAAO,IAAIF,QAAO,IAAKA,QAAQ,CAACE,IAAI,EAAE;UACpC;UACAjB,KAAK,CAACc,KAAI,GAAI;YAAE,GAAGd,KAAK,CAACc,KAAK;YAAE,GAAGC,QAAQ,CAACE;UAAK,CAAC;UAClD,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAACI,OAAM,IAAK,8BAA8B,CAAC;QACrE,OAAO;UACL,MAAM,IAAID,KAAK,CAAC,wCAAwC,CAAC;QAC3D;MACF,EAAE,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACT,KAAK,CAAC,+BAA+B,EAAEQ,GAAG,CAAC;QACnDR,KAAK,CAACE,KAAI,GAAIM,GAAG,CAACD,OAAO;MAC3B,UAAU;QACRR,OAAO,CAACG,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;;IAED;IACAnB,SAAS,CAAC,MAAM;MACdkB,SAAS,CAAC,CAAC;IACb,CAAC,CAAC;IAEF,OAAO;MACLb,KAAK;MACLW,OAAO;MACPC,KAAK;MACLC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}