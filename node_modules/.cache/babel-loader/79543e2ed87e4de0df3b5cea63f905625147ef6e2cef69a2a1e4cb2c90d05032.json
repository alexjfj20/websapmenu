{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { getDashboardStats, getMenuItems, getSoldItems } from '../../services/adminService';\nexport default {\n  name: 'AdminDashboard',\n  setup() {\n    const stats = ref({\n      totalUsers: 0,\n      activeUsers: 0,\n      inactiveUsers: 0,\n      menuItemsCount: 0,\n      totalSales: 0,\n      status: 'Cargando...',\n      lastBackup: null,\n      recentActivity: []\n    });\n    const loading = ref(true);\n    const error = ref(null);\n\n    // Formatear precio con separadores\n    const formatPrice = price => {\n      if (isNaN(Number(price))) return '0,00';\n      const numero = Number(price).toFixed(2);\n      const [parteEntera, parteDecimal] = numero.split('.');\n      const parteEnteraFormateada = parteEntera.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n      return `${parteEnteraFormateada},${parteDecimal}`;\n    };\n\n    // Formatear fecha\n    const formatDate = dateString => {\n      if (!dateString) return 'N/A';\n      try {\n        const date = new Date(dateString);\n        if (isNaN(date.getTime())) return 'Fecha inválida';\n        return new Intl.DateTimeFormat('es-ES', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        }).format(date);\n      } catch (err) {\n        console.error('Error al formatear fecha:', err);\n        return 'Fecha inválida';\n      }\n    };\n\n    // Cargar estadísticas\n    const loadStats = async () => {\n      try {\n        loading.value = true;\n        error.value = null;\n        const [apiStats, menuItems, soldItems] = await Promise.all([getDashboardStats(), getMenuItems(), getSoldItems()]);\n\n        // Calcular totales reales para un dashboard preciso\n        let realTotalSales = 0;\n        if (Array.isArray(soldItems.data)) {\n          realTotalSales = soldItems.data.reduce((total, item) => {\n            const price = Number(item.price) || 0;\n            const quantity = Number(item.quantity) || 0;\n            return total + price * quantity;\n          }, 0);\n        }\n\n        // Actualizar stats combinando datos de la API con datos reales\n        stats.value = {\n          ...apiStats.data,\n          menuItemsCount: Array.isArray(menuItems.data) ? menuItems.data.length : 0,\n          totalSales: realTotalSales || apiStats.data.totalIncome || 0\n        };\n\n        // Asegurarse de que stats.recentActivity sea siempre un array\n        if (!stats.value.recentActivity) {\n          stats.value.recentActivity = [];\n        }\n\n        // Asegurarse de que totalUsers no sea 0\n        if (stats.value.totalUsers === 0 && Array.isArray(apiStats.data.users)) {\n          stats.value.totalUsers = apiStats.data.users.length;\n        }\n        console.log(\"Dashboard cargado con éxito:\", stats.value);\n      } catch (err) {\n        console.error('Error al cargar estadísticas:', err);\n        error.value = `Error al cargar estadísticas: ${err.message || 'Error desconocido'}`;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Cargar al montar el componente\n    onMounted(() => {\n      loadStats();\n    });\n    return {\n      stats,\n      loading,\n      error,\n      loadStats,\n      formatPrice,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","getDashboardStats","getMenuItems","getSoldItems","name","setup","stats","totalUsers","activeUsers","inactiveUsers","menuItemsCount","totalSales","status","lastBackup","recentActivity","loading","error","formatPrice","price","isNaN","Number","numero","toFixed","parteEntera","parteDecimal","split","parteEnteraFormateada","replace","formatDate","dateString","date","Date","getTime","Intl","DateTimeFormat","day","month","year","hour","minute","format","err","console","loadStats","value","apiStats","menuItems","soldItems","Promise","all","realTotalSales","Array","isArray","data","reduce","total","item","quantity","length","totalIncome","users","log","message"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\admin\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <h2 class=\"section-title\">Dashboard</h2>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-spinner-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando datos...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"error-container\">\r\n      <p class=\"error-message\">{{ error }}</p>\r\n      <button @click=\"loadStats\" class=\"retry-button\">Reintentar</button>\r\n    </div>\r\n    \r\n    <div v-else class=\"dashboard-content\">\r\n      <!-- Tarjetas de estadísticas -->\r\n      <div class=\"stats-cards\">\r\n        <div class=\"stat-card users\">\r\n          <div class=\"stat-icon\">👥</div>\r\n          <div class=\"stat-info\">\r\n            <h3>{{ stats.totalUsers }}</h3>\r\n            <p>Usuarios Registrados</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card menu\">\r\n          <div class=\"stat-icon\">🍽️</div>\r\n          <div class=\"stat-info\">\r\n            <h3>{{ stats.menuItemsCount }}</h3>\r\n            <p>Platos en Menú</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card sales\">\r\n          <div class=\"stat-icon\">💰</div>\r\n          <div class=\"stat-info\">\r\n            <h3>${{ formatPrice(stats.totalSales || 0) }}</h3>\r\n            <p>Ventas Totales</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Actividad Reciente -->\r\n      <div class=\"recent-activity\">\r\n        <h3>Actividad Reciente</h3>\r\n        <div v-if=\"stats.recentActivity && stats.recentActivity.length > 0\" class=\"activity-list\">\r\n          <div v-for=\"(activity, index) in stats.recentActivity\" :key=\"index\" class=\"activity-item\">\r\n            <div class=\"activity-icon\" :class=\"activity.tipo\">\r\n              <span v-if=\"activity.tipo === 'user_created'\">👤</span>\r\n              <span v-else-if=\"activity.tipo === 'login'\">🔑</span>\r\n              <span v-else-if=\"activity.tipo === 'payment'\">💵</span>\r\n              <span v-else-if=\"activity.tipo === 'backup'\">💾</span>\r\n              <span v-else>📝</span>\r\n            </div>\r\n            <div class=\"activity-content\">\r\n              <p><strong>{{ activity.usuario_nombre }}</strong> {{ activity.accion }}</p>\r\n              <span class=\"activity-time\">{{ formatDate(activity.fecha) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p v-else class=\"no-activity\">No hay actividad reciente registrada</p>\r\n      </div>\r\n      \r\n      <!-- Estado del Sistema -->\r\n      <div class=\"system-status\">\r\n        <h3>Estado del Sistema</h3>\r\n        <div class=\"status-info\">\r\n          <p><strong>Estado:</strong> <span :class=\"'status-' + stats.status.toLowerCase()\">{{ stats.status }}</span></p>\r\n          <p><strong>Último respaldo:</strong> {{ stats.lastBackup ? formatDate(stats.lastBackup) : 'No hay respaldo' }}</p>\r\n          <p><strong>Usuarios activos:</strong> {{ stats.activeUsers }}</p>\r\n          <p><strong>Usuarios inactivos:</strong> {{ stats.inactiveUsers }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Botón para refrescar -->\r\n    <button @click=\"loadStats\" class=\"refresh-button\">\r\n      <span class=\"refresh-icon\">🔄</span> Actualizar Datos\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport { getDashboardStats, getMenuItems, getSoldItems } from '../../services/adminService';\r\n\r\nexport default {\r\n  name: 'AdminDashboard',\r\n  setup() {\r\n    const stats = ref({\r\n      totalUsers: 0,\r\n      activeUsers: 0,\r\n      inactiveUsers: 0,\r\n      menuItemsCount: 0,\r\n      totalSales: 0,\r\n      status: 'Cargando...',\r\n      lastBackup: null,\r\n      recentActivity: []\r\n    });\r\n    \r\n    const loading = ref(true);\r\n    const error = ref(null);\r\n    \r\n    // Formatear precio con separadores\r\n    const formatPrice = (price) => {\r\n      if (isNaN(Number(price))) return '0,00';\r\n      \r\n      const numero = Number(price).toFixed(2);\r\n      const [parteEntera, parteDecimal] = numero.split('.');\r\n      const parteEnteraFormateada = parteEntera.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n      \r\n      return `${parteEnteraFormateada},${parteDecimal}`;\r\n    };\r\n    \r\n    // Formatear fecha\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return 'N/A';\r\n      \r\n      try {\r\n        const date = new Date(dateString);\r\n        if (isNaN(date.getTime())) return 'Fecha inválida';\r\n        \r\n        return new Intl.DateTimeFormat('es-ES', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        }).format(date);\r\n      } catch (err) {\r\n        console.error('Error al formatear fecha:', err);\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Cargar estadísticas\r\n    const loadStats = async () => {\r\n      try {\r\n        loading.value = true;\r\n        error.value = null;\r\n        \r\n        const [apiStats, menuItems, soldItems] = await Promise.all([\r\n          getDashboardStats(),\r\n          getMenuItems(),\r\n          getSoldItems()\r\n        ]);\r\n        \r\n        // Calcular totales reales para un dashboard preciso\r\n        let realTotalSales = 0;\r\n        if (Array.isArray(soldItems.data)) {\r\n          realTotalSales = soldItems.data.reduce((total, item) => {\r\n            const price = Number(item.price) || 0;\r\n            const quantity = Number(item.quantity) || 0;\r\n            return total + (price * quantity);\r\n          }, 0);\r\n        }\r\n        \r\n        // Actualizar stats combinando datos de la API con datos reales\r\n        stats.value = {\r\n          ...apiStats.data,\r\n          menuItemsCount: Array.isArray(menuItems.data) ? menuItems.data.length : 0,\r\n          totalSales: realTotalSales || apiStats.data.totalIncome || 0\r\n        };\r\n        \r\n        // Asegurarse de que stats.recentActivity sea siempre un array\r\n        if (!stats.value.recentActivity) {\r\n          stats.value.recentActivity = [];\r\n        }\r\n        \r\n        // Asegurarse de que totalUsers no sea 0\r\n        if (stats.value.totalUsers === 0 && Array.isArray(apiStats.data.users)) {\r\n          stats.value.totalUsers = apiStats.data.users.length;\r\n        }\r\n        \r\n        console.log(\"Dashboard cargado con éxito:\", stats.value);\r\n      } catch (err) {\r\n        console.error('Error al cargar estadísticas:', err);\r\n        error.value = `Error al cargar estadísticas: ${err.message || 'Error desconocido'}`;\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Cargar al montar el componente\r\n    onMounted(() => {\r\n      loadStats();\r\n    });\r\n    \r\n    return {\r\n      stats,\r\n      loading,\r\n      error,\r\n      loadStats,\r\n      formatPrice,\r\n      formatDate\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.stat-card {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 6px 15px rgba(0,0,0,0.15);\r\n}\r\n\r\n.stat-icon {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n}\r\n\r\n.stat-icon.users {\r\n  background-color: #e3f2fd;\r\n  color: #1976d2;\r\n}\r\n\r\n.stat-icon.menus {\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.stat-icon.sales {\r\n  background-color: #fff8e1;\r\n  color: #ffa000;\r\n}\r\n\r\n.stat-icon.system {\r\n  background-color: #f3e5f5;\r\n  color: #7b1fa2;\r\n}\r\n\r\n.stat-content h3 {\r\n  font-size: 24px;\r\n  margin: 0 0 5px 0;\r\n  color: #333;\r\n}\r\n\r\n.stat-content p {\r\n  margin: 0;\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.dashboard-actions {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 15px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.action-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 15px 20px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #45a049;\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 4px 10px rgba(0,0,0,0.2);\r\n}\r\n\r\n.action-icon {\r\n  font-size: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}