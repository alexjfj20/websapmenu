{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-reservas\"\n};\nconst _hoisted_2 = {\n  class: \"reservas-header\"\n};\nconst _hoisted_3 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = {\n  class: \"reservas-container\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"loading-spinner\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"no-reservations\"\n};\nconst _hoisted_11 = {\n  key: 2,\n  class: \"reservations-list\"\n};\nconst _hoisted_12 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_13 = {\n  class: \"reservation-table\"\n};\nconst _hoisted_14 = [\"href\"];\nconst _hoisted_15 = {\n  class: \"actions-cell\"\n};\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = [\"onClick\", \"disabled\"];\nconst _hoisted_18 = [\"onClick\", \"disabled\"];\nconst _hoisted_19 = {\n  key: 0,\n  class: \"reservation-modal\"\n};\nconst _hoisted_20 = {\n  class: \"modal-content\"\n};\nconst _hoisted_21 = {\n  class: \"reservation-details\"\n};\nconst _hoisted_22 = {\n  key: 0\n};\nconst _hoisted_23 = {\n  key: 1\n};\nconst _hoisted_24 = {\n  key: 2\n};\nconst _hoisted_25 = {\n  key: 3\n};\nconst _hoisted_26 = {\n  class: \"modal-actions\"\n};\nconst _hoisted_27 = [\"disabled\"];\nconst _hoisted_28 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", {\n    class: \"admin-section-title\"\n  }, \"Gestión de Reservas\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    class: \"refresh-btn\",\n    onClick: $setup.refreshReservations,\n    disabled: $setup.isLoading,\n    title: \"Actualizar reservas\"\n  }, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"Actualizando...\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"🔄 Actualizar\"))], 8 /* PROPS */, _hoisted_4), _createElementVNode(\"button\", {\n    class: \"delete-old-btn\",\n    onClick: $setup.showDeleteOldConfirmation,\n    disabled: $setup.isLoading || !$setup.hasOldReservations,\n    title: \"Eliminar reservas antiguas (más de 30 días)\"\n  }, _cache[4] || (_cache[4] = [_createElementVNode(\"span\", null, \"🗑️ Eliminar Antiguas\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_7)])]), _createElementVNode(\"div\", _hoisted_8, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _cache[6] || (_cache[6] = [_createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Cargando reservas...\", -1 /* HOISTED */)]))) : $setup.reservations.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _cache[7] || (_cache[7] = [_createElementVNode(\"p\", null, \"Aún no hay reservas registradas\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"table\", _hoisted_13, [_cache[8] || (_cache[8] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Fecha\"), _createElementVNode(\"th\", null, \"Hora\"), _createElementVNode(\"th\", null, \"Cliente\"), _createElementVNode(\"th\", null, \"Teléfono\"), _createElementVNode(\"th\", null, \"Personas\"), _createElementVNode(\"th\", null, \"Estado\"), _createElementVNode(\"th\", null, \"Acciones\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.reservations, (reservation, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      class: _normalizeClass({\n        'confirmed': reservation.status === 'confirmed',\n        'pending': reservation.status === 'pending',\n        'cancelled': reservation.status === 'cancelled'\n      })\n    }, [_createElementVNode(\"td\", null, _toDisplayString($setup.formatDate(reservation.date)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(reservation.time), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(reservation.fullName), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"a\", {\n      href: `tel:${reservation.mobilePhone}`\n    }, _toDisplayString(reservation.mobilePhone), 9 /* TEXT, PROPS */, _hoisted_14)]), _createElementVNode(\"td\", null, _toDisplayString(reservation.peopleCount), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"status-badge\", reservation.status])\n    }, _toDisplayString($setup.getStatusLabel(reservation.status)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", _hoisted_15, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.viewReservation(reservation),\n      class: \"action-btn view-btn\",\n      title: \"Ver detalles\"\n    }, \" 👁️ \", 8 /* PROPS */, _hoisted_16), !$props.readOnly ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $setup.confirmReservation(reservation),\n      class: \"action-btn confirm-btn\",\n      title: \"Confirmar reserva\",\n      disabled: reservation.status === 'confirmed'\n    }, \" ✅ \", 8 /* PROPS */, _hoisted_17)) : _createCommentVNode(\"v-if\", true), !$props.readOnly ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $setup.cancelReservation(reservation),\n      class: \"action-btn cancel-btn\",\n      title: \"Cancelar reserva\",\n      disabled: reservation.status === 'cancelled'\n    }, \" ❌ \", 8 /* PROPS */, _hoisted_18)) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])])])]))]), _createCommentVNode(\" Modal para ver detalles de la reserva \"), $setup.selectedReservation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"span\", {\n    class: \"close-modal\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.selectedReservation = null)\n  }, \"×\"), _cache[20] || (_cache[20] = _createElementVNode(\"h3\", null, \"Detalles de la Reserva\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"p\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"strong\", null, \"Cliente:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedReservation.fullName), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[10] || (_cache[10] = _createElementVNode(\"strong\", null, \"Teléfono Móvil:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedReservation.mobilePhone), 1 /* TEXT */)]), $setup.selectedReservation.landlinePhone ? (_openBlock(), _createElementBlock(\"p\", _hoisted_22, [_cache[11] || (_cache[11] = _createElementVNode(\"strong\", null, \"Teléfono Fijo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedReservation.landlinePhone), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $setup.selectedReservation.email ? (_openBlock(), _createElementBlock(\"p\", _hoisted_23, [_cache[12] || (_cache[12] = _createElementVNode(\"strong\", null, \"Email:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedReservation.email), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $setup.selectedReservation.address ? (_openBlock(), _createElementBlock(\"p\", _hoisted_24, [_cache[13] || (_cache[13] = _createElementVNode(\"strong\", null, \"Dirección:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedReservation.address), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"strong\", null, \"Fecha:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.formatDate($setup.selectedReservation.date)), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[15] || (_cache[15] = _createElementVNode(\"strong\", null, \"Hora:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedReservation.time), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[16] || (_cache[16] = _createElementVNode(\"strong\", null, \"Número de Personas:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedReservation.peopleCount), 1 /* TEXT */)]), $setup.selectedReservation.notes ? (_openBlock(), _createElementBlock(\"p\", _hoisted_25, [_cache[17] || (_cache[17] = _createElementVNode(\"strong\", null, \"Notas Adicionales:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedReservation.notes), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, [_cache[18] || (_cache[18] = _createElementVNode(\"strong\", null, \"Estado:\", -1 /* HOISTED */)), _cache[19] || (_cache[19] = _createTextVNode()), _createElementVNode(\"span\", {\n    class: _normalizeClass([\"status-badge\", $setup.selectedReservation.status])\n  }, _toDisplayString($setup.getStatusLabel($setup.selectedReservation.status)), 3 /* TEXT, CLASS */)])]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.confirmReservation($setup.selectedReservation)),\n    class: \"action-btn confirm-btn\",\n    disabled: $setup.selectedReservation.status === 'confirmed'\n  }, \" Confirmar Reserva \", 8 /* PROPS */, _hoisted_27), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.cancelReservation($setup.selectedReservation)),\n    class: \"action-btn cancel-btn\",\n    disabled: $setup.selectedReservation.status === 'cancelled'\n  }, \" Cancelar Reserva \", 8 /* PROPS */, _hoisted_28), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $setup.contactCustomer($setup.selectedReservation)),\n    class: \"action-btn contact-btn\"\n  }, \" Contactar Cliente \")])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Añadir notificación toast \"), $setup.toast.visible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass([\"toast-notification\", $setup.toast.type])\n  }, _toDisplayString($setup.toast.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","$setup","refreshReservations","disabled","isLoading","title","_hoisted_5","_hoisted_6","_hoisted_4","showDeleteOldConfirmation","hasOldReservations","_hoisted_7","_hoisted_8","_hoisted_9","_cache","reservations","length","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_Fragment","_renderList","reservation","index","_normalizeClass","status","_toDisplayString","formatDate","date","time","fullName","href","mobilePhone","_hoisted_14","peopleCount","getStatusLabel","_hoisted_15","$event","viewReservation","_hoisted_16","$props","readOnly","confirmReservation","_hoisted_17","_createCommentVNode","cancelReservation","_hoisted_18","selectedReservation","_hoisted_19","_hoisted_20","_hoisted_21","_createTextVNode","landlinePhone","_hoisted_22","email","_hoisted_23","address","_hoisted_24","notes","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","contactCustomer","toast","visible","type","message"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\admin\\AdminReservas.vue"],"sourcesContent":["<template>\n  <div class=\"admin-reservas\">\n    <div class=\"reservas-header\">\n      <h2 class=\"admin-section-title\">Gestión de Reservas</h2>\n      <div class=\"action-buttons\">\n        <button \n          class=\"refresh-btn\" \n          @click=\"refreshReservations\" \n          :disabled=\"isLoading\"\n          title=\"Actualizar reservas\"\n        >\n          <span v-if=\"isLoading\">Actualizando...</span>\n          <span v-else>🔄 Actualizar</span>\n        </button>\n        \n        <button \n          class=\"delete-old-btn\" \n          @click=\"showDeleteOldConfirmation\" \n          :disabled=\"isLoading || !hasOldReservations\"\n          title=\"Eliminar reservas antiguas (más de 30 días)\"\n        >\n          <span>🗑️ Eliminar Antiguas</span>\n        </button>\n      </div>\n    </div>\n    \n    <div class=\"reservas-container\">\n      <div v-if=\"isLoading\" class=\"loading-spinner\">\n        <div class=\"spinner\"></div>\n        <p>Cargando reservas...</p>\n      </div>\n      \n      <div v-else-if=\"reservations.length === 0\" class=\"no-reservations\">\n        <p>Aún no hay reservas registradas</p>\n      </div>\n      \n      <div v-else class=\"reservations-list\">\n        <div class=\"table-responsive\">\n          <table class=\"reservation-table\">\n            <thead>\n              <tr>\n                <th>Fecha</th>\n                <th>Hora</th>\n                <th>Cliente</th>\n                <th>Teléfono</th>\n                <th>Personas</th>\n                <th>Estado</th>\n                <th>Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(reservation, index) in reservations\" :key=\"index\" :class=\"{ 'confirmed': reservation.status === 'confirmed', 'pending': reservation.status === 'pending', 'cancelled': reservation.status === 'cancelled' }\">\n                <td>{{ formatDate(reservation.date) }}</td>\n                <td>{{ reservation.time }}</td>\n                <td>{{ reservation.fullName }}</td>\n                <td>\n                  <a :href=\"`tel:${reservation.mobilePhone}`\">{{ reservation.mobilePhone }}</a>\n                </td>\n                <td>{{ reservation.peopleCount }}</td>\n                <td>\n                  <span class=\"status-badge\" :class=\"reservation.status\">\n                    {{ getStatusLabel(reservation.status) }}\n                  </span>\n                </td>\n                <td class=\"actions-cell\">\n                  <button @click=\"viewReservation(reservation)\" class=\"action-btn view-btn\" title=\"Ver detalles\">\n                    👁️\n                  </button>\n                  <button \n                    v-if=\"!readOnly\" \n                    @click=\"confirmReservation(reservation)\" \n                    class=\"action-btn confirm-btn\" \n                    title=\"Confirmar reserva\" \n                    :disabled=\"reservation.status === 'confirmed'\"\n                  >\n                    ✅\n                  </button>\n                  <button \n                    v-if=\"!readOnly\" \n                    @click=\"cancelReservation(reservation)\" \n                    class=\"action-btn cancel-btn\" \n                    title=\"Cancelar reserva\" \n                    :disabled=\"reservation.status === 'cancelled'\"\n                  >\n                    ❌\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Modal para ver detalles de la reserva -->\n    <div v-if=\"selectedReservation\" class=\"reservation-modal\">\n      <div class=\"modal-content\">\n        <span class=\"close-modal\" @click=\"selectedReservation = null\">&times;</span>\n        <h3>Detalles de la Reserva</h3>\n        \n        <div class=\"reservation-details\">\n          <p><strong>Cliente:</strong> {{ selectedReservation.fullName }}</p>\n          <p><strong>Teléfono Móvil:</strong> {{ selectedReservation.mobilePhone }}</p>\n          <p v-if=\"selectedReservation.landlinePhone\"><strong>Teléfono Fijo:</strong> {{ selectedReservation.landlinePhone }}</p>\n          <p v-if=\"selectedReservation.email\"><strong>Email:</strong> {{ selectedReservation.email }}</p>\n          <p v-if=\"selectedReservation.address\"><strong>Dirección:</strong> {{ selectedReservation.address }}</p>\n          <p><strong>Fecha:</strong> {{ formatDate(selectedReservation.date) }}</p>\n          <p><strong>Hora:</strong> {{ selectedReservation.time }}</p>\n          <p><strong>Número de Personas:</strong> {{ selectedReservation.peopleCount }}</p>\n          <p v-if=\"selectedReservation.notes\"><strong>Notas Adicionales:</strong> {{ selectedReservation.notes }}</p>\n          <p><strong>Estado:</strong> <span class=\"status-badge\" :class=\"selectedReservation.status\">{{ getStatusLabel(selectedReservation.status) }}</span></p>\n        </div>\n        \n        <div class=\"modal-actions\">\n          <button @click=\"confirmReservation(selectedReservation)\" class=\"action-btn confirm-btn\" :disabled=\"selectedReservation.status === 'confirmed'\">\n            Confirmar Reserva\n          </button>\n          <button @click=\"cancelReservation(selectedReservation)\" class=\"action-btn cancel-btn\" :disabled=\"selectedReservation.status === 'cancelled'\">\n            Cancelar Reserva\n          </button>\n          <button @click=\"contactCustomer(selectedReservation)\" class=\"action-btn contact-btn\">\n            Contactar Cliente\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Añadir notificación toast -->\n    <div v-if=\"toast.visible\" class=\"toast-notification\" :class=\"toast.type\">\n      {{ toast.message }}\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive, onUnmounted } from 'vue';\nimport { \n  getReservations, \n  updateReservationStatus, \n  deleteReservation, \n  isReservationOlderThan \n} from '../../services/reservaService';\nimport eventBus from '../../utils/eventBus';\n\n// Props\nconst props = defineProps({\n  readOnly: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst reservations = ref([]);\nconst isLoading = ref(true);\nconst selectedReservation = ref(null);\n\nconst toast = reactive({\n  visible: false,\n  message: '',\n  type: 'info'\n});\n\nconst showToast = (message, type = 'info') => {\n  toast.message = message;\n  toast.type = type;\n  toast.visible = true;\n  \n  setTimeout(() => {\n    toast.visible = false;\n  }, 5000);\n};\n\n// Función para cargar las reservas\nconst loadReservations = async () => {\n  isLoading.value = true;\n  try {\n    console.log('🔄 Cargando reservas...');\n    // Utilizamos el servicio de reservas para obtener los datos\n    const result = await getReservations();\n    \n    if (result.success) {\n      reservations.value = result.reservations;\n      console.log('✅ Reservas cargadas correctamente:', reservations.value.length);\n    } else {\n      throw new Error(result.error || 'Error al cargar las reservas');\n    }\n  } catch (error) {\n    console.error('❌ Error al cargar reservas:', error);\n    showToast('Error al cargar las reservas', 'error');\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// Función para manejar nuevas reservas recibidas a través del eventBus\nconst handleNuevaReserva = (reservation) => {\n  console.log('🔔 Nueva reserva recibida:', reservation);\n  \n  // Verificamos si la reserva ya existe en la lista (para evitar duplicados)\n  const existingIndex = reservations.value.findIndex(r => r.id === reservation.id);\n  \n  if (existingIndex !== -1) {\n    console.log('⚠️ La reserva ya existe en la lista, actualizando');\n    reservations.value[existingIndex] = reservation;\n  } else {\n    // Añadimos la nueva reserva al inicio de la lista\n    reservations.value.unshift(reservation);\n  }\n  \n  // Mostramos una notificación\n  showToast(`Nueva reserva recibida de ${reservation.fullName}`, 'success');\n};\n\n// Función para manejar actualizaciones de reservas\nconst handleReservaActualizada = (data) => {\n  console.log('🔄 Actualización de reserva recibida:', data);\n  \n  // Buscamos la reserva en la lista y actualizamos su estado\n  const index = reservations.value.findIndex(res => res.id === data.id);\n  if (index !== -1) {\n    reservations.value[index].status = data.status;\n  }\n};\n\n// Función para actualizar la lista de reservas (llamada cuando hay una nueva)\nconst refreshReservations = async () => {\n  isLoading.value = true;\n  try {\n    console.log('🔄 Actualizando lista de reservas...');\n    const result = await getReservations();\n    \n    if (result.success) {\n      reservations.value = result.reservations;\n      console.log('✅ Lista de reservas actualizada:', reservations.value.length);\n    } else {\n      throw new Error(result.error || 'Error al actualizar las reservas');\n    }\n  } catch (error) {\n    console.error('❌ Error al actualizar reservas:', error);\n    showToast('Error al actualizar las reservas', 'error');\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// Cargar las reservas al montar el componente\nonMounted(() => {\n  // Cargar las reservas iniciales\n  loadReservations();\n  \n  // Escuchar eventos de nuevas reservas\n  eventBus.on('nueva-reserva', handleNuevaReserva);\n  \n  // Escuchar eventos de actualización de reservas\n  eventBus.on('reserva-actualizada', handleReservaActualizada);\n  \n  // Escuchar eventos para refrescar reservas\n  eventBus.on('refresh-reservations', refreshReservations);\n  \n  console.log('✅ AdminReservas montado y escuchando eventos');\n});\n\n// Limpiar los listeners al desmontar el componente\nonUnmounted(() => {\n  eventBus.off('nueva-reserva', handleNuevaReserva);\n  eventBus.off('reserva-actualizada', handleReservaActualizada);\n  eventBus.off('refresh-reservations', refreshReservations);\n  console.log('🛑 AdminReservas desmontado');\n});\n\n// Ahora defineExpose funcionará correctamente\ndefineExpose({ refreshReservations });\n\n// Formatear fecha (YYYY-MM-DD a DD/MM/YYYY)\nconst formatDate = (dateString) => {\n  if (!dateString) return '';\n  const parts = dateString.split('-');\n  if (parts.length !== 3) return dateString;\n  return `${parts[2]}/${parts[1]}/${parts[0]}`;\n};\n\n// Obtener etiqueta del estado\nconst getStatusLabel = (status) => {\n  switch (status) {\n    case 'confirmed':\n      return 'Confirmada';\n    case 'pending':\n      return 'Pendiente';\n    case 'cancelled':\n      return 'Cancelada';\n    default:\n      return status;\n  }\n};\n\n// Ver detalles de la reserva\nconst viewReservation = (reservation) => {\n  selectedReservation.value = reservation;\n};\n\n// Confirmar reserva\nconst confirmReservation = async (reservation) => {\n  try {\n    // Utilizamos el servicio para actualizar el estado\n    const result = await updateReservationStatus(reservation.id, 'confirmed');\n    \n    if (result.success) {\n      // Actualizamos el estado localmente\n      reservation.status = 'confirmed';\n      showToast('Reserva confirmada correctamente', 'success');\n    } else {\n      throw new Error(result.error || 'Error al confirmar la reserva');\n    }\n  } catch (error) {\n    console.error('Error al confirmar reserva:', error);\n    showToast('Error al confirmar la reserva', 'error');\n  }\n};\n\n// Cancelar reserva\nconst cancelReservation = async (reservation) => {\n  try {\n    // Utilizamos el servicio para actualizar el estado\n    const result = await updateReservationStatus(reservation.id, 'cancelled');\n    \n    if (result.success) {\n      // Actualizamos el estado localmente\n      reservation.status = 'cancelled';\n      showToast('Reserva cancelada correctamente', 'success');\n    } else {\n      throw new Error(result.error || 'Error al cancelar la reserva');\n    }\n  } catch (error) {\n    console.error('Error al cancelar reserva:', error);\n    showToast('Error al cancelar la reserva', 'error');\n  }\n};\n\n// Contactar al cliente\nconst contactCustomer = (reservation) => {\n  if (reservation.mobilePhone) {\n    window.location.href = `tel:${reservation.mobilePhone}`;\n  } else {\n    showToast('No hay número de teléfono disponible', 'warning');\n  }\n};\n\n// Mostrar confirmación para eliminar reservas antiguas\nconst showDeleteOldConfirmation = () => {\n  if (confirm('¿Estás seguro de eliminar las reservas antiguas?')) {\n    deleteOldReservations();\n  }\n};\n\n// Eliminar reservas antiguas\nconst deleteOldReservations = async () => {\n  isLoading.value = true;\n  try {\n    const oldReservations = reservations.value.filter(reservation => isReservationOlderThan(reservation, 30));\n    \n    if (oldReservations.length === 0) {\n      showToast('No hay reservas antiguas para eliminar', 'info');\n      isLoading.value = false;\n      return;\n    }\n    \n    let successCount = 0;\n    let errorCount = 0;\n    \n    // Eliminar cada reserva antigua una por una\n    for (const reservation of oldReservations) {\n      try {\n        const result = await deleteReservation(reservation.id);\n        if (result.success) {\n          successCount++;\n        } else {\n          errorCount++;\n          console.error('Error al eliminar reserva:', reservation.id, result.error);\n        }\n      } catch (error) {\n        errorCount++;\n        console.error('Error al eliminar reserva:', reservation.id, error);\n      }\n    }\n    \n    // Actualizar la lista de reservas\n    await refreshReservations();\n    \n    if (successCount > 0) {\n      showToast(`${successCount} reservas antiguas eliminadas correctamente`, 'success');\n    }\n    \n    if (errorCount > 0) {\n      showToast(`No se pudieron eliminar ${errorCount} reservas`, 'warning');\n    }\n  } catch (error) {\n    console.error('Error al eliminar reservas antiguas:', error);\n    showToast('Error al eliminar las reservas antiguas', 'error');\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// Verificar si hay reservas antiguas\nconst hasOldReservations = computed(() => {\n  return reservations.value.some(reservation => isReservationOlderThan(reservation, 30));\n});\n</script>\n\n<style scoped>\n.admin-reservas {\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.admin-section-title {\n  color: #333;\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #4CAF50;\n}\n\n.loading-spinner {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 40px;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #4CAF50;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-bottom: 15px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.no-reservations {\n  text-align: center;\n  padding: 40px;\n  color: #666;\n  font-style: italic;\n}\n\n.table-responsive {\n  overflow-x: auto;\n}\n\n.reservation-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.reservation-table th, \n.reservation-table td {\n  padding: 12px 15px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.reservation-table th {\n  background-color: #f5f5f5;\n  font-weight: bold;\n  color: #333;\n}\n\n.reservation-table tr:hover {\n  background-color: #f9f9f9;\n}\n\n.reservation-table tr.confirmed {\n  background-color: rgba(76, 175, 80, 0.1);\n}\n\n.reservation-table tr.pending {\n  background-color: rgba(255, 193, 7, 0.1);\n}\n\n.reservation-table tr.cancelled {\n  background-color: rgba(244, 67, 54, 0.1);\n}\n\n.status-badge {\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 0.8rem;\n  font-weight: bold;\n}\n\n.status-badge.confirmed {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.status-badge.pending {\n  background-color: #FFC107;\n  color: #333;\n}\n\n.status-badge.cancelled {\n  background-color: #F44336;\n  color: white;\n}\n\n.actions-cell {\n  white-space: nowrap;\n}\n\n.action-btn {\n  background: none;\n  border: none;\n  font-size: 1.2rem;\n  cursor: pointer;\n  margin: 0 3px;\n  padding: 5px;\n  border-radius: 4px;\n  transition: background-color 0.3s;\n}\n\n.action-btn:hover {\n  background-color: #f0f0f0;\n}\n\n.action-btn:disabled {\n  opacity: 0.3;\n  cursor: not-allowed;\n}\n\n.view-btn:hover {\n  background-color: #e3f2fd;\n}\n\n.confirm-btn:hover {\n  background-color: #e8f5e9;\n}\n\n.cancel-btn:hover {\n  background-color: #ffebee;\n}\n\n/* Estilos para el modal */\n.reservation-modal {\n  position: fixed;\n  z-index: 1000;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.modal-content {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 20px;\n  width: 90%;\n  max-width: 500px;\n  max-height: 80vh;\n  overflow-y: auto;\n  position: relative;\n  box-shadow: 0 4px 20px rgba(0,0,0,0.2);\n}\n\n.close-modal {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  font-size: 24px;\n  cursor: pointer;\n  color: #666;\n}\n\n.close-modal:hover {\n  color: #000;\n}\n\n.modal-content h3 {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n  color: #333;\n}\n\n.reservation-details p {\n  margin: 8px 0;\n  line-height: 1.5;\n}\n\n.modal-actions {\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.modal-actions .action-btn {\n  flex: 1;\n  padding: 10px;\n  font-size: 0.9rem;\n  border-radius: 4px;\n  text-align: center;\n  min-width: 120px;\n}\n\n.modal-actions .confirm-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.modal-actions .cancel-btn {\n  background-color: #F44336;\n  color: white;\n}\n\n.modal-actions .contact-btn {\n  background-color: #2196F3;\n  color: white;\n}\n\n.modal-actions .action-btn:hover {\n  opacity: 0.9;\n}\n\n.modal-actions .action-btn:disabled {\n  background-color: #ccc;\n  color: #666;\n}\n\n@media (max-width: 768px) {\n  .reservation-table th, \n  .reservation-table td {\n    padding: 8px 10px;\n    font-size: 0.9rem;\n  }\n  \n  .actions-cell {\n    display: flex;\n  }\n  \n  .modal-actions {\n    flex-direction: column;\n  }\n  \n  .modal-content {\n    width: 95%;\n    padding: 15px;\n  }\n}\n\n.reservas-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.refresh-btn {\n  background-color: #f0f0f0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px 15px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.refresh-btn:hover {\n  background-color: #e0e0e0;\n}\n\n.refresh-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.delete-old-btn {\n  background-color: #f0f0f0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px 15px;\n  cursor: pointer;\n  transition: all 0.3s;\n  margin-left: 10px;\n}\n\n.delete-old-btn:hover {\n  background-color: #e0e0e0;\n}\n\n.delete-old-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}