{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { saveBusinessInfoToDB } from '../services/storageService';\nexport default {\n  name: 'MenuComponent',\n  setup() {\n    // Estado para información del negocio\n    const businessInfo = ref({\n      id: 'business_info_1',\n      name: '',\n      description: '',\n      logo: '',\n      paymentInfo: {\n        qrTitle: '',\n        qrImage: '',\n        nequiNumber: '',\n        nequiImage: ''\n      }\n    });\n    const showBusinessForm = ref(false);\n\n    // Estado para información de pago\n    const paymentInfo = ref({\n      qrTitle: '',\n      qrImage: '',\n      nequiNumber: '',\n      nequiImage: ''\n    });\n    const showPaymentForm = ref(false);\n\n    // Estado para notificaciones\n    const notification = ref({\n      show: false,\n      message: '',\n      type: 'success',\n      timeout: null\n    });\n\n    // Cargar datos al montar el componente\n    onMounted(async () => {\n      try {\n        // Aquí iría la lógica para cargar datos existentes\n        console.log('Componente montado');\n      } catch (error) {\n        console.error('Error al cargar datos:', error);\n      }\n    });\n\n    // Métodos para información del negocio\n    const toggleBusinessForm = () => {\n      showBusinessForm.value = !showBusinessForm.value;\n    };\n    const onLogoChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          businessInfo.value.logo = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveBusinessInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        await saveBusinessInfoToDB(businessInfo.value);\n        notification.value = {\n          show: true,\n          message: 'Información del negocio guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información del negocio:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al guardar información del negocio',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    const clearBusinessForm = () => {\n      businessInfo.value = {\n        id: 'business_info_1',\n        name: '',\n        description: '',\n        logo: '',\n        paymentInfo: {\n          qrTitle: '',\n          qrImage: '',\n          nequiNumber: '',\n          nequiImage: ''\n        }\n      };\n    };\n\n    // Métodos para información de pago\n    const togglePaymentForm = () => {\n      showPaymentForm.value = !showPaymentForm.value;\n    };\n    const onQRImageChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          paymentInfo.value.qrImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const onNequiImageChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          paymentInfo.value.nequiImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const savePaymentInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        if (!businessInfo.value.paymentInfo) {\n          businessInfo.value.paymentInfo = {};\n        }\n        businessInfo.value.paymentInfo.qrTitle = paymentInfo.value.qrTitle;\n        businessInfo.value.paymentInfo.qrImage = paymentInfo.value.qrImage;\n        businessInfo.value.paymentInfo.nequiNumber = paymentInfo.value.nequiNumber;\n        businessInfo.value.paymentInfo.nequiImage = paymentInfo.value.nequiImage;\n        await saveBusinessInfoToDB(businessInfo.value);\n\n        // Sincronizar con el backend\n        try {\n          // Importar dinámicamente para evitar dependencias circulares\n          const {\n            syncBusinessInfoWithBackend\n          } = await import('../services/menuService');\n          await syncBusinessInfoWithBackend(businessInfo.value);\n          console.log('Información de pago sincronizada con el backend');\n        } catch (syncError) {\n          console.error('Error al sincronizar con el backend:', syncError);\n          // No mostrar error al usuario, solo registrar en consola\n        }\n        notification.value = {\n          show: true,\n          message: 'Información de pago guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información de pago:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al guardar información de pago',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    const clearPaymentForm = () => {\n      paymentInfo.value = {\n        qrTitle: '',\n        qrImage: '',\n        nequiNumber: '',\n        nequiImage: ''\n      };\n    };\n    return {\n      businessInfo,\n      showBusinessForm,\n      toggleBusinessForm,\n      onLogoChange,\n      saveBusinessInfo,\n      clearBusinessForm,\n      paymentInfo,\n      showPaymentForm,\n      togglePaymentForm,\n      onQRImageChange,\n      onNequiImageChange,\n      savePaymentInfo,\n      clearPaymentForm,\n      notification\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","saveBusinessInfoToDB","name","setup","businessInfo","id","description","logo","paymentInfo","qrTitle","qrImage","nequiNumber","nequiImage","showBusinessForm","showPaymentForm","notification","show","message","type","timeout","console","log","error","toggleBusinessForm","value","onLogoChange","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","saveBusinessInfo","clearTimeout","setTimeout","clearBusinessForm","togglePaymentForm","onQRImageChange","onNequiImageChange","savePaymentInfo","syncBusinessInfoWithBackend","syncError","clearPaymentForm"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\MenuComponent.vue"],"sourcesContent":["<template>\n  <div class=\"menu-component\">\n    <!-- Sección de información del negocio -->\n    <div class=\"business-info-section\">\n      <h3>Información del Negocio</h3>\n      <button @click=\"toggleBusinessForm\" class=\"btn btn-primary\">\n        {{ showBusinessForm ? 'Cancelar' : 'Editar información' }}\n      </button>\n      \n      <div v-if=\"showBusinessForm\" class=\"business-form\">\n        <div class=\"form-group\">\n          <label>Nombre del negocio</label>\n          <input v-model=\"businessInfo.name\" type=\"text\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Descripción</label>\n          <textarea v-model=\"businessInfo.description\" class=\"form-control\"></textarea>\n        </div>\n        <div class=\"form-group\">\n          <label>Logo</label>\n          <input type=\"file\" @change=\"onLogoChange\" accept=\"image/*\" />\n        </div>\n        <div class=\"form-actions\">\n          <button @click=\"saveBusinessInfo\" class=\"btn btn-success\">Guardar</button>\n          <button @click=\"clearBusinessForm\" class=\"btn btn-secondary\">Limpiar</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Sección de información de pago -->\n    <div class=\"payment-info-section\">\n      <h3>Forma de Pago</h3>\n      <button @click=\"togglePaymentForm\" class=\"btn btn-primary\">\n        {{ showPaymentForm ? 'Cancelar' : 'Editar información de pago' }}\n      </button>\n      \n      <div v-if=\"showPaymentForm\" class=\"payment-form\">\n        <div class=\"form-group\">\n          <label>Título QR</label>\n          <input v-model=\"paymentInfo.qrTitle\" type=\"text\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Imagen QR</label>\n          <input type=\"file\" @change=\"onQRImageChange\" accept=\"image/*\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Número Nequi</label>\n          <input v-model=\"paymentInfo.nequiNumber\" type=\"text\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Imagen Nequi</label>\n          <input type=\"file\" @change=\"onNequiImageChange\" accept=\"image/*\" />\n        </div>\n        <div class=\"form-actions\">\n          <button @click=\"savePaymentInfo\" class=\"btn btn-success\">Guardar</button>\n          <button @click=\"clearPaymentForm\" class=\"btn btn-secondary\">Limpiar</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Notificación -->\n    <div v-if=\"notification.show\" :class=\"['notification', notification.type]\">\n      {{ notification.message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { saveBusinessInfoToDB } from '../services/storageService';\n\nexport default {\n  name: 'MenuComponent',\n  \n  setup() {\n    // Estado para información del negocio\n    const businessInfo = ref({\n      id: 'business_info_1',\n      name: '',\n      description: '',\n      logo: '',\n      paymentInfo: {\n        qrTitle: '',\n        qrImage: '',\n        nequiNumber: '',\n        nequiImage: ''\n      }\n    });\n    \n    const showBusinessForm = ref(false);\n    \n    // Estado para información de pago\n    const paymentInfo = ref({\n      qrTitle: '',\n      qrImage: '',\n      nequiNumber: '',\n      nequiImage: ''\n    });\n    \n    const showPaymentForm = ref(false);\n    \n    // Estado para notificaciones\n    const notification = ref({\n      show: false,\n      message: '',\n      type: 'success',\n      timeout: null\n    });\n    \n    // Cargar datos al montar el componente\n    onMounted(async () => {\n      try {\n        // Aquí iría la lógica para cargar datos existentes\n        console.log('Componente montado');\n      } catch (error) {\n        console.error('Error al cargar datos:', error);\n      }\n    });\n    \n    // Métodos para información del negocio\n    const toggleBusinessForm = () => {\n      showBusinessForm.value = !showBusinessForm.value;\n    };\n    \n    const onLogoChange = (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          businessInfo.value.logo = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    \n    const saveBusinessInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        await saveBusinessInfoToDB(businessInfo.value);\n        \n        notification.value = {\n          show: true,\n          message: 'Información del negocio guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información del negocio:', error);\n        \n        notification.value = {\n          show: true,\n          message: 'Error al guardar información del negocio',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    \n    const clearBusinessForm = () => {\n      businessInfo.value = {\n        id: 'business_info_1',\n        name: '',\n        description: '',\n        logo: '',\n        paymentInfo: {\n          qrTitle: '',\n          qrImage: '',\n          nequiNumber: '',\n          nequiImage: ''\n        }\n      };\n    };\n    \n    // Métodos para información de pago\n    const togglePaymentForm = () => {\n      showPaymentForm.value = !showPaymentForm.value;\n    };\n    \n    const onQRImageChange = (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          paymentInfo.value.qrImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    \n    const onNequiImageChange = (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          paymentInfo.value.nequiImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    \n    const savePaymentInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        if (!businessInfo.value.paymentInfo) {\n          businessInfo.value.paymentInfo = {};\n        }\n        \n        businessInfo.value.paymentInfo.qrTitle = paymentInfo.value.qrTitle;\n        businessInfo.value.paymentInfo.qrImage = paymentInfo.value.qrImage;\n        businessInfo.value.paymentInfo.nequiNumber = paymentInfo.value.nequiNumber;\n        businessInfo.value.paymentInfo.nequiImage = paymentInfo.value.nequiImage;\n        \n        await saveBusinessInfoToDB(businessInfo.value);\n        \n        // Sincronizar con el backend\n        try {\n          // Importar dinámicamente para evitar dependencias circulares\n          const { syncBusinessInfoWithBackend } = await import('../services/menuService');\n          await syncBusinessInfoWithBackend(businessInfo.value);\n          console.log('Información de pago sincronizada con el backend');\n        } catch (syncError) {\n          console.error('Error al sincronizar con el backend:', syncError);\n          // No mostrar error al usuario, solo registrar en consola\n        }\n        \n        notification.value = {\n          show: true,\n          message: 'Información de pago guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información de pago:', error);\n        \n        notification.value = {\n          show: true,\n          message: 'Error al guardar información de pago',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    \n    const clearPaymentForm = () => {\n      paymentInfo.value = {\n        qrTitle: '',\n        qrImage: '',\n        nequiNumber: '',\n        nequiImage: ''\n      };\n    };\n    \n    return {\n      businessInfo,\n      showBusinessForm,\n      toggleBusinessForm,\n      onLogoChange,\n      saveBusinessInfo,\n      clearBusinessForm,\n      paymentInfo,\n      showPaymentForm,\n      togglePaymentForm,\n      onQRImageChange,\n      onNequiImageChange,\n      savePaymentInfo,\n      clearPaymentForm,\n      notification\n    };\n  }\n};\n</script>\n\n<style scoped>\n.menu-component {\n  padding: 20px;\n}\n\n.business-info-section,\n.payment-info-section {\n  margin-bottom: 30px;\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-control {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.form-actions {\n  margin-top: 20px;\n}\n\n.btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 10px;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n}\n\n.btn-success {\n  background-color: #28a745;\n  color: white;\n}\n\n.btn-secondary {\n  background-color: #6c757d;\n  color: white;\n}\n\n.notification {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  padding: 15px;\n  border-radius: 4px;\n  color: white;\n  z-index: 1000;\n}\n\n.success {\n  background-color: #28a745;\n}\n\n.error {\n  background-color: #dc3545;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}