{"ast":null,"code":"import { ref, reactive, watch } from 'vue';\nimport eventBus from '@/utils/eventBus'; // Necesitarás crear este archivo\n\nexport default {\n  name: 'ReservaForm',\n  setup() {\n    console.log('ReservaForm montado');\n    // Estado para mostrar/ocultar el formulario\n    const showReservaForm = ref(false);\n\n    // Estado para los datos de la reserva\n    const reservationData = reactive({\n      fullName: '',\n      mobilePhone: '',\n      landlinePhone: '',\n      address: '',\n      email: '',\n      date: '',\n      time: '',\n      peopleCount: 1,\n      notes: ''\n    });\n\n    // Estado para el procesamiento de la reserva\n    const isProcessing = ref(false);\n\n    // Estado para las notificaciones toast\n    const toast = reactive({\n      show: false,\n      message: '',\n      type: 'info'\n    });\n\n    // Función para alternar la visibilidad del formulario\n    const toggleReservaForm = () => {\n      showReservaForm.value = !showReservaForm.value;\n    };\n\n    // Función para mostrar mensajes toast\n    const showToast = (message, type = 'info') => {\n      toast.message = message;\n      toast.type = type;\n      toast.show = true;\n\n      // Ocultar el toast después de 5 segundos\n      setTimeout(() => {\n        toast.show = false;\n      }, 5000);\n    };\n\n    // Función para validar el formulario\n    const validateForm = () => {\n      if (!reservationData.fullName.trim()) {\n        showToast('Por favor, ingresa tu nombre completo', 'error');\n        return false;\n      }\n      if (!reservationData.mobilePhone.trim()) {\n        showToast('Por favor, ingresa un número de teléfono móvil', 'error');\n        return false;\n      }\n      if (!reservationData.date) {\n        showToast('Por favor, selecciona una fecha para la reserva', 'error');\n        return false;\n      }\n      if (!reservationData.time) {\n        showToast('Por favor, selecciona una hora para la reserva', 'error');\n        return false;\n      }\n      if (!reservationData.peopleCount || reservationData.peopleCount < 1) {\n        showToast('Por favor, indica el número de personas', 'error');\n        return false;\n      }\n      return true;\n    };\n\n    // Función para procesar la reserva\n    const processReservation = async () => {\n      if (!validateForm()) return;\n      try {\n        isProcessing.value = true;\n\n        // Construir el objeto de reserva\n        const reservationObject = {\n          id: Date.now().toString(),\n          // Generar un ID temporal\n          fullName: reservationData.fullName,\n          mobilePhone: reservationData.mobilePhone,\n          landlinePhone: reservationData.landlinePhone || null,\n          email: reservationData.email || null,\n          address: reservationData.address || null,\n          date: reservationData.date,\n          time: reservationData.time,\n          peopleCount: reservationData.peopleCount,\n          notes: reservationData.notes || null,\n          status: 'pending',\n          // Estado inicial: pendiente\n          createdAt: new Date().toISOString()\n        };\n\n        // En una aplicación real, aquí guardarías la reserva en la base de datos\n        // Por ahora simulamos un retraso\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // Construir mensaje para WhatsApp\n        const message = `\n*NUEVA RESERVA DE MESA*\n---------------------------\n*Nombre:* ${reservationData.fullName}\n*Teléfono móvil:* ${reservationData.mobilePhone}\n${reservationData.landlinePhone ? `*Teléfono fijo:* ${reservationData.landlinePhone}` : ''}\n${reservationData.email ? `*Email:* ${reservationData.email}` : ''}\n*Fecha:* ${reservationData.date}\n*Hora:* ${reservationData.time}\n*Personas:* ${reservationData.peopleCount}\n${reservationData.notes ? `*Notas:* ${reservationData.notes}` : ''}\n---------------------------\nEsta reserva fue realizada a través del sistema de reservas online.\n`;\n\n        // Abrir WhatsApp con el mensaje\n        const encodedMessage = encodeURIComponent(message);\n        window.open(`https://wa.me/?text=${encodedMessage}`, '_blank');\n\n        // Emitir un evento para notificar que se ha creado una nueva reserva\n        eventBus.emit('nueva-reserva', reservationObject);\n\n        // Mostrar mensaje de éxito\n        showToast('¡Reserva enviada! Por favor, completa el proceso en WhatsApp.', 'success');\n\n        // Limpiar el formulario\n        clearForm();\n      } catch (error) {\n        console.error('Error al procesar la reserva:', error);\n        showToast('Hubo un error al procesar tu reserva. Por favor, intenta nuevamente.', 'error');\n      } finally {\n        isProcessing.value = false;\n      }\n    };\n\n    // Función para limpiar el formulario\n    const clearForm = () => {\n      reservationData.fullName = '';\n      reservationData.mobilePhone = '';\n      reservationData.landlinePhone = '';\n      reservationData.address = '';\n      reservationData.email = '';\n      reservationData.date = '';\n      reservationData.time = '';\n      reservationData.peopleCount = 1;\n      reservationData.notes = '';\n    };\n    return {\n      showReservaForm,\n      reservationData,\n      isProcessing,\n      toast,\n      toggleReservaForm,\n      processReservation,\n      clearForm\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","watch","eventBus","name","setup","console","log","showReservaForm","reservationData","fullName","mobilePhone","landlinePhone","address","email","date","time","peopleCount","notes","isProcessing","toast","show","message","type","toggleReservaForm","value","showToast","setTimeout","validateForm","trim","processReservation","reservationObject","id","Date","now","toString","status","createdAt","toISOString","Promise","resolve","encodedMessage","encodeURIComponent","window","open","emit","clearForm","error"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\reservas\\ReservaForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"reservas-section\">\r\n    <button @click=\"toggleReservaForm\" class=\"toggle-reserva-button\">\r\n      {{ showReservaForm ? 'Ocultar Formulario de Reserva' : 'Hacer una Reserva' }}\r\n    </button>\r\n    \r\n    <div v-if=\"showReservaForm\" class=\"reserva-form-container\">\r\n      <h3>Reserva tu Mesa</h3>\r\n      <form @submit.prevent=\"processReservation\" class=\"reserva-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"fullName\">Nombre Completo *</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"fullName\" \r\n            v-model=\"reservationData.fullName\" \r\n            placeholder=\"Ingresa tu nombre completo\"\r\n            required\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"mobilePhone\">Teléfono Móvil *</label>\r\n          <input \r\n            type=\"tel\" \r\n            id=\"mobilePhone\" \r\n            v-model=\"reservationData.mobilePhone\" \r\n            placeholder=\"Ej. 612345678\"\r\n            required\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"landlinePhone\">Teléfono Fijo</label>\r\n          <input \r\n            type=\"tel\" \r\n            id=\"landlinePhone\" \r\n            v-model=\"reservationData.landlinePhone\" \r\n            placeholder=\"Opcional\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"address\">Dirección</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"address\" \r\n            v-model=\"reservationData.address\" \r\n            placeholder=\"Tu dirección (opcional)\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Correo Electrónico</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            v-model=\"reservationData.email\" \r\n            placeholder=\"ejemplo@correo.com (opcional)\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"reservationDate\">Fecha de Reserva *</label>\r\n          <input \r\n            type=\"date\" \r\n            id=\"reservationDate\" \r\n            v-model=\"reservationData.date\" \r\n            required\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"reservationTime\">Hora de Reserva *</label>\r\n          <input \r\n            type=\"time\" \r\n            id=\"reservationTime\" \r\n            v-model=\"reservationData.time\" \r\n            required\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"peopleCount\">Número de Personas *</label>\r\n          <input \r\n            type=\"number\" \r\n            id=\"peopleCount\" \r\n            v-model=\"reservationData.peopleCount\" \r\n            min=\"1\" \r\n            max=\"20\" \r\n            required\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"specialNotes\">Notas Adicionales</label>\r\n          <textarea \r\n            id=\"specialNotes\" \r\n            v-model=\"reservationData.notes\" \r\n            placeholder=\"Instrucciones especiales, preferencias, etc.\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div class=\"form-actions\">\r\n          <button \r\n            type=\"submit\" \r\n            class=\"submit-button\" \r\n            :disabled=\"isProcessing\"\r\n          >\r\n            {{ isProcessing ? 'Procesando...' : 'Reservar Mesa' }}\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            class=\"clear-button\" \r\n            @click=\"clearForm\"\r\n            :disabled=\"isProcessing\"\r\n          >\r\n            Limpiar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    \r\n    <!-- Toast de notificación -->\r\n    <div v-if=\"toast.show\" class=\"toast-notification\" :class=\"toast.type\">\r\n      {{ toast.message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, watch } from 'vue';\r\nimport eventBus from '@/utils/eventBus'; // Necesitarás crear este archivo\r\n\r\nexport default {\r\n  name: 'ReservaForm',\r\n  setup() {\r\n    console.log('ReservaForm montado');\r\n    // Estado para mostrar/ocultar el formulario\r\n    const showReservaForm = ref(false);\r\n    \r\n    // Estado para los datos de la reserva\r\n    const reservationData = reactive({\r\n      fullName: '',\r\n      mobilePhone: '',\r\n      landlinePhone: '',\r\n      address: '',\r\n      email: '',\r\n      date: '',\r\n      time: '',\r\n      peopleCount: 1,\r\n      notes: ''\r\n    });\r\n    \r\n    // Estado para el procesamiento de la reserva\r\n    const isProcessing = ref(false);\r\n    \r\n    // Estado para las notificaciones toast\r\n    const toast = reactive({\r\n      show: false,\r\n      message: '',\r\n      type: 'info'\r\n    });\r\n    \r\n    // Función para alternar la visibilidad del formulario\r\n    const toggleReservaForm = () => {\r\n      showReservaForm.value = !showReservaForm.value;\r\n    };\r\n    \r\n    // Función para mostrar mensajes toast\r\n    const showToast = (message, type = 'info') => {\r\n      toast.message = message;\r\n      toast.type = type;\r\n      toast.show = true;\r\n      \r\n      // Ocultar el toast después de 5 segundos\r\n      setTimeout(() => {\r\n        toast.show = false;\r\n      }, 5000);\r\n    };\r\n    \r\n    // Función para validar el formulario\r\n    const validateForm = () => {\r\n      if (!reservationData.fullName.trim()) {\r\n        showToast('Por favor, ingresa tu nombre completo', 'error');\r\n        return false;\r\n      }\r\n      \r\n      if (!reservationData.mobilePhone.trim()) {\r\n        showToast('Por favor, ingresa un número de teléfono móvil', 'error');\r\n        return false;\r\n      }\r\n      \r\n      if (!reservationData.date) {\r\n        showToast('Por favor, selecciona una fecha para la reserva', 'error');\r\n        return false;\r\n      }\r\n      \r\n      if (!reservationData.time) {\r\n        showToast('Por favor, selecciona una hora para la reserva', 'error');\r\n        return false;\r\n      }\r\n      \r\n      if (!reservationData.peopleCount || reservationData.peopleCount < 1) {\r\n        showToast('Por favor, indica el número de personas', 'error');\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    };\r\n    \r\n    // Función para procesar la reserva\r\n    const processReservation = async () => {\r\n      if (!validateForm()) return;\r\n      \r\n      try {\r\n        isProcessing.value = true;\r\n        \r\n        // Construir el objeto de reserva\r\n        const reservationObject = {\r\n          id: Date.now().toString(), // Generar un ID temporal\r\n          fullName: reservationData.fullName,\r\n          mobilePhone: reservationData.mobilePhone,\r\n          landlinePhone: reservationData.landlinePhone || null,\r\n          email: reservationData.email || null,\r\n          address: reservationData.address || null,\r\n          date: reservationData.date,\r\n          time: reservationData.time,\r\n          peopleCount: reservationData.peopleCount,\r\n          notes: reservationData.notes || null,\r\n          status: 'pending', // Estado inicial: pendiente\r\n          createdAt: new Date().toISOString()\r\n        };\r\n        \r\n        // En una aplicación real, aquí guardarías la reserva en la base de datos\r\n        // Por ahora simulamos un retraso\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        \r\n        // Construir mensaje para WhatsApp\r\n        const message = `\r\n*NUEVA RESERVA DE MESA*\r\n---------------------------\r\n*Nombre:* ${reservationData.fullName}\r\n*Teléfono móvil:* ${reservationData.mobilePhone}\r\n${reservationData.landlinePhone ? `*Teléfono fijo:* ${reservationData.landlinePhone}` : ''}\r\n${reservationData.email ? `*Email:* ${reservationData.email}` : ''}\r\n*Fecha:* ${reservationData.date}\r\n*Hora:* ${reservationData.time}\r\n*Personas:* ${reservationData.peopleCount}\r\n${reservationData.notes ? `*Notas:* ${reservationData.notes}` : ''}\r\n---------------------------\r\nEsta reserva fue realizada a través del sistema de reservas online.\r\n`;\r\n        \r\n        // Abrir WhatsApp con el mensaje\r\n        const encodedMessage = encodeURIComponent(message);\r\n        window.open(`https://wa.me/?text=${encodedMessage}`, '_blank');\r\n        \r\n        // Emitir un evento para notificar que se ha creado una nueva reserva\r\n        eventBus.emit('nueva-reserva', reservationObject);\r\n        \r\n        // Mostrar mensaje de éxito\r\n        showToast('¡Reserva enviada! Por favor, completa el proceso en WhatsApp.', 'success');\r\n        \r\n        // Limpiar el formulario\r\n        clearForm();\r\n        \r\n      } catch (error) {\r\n        console.error('Error al procesar la reserva:', error);\r\n        showToast('Hubo un error al procesar tu reserva. Por favor, intenta nuevamente.', 'error');\r\n      } finally {\r\n        isProcessing.value = false;\r\n      }\r\n    };\r\n    \r\n    // Función para limpiar el formulario\r\n    const clearForm = () => {\r\n      reservationData.fullName = '';\r\n      reservationData.mobilePhone = '';\r\n      reservationData.landlinePhone = '';\r\n      reservationData.address = '';\r\n      reservationData.email = '';\r\n      reservationData.date = '';\r\n      reservationData.time = '';\r\n      reservationData.peopleCount = 1;\r\n      reservationData.notes = '';\r\n    };\r\n    \r\n    return {\r\n      showReservaForm,\r\n      reservationData,\r\n      isProcessing,\r\n      toast,\r\n      toggleReservaForm,\r\n      processReservation,\r\n      clearForm\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reservas-section {\r\n  margin: 40px 0;\r\n  position: relative;\r\n  border: 5px solid red;  /* Borde rojo brillante para depuración */\r\n  padding: 20px;\r\n  background-color: rgb(165, 229, 245);  /* Fondo amarillo para depuración */\r\n}\r\n\r\n.toggle-reserva-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  display: block;\r\n  margin: 0 auto 20px;\r\n}\r\n\r\n.toggle-reserva-button:hover {\r\n  background-color: #388E3C;\r\n}\r\n\r\n.reserva-form-container {\r\n  background-color: #f8f8f8;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid #e0e0e0;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.reserva-form-container h3 {\r\n  color: #333;\r\n  margin-top: 0;\r\n  margin-bottom: 20px;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.reserva-form {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 15px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.form-group input,\r\n.form-group textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.form-group input:focus,\r\n.form-group textarea:focus {\r\n  border-color: #4CAF50;\r\n  outline: none;\r\n}\r\n\r\n.form-actions {\r\n  grid-column: 1 / -1;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 12px 24px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #388E3C;\r\n}\r\n\r\n.clear-button {\r\n  background-color: #f44336;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 12px 24px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.clear-button:hover {\r\n  background-color: #d32f2f;\r\n}\r\n\r\n.toast-notification {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  padding: 15px 20px;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  z-index: 1000;\r\n  animation: slideIn 0.3s ease, fadeOut 0.5s 4.5s ease forwards;\r\n  max-width: 300px;\r\n}\r\n\r\n.toast-notification.info {\r\n  background-color: #2196F3;\r\n}\r\n\r\n.toast-notification.success {\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.toast-notification.error {\r\n  background-color: #f44336;\r\n}\r\n\r\n@keyframes slideIn {\r\n  from { transform: translateX(100%); }\r\n  to { transform: translateX(0); }\r\n}\r\n\r\n@keyframes fadeOut {\r\n  from { opacity: 1; }\r\n  to { opacity: 0; }\r\n}\r\n\r\n/* Responsive */\r\n@media (max-width: 768px) {\r\n  .reserva-form {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .form-actions {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .submit-button, .clear-button {\r\n    width: 100%;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}