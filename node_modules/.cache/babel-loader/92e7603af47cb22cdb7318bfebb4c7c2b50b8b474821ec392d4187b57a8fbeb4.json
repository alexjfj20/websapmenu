{"ast":null,"code":"// Lista de usuarios predefinidos\nconst USERS = [{\n  id: 1,\n  email: 'superadmin@gmail.com',\n  password: 'SuperAdmin2023',\n  nombre: 'Super Administrador',\n  roles: ['Superadministrador']\n}, {\n  id: 2,\n  email: 'admin@example.com',\n  password: 'Admin2023',\n  nombre: 'Administrador',\n  roles: ['Administrador']\n}, {\n  id: 3,\n  email: 'admin',\n  password: 'admin',\n  nombre: 'SuperAdmin',\n  roles: ['Superadministrador']\n}];\n\n// Usuario actualmente autenticado\nlet currentUser = null;\n\n// Función para iniciar sesión\nasync function login(email, password) {\n  console.log(\"Intentando iniciar sesión como:\", email);\n\n  // Buscar usuario por email\n  const usuario = USERS.find(u => u.email === email);\n  if (!usuario) {\n    console.log(\"Usuario no encontrado\");\n    throw new Error(\"Credenciales incorrectas\");\n  }\n  if (usuario.password !== password) {\n    console.log(\"Contraseña incorrecta\");\n    throw new Error(\"Credenciales incorrectas\");\n  }\n\n  // Usuario autenticado correctamente\n  currentUser = {\n    id: usuario.id,\n    email: usuario.email,\n    nombre: usuario.nombre,\n    roles: usuario.roles,\n    token: \"token-\" + Date.now()\n  };\n\n  // Guardar en localStorage\n  localStorage.setItem('auth_token', 'mock-token-' + Date.now());\n  localStorage.setItem('current_user', JSON.stringify(currentUser));\n  return currentUser;\n}\n\n// Cierra la sesión\nfunction logout() {\n  currentUser = null;\n  localStorage.removeItem('auth_token');\n  localStorage.removeItem('current_user');\n}\n\n// Verifica si el usuario está autenticado\nfunction isAuthenticated() {\n  if (!currentUser && localStorage.getItem('auth_token')) {\n    try {\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\n    } catch (e) {\n      console.error('Error al cargar usuario desde localStorage:', e);\n    }\n  }\n  return !!currentUser;\n}\n\n// Obtiene el usuario actual\nfunction getCurrentUser() {\n  if (!currentUser && localStorage.getItem('auth_token')) {\n    try {\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\n    } catch (e) {\n      console.error('Error al cargar usuario desde localStorage:', e);\n    }\n  }\n  return currentUser;\n}\n\n// Verifica si el usuario tiene un rol\nfunction hasRole(roleName) {\n  const user = getCurrentUser();\n  if (!user || !user.roles) {\n    return false;\n  }\n  return Array.isArray(user.roles) ? user.roles.includes(roleName) : user.roles === roleName;\n}\nexport { login, logout, isAuthenticated, hasRole, getCurrentUser };\nexport default {\n  login,\n  logout,\n  isAuthenticated,\n  hasRole,\n  getCurrentUser\n};","map":{"version":3,"names":["USERS","id","email","password","nombre","roles","currentUser","login","console","log","usuario","find","u","Error","token","Date","now","localStorage","setItem","JSON","stringify","logout","removeItem","isAuthenticated","getItem","parse","e","error","getCurrentUser","hasRole","roleName","user","Array","isArray","includes"],"sources":["F:/Driver google/VUE.JS-2/temp/websap/src/services/authService.js"],"sourcesContent":["// Lista de usuarios predefinidos\r\nconst USERS = [\r\n  {\r\n    id: 1,\r\n    email: 'superadmin@gmail.com',\r\n    password: 'SuperAdmin2023',\r\n    nombre: 'Super Administrador',\r\n    roles: ['Superadministrador']\r\n  },\r\n  {\r\n    id: 2,\r\n    email: 'admin@example.com',\r\n    password: 'Admin2023',\r\n    nombre: 'Administrador',\r\n    roles: ['Administrador']\r\n  },\r\n  {\r\n    id: 3,\r\n    email: 'admin',\r\n    password: 'admin',\r\n    nombre: 'SuperAdmin',\r\n    roles: ['Superadministrador']\r\n  }\r\n];\r\n\r\n// Usuario actualmente autenticado\r\nlet currentUser = null;\r\n\r\n// Función para iniciar sesión\r\nasync function login(email, password) {\r\n  console.log(\"Intentando iniciar sesión como:\", email);\r\n  \r\n  // Buscar usuario por email\r\n  const usuario = USERS.find(u => u.email === email);\r\n  \r\n  if (!usuario) {\r\n    console.log(\"Usuario no encontrado\");\r\n    throw new Error(\"Credenciales incorrectas\");\r\n  }\r\n  \r\n  if (usuario.password !== password) {\r\n    console.log(\"Contraseña incorrecta\");\r\n    throw new Error(\"Credenciales incorrectas\");\r\n  }\r\n  \r\n  // Usuario autenticado correctamente\r\n  currentUser = {\r\n    id: usuario.id,\r\n    email: usuario.email,\r\n    nombre: usuario.nombre,\r\n    roles: usuario.roles,\r\n    token: \"token-\" + Date.now()\r\n  };\r\n  \r\n  // Guardar en localStorage\r\n  localStorage.setItem('auth_token', 'mock-token-' + Date.now());\r\n  localStorage.setItem('current_user', JSON.stringify(currentUser));\r\n  \r\n  return currentUser;\r\n}\r\n\r\n// Cierra la sesión\r\nfunction logout() {\r\n  currentUser = null;\r\n  localStorage.removeItem('auth_token');\r\n  localStorage.removeItem('current_user');\r\n}\r\n\r\n// Verifica si el usuario está autenticado\r\nfunction isAuthenticated() {\r\n  if (!currentUser && localStorage.getItem('auth_token')) {\r\n    try {\r\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\r\n    } catch (e) {\r\n      console.error('Error al cargar usuario desde localStorage:', e);\r\n    }\r\n  }\r\n  \r\n  return !!currentUser;\r\n}\r\n\r\n// Obtiene el usuario actual\r\nfunction getCurrentUser() {\r\n  if (!currentUser && localStorage.getItem('auth_token')) {\r\n    try {\r\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\r\n    } catch (e) {\r\n      console.error('Error al cargar usuario desde localStorage:', e);\r\n    }\r\n  }\r\n  \r\n  return currentUser;\r\n}\r\n\r\n// Verifica si el usuario tiene un rol\r\nfunction hasRole(roleName) {\r\n  const user = getCurrentUser();\r\n  \r\n  if (!user || !user.roles) {\r\n    return false;\r\n  }\r\n  \r\n  return Array.isArray(user.roles) \r\n    ? user.roles.includes(roleName) \r\n    : user.roles === roleName;\r\n}\r\n\r\nexport {\r\n  login,\r\n  logout,\r\n  isAuthenticated,\r\n  hasRole,\r\n  getCurrentUser\r\n};\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  isAuthenticated,\r\n  hasRole,\r\n  getCurrentUser\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}