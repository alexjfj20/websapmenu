{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport DialogContainer from './components/DialogContainer.vue';\nimport { webSocketState, initializeWebSocket, reconnect, closeWebSocket, stopReconnecting, disableWebSocket } from './services/webSocketService';\nimport { isAuthenticated, hasRole } from './services/authService';\nexport default {\n  name: 'App',\n  components: {\n    DialogContainer\n  },\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const isLoggedIn = ref(localStorage.getItem('isLoggedIn') === 'true');\n    const isDarkMode = ref(localStorage.getItem('darkMode') === 'true');\n\n    // WebSocket state\n    const wsState = webSocketState;\n\n    // No mostrar navegación en la página de menú compartido\n    const showNav = computed(() => {\n      return !route.path.match(/^\\/menu\\/[^\\/]+$/);\n    });\n\n    // Verificar si el usuario es SuperAdmin\n    const isSuperAdmin = computed(() => {\n      return isLoggedIn.value && hasRole('Superadministrador');\n    });\n\n    // Verificar estado de autenticación en cambios de ruta\n    watch(() => route.path, () => {\n      isLoggedIn.value = localStorage.getItem('isLoggedIn') === 'true';\n    });\n\n    // Función de logout\n    const logout = () => {\n      localStorage.removeItem('isLoggedIn');\n      isLoggedIn.value = false;\n      router.push('/');\n    };\n\n    // Toggle Dark Mode\n    const toggleDarkMode = async () => {\n      isDarkMode.value = !isDarkMode.value;\n\n      // Guardar preferencia en localStorage\n      localStorage.setItem('darkMode', isDarkMode.value);\n\n      // Aplicar el tema a la etiqueta html\n      await nextTick(() => {\n        if (isDarkMode.value) {\n          document.documentElement.classList.add('dark-mode');\n        } else {\n          document.documentElement.classList.remove('dark-mode');\n        }\n      });\n    };\n\n    // Inicializar WebSocket al montar el componente\n    onMounted(() => {\n      // Aplicar el tema inicial\n      if (isDarkMode.value) {\n        document.documentElement.classList.add('dark-mode');\n      }\n\n      // Detectar preferencia del sistema si no hay preferencia guardada\n      if (localStorage.getItem('darkMode') === null) {\n        const prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n        isDarkMode.value = prefersDarkMode;\n        localStorage.setItem('darkMode', prefersDarkMode);\n        if (prefersDarkMode) {\n          document.documentElement.classList.add('dark-mode');\n        }\n      }\n\n      // Deshabilitar WebSocket para evitar errores de conexión ya que tu backend no lo soporta aún\n      disableWebSocket();\n    });\n\n    // Limpiar WebSocket al desmontar el componente\n    onUnmounted(() => {\n      closeWebSocket();\n    });\n\n    // Manejar reconexión manual\n    const handleReconnect = () => {\n      reconnect();\n    };\n\n    // Detener intentos de reconexión\n    const stopReconnecting = () => {\n      stopReconnecting();\n    };\n    return {\n      isLoggedIn,\n      isSuperAdmin,\n      showNav,\n      logout,\n      wsState,\n      handleReconnect,\n      stopReconnecting,\n      isDarkMode,\n      toggleDarkMode\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onUnmounted","nextTick","useRoute","useRouter","DialogContainer","webSocketState","initializeWebSocket","reconnect","closeWebSocket","stopReconnecting","disableWebSocket","isAuthenticated","hasRole","name","components","setup","route","router","isLoggedIn","localStorage","getItem","isDarkMode","wsState","showNav","path","match","isSuperAdmin","value","logout","removeItem","push","toggleDarkMode","setItem","document","documentElement","classList","add","remove","prefersDarkMode","window","matchMedia","matches","handleReconnect"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- WebSocket Status Indicator with improved messaging -->\r\n    <div v-if=\"wsState.reconnecting\" class=\"ws-status reconnecting\">\r\n      <span class=\"loading-spinner\"></span> \r\n      Reconectando... (Intento {{ wsState.reconnectAttempts }} de {{ wsState.maxReconnectAttempts }})\r\n      <button @click=\"stopReconnecting\" class=\"reconnect-btn stop-btn\">Cancelar</button>\r\n    </div>\r\n    <div v-else-if=\"wsState.error\" class=\"ws-status error\">\r\n      <span class=\"error-icon\">⚠️</span> Error de conexión: {{ wsState.error }}\r\n      <button @click=\"handleReconnect\" class=\"reconnect-btn\">Reconectar</button>\r\n    </div>\r\n    \r\n    <nav class=\"main-nav\" v-if=\"showNav\">\r\n      <div class=\"nav-container\">\r\n        <router-link to=\"/\" class=\"nav-logo\">WebSAP</router-link>\r\n        <div class=\"nav-links\">\r\n          <router-link to=\"/\">Inicio</router-link>\r\n          <router-link to=\"/about\">Acerca de</router-link>\r\n          <template v-if=\"isLoggedIn\">\r\n            <router-link to=\"/menu\">Menú</router-link>\r\n            <!-- Nueva opción solo visible para superadmin -->\r\n            <router-link v-if=\"isSuperAdmin\" to=\"/superadmin\">Admin</router-link>\r\n            <a href=\"#\" @click.prevent=\"logout\">Cerrar Sesión</a>\r\n          </template>\r\n          <template v-else>\r\n            <router-link to=\"/login\">Iniciar Sesión</router-link>\r\n            <router-link to=\"/register\">Registrarse</router-link>\r\n          </template>\r\n          \r\n          <!-- Dark Mode Toggle Button -->\r\n          <button @click=\"toggleDarkMode\" class=\"dark-mode-toggle\" aria-label=\"Cambiar modo oscuro\">\r\n            <img v-if=\"isDarkMode\" src=\"@/assets/img/sun.svg\" alt=\"Modo claro\" class=\"theme-icon\">\r\n            <img v-else src=\"@/assets/img/moon.svg\" alt=\"Modo oscuro\" class=\"theme-icon\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    \r\n    <router-view/>\r\n    \r\n    <!-- Dialog component for global usage -->\r\n    <DialogContainer />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport DialogContainer from './components/DialogContainer.vue';\r\nimport { \r\n  webSocketState, \r\n  initializeWebSocket, \r\n  reconnect, \r\n  closeWebSocket, \r\n  stopReconnecting,\r\n  disableWebSocket\r\n} from './services/webSocketService';\r\nimport { isAuthenticated, hasRole } from './services/authService';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    DialogContainer\r\n  },\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    const isLoggedIn = ref(localStorage.getItem('isLoggedIn') === 'true');\r\n    const isDarkMode = ref(localStorage.getItem('darkMode') === 'true');\r\n    \r\n    // WebSocket state\r\n    const wsState = webSocketState;\r\n    \r\n    // No mostrar navegación en la página de menú compartido\r\n    const showNav = computed(() => {\r\n      return !route.path.match(/^\\/menu\\/[^\\/]+$/);\r\n    });\r\n    \r\n    // Verificar si el usuario es SuperAdmin\r\n    const isSuperAdmin = computed(() => {\r\n      return isLoggedIn.value && hasRole('Superadministrador');\r\n    });\r\n    \r\n    // Verificar estado de autenticación en cambios de ruta\r\n    watch(() => route.path, () => {\r\n      isLoggedIn.value = localStorage.getItem('isLoggedIn') === 'true';\r\n    });\r\n    \r\n    // Función de logout\r\n    const logout = () => {\r\n      localStorage.removeItem('isLoggedIn');\r\n      isLoggedIn.value = false;\r\n      router.push('/');\r\n    };\r\n    \r\n    // Toggle Dark Mode\r\n    const toggleDarkMode = async () => {\r\n      isDarkMode.value = !isDarkMode.value;\r\n      \r\n      // Guardar preferencia en localStorage\r\n      localStorage.setItem('darkMode', isDarkMode.value);\r\n      \r\n      // Aplicar el tema a la etiqueta html\r\n      await nextTick(() => {\r\n        if (isDarkMode.value) {\r\n          document.documentElement.classList.add('dark-mode');\r\n        } else {\r\n          document.documentElement.classList.remove('dark-mode');\r\n        }\r\n      });\r\n    };\r\n    \r\n    // Inicializar WebSocket al montar el componente\r\n    onMounted(() => {\r\n      // Aplicar el tema inicial\r\n      if (isDarkMode.value) {\r\n        document.documentElement.classList.add('dark-mode');\r\n      }\r\n      \r\n      // Detectar preferencia del sistema si no hay preferencia guardada\r\n      if (localStorage.getItem('darkMode') === null) {\r\n        const prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n        isDarkMode.value = prefersDarkMode;\r\n        localStorage.setItem('darkMode', prefersDarkMode);\r\n        \r\n        if (prefersDarkMode) {\r\n          document.documentElement.classList.add('dark-mode');\r\n        }\r\n      }\r\n      \r\n      // Deshabilitar WebSocket para evitar errores de conexión ya que tu backend no lo soporta aún\r\n      disableWebSocket();\r\n    });\r\n    \r\n    // Limpiar WebSocket al desmontar el componente\r\n    onUnmounted(() => {\r\n      closeWebSocket();\r\n    });\r\n    \r\n    // Manejar reconexión manual\r\n    const handleReconnect = () => {\r\n      reconnect();\r\n    };\r\n    \r\n    // Detener intentos de reconexión\r\n    const stopReconnecting = () => {\r\n      stopReconnecting();\r\n    };\r\n    \r\n    return {\r\n      isLoggedIn,\r\n      isSuperAdmin,\r\n      showNav,\r\n      logout,\r\n      wsState,\r\n      handleReconnect,\r\n      stopReconnecting,\r\n      isDarkMode,\r\n      toggleDarkMode\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n@import './assets/theme.css';\r\n\r\n/* Estilos globales */\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: var(--text-color);\r\n  background-color: var(--bg-color);\r\n}\r\n\r\n#app {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n/* Estilos para la navegación */\r\n.main-nav {\r\n  background-color: var(--nav-bg);\r\n  box-shadow: 0 2px 8px var(--shadow-color);\r\n  padding: 15px 0;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.nav-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.nav-logo {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: var(--primary-color);\r\n  text-decoration: none;\r\n}\r\n\r\n.nav-links {\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n}\r\n\r\n.nav-links a {\r\n  color: var(--text-color);\r\n  text-decoration: none;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.nav-links a:hover {\r\n  background-color: rgba(76, 175, 80, 0.1);\r\n  color: var(--primary-color);\r\n}\r\n\r\n.nav-links a.router-link-exact-active {\r\n  color: var(--primary-color);\r\n  font-weight: bold;\r\n}\r\n\r\n/* Dark Mode Toggle Button */\r\n.dark-mode-toggle {\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.3s ease;\r\n  color: var(--text-color);\r\n  margin-left: 10px;\r\n  position: relative;\r\n}\r\n\r\n.dark-mode-toggle:hover {\r\n  background-color: var(--shadow-color);\r\n}\r\n\r\n.theme-icon {\r\n  width: 20px;\r\n  height: 20px;\r\n  color: var(--text-color);\r\n  transition: transform 0.5s ease;\r\n}\r\n\r\n.dark-mode-toggle:hover .theme-icon {\r\n  transform: rotate(30deg);\r\n}\r\n\r\nhtml.dark-mode .dark-mode-toggle .theme-icon {\r\n  filter: brightness(0.9) contrast(1.5);\r\n}\r\n\r\n/* Ajustes responsivos */\r\n@media (max-width: 768px) {\r\n  .nav-container {\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n  \r\n  .nav-links {\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n/* WebSocket status styles */\r\n.ws-status {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  padding: 6px 15px;\r\n  font-size: 12px;\r\n  color: white;\r\n  z-index: 2000;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n}\r\n\r\n.ws-status.reconnecting {\r\n  background-color: #ff9800;\r\n}\r\n\r\n.ws-status.error {\r\n  background-color: #f44336;\r\n}\r\n\r\n.reconnect-btn, .stop-btn {\r\n  background-color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 2px 8px;\r\n  font-size: 11px;\r\n  cursor: pointer;\r\n  margin-left: 8px;\r\n}\r\n\r\n.reconnect-btn {\r\n  color: #f44336;\r\n}\r\n\r\n.stop-btn {\r\n  color: #ff9800;\r\n}\r\n\r\n.reconnect-btn:hover, .stop-btn:hover {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.loading-spinner {\r\n  display: inline-block;\r\n  width: 12px;\r\n  height: 12px;\r\n  border: 2px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: white;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.error-icon {\r\n  font-size: 14px;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}