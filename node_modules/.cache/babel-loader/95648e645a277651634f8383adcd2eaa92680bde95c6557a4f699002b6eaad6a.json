{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { saveMenu } from '../services/menuService';\nimport { formatShareLinkMessage } from '../utils/messageFormatter';\nimport SalesChartComponent from './SalesChartComponent.vue';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nimport { getMenuItems, saveMenuItems, getBusinessInfo, saveBusinessInfo as saveBusinessInfoToDB, getSoldItems, saveSoldItems, deleteMenuItemFromDB, migrateFromLocalStorage, compressImage, updateItemAvailability } from '../services/storageService';\nimport { confirm, alert } from '../services/dialogService';\nimport { getCurrentUser, hasRole } from '../services/authService';\nimport { guardarPlato } from '@/services/indexedDBService';\nexport default {\n  name: 'MenuComponent',\n  components: {\n    SalesChartComponent\n  },\n  props: {\n    viewOnly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    // Estado para información del negocio\n    const businessInfo = ref({\n      name: '',\n      description: '',\n      contact: '',\n      address: '',\n      logo: ''\n    });\n    const showBusinessForm = ref(false);\n\n    // Estado para información de pago\n    const paymentInfo = ref({\n      qrTitle: '',\n      qrImage: '',\n      nequiNumber: '',\n      nequiImage: ''\n    });\n    const showPaymentForm = ref(false);\n\n    // Estado para platos del menú\n    const newItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const menuItems = ref([]);\n    const showMenuForm = ref(false);\n    const isEditing = ref(false);\n    const editingIndex = ref(-1);\n\n    // Estado para ventas e inventario\n    const soldItems = ref([]);\n    const searchTerm = ref('');\n    const sortBy = ref('');\n    const categoryFilter = ref('');\n    const selectedChartType = ref('bar');\n\n    // Estado para compartir\n    const shareLink = ref('');\n    const showCopiedMessage = ref(false);\n\n    // Estado para mostrar progreso de migración\n    const migrationStatus = ref({\n      inProgress: false,\n      completed: false,\n      message: ''\n    });\n\n    // Estado para errores del gráfico\n    const chartError = ref(null);\n\n    // Primero, añadir el componente Toast\n    const toast = ref({\n      show: false,\n      message: '',\n      type: 'success' // success, error, warning\n    });\n\n    // Manejar errores del gráfico\n    const handleChartError = error => {\n      console.error(\"Error en el gráfico:\", error);\n      chartError.value = error;\n    };\n\n    // Estado para mensajes de notificación\n    const notification = ref({\n      show: false,\n      message: '',\n      type: 'success',\n      // 'success', 'error'\n      timeout: null\n    });\n\n    // Estado para platos especiales\n    const newSpecialItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const specialMenuItems = ref([]);\n    const showSpecialMenuForm = ref(false);\n    const isEditingSpecial = ref(false);\n    const editingSpecialIndex = ref(-1);\n\n    // Cargar datos guardados\n    onMounted(async () => {\n      try {\n        migrationStatus.value.inProgress = true;\n        migrationStatus.value.message = 'Cargando datos...';\n        const hasLocalData = localStorage.getItem('businessInfo') || localStorage.getItem('menuItems') || localStorage.getItem('soldItems');\n        if (hasLocalData) {\n          migrationStatus.value.message = 'Migrando datos desde localStorage a IndexedDB...';\n          const migrationResult = await migrateFromLocalStorage();\n          if (migrationResult) {\n            migrationStatus.value.completed = true;\n            migrationStatus.value.message = 'Migración completada exitosamente';\n            localStorage.removeItem('businessInfo');\n            localStorage.removeItem('menuItems');\n            localStorage.removeItem('soldItems');\n          } else {\n            migrationStatus.value.message = 'Error en la migración de datos';\n          }\n        }\n        const dbBusinessInfo = await getBusinessInfo();\n        if (dbBusinessInfo && dbBusinessInfo.name) {\n          businessInfo.value = dbBusinessInfo;\n        }\n        const dbMenuItems = await getMenuItems();\n        if (dbMenuItems && dbMenuItems.length > 0) {\n          // Separar los platos regulares de los especiales\n          const regularItems = dbMenuItems.filter(item => !item.isSpecial);\n          const specialItems = dbMenuItems.filter(item => item.isSpecial === true);\n          menuItems.value = regularItems;\n          if (specialItems.length > 0) {\n            specialMenuItems.value = specialItems;\n          }\n        }\n        const dbSoldItems = await getSoldItems();\n        if (dbSoldItems && dbSoldItems.length > 0) {\n          soldItems.value = dbSoldItems;\n        }\n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 1500);\n      } catch (error) {\n        console.error('Error al cargar datos:', error);\n        migrationStatus.value.message = 'Error al cargar datos: ' + error.message;\n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 3000);\n      }\n    });\n\n    // Métodos para información del negocio\n    const toggleBusinessForm = () => {\n      showBusinessForm.value = !showBusinessForm.value;\n    };\n    const onLogoChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedLogo = await compressImage(e.target.result);\n          businessInfo.value.logo = compressedLogo;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveBusinessInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        await saveBusinessInfoToDB(businessInfo.value);\n        notification.value = {\n          show: true,\n          message: 'Información del negocio guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información del negocio:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    const clearBusinessForm = async () => {\n      const confirmed = await confirm('¿Estás seguro de querer limpiar el formulario?');\n      if (confirmed) {\n        businessInfo.value = {\n          name: '',\n          description: '',\n          contact: '',\n          address: '',\n          logo: ''\n        };\n      }\n    };\n\n    // Métodos para información de pago\n    const togglePaymentForm = () => {\n      showPaymentForm.value = !showPaymentForm.value;\n    };\n    const onQRImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          paymentInfo.value.qrImage = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const onNequiImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          paymentInfo.value.nequiImage = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const savePaymentInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        businessInfo.value.paymentInfo = {\n          ...paymentInfo.value\n        };\n        await saveBusinessInfoToDB(businessInfo.value);\n        notification.value = {\n          show: true,\n          message: 'Información de pago guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información de pago:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información de pago. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    const clearPaymentForm = async () => {\n      const confirmed = await confirm('¿Estás seguro de querer limpiar la información de pago?');\n      if (confirmed) {\n        paymentInfo.value = {\n          qrTitle: '',\n          qrImage: '',\n          nequiNumber: '',\n          nequiImage: ''\n        };\n      }\n    };\n\n    // Métodos para platos del menú\n    const toggleMenuForm = () => {\n      showMenuForm.value = !showMenuForm.value;\n      if (!showMenuForm.value) {\n        clearMenuForm();\n      }\n    };\n    const onImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          newItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveMenuItem = async () => {\n      try {\n        // Validaciones iniciales\n        if (!newItem.value.name || !newItem.value.price) {\n          showNotification('El nombre y el precio son obligatorios', 'error');\n          return;\n        }\n        if (newItem.value.availableQuantity < 0) {\n          showNotification('La cantidad disponible no puede ser negativa', 'error');\n          return;\n        }\n\n        // Generar ID si no existe\n        if (!newItem.value.id) {\n          newItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n        try {\n          console.log('📝 Datos del plato antes de guardar:', newItem.value);\n\n          // Guardar en la base de datos\n          const savedPlato = await guardarPlato(newItem.value);\n          console.log('✅ Plato guardado correctamente:', savedPlato);\n          if (isEditing.value) {\n            // Actualizar el plato existente en la lista\n            const index = menuItems.value.findIndex(item => item.id === savedPlato.id);\n            if (index !== -1) {\n              menuItems.value[index] = {\n                ...savedPlato\n              };\n              showNotification('Plato actualizado exitosamente', 'success');\n            }\n          } else {\n            // Agregar el nuevo plato a la lista\n            menuItems.value.push({\n              ...savedPlato\n            });\n            showNotification('Plato creado exitosamente', 'success');\n          }\n\n          // Guardar la lista completa\n          await saveMenuItems(menuItems.value);\n\n          // Limpiar el formulario\n          clearMenuForm();\n        } catch (error) {\n          console.error('❌ Error al guardar en la base de datos:', error);\n          showNotification(`Error al guardar el plato: ${error.message || 'Intente nuevamente'}`, 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error general en saveMenuItem:', error);\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\n      }\n    };\n    const clearMenuForm = () => {\n      newItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditing.value = false;\n      editingIndex.value = -1;\n    };\n    const editMenuItem = index => {\n      newItem.value = {\n        ...menuItems.value[index]\n      };\n      isEditing.value = true;\n      editingIndex.value = index;\n      showMenuForm.value = true;\n    };\n    const deleteMenuItem = async index => {\n      const confirmed = await confirm('¿Estás seguro de querer eliminar este plato?', {\n        title: 'Eliminar plato',\n        confirmText: 'Eliminar',\n        cancelText: 'Cancelar'\n      });\n      if (confirmed) {\n        try {\n          if (index < 0 || index >= menuItems.value.length) {\n            console.error('Error: Índice fuera de rango', index);\n            await alert('Error: No se encontró el elemento a eliminar');\n            return;\n          }\n          const item = menuItems.value[index];\n          console.log(`Eliminando plato: índice=${index}, nombre=${item.name}, id=${item.id}`);\n          if (!item) {\n            console.error('Error: Elemento del menú no encontrado en el índice', index);\n            await alert('Error: No se encontró el elemento a eliminar');\n            return;\n          }\n\n          // Eliminar el item de la base de datos\n          if (item.id) {\n            try {\n              console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n              const deleteResult = await deleteMenuItemFromDB(item.id);\n              console.log(`Resultado de la eliminación: ${deleteResult}`);\n            } catch (deleteError) {\n              console.error('Error al eliminar item del almacén:', deleteError);\n            }\n          }\n\n          // Eliminar el item del array local\n          menuItems.value.splice(index, 1);\n          console.log('Elemento eliminado correctamente del menú local');\n\n          // Mostrar notificación de éxito\n          showNotification('Plato eliminado correctamente', 'success');\n        } catch (error) {\n          console.error('Error al eliminar elemento del menú:', error);\n          await alert(`Error al eliminar el plato: ${error.message || 'Error desconocido'}`);\n        }\n      }\n    };\n    const sellMenuItem = async index => {\n      try {\n        const item = menuItems.value[index];\n\n        // Validar disponibilidad\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\n          showNotification('Este plato está agotado', 'error');\n          return;\n        }\n        const confirmed = await confirm(`¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`);\n        if (confirmed) {\n          try {\n            const newQuantity = item.availableQuantity - 1;\n\n            // Actualizar en la base de datos\n            await updateItemAvailability(item.id, newQuantity);\n\n            // Actualizar en el estado local\n            item.availableQuantity = newQuantity;\n\n            // Registrar la venta\n            const currentDate = new Date().toISOString();\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\n            if (soldItem) {\n              soldItem.quantity += 1;\n              soldItem.date = currentDate;\n            } else {\n              soldItems.value.push({\n                name: item.name,\n                quantity: 1,\n                price: item.price,\n                includesDrink: item.includesDrink,\n                date: currentDate\n              });\n            }\n\n            // Guardar items vendidos\n            await saveSoldItems(soldItems.value);\n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\n            if (newQuantity <= 5) {\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\n            }\n          } catch (error) {\n            console.error('Error al procesar la venta:', error);\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar la venta:', error);\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    // Métodos para platos especiales\n    const toggleSpecialMenuForm = () => {\n      showSpecialMenuForm.value = !showSpecialMenuForm.value;\n      if (!showSpecialMenuForm.value) {\n        clearSpecialMenuForm();\n      }\n    };\n    const onSpecialImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          newSpecialItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveSpecialMenuItem = async () => {\n      try {\n        if (!newSpecialItem.value.name || !newSpecialItem.value.price) {\n          showNotification('El nombre y el precio son obligatorios', 'error');\n          return;\n        }\n        if (!newSpecialItem.value.id) {\n          newSpecialItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n\n        // Marcar como plato especial\n        newSpecialItem.value.isSpecial = true;\n        try {\n          console.log('📝 Datos del plato especial antes de guardar:', newSpecialItem.value);\n\n          // Guardar en la base de datos\n          const savedPlato = await guardarPlato(newSpecialItem.value);\n          console.log('✅ Plato especial guardado correctamente:', savedPlato);\n          if (isEditingSpecial.value) {\n            // Actualizar el plato existente en la lista\n            const index = specialMenuItems.value.findIndex(item => item.id === savedPlato.id);\n            if (index !== -1) {\n              specialMenuItems.value[index] = {\n                ...savedPlato\n              };\n              showNotification('Plato especial actualizado exitosamente', 'success');\n            }\n            isEditingSpecial.value = false;\n            editingSpecialIndex.value = -1;\n          } else {\n            const existingItem = specialMenuItems.value.find(item => item.name.toLowerCase() === savedPlato.name.toLowerCase());\n            if (existingItem) {\n              const confirmed = await confirm(`Ya existe un plato especial llamado \"${savedPlato.name}\". ¿Desea actualizarlo?`, {\n                title: 'Actualizar plato especial existente'\n              });\n              if (confirmed) {\n                const index = specialMenuItems.value.findIndex(item => item.id === existingItem.id);\n                if (index !== -1) {\n                  // Conservar el ID original pero actualizar los demás datos\n                  const updatedPlato = {\n                    ...savedPlato,\n                    id: existingItem.id\n                  };\n\n                  // Actualizar en la base de datos\n                  await guardarPlato(updatedPlato);\n\n                  // Actualizar en la lista local\n                  specialMenuItems.value[index] = {\n                    ...updatedPlato\n                  };\n                  showNotification('Plato especial actualizado exitosamente', 'success');\n                }\n              } else {\n                return;\n              }\n            } else {\n              // Agregar el nuevo plato a la lista\n              specialMenuItems.value.push({\n                ...savedPlato\n              });\n              showNotification('Plato especial creado exitosamente', 'success');\n            }\n          }\n\n          // Guardar todos los elementos\n          await saveMenuItems([...menuItems.value, ...specialMenuItems.value]);\n\n          // Limpiar el formulario\n          clearSpecialMenuForm();\n        } catch (error) {\n          console.error('❌ Error al guardar plato especial:', error);\n          showNotification(`Error al guardar el plato especial: ${error.message || 'Intente nuevamente'}`, 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error general en saveSpecialMenuItem:', error);\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\n      }\n    };\n    const clearSpecialMenuForm = () => {\n      newSpecialItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditingSpecial.value = false;\n      editingSpecialIndex.value = -1;\n    };\n    const editSpecialMenuItem = index => {\n      newSpecialItem.value = {\n        ...specialMenuItems.value[index]\n      };\n      isEditingSpecial.value = true;\n      editingSpecialIndex.value = index;\n      showSpecialMenuForm.value = true;\n    };\n    const deleteSpecialMenuItem = async index => {\n      const confirmed = await confirm('¿Estás seguro de querer eliminar este plato especial?', {\n        title: 'Eliminar plato especial',\n        confirmText: 'Eliminar',\n        cancelText: 'Cancelar'\n      });\n      if (confirmed) {\n        try {\n          if (index < 0 || index >= specialMenuItems.value.length) {\n            console.error('Error: Índice fuera de rango', index);\n            await alert('Error: No se encontró el elemento a eliminar');\n            return;\n          }\n          const item = specialMenuItems.value[index];\n          console.log(`Eliminando plato especial: índice=${index}, nombre=${item.name}, id=${item.id}`);\n          if (!item) {\n            console.error('Error: Elemento del menú especial no encontrado en el índice', index);\n            await alert('Error: No se encontró el elemento a eliminar');\n            return;\n          }\n          const itemName = item.name || 'Producto desconocido';\n          const currentDate = new Date().toISOString();\n          if (!Array.isArray(soldItems.value)) {\n            console.warn('soldItems.value no es un array, inicializando como array vacío');\n            soldItems.value = [];\n          }\n          const soldItem = soldItems.value.find(sold => sold && typeof sold === 'object' && sold.name === itemName);\n          if (soldItem) {\n            soldItem.quantity += 1;\n            if (!soldItem.date || new Date(currentDate) > new Date(soldItem.date)) {\n              soldItem.date = currentDate;\n            }\n          } else {\n            const newSoldItem = {\n              name: itemName,\n              quantity: 1,\n              price: Number(item.price) || 0,\n              includesDrink: Boolean(item.includesDrink),\n              date: currentDate\n            };\n            soldItems.value.push(newSoldItem);\n          }\n          const cleanSoldItems = soldItems.value.map(item => {\n            if (!item || typeof item !== 'object') {\n              return {\n                name: 'Producto desconocido',\n                quantity: 1,\n                price: 0,\n                includesDrink: false,\n                date: currentDate\n              };\n            }\n            return {\n              name: String(item.name || 'Producto desconocido'),\n              quantity: Number(item.quantity) || 1,\n              price: Number(item.price) || 0,\n              includesDrink: Boolean(item.includesDrink),\n              date: item.date || currentDate\n            };\n          });\n          await saveSoldItems(cleanSoldItems);\n          if (item.id) {\n            try {\n              console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n              const deleteResult = await deleteMenuItemFromDB(item.id);\n              console.log(`Resultado de la eliminación: ${deleteResult}`);\n            } catch (deleteError) {\n              console.error('Error al eliminar item del almacén:', deleteError);\n            }\n          }\n          specialMenuItems.value.splice(index, 1);\n          soldItems.value = cleanSoldItems;\n          console.log('Elemento eliminado correctamente del menú especial');\n        } catch (error) {\n          console.error('Error al eliminar el plato especial:', error);\n          await alert('Error al eliminar el plato especial. Por favor, intenta nuevamente.');\n        }\n      }\n    };\n    const sellSpecialMenuItem = async index => {\n      try {\n        const item = specialMenuItems.value[index];\n\n        // Validar disponibilidad\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\n          showNotification('Este plato especial está agotado', 'error');\n          return;\n        }\n        const confirmed = await confirm(`¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`);\n        if (confirmed) {\n          try {\n            const newQuantity = item.availableQuantity - 1;\n\n            // Actualizar en la base de datos\n            await updateItemAvailability(item.id, newQuantity);\n\n            // Actualizar en el estado local\n            item.availableQuantity = newQuantity;\n\n            // Registrar la venta\n            const currentDate = new Date().toISOString();\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\n            if (soldItem) {\n              soldItem.quantity += 1;\n              soldItem.date = currentDate;\n            } else {\n              soldItems.value.push({\n                name: item.name,\n                quantity: 1,\n                price: item.price,\n                includesDrink: item.includesDrink,\n                date: currentDate\n              });\n            }\n\n            // Guardar items vendidos\n            await saveSoldItems(soldItems.value);\n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\n            if (newQuantity <= 5) {\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\n            }\n          } catch (error) {\n            console.error('Error al procesar la venta:', error);\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar la venta:', error);\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    // Métodos para compartir\n    const shareByWhatsApp = async () => {\n      try {\n        await alert('Procesando imágenes para compartir...');\n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\n        if (totalItems > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\n          return;\n        }\n\n        // Combinar platos regulares y especiales\n        const itemsToShare = [...menuItems.value.map(item => ({\n          ...item,\n          isSpecial: false\n        })), ...specialMenuItems.value.map(item => ({\n          ...item,\n          isSpecial: true\n        }))];\n        console.log(`Preparando para compartir ${itemsToShare.length} elementos...`);\n        console.log('Items regulares:', menuItems.value.length);\n        console.log('Items especiales:', specialMenuItems.value.length);\n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        const message = formatShareLinkMessage(url, businessInfo.value.name);\n        const whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\n        window.open(whatsappUrl, '_blank');\n      } catch (error) {\n        console.error('Error al compartir por WhatsApp:', error);\n        await alert(`Error al compartir el menú: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\n      }\n    };\n    const copyLink = async () => {\n      try {\n        const loadingMessage = 'Procesando imágenes para compartir...';\n        showCopiedMessage.value = true;\n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\n        if (totalItems > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\n          showCopiedMessage.value = false;\n          return;\n        }\n\n        // Combinar platos regulares y especiales\n        const itemsToShare = [...menuItems.value.map(item => ({\n          ...item,\n          isSpecial: false\n        })), ...specialMenuItems.value.map(item => ({\n          ...item,\n          isSpecial: true\n        }))];\n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        try {\n          await navigator.clipboard.writeText(url);\n          showCopiedMessage.value = true;\n          setTimeout(() => {\n            showCopiedMessage.value = false;\n          }, 3000);\n        } catch (clipboardError) {\n          console.error('Error al copiar al portapapeles:', clipboardError);\n          await alert('No se pudo copiar automáticamente. Por favor, copia manualmente este enlace: ' + url);\n        }\n      } catch (error) {\n        console.error('Error al generar enlace para compartir:', error);\n        showCopiedMessage.value = false;\n        await alert(`Error al generar el enlace: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\n      }\n    };\n\n    // Computados\n    const totalSales = computed(() => {\n      return soldItems.value.reduce((total, item) => {\n        return total + item.quantity * item.price;\n      }, 0);\n    });\n    const formatPrice = price => {\n      if (isNaN(Number(price))) return '0,00';\n      const fixed = Number(price).toFixed(2);\n      const [intPart, decPart] = fixed.split('.');\n      const formattedIntPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n      return `${formattedIntPart},${decPart}`;\n    };\n    const formatDate = dateStr => {\n      if (!dateStr) return 'N/A';\n      const date = new Date(dateStr);\n      if (isNaN(date.getTime())) return 'Fecha inválida';\n      return new Intl.DateTimeFormat('es-ES', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n    const filteredSoldItems = computed(() => {\n      let items = soldItems.value;\n      if (!Array.isArray(items)) {\n        console.warn('soldItems no es un array. Devolviendo array vacío.');\n        return [];\n      }\n      if (searchTerm.value) {\n        const term = searchTerm.value.toLowerCase().trim();\n        if (Array.isArray(items)) {\n          return items.filter(item => {\n            if (item && typeof item === 'object') {\n              const name = String(item.name || '').toLowerCase();\n              return name.includes(term);\n            }\n            return false;\n          });\n        } else {\n          console.warn('filterInventoryItems recibió un valor no array:', items);\n          return [];\n        }\n      }\n      if (categoryFilter.value) {\n        if (categoryFilter.value === 'drinks') {\n          items = items.filter(item => Boolean(item && item.includesDrink));\n        } else if (categoryFilter.value === 'nodrinks') {\n          items = items.filter(item => item && item.includesDrink === false);\n        }\n      }\n      if (sortBy.value) {\n        items = [...items];\n        switch (sortBy.value) {\n          case 'name':\n            items.sort((a, b) => {\n              if (!a || !a.name) return 1;\n              if (!b || !b.name) return -1;\n              return a.name.localeCompare(b.name);\n            });\n            break;\n          case 'quantity-desc':\n            items.sort((a, b) => {\n              const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n              const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n              return qtyB - qtyA;\n            });\n            break;\n          case 'quantity-asc':\n            items.sort((a, b) => {\n              const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n              const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n              return qtyA - qtyB;\n            });\n            break;\n          case 'price-desc':\n            items.sort((a, b) => {\n              const priceA = a && typeof a.price === 'number' ? a.price : 0;\n              const priceB = b && typeof b.price === 'number' ? b.price : 0;\n              return priceB - priceA;\n            });\n            break;\n          case 'price-asc':\n            items.sort((a, b) => {\n              const priceA = a && typeof a.price === 'number' ? a.price : 0;\n              const priceB = b && typeof b.price === 'number' ? b.price : 0;\n              return priceA - priceB;\n            });\n            break;\n          case 'date-desc':\n            items.sort((a, b) => {\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\n              return dateB - dateA;\n            });\n            break;\n          case 'date-asc':\n            items.sort((a, b) => {\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\n              return dateA - dateB;\n            });\n            break;\n          default:\n            break;\n        }\n      }\n      return items;\n    });\n    const exportToExcel = () => {\n      // Crear un array con los datos a exportar\n      const data = [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal'], ...filteredSoldItems.value.map(item => [item.name, item.includesDrink ? 'Con refresco' : 'Sin refresco', item.quantity, `$${formatPrice(item.price)}`, formatDate(item.date), `$${formatPrice(item.quantity * item.price)}`]), ['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]];\n\n      // Crear un libro de Excel y una hoja de cálculo\n      const ws = XLSX.utils.aoa_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Ventas');\n\n      // Generar el archivo Excel y descargarlo\n      const excelBuffer = XLSX.write(wb, {\n        bookType: 'xlsx',\n        type: 'array'\n      });\n      const blob = new Blob([excelBuffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      saveAs(blob, `ventas_${new Date().toLocaleDateString()}.xlsx`);\n    };\n    const exportToPDF = () => {\n      // Crear un nuevo documento PDF\n      const doc = new jsPDF();\n\n      // Añadir título\n      doc.setFontSize(18);\n      doc.text('Reporte de Ventas', 14, 22);\n      doc.setFontSize(11);\n      doc.text(`Fecha: ${new Date().toLocaleDateString()}`, 14, 32);\n\n      // Crear la tabla con los datos\n      const tableData = filteredSoldItems.value.map(item => [item.name, item.includesDrink ? 'Con refresco' : 'Sin refresco', item.quantity, `$${formatPrice(item.price)}`, formatDate(item.date), `$${formatPrice(item.quantity * item.price)}`]);\n\n      // Añadir la tabla\n      doc.autoTable({\n        head: [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal']],\n        body: tableData,\n        foot: [['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]],\n        startY: 40,\n        theme: 'striped',\n        headStyles: {\n          fillColor: [76, 175, 80]\n        },\n        footStyles: {\n          fillColor: [240, 240, 240],\n          textColor: [0, 0, 0],\n          fontStyle: 'bold'\n        }\n      });\n\n      // Guardar el PDF de exportación\n      doc.save(`ventas_${new Date().toLocaleDateString()}.pdf`);\n    };\n    const removeDuplicates = array => {\n      return [...new Set(array)];\n    };\n\n    // Función para mostrar notificaciones\n    const showNotification = (message, type) => {\n      notification.value = {\n        show: true,\n        message,\n        type\n      };\n      setTimeout(() => {\n        notification.value.show = false;\n      }, 3000); // 3 segundos como acordado\n    };\n    const checkAvailabilityToast = async itemId => {\n      try {\n        // Buscar el item en ambos menús\n        const item = menuItems.value.find(i => i.id === itemId) || specialMenuItems.value.find(i => i.id === itemId);\n        if (item) {\n          if (item.availableQuantity > 5) {\n            showNotification(`Disponible: ${item.availableQuantity} unidades`, 'success');\n          } else if (item.availableQuantity > 0) {\n            showNotification(`¡Quedan solo ${item.availableQuantity} unidades!`, 'warning');\n          } else {\n            showNotification('Producto agotado', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al verificar disponibilidad:', error);\n      }\n    };\n\n    // Añadir propiedad isEmployee\n    const isEmployee = computed(() => {\n      return hasRole('Empleado') && !hasRole('Administrador') && !hasRole('Superadministrador');\n    });\n    const filterInventoryItems = computed(() => {\n      return items => {\n        if (!items || !Array.isArray(items)) {\n          console.warn('filterInventoryItems recibió un valor no array:', items);\n          return [];\n        }\n        if (searchTerm.value) {\n          const term = searchTerm.value.toLowerCase().trim();\n          items = items.filter(item => {\n            if (item && typeof item === 'object') {\n              const name = String(item.name || '').toLowerCase();\n              return name.includes(term);\n            }\n            return false;\n          });\n        }\n        if (categoryFilter.value) {\n          if (categoryFilter.value === 'drinks') {\n            items = items.filter(item => item && item.includesDrink === true);\n          } else if (categoryFilter.value === 'nodrinks') {\n            items = items.filter(item => item && item.includesDrink === false);\n          }\n        }\n        if (sortBy.value) {\n          switch (sortBy.value) {\n            case 'name':\n              items.sort((a, b) => {\n                const nameA = a && a.name ? a.name.toLowerCase() : '';\n                const nameB = b && b.name ? b.name.toLowerCase() : '';\n                return nameA.localeCompare(nameB);\n              });\n              break;\n            case 'quantity-desc':\n              items.sort((a, b) => {\n                const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n                const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n                return qtyB - qtyA;\n              });\n              break;\n            case 'quantity-asc':\n              items.sort((a, b) => {\n                const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n                const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n                return qtyA - qtyB;\n              });\n              break;\n            case 'price-desc':\n              items.sort((a, b) => {\n                const priceA = a && typeof a.price === 'number' ? a.price : 0;\n                const priceB = b && typeof b.price === 'number' ? b.price : 0;\n                return priceB - priceA;\n              });\n              break;\n            case 'price-asc':\n              items.sort((a, b) => {\n                const priceA = a && typeof a.price === 'number' ? a.price : 0;\n                const priceB = b && typeof b.price === 'number' ? b.price : 0;\n                return priceA - priceB;\n              });\n              break;\n            case 'date-desc':\n              items.sort((a, b) => {\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\n                return dateB - dateA;\n              });\n              break;\n            case 'date-asc':\n              items.sort((a, b) => {\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\n                return dateA - dateB;\n              });\n              break;\n            default:\n              break;\n          }\n        }\n        return items;\n      };\n    });\n    return {\n      businessInfo,\n      showBusinessForm,\n      toggleBusinessForm,\n      onLogoChange,\n      saveBusinessInfo,\n      clearBusinessForm,\n      paymentInfo,\n      showPaymentForm,\n      togglePaymentForm,\n      onQRImageChange,\n      onNequiImageChange,\n      savePaymentInfo,\n      clearPaymentForm,\n      newItem,\n      menuItems,\n      showMenuForm,\n      isEditing,\n      toggleMenuForm,\n      onImageChange,\n      saveMenuItem,\n      editMenuItem,\n      deleteMenuItem,\n      sellMenuItem,\n      clearMenuForm,\n      soldItems,\n      totalSales,\n      searchTerm,\n      sortBy,\n      categoryFilter,\n      filteredSoldItems,\n      formatPrice,\n      selectedChartType,\n      exportToExcel,\n      exportToPDF,\n      shareLink,\n      showCopiedMessage,\n      shareByWhatsApp,\n      copyLink,\n      migrationStatus,\n      removeDuplicates,\n      chartError,\n      handleChartError,\n      notification,\n      formatDate,\n      newSpecialItem,\n      specialMenuItems,\n      showSpecialMenuForm,\n      isEditingSpecial,\n      editingSpecialIndex,\n      toggleSpecialMenuForm,\n      onSpecialImageChange,\n      saveSpecialMenuItem,\n      clearSpecialMenuForm,\n      editSpecialMenuItem,\n      deleteSpecialMenuItem,\n      sellSpecialMenuItem,\n      toast,\n      showNotification,\n      checkAvailabilityToast,\n      isEmployee,\n      filterInventoryItems\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","saveMenu","formatShareLinkMessage","SalesChartComponent","saveAs","XLSX","jsPDF","getMenuItems","saveMenuItems","getBusinessInfo","saveBusinessInfo","saveBusinessInfoToDB","getSoldItems","saveSoldItems","deleteMenuItemFromDB","migrateFromLocalStorage","compressImage","updateItemAvailability","confirm","alert","getCurrentUser","hasRole","guardarPlato","name","components","props","viewOnly","type","Boolean","default","setup","businessInfo","description","contact","address","logo","showBusinessForm","paymentInfo","qrTitle","qrImage","nequiNumber","nequiImage","showPaymentForm","newItem","price","includesDrink","availableQuantity","image","id","menuItems","showMenuForm","isEditing","editingIndex","soldItems","searchTerm","sortBy","categoryFilter","selectedChartType","shareLink","showCopiedMessage","migrationStatus","inProgress","completed","message","chartError","toast","show","handleChartError","error","console","value","notification","timeout","newSpecialItem","specialMenuItems","showSpecialMenuForm","isEditingSpecial","editingSpecialIndex","hasLocalData","localStorage","getItem","migrationResult","removeItem","dbBusinessInfo","dbMenuItems","length","regularItems","filter","item","isSpecial","specialItems","dbSoldItems","setTimeout","toggleBusinessForm","onLogoChange","event","file","target","files","reader","FileReader","onload","e","compressedLogo","result","readAsDataURL","clearTimeout","clearBusinessForm","confirmed","togglePaymentForm","onQRImageChange","compressedImage","onNequiImageChange","savePaymentInfo","clearPaymentForm","toggleMenuForm","clearMenuForm","onImageChange","saveMenuItem","showNotification","Date","now","Math","random","toString","substring","log","savedPlato","index","findIndex","push","editMenuItem","deleteMenuItem","title","confirmText","cancelText","deleteResult","deleteError","splice","sellMenuItem","newQuantity","currentDate","toISOString","soldItem","find","sold","quantity","date","toggleSpecialMenuForm","clearSpecialMenuForm","onSpecialImageChange","saveSpecialMenuItem","existingItem","toLowerCase","updatedPlato","editSpecialMenuItem","deleteSpecialMenuItem","itemName","Array","isArray","warn","newSoldItem","Number","cleanSoldItems","map","String","sellSpecialMenuItem","shareByWhatsApp","totalItems","itemsToShare","menuId","url","window","location","origin","whatsappUrl","encodeURIComponent","open","copyLink","loadingMessage","navigator","clipboard","writeText","clipboardError","totalSales","reduce","total","formatPrice","isNaN","fixed","toFixed","intPart","decPart","split","formattedIntPart","replace","formatDate","dateStr","getTime","Intl","DateTimeFormat","day","month","year","hour","minute","format","filteredSoldItems","items","term","trim","includes","sort","a","b","localeCompare","qtyA","qtyB","priceA","priceB","dateA","dateB","exportToExcel","data","ws","utils","aoa_to_sheet","wb","book_new","book_append_sheet","excelBuffer","write","bookType","blob","Blob","toLocaleDateString","exportToPDF","doc","setFontSize","text","tableData","autoTable","head","body","foot","startY","theme","headStyles","fillColor","footStyles","textColor","fontStyle","save","removeDuplicates","array","Set","checkAvailabilityToast","itemId","i","isEmployee","filterInventoryItems","nameA","nameB"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\MenuComponent.vue"],"sourcesContent":["<template>\n  <div class=\"menu-container\">\n    <!-- Notificaciones -->\n    <div \n      v-if=\"notification.show\" \n      class=\"notification\" \n      :class=\"notification.type\"\n    >\n      {{ notification.message }}\n      <button @click=\"notification.show = false\" class=\"notification-close\">&times;</button>\n    </div>\n\n    <!-- Mensaje de migración de datos -->\n    <div v-if=\"migrationStatus.inProgress || migrationStatus.completed\" class=\"migration-status\" :class=\"{ 'completed': migrationStatus.completed }\">\n      <div class=\"migration-message\">\n        <span v-if=\"migrationStatus.inProgress\" class=\"loading-spinner\"></span>\n        {{ migrationStatus.message }}\n      </div>\n    </div>\n  \n    <!-- SECCIÓN 1: INFORMACIÓN DEL NEGOCIO -->\n    <section class=\"business-info-section\">\n      <h2>Información del Negocio</h2>\n      <button \n        @click=\"toggleBusinessForm\" \n        class=\"toggle-button\"\n        :disabled=\"isEmployee && !viewOnly\"\n        :title=\"isEmployee && !viewOnly ? 'No tienes permisos para modificar la información del negocio' : ''\"\n      >\n        {{ showBusinessForm ? 'Ocultar Formulario' : 'Mostrar Formulario' }}\n      </button>\n\n      <div v-if=\"showBusinessForm\" class=\"business-form\">\n        <form @submit.prevent=\"saveBusinessInfo\">\n          <div>\n            <label for=\"business-name\">Nombre del Restaurante:</label>\n            <input type=\"text\" id=\"business-name\" v-model=\"businessInfo.name\" required>\n          </div>\n          <div>\n            <label for=\"business-description\">Descripción:</label>\n            <textarea id=\"business-description\" v-model=\"businessInfo.description\"></textarea>\n          </div>\n          <div>\n            <label for=\"business-contact\">Contacto:</label>\n            <input type=\"text\" id=\"business-contact\" v-model=\"businessInfo.contact\">\n          </div>\n          <div>\n            <label for=\"business-address\">Dirección:</label>\n            <input type=\"text\" id=\"business-address\" v-model=\"businessInfo.address\">\n          </div>\n          <div>\n            <label for=\"business-logo\">Logo:</label>\n            <input type=\"file\" id=\"business-logo\" @change=\"onLogoChange\">\n            <img v-if=\"businessInfo.logo\" :src=\"businessInfo.logo\" alt=\"Logo\" style=\"max-width: 100px; margin-top: 10px;\">\n          </div>\n          <div class=\"button-group\">\n            <button type=\"submit\" class=\"save-button\">Guardar</button>\n            <button type=\"button\" @click=\"clearBusinessForm\" class=\"clear-button\">Limpiar</button>\n          </div>\n        </form>\n      </div>\n\n      <div v-if=\"businessInfo.name\" class=\"business-preview\">\n        <h3>Información Guardada</h3>\n        <img v-if=\"businessInfo.logo\" :src=\"businessInfo.logo\" alt=\"Logo\" style=\"max-width: 100px;\">\n        <h4>{{ businessInfo.name }}</h4>\n        <p>{{ businessInfo.description }}</p>\n        <p><strong>Contacto:</strong> {{ businessInfo.contact }}</p>\n        <p><strong>Dirección:</strong> {{ businessInfo.address }}</p>\n      </div>\n    </section>\n\n    <!-- SECCIÓN 2: FORMA DE PAGO -->\n    <section class=\"payment-info-section\">\n      <h2>Forma de Pago</h2>\n      <button \n        @click=\"togglePaymentForm\" \n        class=\"toggle-button\"\n        :disabled=\"isEmployee && !viewOnly\"\n        :title=\"isEmployee && !viewOnly ? 'No tienes permisos para modificar la forma de pago' : ''\"\n      >\n        {{ showPaymentForm ? 'Ocultar Formulario' : 'Mostrar Formulario' }}\n      </button>\n\n      <div v-if=\"showPaymentForm\" class=\"payment-form\">\n        <form @submit.prevent=\"savePaymentInfo\">\n          <div>\n            <label for=\"qr-title\">Título del código QR:</label>\n            <input type=\"text\" id=\"qr-title\" v-model=\"paymentInfo.qrTitle\" placeholder=\"Ej: Escanea para pagar\">\n          </div>\n          <div>\n            <label for=\"qr-image\">Imagen QR de Pago:</label>\n            <input type=\"file\" id=\"qr-image\" @change=\"onQRImageChange\">\n            <img v-if=\"paymentInfo.qrImage\" :src=\"paymentInfo.qrImage\" alt=\"QR de Pago\" style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\">\n          </div>\n          <div>\n            <label for=\"nequi-number\">Número de Nequi:</label>\n            <input type=\"text\" id=\"nequi-number\" v-model=\"paymentInfo.nequiNumber\" placeholder=\"Ej: 300 123 4567\">\n          </div>\n          <div>\n            <label for=\"nequi-image\">Imagen Nequi:</label>\n            <input type=\"file\" id=\"nequi-image\" @change=\"onNequiImageChange\">\n            <img v-if=\"paymentInfo.nequiImage\" :src=\"paymentInfo.nequiImage\" alt=\"Imagen Nequi\" style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\">\n          </div>\n          <div class=\"button-group\">\n            <button type=\"submit\" class=\"save-button\">Guardar</button>\n            <button type=\"button\" @click=\"clearPaymentForm\" class=\"clear-button\">Limpiar</button>\n          </div>\n        </form>\n      </div>\n\n      <div v-if=\"paymentInfo.qrImage || paymentInfo.nequiNumber\" class=\"payment-preview\">\n        <h3>Información de Pago</h3>\n        <div class=\"payment-methods\">\n          <div v-if=\"paymentInfo.qrImage\" class=\"payment-method\">\n            <h4>{{ paymentInfo.qrTitle || 'Código QR de Pago' }}</h4>\n            <img :src=\"paymentInfo.qrImage\" alt=\"QR de Pago\" style=\"width: 200px; height: 200px; object-fit: contain;\">\n          </div>\n          \n          <div v-if=\"paymentInfo.nequiNumber || paymentInfo.nequiImage\" class=\"payment-method\">\n            <h4>Pago con Nequi</h4>\n            <img v-if=\"paymentInfo.nequiImage\" :src=\"paymentInfo.nequiImage\" alt=\"Nequi\" style=\"width: 200px; height: 200px; object-fit: contain;\">\n            <p v-if=\"paymentInfo.nequiNumber\"><strong>Número:</strong> {{ paymentInfo.nequiNumber }}</p>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- SECCIÓN 3.1: MENÚ ESPECIAL -->\n    <section class=\"menu-special-section\">\n      <h2>Menú Especial</h2>\n      <button @click=\"toggleSpecialMenuForm\" class=\"toggle-button\">\n        {{ showSpecialMenuForm ? 'Ocultar Formulario' : 'Mostrar Formulario' }}\n      </button>\n\n      <!-- Formulario para agregar/editar platos especiales -->\n      <div v-if=\"showSpecialMenuForm\" class=\"menu-form\">\n        <form @submit.prevent=\"saveSpecialMenuItem\">\n          <div>\n            <label for=\"special-item-name\">Nombre del plato especial:</label>\n            <input type=\"text\" id=\"special-item-name\" v-model=\"newSpecialItem.name\" required>\n          </div>\n          <div>\n            <label for=\"special-item-description\">Descripción del plato especial:</label>\n            <textarea id=\"special-item-description\" v-model=\"newSpecialItem.description\"></textarea>\n          </div>\n          <div>\n            <label for=\"special-item-price\">Precio:</label>\n            <input type=\"number\" id=\"special-item-price\" v-model.number=\"newSpecialItem.price\" min=\"0\" step=\"0.01\" required>\n          </div>\n          <div>\n            <label for=\"special-item-drinks\">Incluye refresco:</label>\n            <select id=\"special-item-drinks\" v-model=\"newSpecialItem.includesDrink\">\n              <option :value=\"true\">Sí</option>\n              <option :value=\"false\">No</option>\n            </select>\n          </div>\n          <div>\n            <label for=\"special-item-quantity\">Cantidad disponible:</label>\n            <input type=\"number\" id=\"special-item-quantity\" v-model.number=\"newSpecialItem.availableQuantity\" min=\"0\" required>\n          </div>\n          <div>\n            <label for=\"special-item-image\">Imagen del plato especial:</label>\n            <input type=\"file\" id=\"special-item-image\" @change=\"onSpecialImageChange\">\n            <img v-if=\"newSpecialItem.image\" :src=\"newSpecialItem.image\" alt=\"Imagen del plato especial\" style=\"max-width: 100px; margin-top: 10px;\">\n          </div>\n          <div class=\"button-group\">\n            <button type=\"submit\" class=\"save-button\">{{ isEditingSpecial ? 'Actualizar' : 'Crear' }}</button>\n            <button type=\"button\" @click=\"clearSpecialMenuForm\" class=\"clear-button\">Cancelar</button>\n          </div>\n        </form>\n      </div>\n\n      <!-- Lista de platos especiales -->\n      <div class=\"menu-special-items-list\">\n        <div v-for=\"(item, index) in specialMenuItems\" :key=\"index\" class=\"menu-item-card\">\n          <div class=\"menu-item-image-container\">\n            <img v-if=\"item.image\" :src=\"item.image\" alt=\"Plato especial\" class=\"menu-item-image\">\n            <div v-else class=\"no-image-placeholder\">Sin imagen</div>\n          </div>\n          <div class=\"menu-item-details\">\n            <h3>{{ item.name }}</h3>\n            <p>{{ item.description }}</p>\n            <p><strong>Precio:</strong> ${{ item.price }}</p>\n            <p><strong>Incluye refresco:</strong> {{ item.includesDrink ? 'Sí' : 'No' }}</p>\n            <p><strong>Disponibles:</strong> {{ item.availableQuantity }}</p>\n          </div>\n          <div class=\"menu-item-actions\">\n            <button @click=\"editSpecialMenuItem(index)\" class=\"edit-button\">Editar</button>\n            <button \n              @click=\"sellSpecialMenuItem(index)\" \n              @mouseenter=\"checkAvailabilityToast(item.id)\"\n              class=\"sell-button tooltip-container\">\n              Vender\n            </button>\n            <button @click=\"deleteSpecialMenuItem(index)\" class=\"delete-button\">Eliminar</button>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- SECCIÓN 3: MENÚ DEL RESTAURANTE -->\n    <section class=\"menu-section\">\n      <h2>Menú del Restaurante</h2>\n      <button @click=\"toggleMenuForm\" class=\"toggle-button\">\n        {{ showMenuForm ? 'Ocultar Formulario' : 'Mostrar Formulario' }}\n      </button>\n\n      <!-- Formulario para agregar/editar platos -->\n      <div v-if=\"showMenuForm\" class=\"menu-form\">\n        <form @submit.prevent=\"saveMenuItem\">\n          <div>\n            <label for=\"item-name\">Nombre del plato:</label>\n            <input type=\"text\" id=\"item-name\" v-model=\"newItem.name\" required>\n          </div>\n          <div>\n            <label for=\"item-description\">Descripción del plato:</label>\n            <textarea id=\"item-description\" v-model=\"newItem.description\"></textarea>\n          </div>\n          <div>\n            <label for=\"item-price\">Precio:</label>\n            <input type=\"number\" id=\"item-price\" v-model.number=\"newItem.price\" min=\"0\" step=\"0.01\" required>\n          </div>\n          <div>\n            <label for=\"item-drinks\">Incluye refresco:</label>\n            <select id=\"item-drinks\" v-model=\"newItem.includesDrink\">\n              <option :value=\"true\">Sí</option>\n              <option :value=\"false\">No</option>\n            </select>\n          </div>\n          <div>\n            <label for=\"item-quantity\">Cantidad disponible:</label>\n            <input type=\"number\" id=\"item-quantity\" v-model.number=\"newItem.availableQuantity\" min=\"0\" required>\n          </div>\n          <div>\n            <label for=\"item-image\">Imagen del plato:</label>\n            <input type=\"file\" id=\"item-image\" @change=\"onImageChange\">\n            <img v-if=\"newItem.image\" :src=\"newItem.image\" alt=\"Imagen del plato\" style=\"max-width: 100px; margin-top: 10px;\">\n          </div>\n          <div class=\"button-group\">\n            <button type=\"submit\" class=\"save-button\">{{ isEditing ? 'Actualizar' : 'Crear' }}</button>\n            <button type=\"button\" @click=\"clearMenuForm\" class=\"clear-button\">Cancelar</button>\n          </div>\n        </form>\n      </div>\n\n      <!-- Lista de platos -->\n      <div class=\"menu-items-list\">\n        <div v-for=\"(item, index) in menuItems\" :key=\"index\" class=\"menu-item-card\">\n          <div class=\"menu-item-image-container\">\n            <img v-if=\"item.image\" :src=\"item.image\" alt=\"Plato\" class=\"menu-item-image\">\n            <div v-else class=\"no-image-placeholder\">Sin imagen</div>\n          </div>\n          <div class=\"menu-item-details\">\n            <h3>{{ item.name }}</h3>\n            <p>{{ item.description }}</p>\n            <p><strong>Precio:</strong> ${{ item.price }}</p>\n            <p><strong>Incluye refresco:</strong> {{ item.includesDrink ? 'Sí' : 'No' }}</p>\n            <p><strong>Disponibles:</strong> {{ item.availableQuantity }}</p>\n          </div>\n          <div class=\"menu-item-actions\">\n            <button @click=\"editMenuItem(index)\" class=\"edit-button\">Editar</button>\n            <button \n              @click=\"sellMenuItem(index)\" \n              @mouseenter=\"checkAvailabilityToast(item.id)\"\n              class=\"sell-button tooltip-container\">\n              Vender\n            </button>\n            <button @click=\"deleteMenuItem(index)\" class=\"delete-button\">Eliminar</button>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- SECCIÓN 4: INVENTARIO DE PLATOS VENDIDOS -->\n    <section class=\"inventory-section\">\n      <h2>Inventario de Platos Vendidos</h2>\n      \n      <div class=\"inventory-controls\">\n        <div class=\"inventory-search-container\">\n          <input \n            v-model=\"searchTerm\" \n            placeholder=\"Buscar plato...\" \n            class=\"inventory-search-input\"\n          />\n        </div>\n        \n        <div class=\"inventory-filters\">\n          <select v-model=\"sortBy\" class=\"inventory-filter\">\n            <option value=\"\">Ordenar por</option>\n            <option value=\"name\">Nombre</option>\n            <option value=\"quantity-desc\">Más vendidos</option>\n            <option value=\"quantity-asc\">Menos vendidos</option>\n            <option value=\"price-desc\">Mayor precio</option>\n            <option value=\"price-asc\">Menor precio</option>\n            <option value=\"date-desc\">Más recientes</option>\n            <option value=\"date-asc\">Más antiguos</option>\n          </select>\n          \n          <select v-model=\"categoryFilter\" class=\"inventory-filter\">\n            <option value=\"\">Todas las categorías</option>\n            <option value=\"drinks\">Con refresco</option>\n            <option value=\"nodrinks\">Sin refresco</option>\n          </select>\n        </div>\n        \n        <div class=\"inventory-actions\">\n          <button @click=\"exportToExcel\" class=\"export-button excel\">\n            <span class=\"action-icon\">📊</span> Exportar a Excel\n          </button>\n          <button @click=\"exportToPDF\" class=\"export-button pdf\">\n            <span class=\"action-icon\">📄</span> Exportar a PDF\n          </button>\n          <select v-model=\"selectedChartType\" class=\"inventory-filter\">\n            <option value=\"bar\">Gráfico de barras</option>\n            <option value=\"line\">Gráfico de líneas</option>\n            <option value=\"none\">Sin gráfico</option>\n          </select>\n        </div>\n      </div>\n      \n      <!-- Gráfico de ventas con tratamiento de errores -->\n      <div v-if=\"selectedChartType !== 'none'\" class=\"sales-chart-container\">\n        <SalesChartComponent \n          v-if=\"filteredSoldItems.length > 0\" \n          :chartType=\"selectedChartType\" \n          :items=\"filteredSoldItems\"\n          class=\"sales-chart\"\n          @error=\"handleChartError\"\n        />\n        <div v-else class=\"empty-chart-message\">\n          No hay datos suficientes para mostrar el gráfico\n        </div>\n      </div>\n      \n      <div class=\"inventory-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Nombre del Plato</th>\n              <th>Categoría</th>\n              <th>Cantidad Vendida</th>\n              <th>Precio por Unidad</th>\n              <th>Fecha de Venta</th>\n              <th>Subtotal</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(item, index) in filteredSoldItems\" :key=\"index\" :class=\"{ 'alternate-row': index % 2 !== 0 }\">\n              <td>{{ item.name }}</td>\n              <td>{{ item.includesDrink ? 'Con refresco' : 'Sin refresco' }}</td>\n              <td>{{ item.quantity }}</td>\n              <td>${{ formatPrice(item.price) }}</td>\n              <td>{{ formatDate(item.date) }}</td>\n              <td>${{ formatPrice(item.quantity * item.price) }}</td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"5\"><strong>Total Ventas</strong></td>\n              <td><strong>${{ formatPrice(totalSales) }}</strong></td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </section>\n\n    <!-- SECCIÓN 5: COMPARTIR MENU -->\n    <section class=\"share-section\">\n      <h2>Compartir Menú</h2>\n      <div class=\"share-buttons\">\n        <button @click=\"shareByWhatsApp\" class=\"whatsapp-button\">\n          <span class=\"emoji\">📱</span> Compartir en WhatsApp\n        </button>\n        <button @click=\"copyLink\" class=\"copy-button\">\n          <span class=\"emoji\">📋</span> Copiar Enlace\n        </button>\n      </div>\n      <p v-if=\"showCopiedMessage\" class=\"copied-message\">¡Enlace copiado al portapapeles!</p>\n      <p v-if=\"shareLink\" class=\"share-link\">\n        Enlace para compartir: <a :href=\"shareLink\" target=\"_blank\">{{ shareLink }}</a>\n      </p>\n    </section>\n\n    <!-- Toast Notification -->\n    <div v-if=\"toast.show\" \n         class=\"toast-notification\" \n         :class=\"toast.type\">\n      {{ toast.message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue';\nimport { saveMenu } from '../services/menuService';\nimport { formatShareLinkMessage } from '../utils/messageFormatter';\nimport SalesChartComponent from './SalesChartComponent.vue';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\nimport { \n  getMenuItems, \n  saveMenuItems,\n  getBusinessInfo, \n  saveBusinessInfo as saveBusinessInfoToDB,\n  getSoldItems, \n  saveSoldItems,\n  deleteMenuItemFromDB,\n  migrateFromLocalStorage,\n  compressImage,\n  updateItemAvailability\n} from '../services/storageService';\nimport { confirm, alert } from '../services/dialogService';\nimport { getCurrentUser, hasRole } from '../services/authService';\nimport { guardarPlato } from '@/services/indexedDBService';\n\nexport default {\n  name: 'MenuComponent',\n  components: {\n    SalesChartComponent\n  },\n  props: {\n    viewOnly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    // Estado para información del negocio\n    const businessInfo = ref({\n      name: '',\n      description: '',\n      contact: '',\n      address: '',\n      logo: ''\n    });\n    const showBusinessForm = ref(false);\n\n    // Estado para información de pago\n    const paymentInfo = ref({\n      qrTitle: '',\n      qrImage: '',\n      nequiNumber: '',\n      nequiImage: ''\n    });\n    const showPaymentForm = ref(false);\n\n    // Estado para platos del menú\n    const newItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const menuItems = ref([]);\n    const showMenuForm = ref(false);\n    const isEditing = ref(false);\n    const editingIndex = ref(-1);\n\n    // Estado para ventas e inventario\n    const soldItems = ref([]);\n    const searchTerm = ref('');\n    const sortBy = ref('');\n    const categoryFilter = ref('');\n    const selectedChartType = ref('bar');\n\n    // Estado para compartir\n    const shareLink = ref('');\n    const showCopiedMessage = ref(false);\n    \n    // Estado para mostrar progreso de migración\n    const migrationStatus = ref({\n      inProgress: false,\n      completed: false,\n      message: ''\n    });\n\n    // Estado para errores del gráfico\n    const chartError = ref(null);\n    \n    // Primero, añadir el componente Toast\n    const toast = ref({\n      show: false,\n      message: '',\n      type: 'success' // success, error, warning\n    });\n\n    // Manejar errores del gráfico\n    const handleChartError = (error) => {\n      console.error(\"Error en el gráfico:\", error);\n      chartError.value = error;\n    };\n\n    // Estado para mensajes de notificación\n    const notification = ref({\n      show: false,\n      message: '',\n      type: 'success', // 'success', 'error'\n      timeout: null\n    });\n\n    // Estado para platos especiales\n    const newSpecialItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const specialMenuItems = ref([]);\n    const showSpecialMenuForm = ref(false);\n    const isEditingSpecial = ref(false);\n    const editingSpecialIndex = ref(-1);\n\n    // Cargar datos guardados\n    onMounted(async () => {\n      try {\n        migrationStatus.value.inProgress = true;\n        migrationStatus.value.message = 'Cargando datos...';\n        \n        const hasLocalData = localStorage.getItem('businessInfo') || \n                             localStorage.getItem('menuItems') ||\n                             localStorage.getItem('soldItems');\n          \n        if (hasLocalData) {\n          migrationStatus.value.message = 'Migrando datos desde localStorage a IndexedDB...';\n          \n          const migrationResult = await migrateFromLocalStorage();\n          \n          if (migrationResult) {\n            migrationStatus.value.completed = true;\n            migrationStatus.value.message = 'Migración completada exitosamente';\n            localStorage.removeItem('businessInfo');\n            localStorage.removeItem('menuItems');\n            localStorage.removeItem('soldItems');\n          } else {\n            migrationStatus.value.message = 'Error en la migración de datos';\n          }\n        }\n\n        const dbBusinessInfo = await getBusinessInfo();\n        if (dbBusinessInfo && dbBusinessInfo.name) {\n          businessInfo.value = dbBusinessInfo;\n        }\n\n        const dbMenuItems = await getMenuItems();\n        if (dbMenuItems && dbMenuItems.length > 0) {\n          // Separar los platos regulares de los especiales\n          const regularItems = dbMenuItems.filter(item => !item.isSpecial);\n          const specialItems = dbMenuItems.filter(item => item.isSpecial === true);\n          \n          menuItems.value = regularItems;\n          \n          if (specialItems.length > 0) {\n            specialMenuItems.value = specialItems;\n          }\n        }\n\n        const dbSoldItems = await getSoldItems();\n        if (dbSoldItems && dbSoldItems.length > 0) {\n          soldItems.value = dbSoldItems;\n        }\n        \n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 1500);\n      } catch (error) {\n        console.error('Error al cargar datos:', error);\n        migrationStatus.value.message = 'Error al cargar datos: ' + error.message;\n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 3000);\n      }\n    });\n\n    // Métodos para información del negocio\n    const toggleBusinessForm = () => {\n      showBusinessForm.value = !showBusinessForm.value;\n    };\n\n    const onLogoChange = async (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const compressedLogo = await compressImage(e.target.result);\n          businessInfo.value.logo = compressedLogo;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const saveBusinessInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        await saveBusinessInfoToDB(businessInfo.value);\n        \n        notification.value = {\n          show: true,\n          message: 'Información del negocio guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información del negocio:', error);\n        \n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n\n    const clearBusinessForm = async () => {\n      const confirmed = await confirm('¿Estás seguro de querer limpiar el formulario?');\n      if (confirmed) {\n        businessInfo.value = {\n          name: '',\n          description: '',\n          contact: '',\n          address: '',\n          logo: ''\n        };\n      }\n    };\n\n    // Métodos para información de pago\n    const togglePaymentForm = () => {\n      showPaymentForm.value = !showPaymentForm.value;\n    };\n\n    const onQRImageChange = async (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const compressedImage = await compressImage(e.target.result);\n          paymentInfo.value.qrImage = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const onNequiImageChange = async (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const compressedImage = await compressImage(e.target.result);\n          paymentInfo.value.nequiImage = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const savePaymentInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        \n        businessInfo.value.paymentInfo = { ...paymentInfo.value };\n        \n        await saveBusinessInfoToDB(businessInfo.value);\n        \n        notification.value = {\n          show: true,\n          message: 'Información de pago guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información de pago:', error);\n        \n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información de pago. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n\n    const clearPaymentForm = async () => {\n      const confirmed = await confirm('¿Estás seguro de querer limpiar la información de pago?');\n      if (confirmed) {\n        paymentInfo.value = {\n          qrTitle: '',\n          qrImage: '',\n          nequiNumber: '',\n          nequiImage: ''\n        };\n      }\n    };\n\n    // Métodos para platos del menú\n    const toggleMenuForm = () => {\n      showMenuForm.value = !showMenuForm.value;\n      if (!showMenuForm.value) {\n        clearMenuForm();\n      }\n    };\n\n    const onImageChange = async (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const compressedImage = await compressImage(e.target.result);\n          newItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const saveMenuItem = async () => {\n      try {\n        // Validaciones iniciales\n        if (!newItem.value.name || !newItem.value.price) {\n          showNotification('El nombre y el precio son obligatorios', 'error');\n          return;\n        }\n\n        if (newItem.value.availableQuantity < 0) {\n          showNotification('La cantidad disponible no puede ser negativa', 'error');\n          return;\n        }\n\n        // Generar ID si no existe\n        if (!newItem.value.id) {\n          newItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n\n        try {\n          console.log('📝 Datos del plato antes de guardar:', newItem.value);\n          \n          // Guardar en la base de datos\n          const savedPlato = await guardarPlato(newItem.value);\n          console.log('✅ Plato guardado correctamente:', savedPlato);\n          \n          if (isEditing.value) {\n            // Actualizar el plato existente en la lista\n            const index = menuItems.value.findIndex(item => item.id === savedPlato.id);\n            if (index !== -1) {\n              menuItems.value[index] = { ...savedPlato };\n              showNotification('Plato actualizado exitosamente', 'success');\n            }\n          } else {\n            // Agregar el nuevo plato a la lista\n            menuItems.value.push({ ...savedPlato });\n            showNotification('Plato creado exitosamente', 'success');\n          }\n\n          // Guardar la lista completa\n          await saveMenuItems(menuItems.value);\n          \n          // Limpiar el formulario\n          clearMenuForm();\n          \n        } catch (error) {\n          console.error('❌ Error al guardar en la base de datos:', error);\n          showNotification(`Error al guardar el plato: ${error.message || 'Intente nuevamente'}`, 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error general en saveMenuItem:', error);\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\n      }\n    };\n\n    const clearMenuForm = () => {\n      newItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditing.value = false;\n      editingIndex.value = -1;\n    };\n\n    const editMenuItem = (index) => {\n      newItem.value = { ...menuItems.value[index] };\n      isEditing.value = true;\n      editingIndex.value = index;\n      showMenuForm.value = true;\n    };\n\n    const deleteMenuItem = async (index) => {\n      const confirmed = await confirm('¿Estás seguro de querer eliminar este plato?', {\n        title: 'Eliminar plato',\n        confirmText: 'Eliminar',\n        cancelText: 'Cancelar'\n      });\n      \n      if (confirmed) {\n        try {\n          if (index < 0 || index >= menuItems.value.length) {\n            console.error('Error: Índice fuera de rango', index);\n            await alert('Error: No se encontró el elemento a eliminar');\n            return;\n          }\n          \n          const item = menuItems.value[index];\n          console.log(`Eliminando plato: índice=${index}, nombre=${item.name}, id=${item.id}`);\n          \n          if (!item) {\n            console.error('Error: Elemento del menú no encontrado en el índice', index);\n            await alert('Error: No se encontró el elemento a eliminar');\n            return;\n          }\n          \n          // Eliminar el item de la base de datos\n          if (item.id) {\n            try {\n              console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n              const deleteResult = await deleteMenuItemFromDB(item.id);\n              console.log(`Resultado de la eliminación: ${deleteResult}`);\n            } catch (deleteError) {\n              console.error('Error al eliminar item del almacén:', deleteError);\n            }\n          }\n          \n          // Eliminar el item del array local\n          menuItems.value.splice(index, 1);\n          \n          console.log('Elemento eliminado correctamente del menú local');\n          \n          // Mostrar notificación de éxito\n          showNotification('Plato eliminado correctamente', 'success');\n          \n        } catch (error) {\n          console.error('Error al eliminar elemento del menú:', error);\n          await alert(`Error al eliminar el plato: ${error.message || 'Error desconocido'}`);\n        }\n      }\n    };\n\n    const sellMenuItem = async (index) => {\n      try {\n        const item = menuItems.value[index];\n        \n        // Validar disponibilidad\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\n          showNotification('Este plato está agotado', 'error');\n          return;\n        }\n\n        const confirmed = await confirm(\n          `¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`\n        );\n\n        if (confirmed) {\n          try {\n            const newQuantity = item.availableQuantity - 1;\n            \n            // Actualizar en la base de datos\n            await updateItemAvailability(item.id, newQuantity);\n            \n            // Actualizar en el estado local\n            item.availableQuantity = newQuantity;\n            \n            // Registrar la venta\n            const currentDate = new Date().toISOString();\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\n            \n            if (soldItem) {\n              soldItem.quantity += 1;\n              soldItem.date = currentDate;\n            } else {\n              soldItems.value.push({\n                name: item.name,\n                quantity: 1,\n                price: item.price,\n                includesDrink: item.includesDrink,\n                date: currentDate\n              });\n            }\n            \n            // Guardar items vendidos\n            await saveSoldItems(soldItems.value);\n            \n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\n            \n            if (newQuantity <= 5) {\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\n            }\n          } catch (error) {\n            console.error('Error al procesar la venta:', error);\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar la venta:', error);\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    // Métodos para platos especiales\n    const toggleSpecialMenuForm = () => {\n      showSpecialMenuForm.value = !showSpecialMenuForm.value;\n      if (!showSpecialMenuForm.value) {\n        clearSpecialMenuForm();\n      }\n    };\n\n    const onSpecialImageChange = async (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const compressedImage = await compressImage(e.target.result);\n          newSpecialItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n\n    const saveSpecialMenuItem = async () => {\n      try {\n        if (!newSpecialItem.value.name || !newSpecialItem.value.price) {\n          showNotification('El nombre y el precio son obligatorios', 'error');\n          return;\n        }\n        \n        if (!newSpecialItem.value.id) {\n          newSpecialItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n        \n        // Marcar como plato especial\n        newSpecialItem.value.isSpecial = true;\n        \n        try {\n          console.log('📝 Datos del plato especial antes de guardar:', newSpecialItem.value);\n          \n          // Guardar en la base de datos\n          const savedPlato = await guardarPlato(newSpecialItem.value);\n          console.log('✅ Plato especial guardado correctamente:', savedPlato);\n          \n          if (isEditingSpecial.value) {\n            // Actualizar el plato existente en la lista\n            const index = specialMenuItems.value.findIndex(item => item.id === savedPlato.id);\n            if (index !== -1) {\n              specialMenuItems.value[index] = { ...savedPlato };\n              showNotification('Plato especial actualizado exitosamente', 'success');\n            }\n            isEditingSpecial.value = false;\n            editingSpecialIndex.value = -1;\n          } else {\n            const existingItem = specialMenuItems.value.find(item => \n              item.name.toLowerCase() === savedPlato.name.toLowerCase()\n            );\n            \n            if (existingItem) {\n              const confirmed = await confirm(\n                `Ya existe un plato especial llamado \"${savedPlato.name}\". ¿Desea actualizarlo?`,\n                { title: 'Actualizar plato especial existente' }\n              );\n              \n              if (confirmed) {\n                const index = specialMenuItems.value.findIndex(item => item.id === existingItem.id);\n                if (index !== -1) {\n                  // Conservar el ID original pero actualizar los demás datos\n                  const updatedPlato = {\n                    ...savedPlato,\n                    id: existingItem.id\n                  };\n                  \n                  // Actualizar en la base de datos\n                  await guardarPlato(updatedPlato);\n                  \n                  // Actualizar en la lista local\n                  specialMenuItems.value[index] = { ...updatedPlato };\n                  showNotification('Plato especial actualizado exitosamente', 'success');\n                }\n              } else {\n                return;\n              }\n            } else {\n              // Agregar el nuevo plato a la lista\n              specialMenuItems.value.push({ ...savedPlato });\n              showNotification('Plato especial creado exitosamente', 'success');\n            }\n          }\n          \n          // Guardar todos los elementos\n          await saveMenuItems([...menuItems.value, ...specialMenuItems.value]);\n          \n          // Limpiar el formulario\n          clearSpecialMenuForm();\n        } catch (error) {\n          console.error('❌ Error al guardar plato especial:', error);\n          showNotification(`Error al guardar el plato especial: ${error.message || 'Intente nuevamente'}`, 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error general en saveSpecialMenuItem:', error);\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\n      }\n    };\n\n    const clearSpecialMenuForm = () => {\n      newSpecialItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditingSpecial.value = false;\n      editingSpecialIndex.value = -1;\n    };\n\n    const editSpecialMenuItem = (index) => {\n      newSpecialItem.value = { ...specialMenuItems.value[index] };\n      isEditingSpecial.value = true;\n      editingSpecialIndex.value = index;\n      showSpecialMenuForm.value = true;\n    };\n\n    const deleteSpecialMenuItem = async (index) => {\n      const confirmed = await confirm('¿Estás seguro de querer eliminar este plato especial?', {\n        title: 'Eliminar plato especial',\n        confirmText: 'Eliminar',\n        cancelText: 'Cancelar'\n      });\n      \n      if (confirmed) {\n        try {\n          if (index < 0 || index >= specialMenuItems.value.length) {\n            console.error('Error: Índice fuera de rango', index);\n            await alert('Error: No se encontró el elemento a eliminar');\n            return;\n          }\n          \n          const item = specialMenuItems.value[index];\n          console.log(`Eliminando plato especial: índice=${index}, nombre=${item.name}, id=${item.id}`);\n          \n          if (!item) {\n            console.error('Error: Elemento del menú especial no encontrado en el índice', index);\n            await alert('Error: No se encontró el elemento a eliminar');\n            return;\n          }\n          \n          const itemName = item.name || 'Producto desconocido';\n          const currentDate = new Date().toISOString();\n          \n          if (!Array.isArray(soldItems.value)) {\n            console.warn('soldItems.value no es un array, inicializando como array vacío');\n            soldItems.value = [];\n          }\n          \n          const soldItem = soldItems.value.find(sold => \n            sold && typeof sold === 'object' && sold.name === itemName\n          );\n          \n          if (soldItem) {\n            soldItem.quantity += 1;\n            if (!soldItem.date || new Date(currentDate) > new Date(soldItem.date)) {\n              soldItem.date = currentDate;\n            }\n          } else {\n            const newSoldItem = {\n              name: itemName,\n              quantity: 1,\n              price: Number(item.price) || 0,\n              includesDrink: Boolean(item.includesDrink),\n              date: currentDate\n            };\n            \n            soldItems.value.push(newSoldItem);\n          }\n          \n          const cleanSoldItems = soldItems.value.map(item => {\n            if (!item || typeof item !== 'object') {\n              return {\n                name: 'Producto desconocido',\n                quantity: 1,\n                price: 0,\n                includesDrink: false,\n                date: currentDate\n              };\n            }\n            \n            return {\n              name: String(item.name || 'Producto desconocido'),\n              quantity: Number(item.quantity) || 1,\n              price: Number(item.price) || 0,\n              includesDrink: Boolean(item.includesDrink),\n              date: item.date || currentDate\n            };\n          });\n          \n          await saveSoldItems(cleanSoldItems);\n          \n          if (item.id) {\n            try {\n              console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n              const deleteResult = await deleteMenuItemFromDB(item.id);\n              console.log(`Resultado de la eliminación: ${deleteResult}`);\n            } catch (deleteError) {\n              console.error('Error al eliminar item del almacén:', deleteError);\n            }\n          }\n          \n          specialMenuItems.value.splice(index, 1);\n          soldItems.value = cleanSoldItems;\n\n          console.log('Elemento eliminado correctamente del menú especial');\n          \n        } catch (error) {\n          console.error('Error al eliminar el plato especial:', error);\n          await alert('Error al eliminar el plato especial. Por favor, intenta nuevamente.');\n        }\n      }\n    };\n\n    const sellSpecialMenuItem = async (index) => {\n      try {\n        const item = specialMenuItems.value[index];\n        \n        // Validar disponibilidad\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\n          showNotification('Este plato especial está agotado', 'error');\n          return;\n        }\n\n        const confirmed = await confirm(\n          `¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`\n        );\n\n        if (confirmed) {\n          try {\n            const newQuantity = item.availableQuantity - 1;\n            \n            // Actualizar en la base de datos\n            await updateItemAvailability(item.id, newQuantity);\n            \n            // Actualizar en el estado local\n            item.availableQuantity = newQuantity;\n            \n            // Registrar la venta\n            const currentDate = new Date().toISOString();\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\n            \n            if (soldItem) {\n              soldItem.quantity += 1;\n              soldItem.date = currentDate;\n            } else {\n              soldItems.value.push({\n                name: item.name,\n                quantity: 1,\n                price: item.price,\n                includesDrink: item.includesDrink,\n                date: currentDate\n              });\n            }\n            \n            // Guardar items vendidos\n            await saveSoldItems(soldItems.value);\n            \n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\n            \n            if (newQuantity <= 5) {\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\n            }\n          } catch (error) {\n            console.error('Error al procesar la venta:', error);\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar la venta:', error);\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    // Métodos para compartir\n    const shareByWhatsApp = async () => {\n      try {\n        await alert('Procesando imágenes para compartir...');\n        \n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\n        if (totalItems > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\n          return;\n        }\n        \n        // Combinar platos regulares y especiales\n        const itemsToShare = [\n          ...menuItems.value.map(item => ({\n            ...item,\n            isSpecial: false\n          })),\n          ...specialMenuItems.value.map(item => ({\n            ...item,\n            isSpecial: true\n          }))\n        ];\n        \n        console.log(`Preparando para compartir ${itemsToShare.length} elementos...`);\n        console.log('Items regulares:', menuItems.value.length);\n        console.log('Items especiales:', specialMenuItems.value.length);\n        \n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        \n        const message = formatShareLinkMessage(url, businessInfo.value.name);\n        const whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\n        window.open(whatsappUrl, '_blank');\n      } catch (error) {\n        console.error('Error al compartir por WhatsApp:', error);\n        await alert(`Error al compartir el menú: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\n      }\n    };\n\n    const copyLink = async () => {\n      try {\n        const loadingMessage = 'Procesando imágenes para compartir...';\n        showCopiedMessage.value = true;\n        \n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\n        if (totalItems > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\n          showCopiedMessage.value = false;\n          return;\n        }\n        \n        // Combinar platos regulares y especiales\n        const itemsToShare = [\n          ...menuItems.value.map(item => ({\n            ...item,\n            isSpecial: false\n          })),\n          ...specialMenuItems.value.map(item => ({\n            ...item,\n            isSpecial: true\n          }))\n        ];\n        \n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        \n        try {\n          await navigator.clipboard.writeText(url);\n          showCopiedMessage.value = true;\n          setTimeout(() => {\n            showCopiedMessage.value = false;\n          }, 3000);\n        } catch (clipboardError) {\n          console.error('Error al copiar al portapapeles:', clipboardError);\n          await alert('No se pudo copiar automáticamente. Por favor, copia manualmente este enlace: ' + url);\n        }\n      } catch (error) {\n        console.error('Error al generar enlace para compartir:', error);\n        showCopiedMessage.value = false;\n        await alert(`Error al generar el enlace: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\n      }\n    };\n\n    // Computados\n    const totalSales = computed(() => {\n      return soldItems.value.reduce((total, item) => {\n        return total + (item.quantity * item.price);\n      }, 0);\n    });\n\n    const formatPrice = (price) => {\n      if (isNaN(Number(price))) return '0,00';\n      const fixed = Number(price).toFixed(2);\n      const [intPart, decPart] = fixed.split('.');\n      const formattedIntPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n      return `${formattedIntPart},${decPart}`;\n    };\n    \n    const formatDate = (dateStr) => {\n      if (!dateStr) return 'N/A';\n      const date = new Date(dateStr);\n      if (isNaN(date.getTime())) return 'Fecha inválida';\n      return new Intl.DateTimeFormat('es-ES', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n\n    const filteredSoldItems = computed(() => {\n      let items = soldItems.value;\n      if (!Array.isArray(items)) {\n        console.warn('soldItems no es un array. Devolviendo array vacío.');\n        return [];\n      }\n      if (searchTerm.value) {\n        const term = searchTerm.value.toLowerCase().trim();\n        \n        if (Array.isArray(items)) {\n          return items.filter(item => {\n            if (item && typeof item === 'object') {\n              const name = String(item.name || '').toLowerCase();\n              return name.includes(term);\n            }\n            return false;\n          });\n        } else {\n          console.warn('filterInventoryItems recibió un valor no array:', items);\n          return [];\n        }\n      }\n      if (categoryFilter.value) {\n        if (categoryFilter.value === 'drinks') {\n          items = items.filter(item => Boolean(item && item.includesDrink));\n        } else if (categoryFilter.value === 'nodrinks') {\n          items = items.filter(item => item && item.includesDrink === false);\n        }\n      }\n      if (sortBy.value) {\n        items = [...items];\n        switch (sortBy.value) {\n          case 'name':\n            items.sort((a, b) => {\n              if (!a || !a.name) return 1;\n              if (!b || !b.name) return -1;\n              return a.name.localeCompare(b.name);\n            });\n            break;\n          case 'quantity-desc':\n            items.sort((a, b) => {\n              const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\n              const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\n              return qtyB - qtyA;\n            });\n            break;\n          case 'quantity-asc':\n            items.sort((a, b) => {\n              const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\n              const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\n              return qtyA - qtyB;\n            });\n            break;\n          case 'price-desc':\n            items.sort((a, b) => {\n              const priceA = (a && typeof a.price === 'number') ? a.price : 0;\n              const priceB = (b && typeof b.price === 'number') ? b.price : 0;\n              return priceB - priceA;\n            });\n            break;\n          case 'price-asc':\n            items.sort((a, b) => {\n              const priceA = (a && typeof a.price === 'number') ? a.price : 0;\n              const priceB = (b && typeof b.price === 'number') ? b.price : 0;\n              return priceA - priceB;\n            });\n            break;\n          case 'date-desc':\n            items.sort((a, b) => {\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\n              return dateB - dateA;\n            });\n            break;\n          case 'date-asc':\n            items.sort((a, b) => {\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\n              return dateA - dateB;\n            });\n            break;\n          default:\n            break;\n        }\n      }\n      return items;\n    });\n\n    const exportToExcel = () => {\n      // Crear un array con los datos a exportar\n      const data = [\n        ['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal'],\n        ...filteredSoldItems.value.map(item => [\n          item.name,\n          item.includesDrink ? 'Con refresco' : 'Sin refresco',\n          item.quantity,\n          `$${formatPrice(item.price)}`,\n          formatDate(item.date),\n          `$${formatPrice(item.quantity * item.price)}`\n        ]),\n        ['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]\n      ];\n\n      // Crear un libro de Excel y una hoja de cálculo\n      const ws = XLSX.utils.aoa_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Ventas');\n\n      // Generar el archivo Excel y descargarlo\n      const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n      const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      saveAs(blob, `ventas_${new Date().toLocaleDateString()}.xlsx`);\n    };\n\n    const exportToPDF = () => {\n      // Crear un nuevo documento PDF\n      const doc = new jsPDF();\n      \n      // Añadir título\n      doc.setFontSize(18);\n      doc.text('Reporte de Ventas', 14, 22);\n      doc.setFontSize(11);\n      doc.text(`Fecha: ${new Date().toLocaleDateString()}`, 14, 32);\n\n      // Crear la tabla con los datos\n      const tableData = filteredSoldItems.value.map(item => [\n        item.name,\n        item.includesDrink ? 'Con refresco' : 'Sin refresco',\n        item.quantity,\n        `$${formatPrice(item.price)}`,\n        formatDate(item.date),\n        `$${formatPrice(item.quantity * item.price)}`\n      ]);\n\n      // Añadir la tabla\n      doc.autoTable({\n        head: [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal']],\n        body: tableData,\n        foot: [['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]],\n        startY: 40,\n        theme: 'striped',\n        headStyles: { fillColor: [76, 175, 80] },\n        footStyles: { fillColor: [240, 240, 240], textColor: [0, 0, 0], fontStyle: 'bold' }\n      });\n\n      // Guardar el PDF de exportación\n      doc.save(`ventas_${new Date().toLocaleDateString()}.pdf`);\n    };\n\n    const removeDuplicates = (array) => {\n      return [...new Set(array)];\n    };\n\n    // Función para mostrar notificaciones\n    const showNotification = (message, type) => {\n      notification.value = {\n        show: true,\n        message,\n        type\n      };\n      \n      setTimeout(() => {\n        notification.value.show = false;\n      }, 3000); // 3 segundos como acordado\n    };\n\n    const checkAvailabilityToast = async (itemId) => {\n      try {\n        // Buscar el item en ambos menús\n        const item = menuItems.value.find(i => i.id === itemId) || \n                    specialMenuItems.value.find(i => i.id === itemId);\n        \n        if (item) {\n          if (item.availableQuantity > 5) {\n            showNotification(`Disponible: ${item.availableQuantity} unidades`, 'success');\n          } else if (item.availableQuantity > 0) {\n            showNotification(`¡Quedan solo ${item.availableQuantity} unidades!`, 'warning');\n          } else {\n            showNotification('Producto agotado', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al verificar disponibilidad:', error);\n      }\n    };\n\n    // Añadir propiedad isEmployee\n    const isEmployee = computed(() => {\n      return hasRole('Empleado') && !hasRole('Administrador') && !hasRole('Superadministrador');\n    });\n\n    const filterInventoryItems = computed(() => {\n      return (items) => {\n        if (!items || !Array.isArray(items)) {\n          console.warn('filterInventoryItems recibió un valor no array:', items);\n          return [];\n        }\n        if (searchTerm.value) {\n          const term = searchTerm.value.toLowerCase().trim();\n          \n          items = items.filter(item => {\n            if (item && typeof item === 'object') {\n              const name = String(item.name || '').toLowerCase();\n              return name.includes(term);\n            }\n            return false;\n          });\n        }\n        if (categoryFilter.value) {\n          if (categoryFilter.value === 'drinks') {\n            items = items.filter(item => item && item.includesDrink === true);\n          } else if (categoryFilter.value === 'nodrinks') {\n            items = items.filter(item => item && item.includesDrink === false);\n          }\n        }\n        if (sortBy.value) {\n          switch (sortBy.value) {\n            case 'name':\n              items.sort((a, b) => {\n                const nameA = (a && a.name) ? a.name.toLowerCase() : '';\n                const nameB = (b && b.name) ? b.name.toLowerCase() : '';\n                return nameA.localeCompare(nameB);\n              });\n              break;\n            case 'quantity-desc':\n              items.sort((a, b) => {\n                const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\n                const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\n                return qtyB - qtyA;\n              });\n              break;\n            case 'quantity-asc':\n              items.sort((a, b) => {\n                const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\n                const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\n                return qtyA - qtyB;\n              });\n              break;\n            case 'price-desc':\n              items.sort((a, b) => {\n                const priceA = (a && typeof a.price === 'number') ? a.price : 0;\n                const priceB = (b && typeof b.price === 'number') ? b.price : 0;\n                return priceB - priceA;\n              });\n              break;\n            case 'price-asc':\n              items.sort((a, b) => {\n                const priceA = (a && typeof a.price === 'number') ? a.price : 0;\n                const priceB = (b && typeof b.price === 'number') ? b.price : 0;\n                return priceA - priceB;\n              });\n              break;\n            case 'date-desc':\n              items.sort((a, b) => {\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\n                return dateB - dateA;\n              });\n              break;\n            case 'date-asc':\n              items.sort((a, b) => {\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\n                return dateA - dateB;\n              });\n              break;\n            default:\n              break;\n          }\n        }\n        return items;\n      };\n    });\n\n    return {\n      businessInfo,\n      showBusinessForm,\n      toggleBusinessForm,\n      onLogoChange,\n      saveBusinessInfo,\n      clearBusinessForm,\n      paymentInfo,\n      showPaymentForm,\n      togglePaymentForm,\n      onQRImageChange,\n      onNequiImageChange,\n      savePaymentInfo,\n      clearPaymentForm,\n      newItem,\n      menuItems,\n      showMenuForm,\n      isEditing,\n      toggleMenuForm,\n      onImageChange,\n      saveMenuItem,\n      editMenuItem,\n      deleteMenuItem,\n      sellMenuItem,\n      clearMenuForm,\n      soldItems,\n      totalSales,\n      searchTerm,\n      sortBy,\n      categoryFilter,\n      filteredSoldItems,\n      formatPrice,\n      selectedChartType,\n      exportToExcel,\n      exportToPDF,\n      shareLink,\n      showCopiedMessage,\n      shareByWhatsApp,\n      copyLink,\n      migrationStatus,\n      removeDuplicates,\n      chartError,\n      handleChartError,\n      notification,\n      formatDate,\n      newSpecialItem,\n      specialMenuItems,\n      showSpecialMenuForm,\n      isEditingSpecial,\n      editingSpecialIndex,\n      toggleSpecialMenuForm,\n      onSpecialImageChange,\n      saveSpecialMenuItem,\n      clearSpecialMenuForm,\n      editSpecialMenuItem,\n      deleteSpecialMenuItem,\n      sellSpecialMenuItem,\n      toast,\n      showNotification,\n      checkAvailabilityToast,\n      isEmployee,\n      filterInventoryItems\n    };\n  }\n};\n</script>\n\n<style scoped>\n.menu-container {\n  padding: 20px;\n}\n\nsection {\n  margin-bottom: 40px;\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background-color: #fff;\n}\n\nh2 {\n  color: #333;\n  font-size: 24px;\n  margin-bottom: 20px;\n  border-bottom: 2px solid #4CAF50;\n  padding-bottom: 10px;\n}\n\n.toggle-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.toggle-button:hover {\n  background-color: #45a049;\n}\n\nform {\n  display: grid;\n  gap: 15px;\n}\n\nlabel {\n  font-weight: bold;\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.button-group {\n  display: flex;\n  gap: 10px;\n  margin-top: 15px;\n}\n\n.save-button {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  cursor: pointer;\n  flex: 1;\n}\n\n.save-button:hover {\n  background-color: #0056b3;\n}\n\n.clear-button {\n  background-color: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  cursor: pointer;\n  flex: 1;\n}\n\n.clear-button:hover {\n  background-color: #c82333;\n}\n\n.business-preview {\n  margin-top: 20px;\n  padding: 15px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: #f9f9f9;\n}\n\n/* Mejoras a la lista de platos */\n.menu-items-list, .menu-special-items-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.menu-item-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  display: flex;\n  flex-direction: column;\n}\n\n.menu-item-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n}\n\n.menu-item-image-container {\n  width: 100%;\n  height: 200px;\n  position: relative;\n  overflow: hidden;\n  background-color: #f0f0f0;\n}\n\n.menu-item-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.5s ease;\n}\n\n.menu-item-card:hover .menu-item-image {\n  transform: scale(1.05);\n}\n\n.no-image-placeholder {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #999;\n  font-style: italic;\n}\n\n.menu-item-details {\n  padding: 15px;\n  flex-grow: 1;\n}\n\n.menu-item-details h3 {\n  margin-top: 0;\n  color: #333;\n  font-size: 18px;\n}\n\n.menu-item-actions {\n  display: flex;\n  gap: 10px;\n  padding: 0 15px 15px;\n}\n\n.edit-button, .sell-button, .delete-button {\n  flex: 1;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.3s;\n}\n\n.edit-button {\n  background-color: #ffc107;\n  color: #212529;\n}\n\n.edit-button:hover {\n  background-color: #e0a800;\n}\n\n.sell-button {\n  background-color: #28a745;\n  color: white;\n}\n\n.sell-button:hover {\n  background-color: #218838;\n}\n\n.delete-button {\n  background-color: #dc3545;\n  color: white;\n}\n\n.delete-button:hover {\n  background-color: #c82333;\n}\n\n/* Mejoras a la sección de inventario */\n.inventory-section {\n  margin-bottom: 40px;\n}\n\n.inventory-controls {\n  margin-bottom: 20px;\n  display: grid;\n  gap: 15px;\n  grid-template-columns: 1fr;\n}\n\n@media (min-width: 768px) {\n  .inventory-controls {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n.inventory-search-input {\n  width: 100%;\n  padding: 10px 15px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n  box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);\n}\n\n.inventory-filters, \n.inventory-actions {\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.inventory-filter {\n  flex: 1;\n  min-width: 150px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  background-color: white;\n}\n\n.export-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.export-button.excel {\n  background-color: #1D6F42;\n  color: white;\n}\n\n.export-button.excel:hover {\n  background-color: #165235;\n}\n\n.export-button.pdf {\n  background-color: #F40F02;\n  color: white;\n}\n\n.export-button.pdf:hover {\n  background-color: #C90C02;\n}\n\n.action-icon {\n  font-size: 18px;\n}\n\n.sales-chart-container {\n  margin-bottom: 20px;\n  background-color: white;\n  padding: 15px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  min-height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.empty-chart-message {\n  color: #666;\n  font-style: italic;\n  text-align: center;\n  width: 100%;\n  padding: 50px 20px;\n}\n\n.sales-chart {\n  margin-bottom: 20px;\n  background-color: white;\n  padding: 15px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n.inventory-table {\n  overflow-x: auto;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth, td {\n  padding: 15px;\n  text-align: left;\n}\n\nthead {\n  background-color: #4CAF50;\n  color: white;\n}\n\nthead th {\n  font-weight: 600;\n}\n\ntbody tr:hover {\n  background-color: #f1f1f1;\n}\n\n.alternate-row {\n  background-color: #f9f9f9;\n}\n\ntfoot {\n  background-color: #e9e9e9;\n  font-weight: bold;\n}\n\ntfoot td {\n  padding: 12px 15px;\n}\n\n.share-buttons {\n  display: flex;\n  gap: 15px;\n  margin-top: 20px;\n}\n\n.whatsapp-button, .copy-button {\n  flex: 1;\n  padding: 12px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.whatsapp-button {\n  background-color: #25D366;\n  color: white;\n}\n\n.whatsapp-button:hover {\n  background-color: #128C7E;\n}\n\n.copy-button {\n  background-color: #6c757d;\n  color: white;\n}\n\n.copy-button:hover {\n  background-color: #5a6268;\n}\n\n.emoji {\n  font-size: 1.2em;\n  margin-right: 8px;\n}\n\n.copied-message {\n  color: #28a745;\n  margin-top: 10px;\n}\n\n.share-link {\n  margin-top: 15px;\n  padding: 10px;\n  background-color: #f8f9fa;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  word-break: break-all;\n}\n\n.migration-status {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background-color: #ffeb3b;\n  color: #333;\n  padding: 15px 20px;\n  border-radius: 6px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n  max-width: 300px;\n  transition: all 0.3s ease;\n}\n\n.migration-status.completed {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.migration-message {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.loading-spinner {\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  border: 3px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top-color: #333;\n  animation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n/* Estilos para notificaciones */\n.notification {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  padding: 15px 20px;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  z-index: 1001;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  min-width: 300px;\n  max-width: 500px;\n  animation: slide-in 0.3s ease-out;\n}\n\n.notification.success {\n  background-color: #4CAF50;\n}\n\n.notification.error {\n  background-color: #f44336;\n}\n\n.notification-close {\n  background: transparent;\n  border: none;\n  color: white;\n  font-size: 20px;\n  margin-left: 15px;\n  cursor: pointer;\n  padding: 0 5px;\n}\n\n@keyframes slide-in {\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n/* Estilos del toast */\n.toast-notification {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  padding: 15px 20px;\n  border-radius: 8px;\n  color: white;\n  z-index: 1000;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  animation: fadeIn 0.3s, fadeOut 0.3s 2.7s;\n}\n\n.toast-notification.success {\n  background-color: #4CAF50;\n}\n\n.toast-notification.error {\n  background-color: #f44336;\n}\n\n.toast-notification.warning {\n  background-color: #ff9800;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(-20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n@keyframes fadeOut {\n  from { opacity: 1; transform: translateY(0); }\n  to { opacity: 0; transform: translateY(-20px); }\n}\n\n/* Estilos del tooltip */\n.tooltip-container {\n  position: relative;\n}\n\n.tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 8px 12px;\n  background-color: #333;\n  color: white;\n  border-radius: 6px;\n  font-size: 14px;\n  white-space: nowrap;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.3s, visibility 0.3s;\n}\n\n.tooltip::after {\n  content: '';\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  border: 6px solid transparent;\n  border-top-color: #333;\n}\n\n.tooltip-visible {\n  opacity: 1;\n  visibility: visible;\n}\n\n.action-button:hover .tooltip {\n  opacity: 1;\n  visibility: visible;\n}\n\n/* Añadir estilos para botones deshabilitados */\n.toggle-button:disabled {\n  background-color: #cccccc;\n  color: #666666;\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}