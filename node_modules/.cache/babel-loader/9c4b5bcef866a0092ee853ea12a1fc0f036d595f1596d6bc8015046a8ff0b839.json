{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\n// Importar fetch (no necesitamos axios)\n// Configuración de la API base\nconst API_URL = process.env.VUE_APP_API_URL || 'http://localhost:3000/api';\n\n// Variables para el usuario actual y token\nlet currentUser = null;\nlet authToken = localStorage.getItem('auth_token') || null;\n\n/**\r\n * Configura el token de autorización para las solicitudes API\r\n * @param {string} token - Token JWT\r\n */\nfunction setAuthToken(token) {\n  if (token) {\n    localStorage.setItem('auth_token', token);\n    authToken = token;\n  } else {\n    localStorage.removeItem('auth_token');\n    authToken = null;\n  }\n}\n\n/**\r\n * Función para iniciar sesión con la API\r\n * @param {string} email - Correo electrónico del usuario\r\n * @param {string} password - Contraseña del usuario\r\n * @returns {Promise<Object>} - Datos del usuario autenticado\r\n */\nasync function login(email, password) {\n  console.log(\"Intentando iniciar sesión como:\", email);\n  console.log(\"URL de la API:\", API_URL);\n  try {\n    // Implementación alternativa para desarrollo (hardcoded usuarios)\n    // Esto se ejecutará solo si la llamada fetch falla debido a CORS\n    try {\n      // Usar fetch con modo 'no-cors' como prueba\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        mode: 'cors',\n        // Intentar con cors primero\n        credentials: 'include' // Incluir cookies si es necesario\n      });\n      console.log(\"Status de respuesta:\", response.status);\n\n      // Para depuración, obtener el texto completo de la respuesta\n      const responseText = await response.text();\n      console.log(\"Respuesta recibida:\", responseText);\n\n      // Intentar parsear como JSON\n      let data;\n      try {\n        data = JSON.parse(responseText);\n      } catch (parseError) {\n        console.error(\"Error al parsear respuesta JSON:\", parseError);\n        throw new Error(`El servidor devolvió una respuesta inválida. Status: ${response.status}`);\n      }\n      if (!response.ok) {\n        throw new Error(data.message || `Error en la solicitud: ${response.status}`);\n      }\n\n      // Extraer usuario y token de la respuesta\n      const {\n        usuario,\n        token\n      } = data;\n\n      // Almacenar token\n      setAuthToken(token);\n\n      // Guardar usuario en memoria y localStorage\n      currentUser = usuario;\n      localStorage.setItem('current_user', JSON.stringify(usuario));\n      return usuario;\n    } catch (fetchError) {\n      console.warn(\"Error en fetch, usando fallback:\", fetchError);\n\n      // FALLBACK: Usuarios predefinidos para poder acceder si el backend no está disponible\n      const predefinedUsers = [{\n        id: 1,\n        email: 'superadmin@gmail.com',\n        password: 'SuperAdmin2023',\n        nombre: 'Super Administrador',\n        roles: ['Superadministrador']\n      }, {\n        id: 2,\n        email: 'admin@example.com',\n        password: 'Admin2023',\n        nombre: 'Administrador',\n        roles: ['Administrador']\n      }, {\n        id: 3,\n        email: 'admin',\n        password: 'admin',\n        nombre: 'Super Admin',\n        roles: ['Administrador', 'Superadministrador']\n      }];\n      const user = predefinedUsers.find(u => u.email === email && u.password === password);\n      if (!user) {\n        throw new Error('Credenciales incorrectas');\n      }\n\n      // Generar un token simulado\n      const simulatedToken = btoa(JSON.stringify({\n        id: user.id,\n        email: user.email\n      }));\n\n      // Guardar en localStorage\n      setAuthToken(simulatedToken);\n      currentUser = {\n        ...user,\n        password: undefined\n      };\n      localStorage.setItem('current_user', JSON.stringify(currentUser));\n      console.log(\"Login con credenciales locales exitoso\");\n      return currentUser;\n    }\n  } catch (error) {\n    console.error(\"Error en login:\", error);\n    throw error;\n  }\n}\n\n/**\r\n * Cierra la sesión del usuario\r\n */\nfunction logout() {\n  currentUser = null;\n  localStorage.removeItem('auth_token');\n  localStorage.removeItem('current_user');\n}\n\n/**\r\n * Verifica si el usuario está autenticado\r\n * @returns {boolean} - Verdadero si hay un usuario autenticado\r\n */\nfunction isAuthenticated() {\n  if (!currentUser && localStorage.getItem('auth_token')) {\n    try {\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\n    } catch (e) {\n      console.error('Error al cargar usuario desde localStorage:', e);\n    }\n  }\n  return !!currentUser;\n}\n\n/**\r\n * Obtiene el usuario actual\r\n * @returns {Object|null} - Usuario actual o null\r\n */\nfunction getCurrentUser() {\n  if (!currentUser && localStorage.getItem('auth_token')) {\n    try {\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\n    } catch (e) {\n      console.error('Error al cargar usuario desde localStorage:', e);\n    }\n  }\n  return currentUser;\n}\n\n/**\r\n * Verifica si el usuario tiene un rol específico\r\n * @param {string} roleName - Nombre del rol a verificar\r\n * @returns {boolean} - Verdadero si el usuario tiene el rol\r\n */\nfunction hasRole(roleName) {\n  const user = getCurrentUser();\n  if (!user || !user.roles) {\n    return false;\n  }\n  return Array.isArray(user.roles) ? user.roles.includes(roleName) : user.roles === roleName;\n}\nexport { login, logout, isAuthenticated, hasRole, getCurrentUser };\nexport default {\n  login,\n  logout,\n  isAuthenticated,\n  hasRole,\n  getCurrentUser\n};","map":{"version":3,"names":["API_URL","process","env","VUE_APP_API_URL","currentUser","authToken","localStorage","getItem","setAuthToken","token","setItem","removeItem","login","email","password","console","log","response","fetch","method","headers","body","JSON","stringify","mode","credentials","status","responseText","text","data","parse","parseError","error","Error","ok","message","usuario","fetchError","warn","predefinedUsers","id","nombre","roles","user","find","u","simulatedToken","btoa","undefined","logout","isAuthenticated","e","getCurrentUser","hasRole","roleName","Array","isArray","includes"],"sources":["F:/Driver google/VUE.JS-2/temp/websap/src/services/authService.js"],"sourcesContent":["// Importar fetch (no necesitamos axios)\r\n// Configuración de la API base\r\nconst API_URL = process.env.VUE_APP_API_URL || 'http://localhost:3000/api';\r\n\r\n// Variables para el usuario actual y token\r\nlet currentUser = null;\r\nlet authToken = localStorage.getItem('auth_token') || null;\r\n\r\n/**\r\n * Configura el token de autorización para las solicitudes API\r\n * @param {string} token - Token JWT\r\n */\r\nfunction setAuthToken(token) {\r\n  if (token) {\r\n    localStorage.setItem('auth_token', token);\r\n    authToken = token;\r\n  } else {\r\n    localStorage.removeItem('auth_token');\r\n    authToken = null;\r\n  }\r\n}\r\n\r\n/**\r\n * Función para iniciar sesión con la API\r\n * @param {string} email - Correo electrónico del usuario\r\n * @param {string} password - Contraseña del usuario\r\n * @returns {Promise<Object>} - Datos del usuario autenticado\r\n */\r\nasync function login(email, password) {\r\n  console.log(\"Intentando iniciar sesión como:\", email);\r\n  console.log(\"URL de la API:\", API_URL);\r\n  \r\n  try {\r\n    // Implementación alternativa para desarrollo (hardcoded usuarios)\r\n    // Esto se ejecutará solo si la llamada fetch falla debido a CORS\r\n    try {\r\n      // Usar fetch con modo 'no-cors' como prueba\r\n      const response = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n        mode: 'cors', // Intentar con cors primero\r\n        credentials: 'include' // Incluir cookies si es necesario\r\n      });\r\n      \r\n      console.log(\"Status de respuesta:\", response.status);\r\n      \r\n      // Para depuración, obtener el texto completo de la respuesta\r\n      const responseText = await response.text();\r\n      console.log(\"Respuesta recibida:\", responseText);\r\n      \r\n      // Intentar parsear como JSON\r\n      let data;\r\n      try {\r\n        data = JSON.parse(responseText);\r\n      } catch (parseError) {\r\n        console.error(\"Error al parsear respuesta JSON:\", parseError);\r\n        throw new Error(`El servidor devolvió una respuesta inválida. Status: ${response.status}`);\r\n      }\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || `Error en la solicitud: ${response.status}`);\r\n      }\r\n      \r\n      // Extraer usuario y token de la respuesta\r\n      const { usuario, token } = data;\r\n      \r\n      // Almacenar token\r\n      setAuthToken(token);\r\n      \r\n      // Guardar usuario en memoria y localStorage\r\n      currentUser = usuario;\r\n      localStorage.setItem('current_user', JSON.stringify(usuario));\r\n      \r\n      return usuario;\r\n    } catch (fetchError) {\r\n      console.warn(\"Error en fetch, usando fallback:\", fetchError);\r\n      \r\n      // FALLBACK: Usuarios predefinidos para poder acceder si el backend no está disponible\r\n      const predefinedUsers = [\r\n        {\r\n          id: 1,\r\n          email: 'superadmin@gmail.com',\r\n          password: 'SuperAdmin2023',\r\n          nombre: 'Super Administrador',\r\n          roles: ['Superadministrador']\r\n        },\r\n        {\r\n          id: 2,\r\n          email: 'admin@example.com',\r\n          password: 'Admin2023',\r\n          nombre: 'Administrador',\r\n          roles: ['Administrador']\r\n        },\r\n        {\r\n          id: 3,\r\n          email: 'admin',\r\n          password: 'admin',\r\n          nombre: 'Super Admin',\r\n          roles: ['Administrador', 'Superadministrador']\r\n        }\r\n      ];\r\n      \r\n      const user = predefinedUsers.find(u => u.email === email && u.password === password);\r\n      \r\n      if (!user) {\r\n        throw new Error('Credenciales incorrectas');\r\n      }\r\n      \r\n      // Generar un token simulado\r\n      const simulatedToken = btoa(JSON.stringify({ id: user.id, email: user.email }));\r\n      \r\n      // Guardar en localStorage\r\n      setAuthToken(simulatedToken);\r\n      currentUser = { ...user, password: undefined };\r\n      localStorage.setItem('current_user', JSON.stringify(currentUser));\r\n      \r\n      console.log(\"Login con credenciales locales exitoso\");\r\n      return currentUser;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error en login:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Cierra la sesión del usuario\r\n */\r\nfunction logout() {\r\n  currentUser = null;\r\n  localStorage.removeItem('auth_token');\r\n  localStorage.removeItem('current_user');\r\n}\r\n\r\n/**\r\n * Verifica si el usuario está autenticado\r\n * @returns {boolean} - Verdadero si hay un usuario autenticado\r\n */\r\nfunction isAuthenticated() {\r\n  if (!currentUser && localStorage.getItem('auth_token')) {\r\n    try {\r\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\r\n    } catch (e) {\r\n      console.error('Error al cargar usuario desde localStorage:', e);\r\n    }\r\n  }\r\n  \r\n  return !!currentUser;\r\n}\r\n\r\n/**\r\n * Obtiene el usuario actual\r\n * @returns {Object|null} - Usuario actual o null\r\n */\r\nfunction getCurrentUser() {\r\n  if (!currentUser && localStorage.getItem('auth_token')) {\r\n    try {\r\n      currentUser = JSON.parse(localStorage.getItem('current_user'));\r\n    } catch (e) {\r\n      console.error('Error al cargar usuario desde localStorage:', e);\r\n    }\r\n  }\r\n  \r\n  return currentUser;\r\n}\r\n\r\n/**\r\n * Verifica si el usuario tiene un rol específico\r\n * @param {string} roleName - Nombre del rol a verificar\r\n * @returns {boolean} - Verdadero si el usuario tiene el rol\r\n */\r\nfunction hasRole(roleName) {\r\n  const user = getCurrentUser();\r\n  \r\n  if (!user || !user.roles) {\r\n    return false;\r\n  }\r\n  \r\n  return Array.isArray(user.roles) \r\n    ? user.roles.includes(roleName) \r\n    : user.roles === roleName;\r\n}\r\n\r\nexport {\r\n  login,\r\n  logout,\r\n  isAuthenticated,\r\n  hasRole,\r\n  getCurrentUser\r\n};\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  isAuthenticated,\r\n  hasRole,\r\n  getCurrentUser\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}