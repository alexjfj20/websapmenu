{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { getCurrentUser, logout, hasRole } from '../services/authService';\nimport { alert } from '../services/dialogService';\nimport MenuComponent from '../components/MenuComponent.vue';\nimport AdminReservas from '@/components/admin/AdminReservas.vue';\nexport default {\n  name: 'EmployeeView',\n  components: {\n    MenuComponent,\n    AdminReservas\n  },\n  setup() {\n    const router = useRouter();\n    const currentUser = ref(null);\n    const showReservas = ref(false);\n    onMounted(async () => {\n      try {\n        // Verificar permisos básicos\n        const user = getCurrentUser();\n        if (!user) {\n          await alert('Debe iniciar sesión para acceder a esta sección', {\n            title: 'Acceso Restringido'\n          });\n          router.push('/login');\n          return;\n        }\n        currentUser.value = user;\n      } catch (error) {\n        console.error('Error al cargar la vista de Empleado:', error);\n      }\n    });\n\n    // Cerrar sesión\n    const handleLogout = async () => {\n      try {\n        logout();\n        router.push('/login');\n      } catch (error) {\n        console.error('Error al cerrar sesión:', error);\n        await alert('Error al cerrar sesión. Por favor, intente nuevamente.');\n      }\n    };\n\n    // Función para alternar la visibilidad de las reservas\n    const toggleReservas = () => {\n      showReservas.value = !showReservas.value;\n    };\n    return {\n      currentUser,\n      logout: handleLogout,\n      showReservas,\n      toggleReservas\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","getCurrentUser","logout","hasRole","alert","MenuComponent","AdminReservas","name","components","setup","router","currentUser","showReservas","user","title","push","value","error","console","handleLogout","toggleReservas"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\views\\EmployeeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"employee-container\">\r\n    <header class=\"employee-header\">\r\n      <h1>Sistema de Pedidos</h1>\r\n      <div class=\"user-info\">\r\n        <span>{{ currentUser?.nombre || 'Empleado' }}</span>\r\n        <button @click=\"logout\" class=\"logout-btn\">Cerrar Sesión</button>\r\n      </div>\r\n    </header>\r\n\r\n    <main class=\"content\">\r\n      <div class=\"welcome-message\">\r\n        <h2>Bienvenido, {{ currentUser?.nombre }}</h2>\r\n        <p>Desde aquí puedes crear pedidos y compartirlos por WhatsApp.</p>\r\n      </div>\r\n      \r\n      <!-- Componente MenuComponent con acceso limitado -->\r\n      <MenuComponent :viewOnly=\"false\" />\r\n\r\n      <div class=\"container mt-4\">\r\n        <div class=\"row mb-4\">\r\n          <div class=\"col\">\r\n            <button class=\"btn btn-outline-primary\" @click=\"toggleReservas\">\r\n              {{ showReservas ? 'Ocultar Reservas' : 'Ver Reservas' }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Mostrar el componente AdminReservas condicionalmente -->\r\n        <div v-if=\"showReservas\" class=\"row\">\r\n          <div class=\"col-12\">\r\n            <AdminReservas :readOnly=\"true\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { getCurrentUser, logout, hasRole } from '../services/authService';\r\nimport { alert } from '../services/dialogService';\r\nimport MenuComponent from '../components/MenuComponent.vue';\r\nimport AdminReservas from '@/components/admin/AdminReservas.vue';\r\n\r\nexport default {\r\n  name: 'EmployeeView',\r\n  components: {\r\n    MenuComponent,\r\n    AdminReservas\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const currentUser = ref(null);\r\n    const showReservas = ref(false);\r\n    \r\n    onMounted(async () => {\r\n      try {\r\n        // Verificar permisos básicos\r\n        const user = getCurrentUser();\r\n        \r\n        if (!user) {\r\n          await alert('Debe iniciar sesión para acceder a esta sección', {\r\n            title: 'Acceso Restringido'\r\n          });\r\n          router.push('/login');\r\n          return;\r\n        }\r\n        \r\n        currentUser.value = user;\r\n      } catch (error) {\r\n        console.error('Error al cargar la vista de Empleado:', error);\r\n      }\r\n    });\r\n\r\n    // Cerrar sesión\r\n    const handleLogout = async () => {\r\n      try {\r\n        logout();\r\n        router.push('/login');\r\n      } catch (error) {\r\n        console.error('Error al cerrar sesión:', error);\r\n        await alert('Error al cerrar sesión. Por favor, intente nuevamente.');\r\n      }\r\n    };\r\n\r\n    // Función para alternar la visibilidad de las reservas\r\n    const toggleReservas = () => {\r\n      showReservas.value = !showReservas.value;\r\n    };\r\n\r\n    return {\r\n      currentUser,\r\n      logout: handleLogout,\r\n      showReservas,\r\n      toggleReservas\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.employee-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.employee-header {\r\n  background-color: #1c2b36;\r\n  color: white;\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n.employee-header h1 {\r\n  font-size: 1.5rem;\r\n  margin: 0;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.logout-btn {\r\n  background-color: rgba(255,255,255,0.1);\r\n  color: white;\r\n  border: 1px solid rgba(255,255,255,0.2);\r\n  border-radius: 4px;\r\n  padding: 6px 12px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.logout-btn:hover {\r\n  background-color: rgba(255,255,255,0.2);\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.welcome-message {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.welcome-message h2 {\r\n  color: #4CAF50;\r\n  margin-top: 0;\r\n}\r\n\r\n/* Responsive design */\r\n@media (max-width: 768px) {\r\n  .employee-header {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .user-info {\r\n    width: 100%;\r\n    justify-content: center;\r\n  }\r\n}\r\n</style> "],"mappings":";AAwCA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,cAAc,EAAEC,MAAM,EAAEC,OAAM,QAAS,yBAAyB;AACzE,SAASC,KAAI,QAAS,2BAA2B;AACjD,OAAOC,aAAY,MAAO,iCAAiC;AAC3D,OAAOC,aAAY,MAAO,sCAAsC;AAEhE,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVH,aAAa;IACbC;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIV,SAAS,CAAC,CAAC;IAC1B,MAAMW,WAAU,GAAIb,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMc,YAAW,GAAId,GAAG,CAAC,KAAK,CAAC;IAE/BC,SAAS,CAAC,YAAY;MACpB,IAAI;QACF;QACA,MAAMc,IAAG,GAAIZ,cAAc,CAAC,CAAC;QAE7B,IAAI,CAACY,IAAI,EAAE;UACT,MAAMT,KAAK,CAAC,iDAAiD,EAAE;YAC7DU,KAAK,EAAE;UACT,CAAC,CAAC;UACFJ,MAAM,CAACK,IAAI,CAAC,QAAQ,CAAC;UACrB;QACF;QAEAJ,WAAW,CAACK,KAAI,GAAIH,IAAI;MAC1B,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D;IACF,CAAC,CAAC;;IAEF;IACA,MAAME,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFjB,MAAM,CAAC,CAAC;QACRQ,MAAM,CAACK,IAAI,CAAC,QAAQ,CAAC;MACvB,EAAE,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,MAAMb,KAAK,CAAC,wDAAwD,CAAC;MACvE;IACF,CAAC;;IAED;IACA,MAAMgB,cAAa,GAAIA,CAAA,KAAM;MAC3BR,YAAY,CAACI,KAAI,GAAI,CAACJ,YAAY,CAACI,KAAK;IAC1C,CAAC;IAED,OAAO;MACLL,WAAW;MACXT,MAAM,EAAEiB,YAAY;MACpBP,YAAY;MACZQ;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}