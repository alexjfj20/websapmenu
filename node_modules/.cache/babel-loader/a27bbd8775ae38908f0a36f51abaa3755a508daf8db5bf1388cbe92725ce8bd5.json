{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Utilidad para probar reservas desde la consola del navegador\nimport { simulateWhatsAppReservation } from './whatsappSimulator';\n\n/**\n * Genera una reserva de prueba con datos aleatorios\n * @returns {Object} Datos de reserva aleatorios\n */\nfunction generateRandomReservation() {\n  const nombres = ['Juan Pérez', 'María García', 'Carlos Rodríguez', 'Ana Martínez', 'Luis López', 'Laura Sánchez', 'Pedro González', 'Sofía Fernández'];\n  const telefonos = ['612345678', '623456789', '634567890', '645678901', '656789012', '667890123', '678901234', '689012345'];\n  const fechas = [];\n  const hoy = new Date();\n  for (let i = 1; i <= 7; i++) {\n    const fecha = new Date(hoy);\n    fecha.setDate(hoy.getDate() + i);\n    fechas.push(fecha.toISOString().split('T')[0]);\n  }\n  const horas = ['13:00', '13:30', '14:00', '14:30', '20:00', '20:30', '21:00', '21:30'];\n  const personas = [1, 2, 2, 2, 3, 4, 5, 6, 8];\n  return {\n    nombre: nombres[Math.floor(Math.random() * nombres.length)],\n    telefono: telefonos[Math.floor(Math.random() * telefonos.length)],\n    email: Math.random() > 0.5 ? `cliente${Math.floor(Math.random() * 100)}@example.com` : '',\n    fecha: fechas[Math.floor(Math.random() * fechas.length)],\n    hora: horas[Math.floor(Math.random() * horas.length)],\n    personas: personas[Math.floor(Math.random() * personas.length)],\n    notas: Math.random() > 0.7 ? 'Mesa cerca de la ventana si es posible' : Math.random() > 0.5 ? 'Celebración de cumpleaños' : Math.random() > 0.3 ? 'Alergias: gluten' : ''\n  };\n}\n\n/**\n * Envía una reserva de prueba con datos aleatorios\n */\nfunction sendRandomReservation() {\n  const randomData = generateRandomReservation();\n  console.log('Enviando reserva aleatoria:', randomData);\n  return simulateWhatsAppReservation(randomData);\n}\n\n/**\n * Envía múltiples reservas de prueba\n * @param {number} count - Número de reservas a enviar\n * @param {number} interval - Intervalo entre reservas en ms\n */\nfunction sendMultipleReservations(count = 3, interval = 2000) {\n  console.log(`Enviando ${count} reservas aleatorias con intervalo de ${interval}ms`);\n  let sent = 0;\n  const sendNext = () => {\n    if (sent < count) {\n      sendRandomReservation();\n      sent++;\n      setTimeout(sendNext, interval);\n    } else {\n      console.log(`✅ ${count} reservas enviadas correctamente`);\n    }\n  };\n  sendNext();\n}\n\n// Exponer funciones en window para uso desde la consola\nwindow.testReservations = {\n  random: sendRandomReservation,\n  multiple: sendMultipleReservations,\n  generate: generateRandomReservation\n};\nexport default {\n  sendRandomReservation,\n  sendMultipleReservations,\n  generateRandomReservation\n};","map":{"version":3,"names":["simulateWhatsAppReservation","generateRandomReservation","nombres","telefonos","fechas","hoy","Date","i","fecha","setDate","getDate","push","toISOString","split","horas","personas","nombre","Math","floor","random","length","telefono","email","hora","notas","sendRandomReservation","randomData","console","log","sendMultipleReservations","count","interval","sent","sendNext","setTimeout","window","testReservations","multiple","generate"],"sources":["F:/Driver google/VUE.JS-2/VUE-JS/websap/src/utils/testReservations.js"],"sourcesContent":["// Utilidad para probar reservas desde la consola del navegador\nimport { simulateWhatsAppReservation } from './whatsappSimulator';\n\n/**\n * Genera una reserva de prueba con datos aleatorios\n * @returns {Object} Datos de reserva aleatorios\n */\nfunction generateRandomReservation() {\n  const nombres = [\n    'Juan Pérez', 'María García', 'Carlos Rodríguez', 'Ana Martínez', \n    'Luis López', 'Laura Sánchez', 'Pedro González', 'Sofía Fernández'\n  ];\n  \n  const telefonos = [\n    '612345678', '623456789', '634567890', '645678901', \n    '656789012', '667890123', '678901234', '689012345'\n  ];\n  \n  const fechas = [];\n  const hoy = new Date();\n  for (let i = 1; i <= 7; i++) {\n    const fecha = new Date(hoy);\n    fecha.setDate(hoy.getDate() + i);\n    fechas.push(fecha.toISOString().split('T')[0]);\n  }\n  \n  const horas = ['13:00', '13:30', '14:00', '14:30', '20:00', '20:30', '21:00', '21:30'];\n  const personas = [1, 2, 2, 2, 3, 4, 5, 6, 8];\n  \n  return {\n    nombre: nombres[Math.floor(Math.random() * nombres.length)],\n    telefono: telefonos[Math.floor(Math.random() * telefonos.length)],\n    email: Math.random() > 0.5 ? `cliente${Math.floor(Math.random() * 100)}@example.com` : '',\n    fecha: fechas[Math.floor(Math.random() * fechas.length)],\n    hora: horas[Math.floor(Math.random() * horas.length)],\n    personas: personas[Math.floor(Math.random() * personas.length)],\n    notas: Math.random() > 0.7 ? 'Mesa cerca de la ventana si es posible' : \n           Math.random() > 0.5 ? 'Celebración de cumpleaños' : \n           Math.random() > 0.3 ? 'Alergias: gluten' : ''\n  };\n}\n\n/**\n * Envía una reserva de prueba con datos aleatorios\n */\nfunction sendRandomReservation() {\n  const randomData = generateRandomReservation();\n  console.log('Enviando reserva aleatoria:', randomData);\n  return simulateWhatsAppReservation(randomData);\n}\n\n/**\n * Envía múltiples reservas de prueba\n * @param {number} count - Número de reservas a enviar\n * @param {number} interval - Intervalo entre reservas en ms\n */\nfunction sendMultipleReservations(count = 3, interval = 2000) {\n  console.log(`Enviando ${count} reservas aleatorias con intervalo de ${interval}ms`);\n  \n  let sent = 0;\n  \n  const sendNext = () => {\n    if (sent < count) {\n      sendRandomReservation();\n      sent++;\n      setTimeout(sendNext, interval);\n    } else {\n      console.log(`✅ ${count} reservas enviadas correctamente`);\n    }\n  };\n  \n  sendNext();\n}\n\n// Exponer funciones en window para uso desde la consola\nwindow.testReservations = {\n  random: sendRandomReservation,\n  multiple: sendMultipleReservations,\n  generate: generateRandomReservation\n};\n\nexport default {\n  sendRandomReservation,\n  sendMultipleReservations,\n  generateRandomReservation\n};\n"],"mappings":";AAAA;AACA,SAASA,2BAA2B,QAAQ,qBAAqB;;AAEjE;AACA;AACA;AACA;AACA,SAASC,yBAAyBA,CAAA,EAAG;EACnC,MAAMC,OAAO,GAAG,CACd,YAAY,EAAE,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAChE,YAAY,EAAE,eAAe,EAAE,gBAAgB,EAAE,iBAAiB,CACnE;EAED,MAAMC,SAAS,GAAG,CAChB,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAClD,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,CACnD;EAED,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAACD,GAAG,CAAC;IAC3BG,KAAK,CAACC,OAAO,CAACJ,GAAG,CAACK,OAAO,CAAC,CAAC,GAAGH,CAAC,CAAC;IAChCH,MAAM,CAACO,IAAI,CAACH,KAAK,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD;EAEA,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACtF,MAAMC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE5C,OAAO;IACLC,MAAM,EAAEd,OAAO,CAACe,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGjB,OAAO,CAACkB,MAAM,CAAC,CAAC;IAC3DC,QAAQ,EAAElB,SAAS,CAACc,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGhB,SAAS,CAACiB,MAAM,CAAC,CAAC;IACjEE,KAAK,EAAEL,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,UAAUF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,cAAc,GAAG,EAAE;IACzFX,KAAK,EAAEJ,MAAM,CAACa,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGf,MAAM,CAACgB,MAAM,CAAC,CAAC;IACxDG,IAAI,EAAET,KAAK,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,KAAK,CAACM,MAAM,CAAC,CAAC;IACrDL,QAAQ,EAAEA,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,QAAQ,CAACK,MAAM,CAAC,CAAC;IAC/DI,KAAK,EAAEP,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,wCAAwC,GAC9DF,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,2BAA2B,GACjDF,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,kBAAkB,GAAG;EACpD,CAAC;AACH;;AAEA;AACA;AACA;AACA,SAASM,qBAAqBA,CAAA,EAAG;EAC/B,MAAMC,UAAU,GAAGzB,yBAAyB,CAAC,CAAC;EAC9C0B,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,UAAU,CAAC;EACtD,OAAO1B,2BAA2B,CAAC0B,UAAU,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASG,wBAAwBA,CAACC,KAAK,GAAG,CAAC,EAAEC,QAAQ,GAAG,IAAI,EAAE;EAC5DJ,OAAO,CAACC,GAAG,CAAC,YAAYE,KAAK,yCAAyCC,QAAQ,IAAI,CAAC;EAEnF,IAAIC,IAAI,GAAG,CAAC;EAEZ,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAID,IAAI,GAAGF,KAAK,EAAE;MAChBL,qBAAqB,CAAC,CAAC;MACvBO,IAAI,EAAE;MACNE,UAAU,CAACD,QAAQ,EAAEF,QAAQ,CAAC;IAChC,CAAC,MAAM;MACLJ,OAAO,CAACC,GAAG,CAAC,KAAKE,KAAK,kCAAkC,CAAC;IAC3D;EACF,CAAC;EAEDG,QAAQ,CAAC,CAAC;AACZ;;AAEA;AACAE,MAAM,CAACC,gBAAgB,GAAG;EACxBjB,MAAM,EAAEM,qBAAqB;EAC7BY,QAAQ,EAAER,wBAAwB;EAClCS,QAAQ,EAAErC;AACZ,CAAC;AAED,eAAe;EACbwB,qBAAqB;EACrBI,wBAAwB;EACxB5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}