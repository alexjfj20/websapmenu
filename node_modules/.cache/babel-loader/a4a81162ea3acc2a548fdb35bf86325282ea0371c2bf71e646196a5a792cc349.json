{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, createTextVNode as _createTextVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"plato-form-handler\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"actions\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"result-container\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"error-container\"\n};\nconst _hoisted_12 = {\n  class: \"debug-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[18] || (_cache[18] = _createElementVNode(\"h3\", null, \"Depuración de Guardado de Platos\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => $setup.handleSubmit && $setup.handleSubmit(...args), [\"prevent\"])),\n    class: \"debug-form\"\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"name\"\n  }, \"Nombre del Plato *\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.platoData.name = $event),\n    required: \"\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.platoData.name]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"Descripción\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.platoData.description = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.platoData.description]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"price\"\n  }, \"Precio *\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"price\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.platoData.price = $event),\n    min: \"0\",\n    step: \"0.01\",\n    required: \"\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.platoData.price, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"category\"\n  }, \"Categoría\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"category\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.platoData.category = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.platoData.category]])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.platoData.is_available = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $setup.platoData.is_available]]), _cache[13] || (_cache[13] = _createTextVNode(\" Disponible \"))])]), _createElementVNode(\"div\", _hoisted_8, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    for: \"image_url\"\n  }, \"URL de Imagen\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"image_url\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.platoData.image_url = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.platoData.image_url]])]), _createElementVNode(\"div\", _hoisted_9, [_cache[15] || (_cache[15] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Guardar Plato\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $setup.runTest && $setup.runTest(...args)),\n    class: \"btn btn-secondary\"\n  }, \" Ejecutar Prueba \")])], 32 /* NEED_HYDRATION */)]), $setup.lastSavedPlato ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_cache[16] || (_cache[16] = _createElementVNode(\"h4\", null, \"Último Plato Guardado:\", -1 /* HOISTED */)), _createElementVNode(\"pre\", null, _toDisplayString(JSON.stringify($setup.lastSavedPlato, null, 2)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_cache[17] || (_cache[17] = _createElementVNode(\"h4\", null, \"Error:\", -1 /* HOISTED */)), _createElementVNode(\"pre\", null, _toDisplayString($setup.error), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $setup.debugDatabase && $setup.debugDatabase(...args)),\n    class: \"btn btn-info\"\n  }, \" Depurar Base de Datos \")])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$setup","handleSubmit","_hoisted_3","for","type","id","$event","platoData","name","required","_hoisted_4","description","_hoisted_5","price","min","step","number","_hoisted_6","category","_hoisted_7","is_available","_createTextVNode","_hoisted_8","image_url","_hoisted_9","onClick","runTest","lastSavedPlato","_hoisted_10","_toDisplayString","JSON","stringify","_createCommentVNode","error","_hoisted_11","_hoisted_12","debugDatabase"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\PlatoFormHandler.vue"],"sourcesContent":["<template>\r\n  <div class=\"plato-form-handler\">\r\n    <h3>Depuración de Guardado de Platos</h3>\r\n    \r\n    <div class=\"form-container\">\r\n      <form @submit.prevent=\"handleSubmit\" class=\"debug-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Nombre del Plato *</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"name\" \r\n            v-model=\"platoData.name\" \r\n            required\r\n            class=\"form-control\"\r\n          />\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"description\">Descripción</label>\r\n          <textarea \r\n            id=\"description\" \r\n            v-model=\"platoData.description\"\r\n            class=\"form-control\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"price\">Precio *</label>\r\n          <input \r\n            type=\"number\" \r\n            id=\"price\" \r\n            v-model.number=\"platoData.price\" \r\n            min=\"0\" \r\n            step=\"0.01\" \r\n            required\r\n            class=\"form-control\"\r\n          />\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"category\">Categoría</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"category\" \r\n            v-model=\"platoData.category\"\r\n            class=\"form-control\"\r\n          />\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label>\r\n            <input \r\n              type=\"checkbox\" \r\n              v-model=\"platoData.is_available\"\r\n            />\r\n            Disponible\r\n          </label>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"image_url\">URL de Imagen</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"image_url\" \r\n            v-model=\"platoData.image_url\"\r\n            class=\"form-control\"\r\n          />\r\n        </div>\r\n        \r\n        <div class=\"actions\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Guardar Plato</button>\r\n          <button type=\"button\" @click=\"runTest\" class=\"btn btn-secondary\">\r\n            Ejecutar Prueba\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    \r\n    <div v-if=\"lastSavedPlato\" class=\"result-container\">\r\n      <h4>Último Plato Guardado:</h4>\r\n      <pre>{{ JSON.stringify(lastSavedPlato, null, 2) }}</pre>\r\n    </div>\r\n    \r\n    <div v-if=\"error\" class=\"error-container\">\r\n      <h4>Error:</h4>\r\n      <pre>{{ error }}</pre>\r\n    </div>\r\n    \r\n    <div class=\"debug-actions\">\r\n      <button @click=\"debugDatabase\" class=\"btn btn-info\">\r\n        Depurar Base de Datos\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { createPlato, debugIndexedDB, testCreatePlato } from '@/services/indexedDBService';\r\n\r\nexport default {\r\n  name: 'PlatoFormHandler',\r\n  \r\n  setup() {\r\n    const platoData = ref({\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      category: '',\r\n      is_available: true,\r\n      image_url: ''\r\n    });\r\n    \r\n    const lastSavedPlato = ref(null);\r\n    const error = ref(null);\r\n    \r\n    const resetForm = () => {\r\n      platoData.value = {\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        category: '',\r\n        is_available: true,\r\n        image_url: ''\r\n      };\r\n    };\r\n    \r\n    const handleSubmit = async () => {\r\n      try {\r\n        error.value = null;\r\n        console.log('Enviando formulario con datos:', platoData.value);\r\n        \r\n        if (!platoData.value.name || platoData.value.name.trim() === '') {\r\n          throw new Error('El nombre del plato es obligatorio');\r\n        }\r\n        \r\n        if (isNaN(platoData.value.price) || platoData.value.price < 0) {\r\n          throw new Error('El precio debe ser un número válido mayor o igual a cero');\r\n        }\r\n        \r\n        // Llamamos directamente a createPlato con los datos del formulario\r\n        console.log('Llamando a createPlato desde el formulario');\r\n        const savedPlato = await createPlato({\r\n          ...platoData.value,\r\n          price: Number(platoData.value.price) // Asegurar que sea un número\r\n        });\r\n        \r\n        console.log('Plato guardado correctamente:', savedPlato);\r\n        lastSavedPlato.value = savedPlato;\r\n        resetForm();\r\n        \r\n        // Mostrar mensaje de éxito\r\n        alert('¡Plato guardado exitosamente!');\r\n      } catch (err) {\r\n        console.error('Error al guardar el plato:', err);\r\n        error.value = err.message || 'Error desconocido al guardar el plato';\r\n      }\r\n    };\r\n    \r\n    const runTest = async () => {\r\n      try {\r\n        error.value = null;\r\n        console.log('Ejecutando prueba de guardado...');\r\n        const testResult = await testCreatePlato();\r\n        lastSavedPlato.value = testResult;\r\n        console.log('Prueba completada exitosamente');\r\n      } catch (err) {\r\n        console.error('Error en la prueba:', err);\r\n        error.value = err.message || 'Error desconocido en la prueba';\r\n      }\r\n    };\r\n    \r\n    const debugDatabase = async () => {\r\n      try {\r\n        error.value = null;\r\n        console.log('Iniciando depuración de la base de datos...');\r\n        const debugResult = await debugIndexedDB();\r\n        console.log('Depuración completada:', debugResult);\r\n        alert(`Platos en la BD: ${debugResult.platos.length}, Cola: ${debugResult.syncQueue.length}`);\r\n      } catch (err) {\r\n        console.error('Error en depuración:', err);\r\n        error.value = err.message || 'Error desconocido en depuración';\r\n      }\r\n    };\r\n    \r\n    return {\r\n      platoData,\r\n      lastSavedPlato,\r\n      error,\r\n      handleSubmit,\r\n      runTest,\r\n      debugDatabase\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.plato-form-handler {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.debug-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\n.form-control {\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.btn {\r\n  padding: 8px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.btn-info {\r\n  background-color: #9C27B0;\r\n  color: white;\r\n}\r\n\r\n.result-container, .error-container {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.result-container {\r\n  background-color: #E8F5E9;\r\n  border: 1px solid #4CAF50;\r\n}\r\n\r\n.error-container {\r\n  background-color: #FFEBEE;\r\n  border: 1px solid #F44336;\r\n}\r\n\r\npre {\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  background-color: #f5f5f5;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.debug-actions {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}