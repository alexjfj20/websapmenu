{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { getCurrentUser, logout, hasRole } from '../services/authService';\nimport { alert } from '../services/dialogService';\nimport MenuComponent from '../components/MenuComponent.vue';\nimport AdminReservas from '@/components/admin/AdminReservas.vue';\nimport eventBus from '@/utils/eventBus';\nexport default {\n  name: 'EmployeeView',\n  components: {\n    MenuComponent,\n    AdminReservas\n  },\n  setup() {\n    const router = useRouter();\n    const user = ref(null);\n    const showReservas = ref(false);\n\n    // Referencia al componente AdminReservas\n    const adminReservasRef = ref(null);\n    onMounted(() => {\n      // Verificar si el usuario está autenticado\n      const currentUser = getCurrentUser();\n      if (!currentUser) {\n        alert('Debe iniciar sesión para acceder a esta página');\n        router.push('/login');\n        return;\n      }\n      user.value = currentUser;\n\n      // Escuchar eventos de nueva reserva\n      const handleNuevaReserva = () => {\n        if (showReservas.value && adminReservasRef.value) {\n          adminReservasRef.value.refreshReservations();\n        }\n      };\n      eventBus.on('nueva-reserva', handleNuevaReserva);\n    });\n    onUnmounted(() => {\n      eventBus.off('nueva-reserva', handleNuevaReserva);\n    });\n\n    // Mantuvimos esta función aunque eliminamos el botón de cerrar sesión\n    // para preservar cualquier funcionalidad que pueda depender de ella\n    const handleLogout = () => {\n      logout();\n      router.push('/login');\n    };\n\n    // Función para alternar la visibilidad de las reservas\n    const toggleReservas = () => {\n      showReservas.value = !showReservas.value;\n    };\n    return {\n      user,\n      handleLogout,\n      showReservas,\n      toggleReservas,\n      adminReservasRef\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","useRouter","getCurrentUser","logout","hasRole","alert","MenuComponent","AdminReservas","eventBus","name","components","setup","router","user","showReservas","adminReservasRef","currentUser","push","value","handleNuevaReserva","refreshReservations","on","off","handleLogout","toggleReservas"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\views\\EmployeeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"employee-view\">\r\n    <div class=\"container mt-4\">\r\n      <div class=\"row mb-4\">\r\n        <div class=\"col\">\r\n          <h2>Bienvenido, Empleado</h2>\r\n          <p class=\"lead\">Desde aquí puedes ver productos y realizar pedidos.</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"row mb-4\">\r\n        <div class=\"col\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header bg-success text-white\">\r\n              <h4 class=\"mb-0\">Gestión de Reservas</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p>Visualiza las reservas actuales del restaurante.</p>\r\n              <button class=\"btn btn-primary\" @click=\"toggleReservas\">\r\n                {{ showReservas ? 'Ocultar Reservas' : 'Ver Reservas' }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div v-if=\"showReservas\" class=\"row mb-4\">\r\n        <div class=\"col-12\">\r\n          <AdminReservas :readOnly=\"true\" ref=\"adminReservasRef\" />\r\n        </div>\r\n      </div>\r\n      \r\n      <MenuComponent :restrictedAccess=\"true\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { getCurrentUser, logout, hasRole } from '../services/authService';\r\nimport { alert } from '../services/dialogService';\r\nimport MenuComponent from '../components/MenuComponent.vue';\r\nimport AdminReservas from '@/components/admin/AdminReservas.vue';\r\nimport eventBus from '@/utils/eventBus';\r\n\r\nexport default {\r\n  name: 'EmployeeView',\r\n  components: {\r\n    MenuComponent,\r\n    AdminReservas\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const user = ref(null);\r\n    const showReservas = ref(false);\r\n    \r\n    // Referencia al componente AdminReservas\r\n    const adminReservasRef = ref(null);\r\n    \r\n    onMounted(() => {\r\n      // Verificar si el usuario está autenticado\r\n      const currentUser = getCurrentUser();\r\n      if (!currentUser) {\r\n        alert('Debe iniciar sesión para acceder a esta página');\r\n        router.push('/login');\r\n        return;\r\n      }\r\n      user.value = currentUser;\r\n      \r\n      // Escuchar eventos de nueva reserva\r\n      const handleNuevaReserva = () => {\r\n        if (showReservas.value && adminReservasRef.value) {\r\n          adminReservasRef.value.refreshReservations();\r\n        }\r\n      };\r\n      \r\n      eventBus.on('nueva-reserva', handleNuevaReserva);\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      eventBus.off('nueva-reserva', handleNuevaReserva);\r\n    });\r\n\r\n    // Mantuvimos esta función aunque eliminamos el botón de cerrar sesión\r\n    // para preservar cualquier funcionalidad que pueda depender de ella\r\n    const handleLogout = () => {\r\n      logout();\r\n      router.push('/login');\r\n    };\r\n\r\n    // Función para alternar la visibilidad de las reservas\r\n    const toggleReservas = () => {\r\n      showReservas.value = !showReservas.value;\r\n    };\r\n\r\n    return {\r\n      user,\r\n      handleLogout,\r\n      showReservas,\r\n      toggleReservas,\r\n      adminReservasRef\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.employee-view {\r\n  min-height: 100vh;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.card-header {\r\n  border-bottom: 0;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-body .btn {\r\n  margin-top: 10px;\r\n}\r\n</style> "],"mappings":";AAsCA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAK;AACjD,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,cAAc,EAAEC,MAAM,EAAEC,OAAM,QAAS,yBAAyB;AACzE,SAASC,KAAI,QAAS,2BAA2B;AACjD,OAAOC,aAAY,MAAO,iCAAiC;AAC3D,OAAOC,aAAY,MAAO,sCAAsC;AAChE,OAAOC,QAAO,MAAO,kBAAkB;AAEvC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVJ,aAAa;IACbC;EACF,CAAC;EACDI,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIX,SAAS,CAAC,CAAC;IAC1B,MAAMY,IAAG,GAAIf,GAAG,CAAC,IAAI,CAAC;IACtB,MAAMgB,YAAW,GAAIhB,GAAG,CAAC,KAAK,CAAC;;IAE/B;IACA,MAAMiB,gBAAe,GAAIjB,GAAG,CAAC,IAAI,CAAC;IAElCC,SAAS,CAAC,MAAM;MACd;MACA,MAAMiB,WAAU,GAAId,cAAc,CAAC,CAAC;MACpC,IAAI,CAACc,WAAW,EAAE;QAChBX,KAAK,CAAC,gDAAgD,CAAC;QACvDO,MAAM,CAACK,IAAI,CAAC,QAAQ,CAAC;QACrB;MACF;MACAJ,IAAI,CAACK,KAAI,GAAIF,WAAW;;MAExB;MACA,MAAMG,kBAAiB,GAAIA,CAAA,KAAM;QAC/B,IAAIL,YAAY,CAACI,KAAI,IAAKH,gBAAgB,CAACG,KAAK,EAAE;UAChDH,gBAAgB,CAACG,KAAK,CAACE,mBAAmB,CAAC,CAAC;QAC9C;MACF,CAAC;MAEDZ,QAAQ,CAACa,EAAE,CAAC,eAAe,EAAEF,kBAAkB,CAAC;IAClD,CAAC,CAAC;IAEFnB,WAAW,CAAC,MAAM;MAChBQ,QAAQ,CAACc,GAAG,CAAC,eAAe,EAAEH,kBAAkB,CAAC;IACnD,CAAC,CAAC;;IAEF;IACA;IACA,MAAMI,YAAW,GAAIA,CAAA,KAAM;MACzBpB,MAAM,CAAC,CAAC;MACRS,MAAM,CAACK,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;;IAED;IACA,MAAMO,cAAa,GAAIA,CAAA,KAAM;MAC3BV,YAAY,CAACI,KAAI,GAAI,CAACJ,YAAY,CAACI,KAAK;IAC1C,CAAC;IAED,OAAO;MACLL,IAAI;MACJU,YAAY;MACZT,YAAY;MACZU,cAAc;MACdT;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}