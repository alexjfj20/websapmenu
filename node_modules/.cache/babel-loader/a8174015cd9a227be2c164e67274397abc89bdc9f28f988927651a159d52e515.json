{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { runAddInformacionPagoMigration, syncBusinessInfoWithBackend, syncAllBusinessInfo } from '../../utils/syncPaymentInfo';\nimport { getBusinessInfo } from '../../services/storageService';\nexport default {\n  name: 'SyncBusinessInfo',\n  setup() {\n    const loading = ref(false);\n    const success = ref(false);\n    const message = ref('');\n    const businessInfo = ref(null);\n\n    // Cargar la información del negocio al montar el componente\n    onMounted(async () => {\n      try {\n        businessInfo.value = await getBusinessInfo();\n      } catch (error) {\n        console.error('Error al cargar información del negocio:', error);\n        message.value = 'Error al cargar información del negocio';\n        success.value = false;\n      }\n    });\n\n    // Ejecutar la migración para añadir la columna informacion_pago\n    const runMigration = async () => {\n      try {\n        loading.value = true;\n        message.value = 'Ejecutando migración...';\n        const result = await runAddInformacionPagoMigration();\n        success.value = result.success;\n        message.value = result.message;\n      } catch (error) {\n        console.error('Error al ejecutar migración:', error);\n        success.value = false;\n        message.value = error.message || 'Error al ejecutar migración';\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Sincronizar la información del negocio con el backend\n    const syncBusinessInfo = async () => {\n      try {\n        loading.value = true;\n        message.value = 'Sincronizando información...';\n        const result = await syncBusinessInfoWithBackend();\n        success.value = result.success;\n        message.value = result.message;\n\n        // Actualizar la información del negocio\n        businessInfo.value = await getBusinessInfo();\n      } catch (error) {\n        console.error('Error al sincronizar información:', error);\n        success.value = false;\n        message.value = error.message || 'Error al sincronizar información';\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Ejecutar la migración y sincronizar la información\n    const syncAll = async () => {\n      try {\n        loading.value = true;\n        message.value = 'Sincronizando todo...';\n        const result = await syncAllBusinessInfo();\n        success.value = result.success;\n        message.value = result.message;\n\n        // Actualizar la información del negocio\n        businessInfo.value = await getBusinessInfo();\n      } catch (error) {\n        console.error('Error al sincronizar todo:', error);\n        success.value = false;\n        message.value = error.message || 'Error al sincronizar todo';\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      loading,\n      success,\n      message,\n      businessInfo,\n      runMigration,\n      syncBusinessInfo,\n      syncAll\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","runAddInformacionPagoMigration","syncBusinessInfoWithBackend","syncAllBusinessInfo","getBusinessInfo","name","setup","loading","success","message","businessInfo","value","error","console","runMigration","result","syncBusinessInfo","syncAll"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\admin\\SyncBusinessInfo.vue"],"sourcesContent":["<template>\n  <div class=\"sync-business-info\">\n    <h2>Sincronización de Información del Negocio</h2>\n    \n    <div class=\"alert\" :class=\"{ 'alert-success': success, 'alert-danger': !success && message }\">\n      {{ message }}\n    </div>\n    \n    <div class=\"actions\">\n      <button @click=\"runMigration\" class=\"btn btn-primary\" :disabled=\"loading\">\n        <span v-if=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n        Ejecutar Migración\n      </button>\n      \n      <button @click=\"syncBusinessInfo\" class=\"btn btn-success\" :disabled=\"loading\">\n        <span v-if=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n        Sincronizar Información\n      </button>\n      \n      <button @click=\"syncAll\" class=\"btn btn-info\" :disabled=\"loading\">\n        <span v-if=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n        Sincronizar Todo\n      </button>\n    </div>\n    \n    <div class=\"current-info\" v-if=\"businessInfo\">\n      <h3>Información Actual</h3>\n      <pre>{{ JSON.stringify(businessInfo, null, 2) }}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { runAddInformacionPagoMigration, syncBusinessInfoWithBackend, syncAllBusinessInfo } from '../../utils/syncPaymentInfo';\nimport { getBusinessInfo } from '../../services/storageService';\n\nexport default {\n  name: 'SyncBusinessInfo',\n  \n  setup() {\n    const loading = ref(false);\n    const success = ref(false);\n    const message = ref('');\n    const businessInfo = ref(null);\n    \n    // Cargar la información del negocio al montar el componente\n    onMounted(async () => {\n      try {\n        businessInfo.value = await getBusinessInfo();\n      } catch (error) {\n        console.error('Error al cargar información del negocio:', error);\n        message.value = 'Error al cargar información del negocio';\n        success.value = false;\n      }\n    });\n    \n    // Ejecutar la migración para añadir la columna informacion_pago\n    const runMigration = async () => {\n      try {\n        loading.value = true;\n        message.value = 'Ejecutando migración...';\n        \n        const result = await runAddInformacionPagoMigration();\n        \n        success.value = result.success;\n        message.value = result.message;\n      } catch (error) {\n        console.error('Error al ejecutar migración:', error);\n        success.value = false;\n        message.value = error.message || 'Error al ejecutar migración';\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Sincronizar la información del negocio con el backend\n    const syncBusinessInfo = async () => {\n      try {\n        loading.value = true;\n        message.value = 'Sincronizando información...';\n        \n        const result = await syncBusinessInfoWithBackend();\n        \n        success.value = result.success;\n        message.value = result.message;\n        \n        // Actualizar la información del negocio\n        businessInfo.value = await getBusinessInfo();\n      } catch (error) {\n        console.error('Error al sincronizar información:', error);\n        success.value = false;\n        message.value = error.message || 'Error al sincronizar información';\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Ejecutar la migración y sincronizar la información\n    const syncAll = async () => {\n      try {\n        loading.value = true;\n        message.value = 'Sincronizando todo...';\n        \n        const result = await syncAllBusinessInfo();\n        \n        success.value = result.success;\n        message.value = result.message;\n        \n        // Actualizar la información del negocio\n        businessInfo.value = await getBusinessInfo();\n      } catch (error) {\n        console.error('Error al sincronizar todo:', error);\n        success.value = false;\n        message.value = error.message || 'Error al sincronizar todo';\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    return {\n      loading,\n      success,\n      message,\n      businessInfo,\n      runMigration,\n      syncBusinessInfo,\n      syncAll\n    };\n  }\n};\n</script>\n\n<style scoped>\n.sync-business-info {\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 5px;\n  margin-bottom: 20px;\n}\n\n.alert {\n  padding: 10px;\n  margin: 10px 0;\n  border-radius: 5px;\n}\n\n.alert-success {\n  background-color: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}\n\n.alert-danger {\n  background-color: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n}\n\n.actions {\n  display: flex;\n  gap: 10px;\n  margin: 20px 0;\n}\n\n.current-info {\n  margin-top: 20px;\n  background-color: #fff;\n  padding: 15px;\n  border-radius: 5px;\n  border: 1px solid #dee2e6;\n}\n\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  background-color: #f5f5f5;\n  padding: 10px;\n  border-radius: 5px;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n}\n\n.btn-success {\n  background-color: #28a745;\n  color: white;\n}\n\n.btn-info {\n  background-color: #17a2b8;\n  color: white;\n}\n\n.btn:disabled {\n  opacity: 0.65;\n  cursor: not-allowed;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}