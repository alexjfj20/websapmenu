{"ast":null,"code":"import { onMounted, onUnmounted, ref } from 'vue';\nimport { saveWhatsAppReservation } from '../services/reservaService';\nimport eventBus from '../utils/eventBus';\nexport default {\n  __name: 'WhatsAppReservationHandler',\n  setup(__props, {\n    expose: __expose\n  }) {\n    const isListening = ref(false);\n    const lastProcessedMessageId = ref(null);\n\n    // Función para procesar mensajes de WhatsApp\n    const processWhatsAppMessage = async event => {\n      // Solo procesamos mensajes que vengan de la ventana principal o del mismo origen\n      if (event.source !== window && event.source !== window.parent) return;\n      try {\n        // Verificar que el mensaje sea de tipo reserva de WhatsApp\n        if (event.data && event.data.type === 'whatsapp_reservation') {\n          console.log(' Recibido mensaje de reserva desde WhatsApp:', event.data);\n\n          // Evitar procesar el mismo mensaje dos veces\n          if (lastProcessedMessageId.value === JSON.stringify(event.data)) {\n            console.log(' Mensaje ya procesado, ignorando duplicado');\n            return;\n          }\n          lastProcessedMessageId.value = JSON.stringify(event.data);\n\n          // Guardar la reserva usando el servicio\n          const result = await saveWhatsAppReservation(event.data.reservation);\n          if (result.success) {\n            console.log(' Reserva de WhatsApp guardada correctamente:', result.reservation);\n\n            // Notificar a la ventana que envió el mensaje\n            if (event.source && event.source.postMessage) {\n              event.source.postMessage({\n                type: 'whatsapp_reservation_response',\n                success: true,\n                message: 'Reserva recibida correctamente'\n              }, '*');\n            }\n          } else {\n            throw new Error(result.error);\n          }\n        }\n      } catch (error) {\n        console.error(' Error al procesar mensaje de WhatsApp:', error);\n\n        // Notificar error a la ventana que envió el mensaje\n        if (event.source && event.source.postMessage) {\n          event.source.postMessage({\n            type: 'whatsapp_reservation_response',\n            success: false,\n            message: 'Error al procesar la reserva: ' + error.message\n          }, '*');\n        }\n      }\n    };\n\n    // Configurar el listener de mensajes al montar el componente\n    onMounted(() => {\n      if (!isListening.value) {\n        window.addEventListener('message', processWhatsAppMessage);\n        isListening.value = true;\n        console.log(' WhatsAppReservationHandler montado y escuchando mensajes');\n\n        // Exponer la función de simulación en window para pruebas\n        window.testWhatsAppReservation = simulateWhatsAppReservation;\n      }\n    });\n\n    // Limpiar el listener al desmontar el componente\n    onUnmounted(() => {\n      if (isListening.value) {\n        window.removeEventListener('message', processWhatsAppMessage);\n        isListening.value = false;\n        console.log(' WhatsAppReservationHandler desmontado');\n\n        // Eliminar la función de simulación\n        if (window.testWhatsAppReservation) {\n          delete window.testWhatsAppReservation;\n        }\n      }\n    });\n\n    // Función para simular una reserva de WhatsApp (para pruebas)\n    const simulateWhatsAppReservation = async (customData = {}) => {\n      try {\n        console.log(' Simulando reserva de WhatsApp con datos:', customData);\n\n        // Datos por defecto para la reserva\n        const defaultData = {\n          nombre: 'Cliente de Prueba WhatsApp',\n          telefono: '612345678',\n          email: 'whatsapp@example.com',\n          fecha: new Date().toISOString().split('T')[0],\n          // Hoy\n          hora: '20:00',\n          personas: 3,\n          notas: 'Reserva de prueba desde WhatsApp'\n        };\n\n        // Combinar datos por defecto con datos personalizados\n        const whatsappData = {\n          ...defaultData,\n          ...customData\n        };\n\n        // Crear un evento similar al que enviaría WhatsApp\n        const whatsappEvent = {\n          data: {\n            type: 'whatsapp_reservation',\n            reservation: whatsappData,\n            timestamp: Date.now()\n          },\n          source: window\n        };\n\n        // Procesar el evento simulado\n        await processWhatsAppMessage(whatsappEvent);\n        return true;\n      } catch (error) {\n        console.error(' Error al simular reserva de WhatsApp:', error);\n        return false;\n      }\n    };\n\n    // Exponer la función de simulación para pruebas\n    __expose({\n      simulateWhatsAppReservation\n    });\n    const __returned__ = {\n      isListening,\n      lastProcessedMessageId,\n      processWhatsAppMessage,\n      simulateWhatsAppReservation,\n      onMounted,\n      onUnmounted,\n      ref,\n      get saveWhatsAppReservation() {\n        return saveWhatsAppReservation;\n      },\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","onUnmounted","ref","saveWhatsAppReservation","eventBus","isListening","lastProcessedMessageId","processWhatsAppMessage","event","source","window","parent","data","type","console","log","value","JSON","stringify","result","reservation","success","postMessage","message","Error","error","addEventListener","testWhatsAppReservation","simulateWhatsAppReservation","removeEventListener","customData","defaultData","nombre","telefono","email","fecha","Date","toISOString","split","hora","personas","notas","whatsappData","whatsappEvent","timestamp","now","__expose"],"sources":["F:/Driver google/VUE.JS-2/VUE-JS/websap/src/components/WhatsAppReservationHandler.vue"],"sourcesContent":["<template>\n  <!-- Este componente no tiene representación visual, solo maneja la lógica -->\n  <div style=\"display: none;\">\n    <p>Manejador de reservas de WhatsApp activo</p>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, onUnmounted, ref } from 'vue';\nimport { saveWhatsAppReservation } from '../services/reservaService';\nimport eventBus from '../utils/eventBus';\n\nconst isListening = ref(false);\nconst lastProcessedMessageId = ref(null);\n\n// Función para procesar mensajes de WhatsApp\nconst processWhatsAppMessage = async (event) => {\n  // Solo procesamos mensajes que vengan de la ventana principal o del mismo origen\n  if (event.source !== window && event.source !== window.parent) return;\n  \n  try {\n    // Verificar que el mensaje sea de tipo reserva de WhatsApp\n    if (event.data && event.data.type === 'whatsapp_reservation') {\n      console.log(' Recibido mensaje de reserva desde WhatsApp:', event.data);\n      \n      // Evitar procesar el mismo mensaje dos veces\n      if (lastProcessedMessageId.value === JSON.stringify(event.data)) {\n        console.log(' Mensaje ya procesado, ignorando duplicado');\n        return;\n      }\n      \n      lastProcessedMessageId.value = JSON.stringify(event.data);\n      \n      // Guardar la reserva usando el servicio\n      const result = await saveWhatsAppReservation(event.data.reservation);\n      \n      if (result.success) {\n        console.log(' Reserva de WhatsApp guardada correctamente:', result.reservation);\n        \n        // Notificar a la ventana que envió el mensaje\n        if (event.source && event.source.postMessage) {\n          event.source.postMessage({\n            type: 'whatsapp_reservation_response',\n            success: true,\n            message: 'Reserva recibida correctamente'\n          }, '*');\n        }\n      } else {\n        throw new Error(result.error);\n      }\n    }\n  } catch (error) {\n    console.error(' Error al procesar mensaje de WhatsApp:', error);\n    \n    // Notificar error a la ventana que envió el mensaje\n    if (event.source && event.source.postMessage) {\n      event.source.postMessage({\n        type: 'whatsapp_reservation_response',\n        success: false,\n        message: 'Error al procesar la reserva: ' + error.message\n      }, '*');\n    }\n  }\n};\n\n// Configurar el listener de mensajes al montar el componente\nonMounted(() => {\n  if (!isListening.value) {\n    window.addEventListener('message', processWhatsAppMessage);\n    isListening.value = true;\n    console.log(' WhatsAppReservationHandler montado y escuchando mensajes');\n    \n    // Exponer la función de simulación en window para pruebas\n    window.testWhatsAppReservation = simulateWhatsAppReservation;\n  }\n});\n\n// Limpiar el listener al desmontar el componente\nonUnmounted(() => {\n  if (isListening.value) {\n    window.removeEventListener('message', processWhatsAppMessage);\n    isListening.value = false;\n    console.log(' WhatsAppReservationHandler desmontado');\n    \n    // Eliminar la función de simulación\n    if (window.testWhatsAppReservation) {\n      delete window.testWhatsAppReservation;\n    }\n  }\n});\n\n// Función para simular una reserva de WhatsApp (para pruebas)\nconst simulateWhatsAppReservation = async (customData = {}) => {\n  try {\n    console.log(' Simulando reserva de WhatsApp con datos:', customData);\n    \n    // Datos por defecto para la reserva\n    const defaultData = {\n      nombre: 'Cliente de Prueba WhatsApp',\n      telefono: '612345678',\n      email: 'whatsapp@example.com',\n      fecha: new Date().toISOString().split('T')[0], // Hoy\n      hora: '20:00',\n      personas: 3,\n      notas: 'Reserva de prueba desde WhatsApp'\n    };\n    \n    // Combinar datos por defecto con datos personalizados\n    const whatsappData = { ...defaultData, ...customData };\n    \n    // Crear un evento similar al que enviaría WhatsApp\n    const whatsappEvent = {\n      data: {\n        type: 'whatsapp_reservation',\n        reservation: whatsappData,\n        timestamp: Date.now()\n      },\n      source: window\n    };\n    \n    // Procesar el evento simulado\n    await processWhatsAppMessage(whatsappEvent);\n    \n    return true;\n  } catch (error) {\n    console.error(' Error al simular reserva de WhatsApp:', error);\n    return false;\n  }\n};\n\n// Exponer la función de simulación para pruebas\ndefineExpose({ simulateWhatsAppReservation });\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}