{"ast":null,"code":"// Función mejorada para adaptación de datos\nexport const adaptPlatoData = formData => {\n  console.log('Adaptando datos del formulario:', formData);\n\n  // Para el formulario de la imagen que compartiste (cochinita pibil)\n  if (typeof formData === 'object') {\n    // Primera verificación: si tiene plato_especial o refresco\n    if ('plato_especial' in formData || 'refresco' in formData) {\n      return {\n        name: formData.plato_especial || formData.nombre || 'Sin nombre',\n        description: formData.descripcion || '',\n        price: parseFloat(formData.precio) || 0,\n        category: 'principal',\n        // Valor por defecto\n        image_url: formData.imagen || '',\n        is_available: true\n      };\n    }\n\n    // Segunda verificación: si el formulario usa nombres en español\n    if (formData.nombre && !formData.name) {\n      return {\n        name: formData.nombre,\n        description: formData.descripcion || '',\n        price: parseFloat(formData.precio) || 0,\n        category: formData.categoria || 'principal',\n        image_url: formData.imagen || '',\n        is_available: true\n      };\n    }\n  }\n\n  // Verificar si los campos obligatorios existen\n  if (!formData.name) {\n    console.warn('⚠️ El objeto formData no tiene un campo name válido:', formData);\n    // Podemos crear un nombre por defecto para evitar errores\n    formData.name = 'Plato sin nombre';\n  }\n  if (!formData.price || isNaN(parseFloat(formData.price))) {\n    console.warn('⚠️ El objeto formData no tiene un precio válido:', formData);\n    formData.price = 0;\n  }\n\n  // Si ya tiene el formato correcto o no es un objeto reconocible\n  return formData;\n};","map":{"version":3,"names":["adaptPlatoData","formData","console","log","name","plato_especial","nombre","description","descripcion","price","parseFloat","precio","category","image_url","imagen","is_available","categoria","warn","isNaN"],"sources":["F:/Driver google/VUE.JS-2/VUE-JS/websap/src/utils/dataAdapters.js"],"sourcesContent":["// Función mejorada para adaptación de datos\r\nexport const adaptPlatoData = (formData) => {\r\n  console.log('Adaptando datos del formulario:', formData);\r\n  \r\n  // Para el formulario de la imagen que compartiste (cochinita pibil)\r\n  if (typeof formData === 'object') {\r\n    // Primera verificación: si tiene plato_especial o refresco\r\n    if ('plato_especial' in formData || 'refresco' in formData) {\r\n      return {\r\n        name: formData.plato_especial || formData.nombre || 'Sin nombre',\r\n        description: formData.descripcion || '',\r\n        price: parseFloat(formData.precio) || 0,\r\n        category: 'principal', // Valor por defecto\r\n        image_url: formData.imagen || '',\r\n        is_available: true\r\n      };\r\n    }\r\n    \r\n    // Segunda verificación: si el formulario usa nombres en español\r\n    if (formData.nombre && !formData.name) {\r\n      return {\r\n        name: formData.nombre,\r\n        description: formData.descripcion || '',\r\n        price: parseFloat(formData.precio) || 0,\r\n        category: formData.categoria || 'principal',\r\n        image_url: formData.imagen || '',\r\n        is_available: true\r\n      };\r\n    }\r\n  }\r\n  \r\n  // Verificar si los campos obligatorios existen\r\n  if (!formData.name) {\r\n    console.warn('⚠️ El objeto formData no tiene un campo name válido:', formData);\r\n    // Podemos crear un nombre por defecto para evitar errores\r\n    formData.name = 'Plato sin nombre';\r\n  }\r\n  \r\n  if (!formData.price || isNaN(parseFloat(formData.price))) {\r\n    console.warn('⚠️ El objeto formData no tiene un precio válido:', formData);\r\n    formData.price = 0;\r\n  }\r\n  \r\n  // Si ya tiene el formato correcto o no es un objeto reconocible\r\n  return formData;\r\n}; "],"mappings":"AAAA;AACA,OAAO,MAAMA,cAAc,GAAIC,QAAQ,IAAK;EAC1CC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,QAAQ,CAAC;;EAExD;EACA,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC;IACA,IAAI,gBAAgB,IAAIA,QAAQ,IAAI,UAAU,IAAIA,QAAQ,EAAE;MAC1D,OAAO;QACLG,IAAI,EAAEH,QAAQ,CAACI,cAAc,IAAIJ,QAAQ,CAACK,MAAM,IAAI,YAAY;QAChEC,WAAW,EAAEN,QAAQ,CAACO,WAAW,IAAI,EAAE;QACvCC,KAAK,EAAEC,UAAU,CAACT,QAAQ,CAACU,MAAM,CAAC,IAAI,CAAC;QACvCC,QAAQ,EAAE,WAAW;QAAE;QACvBC,SAAS,EAAEZ,QAAQ,CAACa,MAAM,IAAI,EAAE;QAChCC,YAAY,EAAE;MAChB,CAAC;IACH;;IAEA;IACA,IAAId,QAAQ,CAACK,MAAM,IAAI,CAACL,QAAQ,CAACG,IAAI,EAAE;MACrC,OAAO;QACLA,IAAI,EAAEH,QAAQ,CAACK,MAAM;QACrBC,WAAW,EAAEN,QAAQ,CAACO,WAAW,IAAI,EAAE;QACvCC,KAAK,EAAEC,UAAU,CAACT,QAAQ,CAACU,MAAM,CAAC,IAAI,CAAC;QACvCC,QAAQ,EAAEX,QAAQ,CAACe,SAAS,IAAI,WAAW;QAC3CH,SAAS,EAAEZ,QAAQ,CAACa,MAAM,IAAI,EAAE;QAChCC,YAAY,EAAE;MAChB,CAAC;IACH;EACF;;EAEA;EACA,IAAI,CAACd,QAAQ,CAACG,IAAI,EAAE;IAClBF,OAAO,CAACe,IAAI,CAAC,sDAAsD,EAAEhB,QAAQ,CAAC;IAC9E;IACAA,QAAQ,CAACG,IAAI,GAAG,kBAAkB;EACpC;EAEA,IAAI,CAACH,QAAQ,CAACQ,KAAK,IAAIS,KAAK,CAACR,UAAU,CAACT,QAAQ,CAACQ,KAAK,CAAC,CAAC,EAAE;IACxDP,OAAO,CAACe,IAAI,CAAC,kDAAkD,EAAEhB,QAAQ,CAAC;IAC1EA,QAAQ,CAACQ,KAAK,GAAG,CAAC;EACpB;;EAEA;EACA,OAAOR,QAAQ;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}