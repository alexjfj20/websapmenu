{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\n/**\r\n * Formatea un mensaje para compartir por WhatsApp u otros medios\r\n * @param {string} url - URL del men√∫ compartido\r\n * @param {string} restaurantName - Nombre del restaurante\r\n * @returns {string} Mensaje formateado\r\n */\nexport function formatShareLinkMessage(url, restaurantName = 'Restaurante') {\n  // Usar secuencias de escape Unicode para emojis\n  const message = `\\uD83C\\uDF7D\\uFE0F *¬°Hola! Mira el men√∫ de ${restaurantName}* \\uD83C\\uDF7D\\uFE0F\\n\\n` + `\\uD83D\\uDC49 Haz click aqu√≠ para ver nuestro men√∫:\\n${url}\\n\\n` + `\\uD83D\\uDCE2 Te invitamos a conocer todas nuestras deliciosas opciones \\uD83C\\uDF54\\uD83C\\uDF55\\uD83C\\uDF5F` + `\\n\\n\\uD83D\\uDCB3 Aceptamos varios m√©todos de pago\\n` + `\\uD83D\\uDD14 ¬°Haz tu pedido ya!`;\n  return message;\n}\n\n/**\r\n * Formatea un mensaje de pedido para WhatsApp\r\n * @param {Object} orderData - Datos del pedido\r\n * @returns {string} - Mensaje formateado\r\n */\nexport function formatOrderMessage(orderData) {\n  try {\n    // Extraer datos con validaci√≥n para evitar errores\n    const {\n      customer,\n      businessName,\n      orderItems,\n      total,\n      notes\n    } = orderData || {};\n    const safeName = customer?.name || 'Cliente';\n    const safePhone = customer?.phone || '';\n    const safeAddress = customer?.address || '';\n    const safeBusiness = businessName || 'Restaurante';\n    const safeTotal = typeof total === 'number' ? total.toFixed(2) : '0.00';\n    const safeNotes = notes || '';\n\n    // Verificar que orderItems sea un array\n    const safeOrderItems = Array.isArray(orderItems) ? orderItems : [];\n\n    // Construir el mensaje\n    let message = `üçΩÔ∏è *NUEVO PEDIDO - ${safeBusiness}* üçΩÔ∏è\\n\\n`;\n    message += `üë§ *Cliente:* ${safeName}\\n`;\n    message += `üì± *Tel√©fono:* ${safePhone}\\n`;\n    message += `üìç *Direcci√≥n:* ${safeAddress}\\n\\n`;\n    message += `*üìã DETALLE DEL PEDIDO:*\\n`;\n\n    // Listar cada item\n    if (safeOrderItems.length > 0) {\n      safeOrderItems.forEach(item => {\n        const name = item.name || 'Producto';\n        const price = typeof item.price === 'number' ? item.price.toFixed(2) : '0.00';\n        const quantity = item.quantity || 1;\n        const subtotal = (quantity * parseFloat(price)).toFixed(2);\n        message += `- ${quantity}x ${name} - $${price} c/u = $${subtotal}\\n`;\n      });\n    } else {\n      message += \"- No se especificaron productos\\n\";\n    }\n    message += `\\n*üí∞ TOTAL:* $${safeTotal}\\n\\n`;\n\n    // Agregar notas si existen\n    if (safeNotes) {\n      message += `*üìù NOTAS:*\\n${safeNotes}\\n\\n`;\n    }\n    message += `¬°Gracias por tu pedido! En breve nos pondremos en contacto contigo para confirmar.`;\n    return message;\n  } catch (error) {\n    console.error('Error al formatear mensaje de pedido:', error);\n    return '‚ùå Error al procesar el pedido. Por favor, contacta directamente al restaurante.';\n  }\n}\n\n/**\r\n * Genera un mensaje de recibido de pedido para el cliente\r\n * @param {string} businessName - Nombre del negocio\r\n * @returns {string} - Mensaje formateado\r\n */\nexport function formatOrderReceivedMessage(businessName) {\n  const safeBusiness = businessName || 'el restaurante';\n  return `¬°Gracias por tu pedido a ${safeBusiness}! Hemos recibido tu solicitud y te contactaremos en breve para confirmar los detalles y tiempo de entrega.`;\n}\n\n/**\r\n * Codifica un mensaje para ser enviado por WhatsApp\r\n * @param {string} message - Mensaje a codificar\r\n * @returns {string} Mensaje codificado para WhatsApp\r\n */\nexport function encodeWhatsAppMessage(message) {\n  return encodeURIComponent(message);\n}","map":{"version":3,"names":["formatShareLinkMessage","url","restaurantName","message","formatOrderMessage","orderData","customer","businessName","orderItems","total","notes","safeName","name","safePhone","phone","safeAddress","address","safeBusiness","safeTotal","toFixed","safeNotes","safeOrderItems","Array","isArray","length","forEach","item","price","quantity","subtotal","parseFloat","error","console","formatOrderReceivedMessage","encodeWhatsAppMessage","encodeURIComponent"],"sources":["F:/Driver google/VUE.JS-2/temp/websap/src/utils/messageFormatter.js"],"sourcesContent":["/**\r\n * Formatea un mensaje para compartir por WhatsApp u otros medios\r\n * @param {string} url - URL del men√∫ compartido\r\n * @param {string} restaurantName - Nombre del restaurante\r\n * @returns {string} Mensaje formateado\r\n */\r\nexport function formatShareLinkMessage(url, restaurantName = 'Restaurante') {\r\n  // Usar secuencias de escape Unicode para emojis\r\n  const message = `\\uD83C\\uDF7D\\uFE0F *¬°Hola! Mira el men√∫ de ${restaurantName}* \\uD83C\\uDF7D\\uFE0F\\n\\n` +\r\n                  `\\uD83D\\uDC49 Haz click aqu√≠ para ver nuestro men√∫:\\n${url}\\n\\n` +\r\n                  `\\uD83D\\uDCE2 Te invitamos a conocer todas nuestras deliciosas opciones \\uD83C\\uDF54\\uD83C\\uDF55\\uD83C\\uDF5F` +\r\n                  `\\n\\n\\uD83D\\uDCB3 Aceptamos varios m√©todos de pago\\n` +\r\n                  `\\uD83D\\uDD14 ¬°Haz tu pedido ya!`;\r\n  \r\n  return message;\r\n}\r\n\r\n/**\r\n * Formatea un mensaje de pedido para WhatsApp\r\n * @param {Object} orderData - Datos del pedido\r\n * @returns {string} - Mensaje formateado\r\n */\r\nexport function formatOrderMessage(orderData) {\r\n  try {\r\n    // Extraer datos con validaci√≥n para evitar errores\r\n    const { customer, businessName, orderItems, total, notes } = orderData || {};\r\n    const safeName = customer?.name || 'Cliente';\r\n    const safePhone = customer?.phone || '';\r\n    const safeAddress = customer?.address || '';\r\n    const safeBusiness = businessName || 'Restaurante';\r\n    const safeTotal = typeof total === 'number' ? total.toFixed(2) : '0.00';\r\n    const safeNotes = notes || '';\r\n    \r\n    // Verificar que orderItems sea un array\r\n    const safeOrderItems = Array.isArray(orderItems) ? orderItems : [];\r\n    \r\n    // Construir el mensaje\r\n    let message = `üçΩÔ∏è *NUEVO PEDIDO - ${safeBusiness}* üçΩÔ∏è\\n\\n`;\r\n    message += `üë§ *Cliente:* ${safeName}\\n`;\r\n    message += `üì± *Tel√©fono:* ${safePhone}\\n`;\r\n    message += `üìç *Direcci√≥n:* ${safeAddress}\\n\\n`;\r\n    \r\n    message += `*üìã DETALLE DEL PEDIDO:*\\n`;\r\n    \r\n    // Listar cada item\r\n    if (safeOrderItems.length > 0) {\r\n      safeOrderItems.forEach(item => {\r\n        const name = item.name || 'Producto';\r\n        const price = typeof item.price === 'number' ? item.price.toFixed(2) : '0.00';\r\n        const quantity = item.quantity || 1;\r\n        const subtotal = (quantity * parseFloat(price)).toFixed(2);\r\n        \r\n        message += `- ${quantity}x ${name} - $${price} c/u = $${subtotal}\\n`;\r\n      });\r\n    } else {\r\n      message += \"- No se especificaron productos\\n\";\r\n    }\r\n    \r\n    message += `\\n*üí∞ TOTAL:* $${safeTotal}\\n\\n`;\r\n    \r\n    // Agregar notas si existen\r\n    if (safeNotes) {\r\n      message += `*üìù NOTAS:*\\n${safeNotes}\\n\\n`;\r\n    }\r\n    \r\n    message += `¬°Gracias por tu pedido! En breve nos pondremos en contacto contigo para confirmar.`;\r\n    \r\n    return message;\r\n  } catch (error) {\r\n    console.error('Error al formatear mensaje de pedido:', error);\r\n    return '‚ùå Error al procesar el pedido. Por favor, contacta directamente al restaurante.';\r\n  }\r\n}\r\n\r\n/**\r\n * Genera un mensaje de recibido de pedido para el cliente\r\n * @param {string} businessName - Nombre del negocio\r\n * @returns {string} - Mensaje formateado\r\n */\r\nexport function formatOrderReceivedMessage(businessName) {\r\n  const safeBusiness = businessName || 'el restaurante';\r\n  \r\n  return `¬°Gracias por tu pedido a ${safeBusiness}! Hemos recibido tu solicitud y te contactaremos en breve para confirmar los detalles y tiempo de entrega.`;\r\n}\r\n\r\n/**\r\n * Codifica un mensaje para ser enviado por WhatsApp\r\n * @param {string} message - Mensaje a codificar\r\n * @returns {string} Mensaje codificado para WhatsApp\r\n */\r\nexport function encodeWhatsAppMessage(message) {\r\n  return encodeURIComponent(message);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}