{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\n// Crear un simple Event Bus para Vue 3 con soporte para Socket.IO\nimport { reactive } from 'vue';\nimport { io } from 'socket.io-client';\nclass EventBus {\n  constructor() {\n    this.events = reactive({});\n    this.socket = null;\n    this.isSocketConnected = false;\n\n    // Inicializar Socket.IO cuando se crea el EventBus\n    this.initSocketIO();\n  }\n\n  // Inicializar conexión Socket.IO\n  initSocketIO() {\n    try {\n      // Determinar la URL del backend basada en el entorno\n      const apiUrl = process.env.VUE_APP_API_URL || window.location.origin;\n      console.log('Conectando a Socket.IO en:', apiUrl);\n      this.socket = io(apiUrl, {\n        reconnection: true,\n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000,\n        timeout: 20000,\n        transports: ['websocket', 'polling']\n      });\n      this.socket.on('connect', () => {\n        console.log('Socket.IO conectado:', this.socket.id);\n        this.isSocketConnected = true;\n        this.emit('socket-connected', true);\n      });\n      this.socket.on('disconnect', () => {\n        console.log('Socket.IO desconectado');\n        this.isSocketConnected = false;\n        this.emit('socket-connected', false);\n      });\n      this.socket.on('connect_error', error => {\n        console.error('Error de conexión Socket.IO:', error);\n        this.isSocketConnected = false;\n      });\n\n      // Escuchar eventos específicos del servidor\n      this.socket.on('nueva-reserva', data => {\n        console.log('Nueva reserva recibida vía Socket.IO:', data);\n\n        // Convertir el formato recibido del servidor al formato que espera el frontend\n        const reservaFormateada = {\n          id: data.id,\n          fullName: data.nombre,\n          mobilePhone: data.telefono,\n          email: data.email || '',\n          date: this.formatDateToDDMMYYYY(data.fecha),\n          time: data.hora,\n          peopleCount: data.personas || 2,\n          notes: data.notas || '',\n          status: data.estado === 'confirmada' ? 'confirmed' : data.estado === 'cancelada' ? 'cancelled' : 'pending',\n          createdAt: data.creado_en,\n          source: data.origen || 'whatsapp',\n          created_by: data.created_by,\n          usuario_id: data.usuario_id,\n          restaurante_id: data.restaurante_id\n        };\n\n        // Emitir el evento interno para que los componentes lo manejen\n        this.emit('nueva-reserva', reservaFormateada);\n\n        // Notificar para refrescar la lista de reservas\n        this.emit('refresh-reservations');\n      });\n      this.socket.on('reserva-actualizada', data => {\n        console.log('Actualización de reserva recibida vía Socket.IO:', data);\n        this.emit('reserva-actualizada', data);\n      });\n      this.socket.on('reserva-eliminada', data => {\n        console.log('Eliminación de reserva recibida vía Socket.IO:', data);\n        this.emit('reserva-eliminada', data);\n      });\n    } catch (error) {\n      console.error('Error al inicializar Socket.IO:', error);\n    }\n  }\n  on(event, callback) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(callback);\n  }\n  off(event, callback) {\n    if (!this.events[event]) return;\n    if (callback) {\n      const index = this.events[event].indexOf(callback);\n      if (index > -1) {\n        this.events[event].splice(index, 1);\n      }\n    } else {\n      this.events[event] = [];\n    }\n  }\n  emit(event, payload) {\n    if (!this.events[event]) return;\n    this.events[event].forEach(callback => {\n      callback(payload);\n    });\n  }\n\n  // Reconectar Socket.IO manualmente si es necesario\n  reconnectSocket() {\n    if (this.socket) {\n      this.socket.disconnect();\n      setTimeout(() => {\n        this.initSocketIO();\n      }, 1000);\n      return true;\n    }\n    return false;\n  }\n\n  // Función para formatear una fecha al formato DD/MM/YYYY\n  formatDateToDDMMYYYY(dateString) {\n    if (!dateString) return '';\n    try {\n      // Caso específico para el formato problemático: \"29T05:00:00.000Z/05/2025\"\n      if (dateString.includes('T') && dateString.includes('/')) {\n        const parts = dateString.split('/');\n        if (parts.length === 3) {\n          const day = parts[0].split('T')[0];\n          return `${day}/${parts[1]}/${parts[2]}`;\n        }\n      }\n\n      // Formato ISO: \"2025-05-29\"\n      if (dateString.includes('-')) {\n        const parts = dateString.split('-');\n        if (parts.length === 3) {\n          return `${parts[2]}/${parts[1]}/${parts[0]}`;\n        }\n      }\n\n      // Si ya está en formato DD/MM/YYYY, devolverlo tal cual\n      if (dateString.includes('/') && !dateString.includes('T')) {\n        return dateString;\n      }\n\n      // Intentar parsear como objeto Date\n      const date = new Date(dateString);\n      if (!isNaN(date.getTime())) {\n        const day = date.getDate().toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const year = date.getFullYear();\n        return `${day}/${month}/${year}`;\n      }\n      return dateString;\n    } catch (error) {\n      console.error('Error al formatear fecha:', error);\n      return dateString;\n    }\n  }\n}\nexport default new EventBus();","map":{"version":3,"names":["reactive","io","EventBus","constructor","events","socket","isSocketConnected","initSocketIO","apiUrl","process","env","VUE_APP_API_URL","window","location","origin","console","log","reconnection","reconnectionAttempts","reconnectionDelay","timeout","transports","on","id","emit","error","data","reservaFormateada","fullName","nombre","mobilePhone","telefono","email","date","formatDateToDDMMYYYY","fecha","time","hora","peopleCount","personas","notes","notas","status","estado","createdAt","creado_en","source","origen","created_by","usuario_id","restaurante_id","event","callback","push","off","index","indexOf","splice","payload","forEach","reconnectSocket","disconnect","setTimeout","dateString","includes","parts","split","length","day","Date","isNaN","getTime","getDate","toString","padStart","month","getMonth","year","getFullYear"],"sources":["F:/Driver google/VUE.JS-2/VUE-JS/websap/src/utils/eventBus.js"],"sourcesContent":["// Crear un simple Event Bus para Vue 3 con soporte para Socket.IO\r\nimport { reactive } from 'vue';\r\nimport { io } from 'socket.io-client';\r\n\r\nclass EventBus {\r\n  constructor() {\r\n    this.events = reactive({});\r\n    this.socket = null;\r\n    this.isSocketConnected = false;\r\n\r\n    // Inicializar Socket.IO cuando se crea el EventBus\r\n    this.initSocketIO();\r\n  }\r\n\r\n  // Inicializar conexión Socket.IO\r\n  initSocketIO() {\r\n    try {\r\n      // Determinar la URL del backend basada en el entorno\r\n      const apiUrl = process.env.VUE_APP_API_URL || window.location.origin;\r\n      \r\n      console.log('Conectando a Socket.IO en:', apiUrl);\r\n      \r\n      this.socket = io(apiUrl, {\r\n        reconnection: true,\r\n        reconnectionAttempts: 5,\r\n        reconnectionDelay: 1000,\r\n        timeout: 20000,\r\n        transports: ['websocket', 'polling']\r\n      });\r\n\r\n      this.socket.on('connect', () => {\r\n        console.log('Socket.IO conectado:', this.socket.id);\r\n        this.isSocketConnected = true;\r\n        this.emit('socket-connected', true);\r\n      });\r\n\r\n      this.socket.on('disconnect', () => {\r\n        console.log('Socket.IO desconectado');\r\n        this.isSocketConnected = false;\r\n        this.emit('socket-connected', false);\r\n      });\r\n\r\n      this.socket.on('connect_error', (error) => {\r\n        console.error('Error de conexión Socket.IO:', error);\r\n        this.isSocketConnected = false;\r\n      });\r\n\r\n      // Escuchar eventos específicos del servidor\r\n      this.socket.on('nueva-reserva', (data) => {\r\n        console.log('Nueva reserva recibida vía Socket.IO:', data);\r\n        \r\n        // Convertir el formato recibido del servidor al formato que espera el frontend\r\n        const reservaFormateada = {\r\n          id: data.id,\r\n          fullName: data.nombre,\r\n          mobilePhone: data.telefono,\r\n          email: data.email || '',\r\n          date: this.formatDateToDDMMYYYY(data.fecha),\r\n          time: data.hora,\r\n          peopleCount: data.personas || 2,\r\n          notes: data.notas || '',\r\n          status: data.estado === 'confirmada' ? 'confirmed' : \r\n                 data.estado === 'cancelada' ? 'cancelled' : 'pending',\r\n          createdAt: data.creado_en,\r\n          source: data.origen || 'whatsapp',\r\n          created_by: data.created_by,\r\n          usuario_id: data.usuario_id,\r\n          restaurante_id: data.restaurante_id\r\n        };\r\n        \r\n        // Emitir el evento interno para que los componentes lo manejen\r\n        this.emit('nueva-reserva', reservaFormateada);\r\n        \r\n        // Notificar para refrescar la lista de reservas\r\n        this.emit('refresh-reservations');\r\n      });\r\n\r\n      this.socket.on('reserva-actualizada', (data) => {\r\n        console.log('Actualización de reserva recibida vía Socket.IO:', data);\r\n        this.emit('reserva-actualizada', data);\r\n      });\r\n\r\n      this.socket.on('reserva-eliminada', (data) => {\r\n        console.log('Eliminación de reserva recibida vía Socket.IO:', data);\r\n        this.emit('reserva-eliminada', data);\r\n      });\r\n    } catch (error) {\r\n      console.error('Error al inicializar Socket.IO:', error);\r\n    }\r\n  }\r\n\r\n  on(event, callback) {\r\n    if (!this.events[event]) {\r\n      this.events[event] = [];\r\n    }\r\n    this.events[event].push(callback);\r\n  }\r\n\r\n  off(event, callback) {\r\n    if (!this.events[event]) return;\r\n    \r\n    if (callback) {\r\n      const index = this.events[event].indexOf(callback);\r\n      if (index > -1) {\r\n        this.events[event].splice(index, 1);\r\n      }\r\n    } else {\r\n      this.events[event] = [];\r\n    }\r\n  }\r\n\r\n  emit(event, payload) {\r\n    if (!this.events[event]) return;\r\n    \r\n    this.events[event].forEach(callback => {\r\n      callback(payload);\r\n    });\r\n  }\r\n  \r\n  // Reconectar Socket.IO manualmente si es necesario\r\n  reconnectSocket() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      setTimeout(() => {\r\n        this.initSocketIO();\r\n      }, 1000);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  // Función para formatear una fecha al formato DD/MM/YYYY\r\n  formatDateToDDMMYYYY(dateString) {\r\n    if (!dateString) return '';\r\n    \r\n    try {\r\n      // Caso específico para el formato problemático: \"29T05:00:00.000Z/05/2025\"\r\n      if (dateString.includes('T') && dateString.includes('/')) {\r\n        const parts = dateString.split('/');\r\n        if (parts.length === 3) {\r\n          const day = parts[0].split('T')[0];\r\n          return `${day}/${parts[1]}/${parts[2]}`;\r\n        }\r\n      }\r\n      \r\n      // Formato ISO: \"2025-05-29\"\r\n      if (dateString.includes('-')) {\r\n        const parts = dateString.split('-');\r\n        if (parts.length === 3) {\r\n          return `${parts[2]}/${parts[1]}/${parts[0]}`;\r\n        }\r\n      }\r\n      \r\n      // Si ya está en formato DD/MM/YYYY, devolverlo tal cual\r\n      if (dateString.includes('/') && !dateString.includes('T')) {\r\n        return dateString;\r\n      }\r\n      \r\n      // Intentar parsear como objeto Date\r\n      const date = new Date(dateString);\r\n      if (!isNaN(date.getTime())) {\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n        const year = date.getFullYear();\r\n        return `${day}/${month}/${year}`;\r\n      }\r\n      \r\n      return dateString;\r\n    } catch (error) {\r\n      console.error('Error al formatear fecha:', error);\r\n      return dateString;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new EventBus();"],"mappings":";;;AAAA;AACA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,EAAE,QAAQ,kBAAkB;AAErC,MAAMC,QAAQ,CAAC;EACbC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,CAACK,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,iBAAiB,GAAG,KAAK;;IAE9B;IACA,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB;;EAEA;EACAA,YAAYA,CAAA,EAAG;IACb,IAAI;MACF;MACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,eAAe,IAAIC,MAAM,CAACC,QAAQ,CAACC,MAAM;MAEpEC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAER,MAAM,CAAC;MAEjD,IAAI,CAACH,MAAM,GAAGJ,EAAE,CAACO,MAAM,EAAE;QACvBS,YAAY,EAAE,IAAI;QAClBC,oBAAoB,EAAE,CAAC;QACvBC,iBAAiB,EAAE,IAAI;QACvBC,OAAO,EAAE,KAAK;QACdC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS;MACrC,CAAC,CAAC;MAEF,IAAI,CAAChB,MAAM,CAACiB,EAAE,CAAC,SAAS,EAAE,MAAM;QAC9BP,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACX,MAAM,CAACkB,EAAE,CAAC;QACnD,IAAI,CAACjB,iBAAiB,GAAG,IAAI;QAC7B,IAAI,CAACkB,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC;MACrC,CAAC,CAAC;MAEF,IAAI,CAACnB,MAAM,CAACiB,EAAE,CAAC,YAAY,EAAE,MAAM;QACjCP,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrC,IAAI,CAACV,iBAAiB,GAAG,KAAK;QAC9B,IAAI,CAACkB,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC;MACtC,CAAC,CAAC;MAEF,IAAI,CAACnB,MAAM,CAACiB,EAAE,CAAC,eAAe,EAAGG,KAAK,IAAK;QACzCV,OAAO,CAACU,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,IAAI,CAACnB,iBAAiB,GAAG,KAAK;MAChC,CAAC,CAAC;;MAEF;MACA,IAAI,CAACD,MAAM,CAACiB,EAAE,CAAC,eAAe,EAAGI,IAAI,IAAK;QACxCX,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEU,IAAI,CAAC;;QAE1D;QACA,MAAMC,iBAAiB,GAAG;UACxBJ,EAAE,EAAEG,IAAI,CAACH,EAAE;UACXK,QAAQ,EAAEF,IAAI,CAACG,MAAM;UACrBC,WAAW,EAAEJ,IAAI,CAACK,QAAQ;UAC1BC,KAAK,EAAEN,IAAI,CAACM,KAAK,IAAI,EAAE;UACvBC,IAAI,EAAE,IAAI,CAACC,oBAAoB,CAACR,IAAI,CAACS,KAAK,CAAC;UAC3CC,IAAI,EAAEV,IAAI,CAACW,IAAI;UACfC,WAAW,EAAEZ,IAAI,CAACa,QAAQ,IAAI,CAAC;UAC/BC,KAAK,EAAEd,IAAI,CAACe,KAAK,IAAI,EAAE;UACvBC,MAAM,EAAEhB,IAAI,CAACiB,MAAM,KAAK,YAAY,GAAG,WAAW,GAC3CjB,IAAI,CAACiB,MAAM,KAAK,WAAW,GAAG,WAAW,GAAG,SAAS;UAC5DC,SAAS,EAAElB,IAAI,CAACmB,SAAS;UACzBC,MAAM,EAAEpB,IAAI,CAACqB,MAAM,IAAI,UAAU;UACjCC,UAAU,EAAEtB,IAAI,CAACsB,UAAU;UAC3BC,UAAU,EAAEvB,IAAI,CAACuB,UAAU;UAC3BC,cAAc,EAAExB,IAAI,CAACwB;QACvB,CAAC;;QAED;QACA,IAAI,CAAC1B,IAAI,CAAC,eAAe,EAAEG,iBAAiB,CAAC;;QAE7C;QACA,IAAI,CAACH,IAAI,CAAC,sBAAsB,CAAC;MACnC,CAAC,CAAC;MAEF,IAAI,CAACnB,MAAM,CAACiB,EAAE,CAAC,qBAAqB,EAAGI,IAAI,IAAK;QAC9CX,OAAO,CAACC,GAAG,CAAC,kDAAkD,EAAEU,IAAI,CAAC;QACrE,IAAI,CAACF,IAAI,CAAC,qBAAqB,EAAEE,IAAI,CAAC;MACxC,CAAC,CAAC;MAEF,IAAI,CAACrB,MAAM,CAACiB,EAAE,CAAC,mBAAmB,EAAGI,IAAI,IAAK;QAC5CX,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEU,IAAI,CAAC;QACnE,IAAI,CAACF,IAAI,CAAC,mBAAmB,EAAEE,IAAI,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF;EAEAH,EAAEA,CAAC6B,KAAK,EAAEC,QAAQ,EAAE;IAClB,IAAI,CAAC,IAAI,CAAChD,MAAM,CAAC+C,KAAK,CAAC,EAAE;MACvB,IAAI,CAAC/C,MAAM,CAAC+C,KAAK,CAAC,GAAG,EAAE;IACzB;IACA,IAAI,CAAC/C,MAAM,CAAC+C,KAAK,CAAC,CAACE,IAAI,CAACD,QAAQ,CAAC;EACnC;EAEAE,GAAGA,CAACH,KAAK,EAAEC,QAAQ,EAAE;IACnB,IAAI,CAAC,IAAI,CAAChD,MAAM,CAAC+C,KAAK,CAAC,EAAE;IAEzB,IAAIC,QAAQ,EAAE;MACZ,MAAMG,KAAK,GAAG,IAAI,CAACnD,MAAM,CAAC+C,KAAK,CAAC,CAACK,OAAO,CAACJ,QAAQ,CAAC;MAClD,IAAIG,KAAK,GAAG,CAAC,CAAC,EAAE;QACd,IAAI,CAACnD,MAAM,CAAC+C,KAAK,CAAC,CAACM,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACrC;IACF,CAAC,MAAM;MACL,IAAI,CAACnD,MAAM,CAAC+C,KAAK,CAAC,GAAG,EAAE;IACzB;EACF;EAEA3B,IAAIA,CAAC2B,KAAK,EAAEO,OAAO,EAAE;IACnB,IAAI,CAAC,IAAI,CAACtD,MAAM,CAAC+C,KAAK,CAAC,EAAE;IAEzB,IAAI,CAAC/C,MAAM,CAAC+C,KAAK,CAAC,CAACQ,OAAO,CAACP,QAAQ,IAAI;MACrCA,QAAQ,CAACM,OAAO,CAAC;IACnB,CAAC,CAAC;EACJ;;EAEA;EACAE,eAAeA,CAAA,EAAG;IAChB,IAAI,IAAI,CAACvD,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACwD,UAAU,CAAC,CAAC;MACxBC,UAAU,CAAC,MAAM;QACf,IAAI,CAACvD,YAAY,CAAC,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;;EAEA;EACA2B,oBAAoBA,CAAC6B,UAAU,EAAE;IAC/B,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;IAE1B,IAAI;MACF;MACA,IAAIA,UAAU,CAACC,QAAQ,CAAC,GAAG,CAAC,IAAID,UAAU,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACxD,MAAMC,KAAK,GAAGF,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC;QACnC,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;UACtB,MAAMC,GAAG,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAClC,OAAO,GAAGE,GAAG,IAAIH,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACzC;MACF;;MAEA;MACA,IAAIF,UAAU,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC5B,MAAMC,KAAK,GAAGF,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC;QACnC,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;UACtB,OAAO,GAAGF,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QAC9C;MACF;;MAEA;MACA,IAAIF,UAAU,CAACC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACD,UAAU,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACzD,OAAOD,UAAU;MACnB;;MAEA;MACA,MAAM9B,IAAI,GAAG,IAAIoC,IAAI,CAACN,UAAU,CAAC;MACjC,IAAI,CAACO,KAAK,CAACrC,IAAI,CAACsC,OAAO,CAAC,CAAC,CAAC,EAAE;QAC1B,MAAMH,GAAG,GAAGnC,IAAI,CAACuC,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QACtD,MAAMC,KAAK,GAAG,CAAC1C,IAAI,CAAC2C,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAC/D,MAAMG,IAAI,GAAG5C,IAAI,CAAC6C,WAAW,CAAC,CAAC;QAC/B,OAAO,GAAGV,GAAG,IAAIO,KAAK,IAAIE,IAAI,EAAE;MAClC;MAEA,OAAOd,UAAU;IACnB,CAAC,CAAC,OAAOtC,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAOsC,UAAU;IACnB;EACF;AACF;AAEA,eAAe,IAAI7D,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}