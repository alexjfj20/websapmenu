{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport { isAuthenticated, hasRole, getCurrentUser, removeToken } from '../services/authService';\nimport { alert } from '../services/dialogService';\nimport LoginView from '../views/LoginView.vue';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/about',\n  name: 'about',\n  component: () => import(/* webpackChunkName: \"about\" */'../views/AboutView.vue')\n}, {\n  path: '/login',\n  name: 'login',\n  component: LoginView,\n  meta: {\n    requiresGuest: true\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: () => import(/* webpackChunkName: \"register\" */'../views/RegisterView.vue')\n}, {\n  path: '/menu',\n  name: 'menu',\n  component: () => import(/* webpackChunkName: \"menu\" */'../components/MenuComponent.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/menu/:id',\n  name: 'shared-menu',\n  component: () => import(/* webpackChunkName: \"shared-menu\" */'../views/SharedMenuView.vue'),\n  props: true\n}, {\n  path: '/superadmin',\n  name: 'superadmin',\n  component: () => import(/* webpackChunkName: \"superadmin\" */'../views/SuperAdminView.vue'),\n  meta: {\n    requiresAuth: true,\n    roles: ['Superadministrador']\n  }\n}, {\n  path: '/admin',\n  name: 'admin',\n  component: () => import(/* webpackChunkName: \"admin\" */'../views/AdminView.vue'),\n  meta: {\n    requiresAuth: true,\n    roles: ['Administrador']\n  }\n}, {\n  path: '/employee',\n  name: 'employee',\n  component: () => import(/* webpackChunkName: \"employee\" */'../views/EmployeeView.vue'),\n  meta: {\n    requiresAuth: true,\n    roles: ['Empleado']\n  }\n}, {\n  path: '/platos',\n  name: 'platos',\n  component: () => import(/* webpackChunkName: \"platos\" */'../views/PlatosView.vue'),\n  meta: {\n    requiresAuth: true,\n    roles: ['Administrador', 'Superadministrador']\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  name: 'notFound',\n  component: () => import('../views/NotFound.vue')\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Navegación con protección de rutas\nrouter.beforeEach(async (to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const requiresGuest = to.matched.some(record => record.meta.requiresGuest);\n  const requiresRoles = to.meta.roles;\n\n  // Limpiar cualquier información de usuario incorrecta o desactualizada\n  if (to.path === '/login') {\n    localStorage.removeItem('user');\n    localStorage.removeItem('isLoggedIn');\n    removeToken();\n  }\n\n  // Si la ruta requiere autenticación y el usuario no está autenticado\n  if (requiresAuth && !isAuthenticated()) {\n    await alert('Debe iniciar sesión para acceder a esta página', {\n      title: 'Acceso Restringido'\n    });\n    next({\n      name: 'login'\n    });\n  }\n  // Si la ruta requiere ser invitado y el usuario está autenticado\n  else if (requiresGuest && isAuthenticated()) {\n    // Determinar a dónde redirigir basado en el rol\n    const user = getCurrentUser();\n    if (user && user.roles) {\n      if (user.roles.includes('Superadministrador')) {\n        next({\n          name: 'superadmin'\n        });\n      } else if (user.roles.includes('Administrador')) {\n        next({\n          name: 'admin'\n        });\n      } else {\n        next({\n          name: 'employee'\n        });\n      }\n    } else {\n      next({\n        name: 'home'\n      });\n    }\n  }\n  // Si la ruta requiere roles específicos\n  else if (requiresRoles && isAuthenticated()) {\n    const userHasRequiredRole = requiresRoles.some(role => hasRole(role));\n    if (!userHasRequiredRole) {\n      // Redirigir a una página de acceso denegado o dashboard por defecto\n      await alert('No tiene permisos para acceder a esta sección', {\n        title: 'Acceso Denegado'\n      });\n      next({\n        name: 'home'\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","isAuthenticated","hasRole","getCurrentUser","removeToken","alert","LoginView","routes","path","name","component","meta","requiresGuest","requiresAuth","props","roles","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","requiresRoles","localStorage","removeItem","title","user","includes","userHasRequiredRole","role"],"sources":["F:/Driver google/VUE.JS-2/VUE-JS/websap/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport { isAuthenticated, hasRole, getCurrentUser, removeToken } from '../services/authService'\nimport { alert } from '../services/dialogService'\nimport LoginView from '../views/LoginView.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/about',\n    name: 'about',\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LoginView,\n    meta: { requiresGuest: true }\n  },\n  {\n    path: '/register',\n    name: 'register',\n    component: () => import(/* webpackChunkName: \"register\" */ '../views/RegisterView.vue')\n  },\n  {\n    path: '/menu',\n    name: 'menu',\n    component: () => import(/* webpackChunkName: \"menu\" */ '../components/MenuComponent.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/menu/:id',\n    name: 'shared-menu',\n    component: () => import(/* webpackChunkName: \"shared-menu\" */ '../views/SharedMenuView.vue'),\n    props: true\n  },\n  {\n    path: '/superadmin',\n    name: 'superadmin',\n    component: () => import(/* webpackChunkName: \"superadmin\" */ '../views/SuperAdminView.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Superadministrador']\n    }\n  },\n  {\n    path: '/admin',\n    name: 'admin',\n    component: () => import(/* webpackChunkName: \"admin\" */ '../views/AdminView.vue'),\n    meta: { \n      requiresAuth: true, \n      roles: ['Administrador']\n    }\n  },\n  {\n    path: '/employee',\n    name: 'employee',\n    component: () => import(/* webpackChunkName: \"employee\" */ '../views/EmployeeView.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Empleado']\n    }\n  },\n  {\n    path: '/platos',\n    name: 'platos',\n    component: () => import(/* webpackChunkName: \"platos\" */ '../views/PlatosView.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Administrador', 'Superadministrador']\n    }\n  },\n  {\n    path: '/:pathMatch(.*)*',\n    name: 'notFound',\n    component: () => import('../views/NotFound.vue')\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// Navegación con protección de rutas\nrouter.beforeEach(async (to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n  const requiresGuest = to.matched.some(record => record.meta.requiresGuest)\n  const requiresRoles = to.meta.roles\n  \n  // Limpiar cualquier información de usuario incorrecta o desactualizada\n  if (to.path === '/login') {\n    localStorage.removeItem('user');\n    localStorage.removeItem('isLoggedIn');\n    removeToken();\n  }\n  \n  // Si la ruta requiere autenticación y el usuario no está autenticado\n  if (requiresAuth && !isAuthenticated()) {\n    await alert('Debe iniciar sesión para acceder a esta página', {\n      title: 'Acceso Restringido'\n    });\n    next({ name: 'login' })\n  }\n  // Si la ruta requiere ser invitado y el usuario está autenticado\n  else if (requiresGuest && isAuthenticated()) {\n    // Determinar a dónde redirigir basado en el rol\n    const user = getCurrentUser();\n    if (user && user.roles) {\n      if (user.roles.includes('Superadministrador')) {\n        next({ name: 'superadmin' });\n      } else if (user.roles.includes('Administrador')) {\n        next({ name: 'admin' });\n      } else {\n        next({ name: 'employee' });\n      }\n    } else {\n      next({ name: 'home' });\n    }\n  }\n  // Si la ruta requiere roles específicos\n  else if (requiresRoles && isAuthenticated()) {\n    const userHasRequiredRole = requiresRoles.some(role => hasRole(role))\n    if (!userHasRequiredRole) {\n      // Redirigir a una página de acceso denegado o dashboard por defecto\n      await alert('No tiene permisos para acceder a esta sección', {\n        title: 'Acceso Denegado'\n      });\n      next({ name: 'home' })\n    } else {\n      next()\n    }\n  }\n  else {\n    next()\n  }\n})\n\nexport default router"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}