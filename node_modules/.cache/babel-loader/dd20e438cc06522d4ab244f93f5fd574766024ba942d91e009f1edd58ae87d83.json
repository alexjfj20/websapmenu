{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"app-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_DialogContainer = _resolveComponent(\"DialogContainer\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.isLoggedIn ? (_openBlock(), _createElementBlock(\"header\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.logout && $setup.logout(...args)),\n    class: \"logout-button\"\n  }, \"Cerrar sesión\")])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_router_view), _createCommentVNode(\" Dialog component for global usage \"), _createVNode(_component_DialogContainer)]);\n}","map":{"version":3,"names":["id","key","class","_createElementBlock","_hoisted_1","$data","isLoggedIn","_hoisted_2","_createElementVNode","onClick","_cache","args","$setup","logout","_createCommentVNode","_createVNode","_component_router_view","_component_DialogContainer"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header v-if=\"isLoggedIn\" class=\"app-header\">\r\n      <button @click=\"logout\" class=\"logout-button\">Cerrar sesión</button>\r\n    </header>\r\n    <router-view/>\r\n    \r\n    <!-- Dialog component for global usage -->\r\n    <DialogContainer />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRouter } from 'vue-router';\r\nimport DialogContainer from './components/DialogContainer.vue';\r\nimport { dialogState } from './services/dialogService';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    DialogContainer\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    \r\n    const logout = () => {\r\n      // Aquí puedes agregar la lógica para limpiar datos de sesión si es necesario\r\n      router.push('/login');\r\n    };\r\n    \r\n    return { \r\n      router,\r\n      logout,\r\n      dialogState\r\n    };\r\n  },\r\n  data() {\r\n    return {\r\n      isLoggedIn: false\r\n    };\r\n  },\r\n  watch: {\r\n    '$route'(to) {\r\n      // Consideramos que el usuario está logueado si no está en las páginas de registro o login\r\n      this.isLoggedIn = !['/register', '/login'].includes(to.path);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n\r\n.app-header {\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  background-color: #f8f9fa;\r\n  padding: 10px;\r\n  text-align: right;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.logout-button {\r\n  padding: 8px 16px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.logout-button:hover {\r\n  background-color: #c82333;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EADfC,GAAA;EAE8BC,KAAK,EAAC;;;;;uBADlCC,mBAAA,CAQM,OARNC,UAQM,GAPUC,KAAA,CAAAC,UAAU,I,cAAxBH,mBAAA,CAES,UAFTI,UAES,GADPC,mBAAA,CAAoE;IAA3DC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,MAAA,IAAAD,MAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;IAAET,KAAK,EAAC;KAAgB,eAAa,E,KAHjEY,mBAAA,gBAKIC,YAAA,CAAcC,sBAAA,GAEdF,mBAAA,uCAA0C,EAC1CC,YAAA,CAAmBE,0BAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}