{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, onMounted } from 'vue';\nimport PlatoForm from '@/components/PlatoForm.vue';\nimport { getAllPlatos, deletePlato as deleteIndexedDBPlato } from '@/services/indexedDBService';\nexport default {\n  name: 'PlatosView',\n  components: {\n    PlatoForm\n  },\n  setup() {\n    const platos = ref([]);\n    const isLoading = ref(true);\n    const error = ref('');\n    const showForm = ref(false);\n    const platoToEdit = ref(null);\n\n    // Cargar todos los platos al montar el componente\n    onMounted(() => {\n      loadPlatos();\n    });\n\n    // Función para cargar platos\n    const loadPlatos = async () => {\n      isLoading.value = true;\n      error.value = '';\n      try {\n        const result = await getAllPlatos();\n        platos.value = result;\n        console.log('Platos cargados:', platos.value);\n      } catch (err) {\n        console.error('Error al cargar platos:', err);\n        error.value = `Error al cargar platos: ${err.message || 'Error desconocido'}`;\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // Manejadores de eventos del formulario\n    const onPlatoSaved = savedPlato => {\n      console.log('Plato guardado en la vista:', savedPlato);\n      platos.value.push(savedPlato);\n      showForm.value = false;\n    };\n    const onPlatoUpdated = updatedPlato => {\n      console.log('Plato actualizado en la vista:', updatedPlato);\n      const index = platos.value.findIndex(p => p.id === updatedPlato.id);\n      if (index !== -1) {\n        platos.value[index] = {\n          ...updatedPlato\n        };\n      }\n      platoToEdit.value = null;\n      showForm.value = false;\n    };\n    const onFormCancel = () => {\n      platoToEdit.value = null;\n      showForm.value = false;\n    };\n\n    // Funciones para editar y eliminar platos\n    const editPlato = plato => {\n      platoToEdit.value = {\n        ...plato\n      };\n      showForm.value = true;\n    };\n    const deletePlato = async id => {\n      if (!confirm('¿Estás seguro de que deseas eliminar este plato?')) {\n        return;\n      }\n      try {\n        await deleteIndexedDBPlato(id);\n        platos.value = platos.value.filter(plato => plato.id !== id);\n      } catch (err) {\n        console.error('Error al eliminar plato:', err);\n        error.value = `Error al eliminar plato: ${err.message || 'Error desconocido'}`;\n      }\n    };\n    return {\n      platos,\n      isLoading,\n      error,\n      showForm,\n      platoToEdit,\n      loadPlatos,\n      onPlatoSaved,\n      onPlatoUpdated,\n      onFormCancel,\n      editPlato,\n      deletePlato\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","PlatoForm","getAllPlatos","deletePlato","deleteIndexedDBPlato","name","components","setup","platos","isLoading","error","showForm","platoToEdit","loadPlatos","value","result","console","log","err","message","onPlatoSaved","savedPlato","push","onPlatoUpdated","updatedPlato","index","findIndex","p","id","onFormCancel","editPlato","plato","confirm","filter"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\views\\PlatosView.vue"],"sourcesContent":["<template>\r\n  <div class=\"platos-view\">\r\n    <h2>Gestión de Platos</h2>\r\n    \r\n    <button @click=\"showForm = !showForm\" class=\"btn toggle-form-btn\">\r\n      {{ showForm ? 'Ocultar Formulario' : 'Crear Nuevo Plato' }}\r\n    </button>\r\n    \r\n    <div v-if=\"showForm\" class=\"form-container\">\r\n      <PlatoForm \r\n        :edit-plato=\"platoToEdit\" \r\n        @plato-saved=\"onPlatoSaved\" \r\n        @plato-updated=\"onPlatoUpdated\" \r\n        @cancel=\"onFormCancel\"\r\n      />\r\n    </div>\r\n    \r\n    <div class=\"platos-list\">\r\n      <h3>Lista de Platos ({{ platos.length }})</h3>\r\n      \r\n      <div v-if=\"isLoading\" class=\"loading\">\r\n        Cargando platos...\r\n      </div>\r\n      \r\n      <div v-else-if=\"platos.length === 0\" class=\"empty-state\">\r\n        No hay platos disponibles. ¡Crea el primero!\r\n      </div>\r\n      \r\n      <div v-else class=\"platos-grid\">\r\n        <div v-for=\"plato in platos\" :key=\"plato.id\" class=\"plato-card\">\r\n          <div class=\"plato-image\" :style=\"{ backgroundImage: `url(${plato.image_url || '/placeholder-food.jpg'})` }\"></div>\r\n          <div class=\"plato-content\">\r\n            <h4>{{ plato.name }}</h4>\r\n            <p class=\"price\">${{ plato.price.toFixed(2) }}</p>\r\n            <p class=\"category\">{{ plato.category || 'Sin categoría' }}</p>\r\n            <p class=\"description\">{{ plato.description || 'Sin descripción' }}</p>\r\n            <div class=\"availability\" :class=\"{ available: plato.is_available }\">\r\n              {{ plato.is_available ? 'Disponible' : 'No disponible' }}\r\n            </div>\r\n          </div>\r\n          <div class=\"plato-actions\">\r\n            <button @click=\"editPlato(plato)\" class=\"btn btn-edit\">Editar</button>\r\n            <button @click=\"deletePlato(plato.id)\" class=\"btn btn-delete\">Eliminar</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"error\" class=\"error-container\">\r\n      <p>{{ error }}</p>\r\n      <button @click=\"loadPlatos\" class=\"btn retry-btn\">Reintentar</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport PlatoForm from '@/components/PlatoForm.vue';\r\nimport { getAllPlatos, deletePlato as deleteIndexedDBPlato } from '@/services/indexedDBService';\r\n\r\nexport default {\r\n  name: 'PlatosView',\r\n  \r\n  components: {\r\n    PlatoForm\r\n  },\r\n  \r\n  setup() {\r\n    const platos = ref([]);\r\n    const isLoading = ref(true);\r\n    const error = ref('');\r\n    const showForm = ref(false);\r\n    const platoToEdit = ref(null);\r\n    \r\n    // Cargar todos los platos al montar el componente\r\n    onMounted(() => {\r\n      loadPlatos();\r\n    });\r\n    \r\n    // Función para cargar platos\r\n    const loadPlatos = async () => {\r\n      isLoading.value = true;\r\n      error.value = '';\r\n      \r\n      try {\r\n        const result = await getAllPlatos();\r\n        platos.value = result;\r\n        console.log('Platos cargados:', platos.value);\r\n      } catch (err) {\r\n        console.error('Error al cargar platos:', err);\r\n        error.value = `Error al cargar platos: ${err.message || 'Error desconocido'}`;\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Manejadores de eventos del formulario\r\n    const onPlatoSaved = (savedPlato) => {\r\n      console.log('Plato guardado en la vista:', savedPlato);\r\n      platos.value.push(savedPlato);\r\n      showForm.value = false;\r\n    };\r\n    \r\n    const onPlatoUpdated = (updatedPlato) => {\r\n      console.log('Plato actualizado en la vista:', updatedPlato);\r\n      \r\n      const index = platos.value.findIndex(p => p.id === updatedPlato.id);\r\n      if (index !== -1) {\r\n        platos.value[index] = { ...updatedPlato };\r\n      }\r\n      \r\n      platoToEdit.value = null;\r\n      showForm.value = false;\r\n    };\r\n    \r\n    const onFormCancel = () => {\r\n      platoToEdit.value = null;\r\n      showForm.value = false;\r\n    };\r\n    \r\n    // Funciones para editar y eliminar platos\r\n    const editPlato = (plato) => {\r\n      platoToEdit.value = { ...plato };\r\n      showForm.value = true;\r\n    };\r\n    \r\n    const deletePlato = async (id) => {\r\n      if (!confirm('¿Estás seguro de que deseas eliminar este plato?')) {\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        await deleteIndexedDBPlato(id);\r\n        platos.value = platos.value.filter(plato => plato.id !== id);\r\n      } catch (err) {\r\n        console.error('Error al eliminar plato:', err);\r\n        error.value = `Error al eliminar plato: ${err.message || 'Error desconocido'}`;\r\n      }\r\n    };\r\n    \r\n    return {\r\n      platos,\r\n      isLoading,\r\n      error,\r\n      showForm,\r\n      platoToEdit,\r\n      loadPlatos,\r\n      onPlatoSaved,\r\n      onPlatoUpdated,\r\n      onFormCancel,\r\n      editPlato,\r\n      deletePlato\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.platos-view {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.toggle-form-btn {\r\n  margin-bottom: 20px;\r\n  background-color: #2196F3;\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.form-container {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.platos-list {\r\n  margin-top: 30px;\r\n}\r\n\r\n.loading, .empty-state {\r\n  padding: 20px;\r\n  text-align: center;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n}\r\n\r\n.platos-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.plato-card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.plato-image {\r\n  height: 200px;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.plato-content {\r\n  padding: 15px;\r\n  flex-grow: 1;\r\n}\r\n\r\n.plato-content h4 {\r\n  margin-top: 0;\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n.price {\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  color: #4CAF50;\r\n  margin: 5px 0;\r\n}\r\n\r\n.category {\r\n  font-size: 14px;\r\n  color: #757575;\r\n  margin: 5px 0;\r\n}\r\n\r\n.description {\r\n  font-size: 14px;\r\n  margin: 10px 0;\r\n  color: #333;\r\n}\r\n\r\n.availability {\r\n  display: inline-block;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  background-color: #FFEBEE;\r\n  color: #D32F2F;\r\n}\r\n\r\n.availability.available {\r\n  background-color: #E8F5E9;\r\n  color: #2E7D32;\r\n}\r\n\r\n.plato-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 15px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.btn {\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.btn-edit {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.btn-delete {\r\n  background-color: #F44336;\r\n  color: white;\r\n}\r\n\r\n.error-container {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #FFEBEE;\r\n  border-radius: 4px;\r\n  color: #C62828;\r\n}\r\n\r\n.retry-btn {\r\n  margin-top: 10px;\r\n  background-color: #9E9E9E;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}