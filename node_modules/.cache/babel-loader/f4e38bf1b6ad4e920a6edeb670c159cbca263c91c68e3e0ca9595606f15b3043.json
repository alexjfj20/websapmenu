{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { getUsers, getRoles, createUser, updateUser, cambiarEstadoUsuario, deleteUser } from '../../services/adminService';\nimport { confirm, alert } from '../../services/dialogService';\nexport default {\n  name: 'AdminUsers',\n  setup() {\n    const users = ref([]);\n    const loading = ref(true);\n    const searchTerm = ref('');\n    const roleFilter = ref('');\n    const statusFilter = ref('');\n    const showModal = ref(false);\n    const isEditing = ref(false);\n    const userForm = ref({\n      id: null,\n      nombre: '',\n      email: '',\n      telefono: '',\n      password: '',\n      estado: 'activo',\n      roles: []\n    });\n\n    // Roles disponibles\n    const availableRoles = ref([{\n      id: 1,\n      nombre: 'Superadministrador'\n    }, {\n      id: 2,\n      nombre: 'Administrador'\n    }, {\n      id: 3,\n      nombre: 'Empleado'\n    }]);\n\n    // Variable para setTimeout de búsqueda\n    let searchTimeout = null;\n\n    // Cargar usuarios al montar el componente\n    onMounted(async () => {\n      await fetchUsers();\n      await fetchRoles();\n    });\n\n    // Buscar usuarios\n    const fetchUsers = async () => {\n      try {\n        loading.value = true;\n        const response = await getUsers();\n        if (response && response.success) {\n          users.value = response.data || [];\n        } else {\n          throw new Error('Error al cargar usuarios');\n        }\n      } catch (error) {\n        console.error('Error al obtener usuarios:', error);\n        await alert('Error al cargar los usuarios: ' + (error.message || 'Error desconocido'));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Buscar roles disponibles\n    const fetchRoles = async () => {\n      try {\n        const response = await getRoles();\n        if (response && response.success) {\n          availableRoles.value = response.data || [];\n        }\n      } catch (error) {\n        console.error('Error al obtener roles:', error);\n      }\n    };\n\n    // Formatear fecha\n    const formatDate = dateStr => {\n      if (!dateStr) return 'N/A';\n      try {\n        const date = new Date(dateStr);\n        if (isNaN(date.getTime())) return 'Fecha inválida';\n        return new Intl.DateTimeFormat('es-ES', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric'\n        }).format(date);\n      } catch (e) {\n        return 'Fecha inválida';\n      }\n    };\n\n    // Obtener clase para la etiqueta del rol\n    const getRoleBadgeClass = role => {\n      switch (role) {\n        case 'Superadministrador':\n          return 'superadmin-role';\n        case 'Administrador':\n          return 'admin-role';\n        case 'Empleado':\n          return 'employee-role';\n        default:\n          return '';\n      }\n    };\n\n    // Filtrado de usuarios\n    const filteredUsers = computed(() => {\n      let result = [...users.value];\n\n      // Filtrar por término de búsqueda\n      if (searchTerm.value) {\n        const term = searchTerm.value.toLowerCase();\n        result = result.filter(user => user.nombre && user.nombre.toLowerCase().includes(term) || user.email && user.email.toLowerCase().includes(term) || user.telefono && user.telefono.toLowerCase().includes(term));\n      }\n\n      // Filtrar por rol\n      if (roleFilter.value) {\n        result = result.filter(user => user.roles && user.roles.includes(roleFilter.value));\n      }\n\n      // Filtrar por estado\n      if (statusFilter.value) {\n        result = result.filter(user => user.estado === statusFilter.value);\n      }\n      return result;\n    });\n\n    // Debounce para la búsqueda\n    const debounceSearch = () => {\n      clearTimeout(searchTimeout);\n      searchTimeout = setTimeout(() => {\n        // Código para buscar\n      }, 300);\n    };\n\n    // Aplicar filtros\n    const applyFilters = () => {\n      // Código para aplicar filtros\n    };\n\n    // Abrir modal para crear usuario\n    const openCreateModal = () => {\n      isEditing.value = false;\n      userForm.value = {\n        id: null,\n        nombre: '',\n        email: '',\n        telefono: '',\n        password: '',\n        estado: 'activo',\n        roles: ['Empleado']\n      };\n      showModal.value = true;\n    };\n\n    // Editar usuario\n    const editUser = user => {\n      isEditing.value = true;\n      userForm.value = {\n        id: user.id,\n        nombre: user.nombre,\n        email: user.email,\n        telefono: user.telefono || '',\n        password: '',\n        // No mostrar contraseña actual\n        estado: user.estado,\n        roles: [...(user.roles || [])]\n      };\n      showModal.value = true;\n    };\n\n    // Cambiar estado de usuario\n    const toggleUserStatus = async user => {\n      try {\n        const newStatus = user.estado === 'activo' ? 'inactivo' : 'activo';\n        const message = `¿Estás seguro de que deseas ${newStatus === 'activo' ? 'activar' : 'desactivar'} al usuario \"${user.nombre}\"?`;\n        const confirmed = await confirm(message, {\n          title: 'Cambiar estado',\n          confirmText: 'Sí, cambiar',\n          cancelText: 'Cancelar'\n        });\n        if (confirmed) {\n          loading.value = true;\n          const response = await cambiarEstadoUsuario(user.id, newStatus);\n          if (response && response.success) {\n            // Actualizar solo el estado del usuario en el array local\n            const index = users.value.findIndex(u => u.id === user.id);\n            if (index !== -1) {\n              users.value[index].estado = newStatus;\n            }\n            await alert(`Usuario ${newStatus === 'activo' ? 'activado' : 'desactivado'} correctamente`);\n          } else {\n            throw new Error('Error al cambiar estado');\n          }\n        }\n      } catch (error) {\n        console.error('Error al cambiar estado del usuario:', error);\n        await alert('Error al cambiar el estado del usuario: ' + (error.message || 'Error desconocido'));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Eliminar usuario\n    const deleteUser = async user => {\n      try {\n        const confirmed = await confirm(`¿Estás seguro de eliminar al usuario \"${user.nombre}\"?`, {\n          title: 'Confirmar eliminación',\n          confirmText: 'Sí, eliminar',\n          cancelText: 'Cancelar'\n        });\n        if (confirmed) {\n          loading.value = true;\n          const response = await deleteUser(user.id);\n          if (response && response.success) {\n            // Eliminar usuario del array local\n            users.value = users.value.filter(u => u.id !== user.id);\n            await alert(`Usuario eliminado correctamente`);\n          } else {\n            throw new Error('Error al eliminar usuario');\n          }\n        }\n      } catch (error) {\n        console.error('Error al eliminar usuario:', error);\n        await alert('Error al eliminar el usuario: ' + (error.message || 'Error desconocido'));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Guardar usuario\n    const saveUser = async () => {\n      try {\n        // Validaciones básicas\n        if (!userForm.value.nombre || !userForm.value.email) {\n          await alert('Por favor complete todos los campos obligatorios');\n          return;\n        }\n        if (!isEditing.value && !userForm.value.password) {\n          await alert('Debe proporcionar una contraseña para el nuevo usuario');\n          return;\n        }\n        if (!userForm.value.roles || userForm.value.roles.length === 0) {\n          await alert('Debe seleccionar al menos un rol para el usuario');\n          return;\n        }\n        loading.value = true;\n        let response;\n        if (isEditing.value) {\n          // Actualizar usuario existente\n          response = await updateUser(userForm.value.id, userForm.value);\n        } else {\n          // Crear nuevo usuario\n          response = await createUser(userForm.value);\n        }\n        if (response && response.success) {\n          await fetchUsers(); // Recargar la lista de usuarios\n          showModal.value = false;\n          await alert(`Usuario ${isEditing.value ? 'actualizado' : 'creado'} correctamente`);\n        } else {\n          throw new Error('Error al guardar usuario');\n        }\n      } catch (error) {\n        console.error('Error al guardar usuario:', error);\n        await alert('Error al guardar el usuario: ' + (error.message || 'Error desconocido'));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Cerrar modal\n    const closeModal = () => {\n      showModal.value = false;\n    };\n    return {\n      users,\n      loading,\n      searchTerm,\n      roleFilter,\n      statusFilter,\n      filteredUsers,\n      showModal,\n      isEditing,\n      userForm,\n      availableRoles,\n      debounceSearch,\n      applyFilters,\n      formatDate,\n      getRoleBadgeClass,\n      openCreateModal,\n      editUser,\n      toggleUserStatus,\n      deleteUser,\n      saveUser,\n      closeModal\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","getUsers","getRoles","createUser","updateUser","cambiarEstadoUsuario","deleteUser","confirm","alert","name","setup","users","loading","searchTerm","roleFilter","statusFilter","showModal","isEditing","userForm","id","nombre","email","telefono","password","estado","roles","availableRoles","searchTimeout","fetchUsers","fetchRoles","value","response","success","data","Error","error","console","message","formatDate","dateStr","date","Date","isNaN","getTime","Intl","DateTimeFormat","day","month","year","format","e","getRoleBadgeClass","role","filteredUsers","result","term","toLowerCase","filter","user","includes","debounceSearch","clearTimeout","setTimeout","applyFilters","openCreateModal","editUser","toggleUserStatus","newStatus","confirmed","title","confirmText","cancelText","index","findIndex","u","saveUser","length","closeModal"],"sources":["F:\\Driver google\\VUE.JS-2\\temp\\websap\\src\\components\\admin\\AdminUsers.vue"],"sourcesContent":["<template>\r\n  <div class=\"users-container\">\r\n    <h2 class=\"section-title\">Gestión de Usuarios</h2>\r\n    \r\n    <!-- Panel de búsqueda y filtros -->\r\n    <div class=\"control-panel\">\r\n      <div class=\"search-box\">\r\n        <input \r\n          type=\"text\" \r\n          v-model=\"searchTerm\" \r\n          placeholder=\"Buscar usuarios...\" \r\n          class=\"search-input\"\r\n          @input=\"debounceSearch\"\r\n        />\r\n        <button class=\"search-btn\">🔍</button>\r\n      </div>\r\n      \r\n      <div class=\"filters\">\r\n        <select v-model=\"roleFilter\" class=\"filter-select\" @change=\"applyFilters\">\r\n          <option value=\"\">Todos los roles</option>\r\n          <option value=\"Superadministrador\">Superadministrador</option>\r\n          <option value=\"Administrador\">Administrador</option>\r\n          <option value=\"Empleado\">Empleado</option>\r\n        </select>\r\n        \r\n        <select v-model=\"statusFilter\" class=\"filter-select\" @change=\"applyFilters\">\r\n          <option value=\"\">Todos los estados</option>\r\n          <option value=\"activo\">Activos</option>\r\n          <option value=\"inactivo\">Inactivos</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <button @click=\"openCreateModal\" class=\"add-user-btn\">\r\n        <span class=\"btn-icon\">➕</span> Nuevo Usuario\r\n      </button>\r\n    </div>\r\n    \r\n    <!-- Tabla de usuarios -->\r\n    <div class=\"users-table-container\">\r\n      <div class=\"loading-overlay\" v-if=\"loading\">\r\n        <div class=\"spinner\"></div>\r\n        <p>Cargando usuarios...</p>\r\n      </div>\r\n      \r\n      <table class=\"users-table\" v-else>\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Email</th>\r\n            <th>Teléfono</th>\r\n            <th>Roles</th>\r\n            <th>Estado</th>\r\n            <th>Fecha Registro</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"filteredUsers.length === 0\">\r\n            <td colspan=\"7\" class=\"no-data\">No se encontraron usuarios</td>\r\n          </tr>\r\n          <tr v-for=\"user in filteredUsers\" :key=\"user.id\" :class=\"{ 'inactive-row': user.estado === 'inactivo' }\">\r\n            <td>{{ user.nombre }}</td>\r\n            <td>{{ user.email }}</td>\r\n            <td>{{ user.telefono || 'N/A' }}</td>\r\n            <td>\r\n              <span \r\n                v-for=\"(role, index) in user.roles\" \r\n                :key=\"index\" \r\n                class=\"role-badge\"\r\n                :class=\"getRoleBadgeClass(role)\"\r\n              >\r\n                {{ role }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span :class=\"['status-badge', user.estado === 'activo' ? 'active' : 'inactive']\">\r\n                {{ user.estado }}\r\n              </span>\r\n            </td>\r\n            <td>{{ formatDate(user.fecha_creacion) }}</td>\r\n            <td class=\"actions-cell\">\r\n              <button @click=\"editUser(user)\" class=\"action-btn edit\">✏️</button>\r\n              <button \r\n                @click=\"toggleUserStatus(user)\" \r\n                :class=\"['action-btn', user.estado === 'activo' ? 'deactivate' : 'activate']\"\r\n                :title=\"user.estado === 'activo' ? 'Desactivar' : 'Activar'\"\r\n              >\r\n                {{ user.estado === 'activo' ? '🔴' : '🟢' }}\r\n              </button>\r\n              <button @click=\"deleteUser(user)\" class=\"action-btn delete\">🗑️</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Modal para crear/editar usuario -->\r\n    <div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\r\n      <div class=\"modal-container\">\r\n        <div class=\"modal-header\">\r\n          <h3>{{ isEditing ? 'Editar Usuario' : 'Crear Nuevo Usuario' }}</h3>\r\n          <button @click=\"closeModal\" class=\"modal-close\">&times;</button>\r\n        </div>\r\n        \r\n        <div class=\"modal-body\">\r\n          <form @submit.prevent=\"saveUser\" class=\"user-form\">\r\n            <div class=\"form-group\">\r\n              <label for=\"nombre\">Nombre completo:</label>\r\n              <input type=\"text\" id=\"nombre\" v-model=\"userForm.nombre\" required>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email:</label>\r\n              <input type=\"email\" id=\"email\" v-model=\"userForm.email\" required>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"telefono\">Teléfono:</label>\r\n              <input type=\"tel\" id=\"telefono\" v-model=\"userForm.telefono\">\r\n            </div>\r\n            \r\n            <div class=\"form-group\" v-if=\"!isEditing\">\r\n              <label for=\"password\">Contraseña:</label>\r\n              <input type=\"password\" id=\"password\" v-model=\"userForm.password\" required>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"estado\">Estado:</label>\r\n              <select id=\"estado\" v-model=\"userForm.estado\">\r\n                <option value=\"activo\">Activo</option>\r\n                <option value=\"inactivo\">Inactivo</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label>Roles:</label>\r\n              <div class=\"roles-checkboxes\">\r\n                <label v-for=\"role in availableRoles\" :key=\"role.id\" class=\"role-checkbox\">\r\n                  <input \r\n                    type=\"checkbox\" \r\n                    :value=\"role.nombre\" \r\n                    v-model=\"userForm.roles\"\r\n                  >\r\n                  <span>{{ role.nombre }}</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"form-actions\">\r\n              <button type=\"button\" @click=\"closeModal\" class=\"cancel-btn\">Cancelar</button>\r\n              <button type=\"submit\" class=\"save-btn\">{{ isEditing ? 'Actualizar' : 'Crear Usuario' }}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { getUsers, getRoles, createUser, updateUser, cambiarEstadoUsuario, deleteUser } from '../../services/adminService';\r\nimport { confirm, alert } from '../../services/dialogService';\r\n\r\nexport default {\r\n  name: 'AdminUsers',\r\n  setup() {\r\n    const users = ref([]);\r\n    const loading = ref(true);\r\n    const searchTerm = ref('');\r\n    const roleFilter = ref('');\r\n    const statusFilter = ref('');\r\n    const showModal = ref(false);\r\n    const isEditing = ref(false);\r\n    const userForm = ref({\r\n      id: null,\r\n      nombre: '',\r\n      email: '',\r\n      telefono: '',\r\n      password: '',\r\n      estado: 'activo',\r\n      roles: []\r\n    });\r\n    \r\n    // Roles disponibles\r\n    const availableRoles = ref([\r\n      { id: 1, nombre: 'Superadministrador' },\r\n      { id: 2, nombre: 'Administrador' },\r\n      { id: 3, nombre: 'Empleado' }\r\n    ]);\r\n    \r\n    // Variable para setTimeout de búsqueda\r\n    let searchTimeout = null;\r\n    \r\n    // Cargar usuarios al montar el componente\r\n    onMounted(async () => {\r\n      await fetchUsers();\r\n      await fetchRoles();\r\n    });\r\n    \r\n    // Buscar usuarios\r\n    const fetchUsers = async () => {\r\n      try {\r\n        loading.value = true;\r\n        const response = await getUsers();\r\n        \r\n        if (response && response.success) {\r\n          users.value = response.data || [];\r\n        } else {\r\n          throw new Error('Error al cargar usuarios');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener usuarios:', error);\r\n        await alert('Error al cargar los usuarios: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Buscar roles disponibles\r\n    const fetchRoles = async () => {\r\n      try {\r\n        const response = await getRoles();\r\n        if (response && response.success) {\r\n          availableRoles.value = response.data || [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener roles:', error);\r\n      }\r\n    };\r\n    \r\n    // Formatear fecha\r\n    const formatDate = (dateStr) => {\r\n      if (!dateStr) return 'N/A';\r\n      \r\n      try {\r\n        const date = new Date(dateStr);\r\n        if (isNaN(date.getTime())) return 'Fecha inválida';\r\n        \r\n        return new Intl.DateTimeFormat('es-ES', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric'\r\n        }).format(date);\r\n      } catch (e) {\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Obtener clase para la etiqueta del rol\r\n    const getRoleBadgeClass = (role) => {\r\n      switch (role) {\r\n        case 'Superadministrador': return 'superadmin-role';\r\n        case 'Administrador': return 'admin-role';\r\n        case 'Empleado': return 'employee-role';\r\n        default: return '';\r\n      }\r\n    };\r\n    \r\n    // Filtrado de usuarios\r\n    const filteredUsers = computed(() => {\r\n      let result = [...users.value];\r\n      \r\n      // Filtrar por término de búsqueda\r\n      if (searchTerm.value) {\r\n        const term = searchTerm.value.toLowerCase();\r\n        result = result.filter(user => \r\n          (user.nombre && user.nombre.toLowerCase().includes(term)) || \r\n          (user.email && user.email.toLowerCase().includes(term)) ||\r\n          (user.telefono && user.telefono.toLowerCase().includes(term))\r\n        );\r\n      }\r\n      \r\n      // Filtrar por rol\r\n      if (roleFilter.value) {\r\n        result = result.filter(user => \r\n          user.roles && user.roles.includes(roleFilter.value)\r\n        );\r\n      }\r\n      \r\n      // Filtrar por estado\r\n      if (statusFilter.value) {\r\n        result = result.filter(user => user.estado === statusFilter.value);\r\n      }\r\n      \r\n      return result;\r\n    });\r\n    \r\n    // Debounce para la búsqueda\r\n    const debounceSearch = () => {\r\n      clearTimeout(searchTimeout);\r\n      searchTimeout = setTimeout(() => {\r\n        // Código para buscar\r\n      }, 300);\r\n    };\r\n    \r\n    // Aplicar filtros\r\n    const applyFilters = () => {\r\n      // Código para aplicar filtros\r\n    };\r\n    \r\n    // Abrir modal para crear usuario\r\n    const openCreateModal = () => {\r\n      isEditing.value = false;\r\n      userForm.value = {\r\n        id: null,\r\n        nombre: '',\r\n        email: '',\r\n        telefono: '',\r\n        password: '',\r\n        estado: 'activo',\r\n        roles: ['Empleado']\r\n      };\r\n      showModal.value = true;\r\n    };\r\n    \r\n    // Editar usuario\r\n    const editUser = (user) => {\r\n      isEditing.value = true;\r\n      userForm.value = {\r\n        id: user.id,\r\n        nombre: user.nombre,\r\n        email: user.email,\r\n        telefono: user.telefono || '',\r\n        password: '', // No mostrar contraseña actual\r\n        estado: user.estado,\r\n        roles: [...(user.roles || [])]\r\n      };\r\n      showModal.value = true;\r\n    };\r\n    \r\n    // Cambiar estado de usuario\r\n    const toggleUserStatus = async (user) => {\r\n      try {\r\n        const newStatus = user.estado === 'activo' ? 'inactivo' : 'activo';\r\n        const message = `¿Estás seguro de que deseas ${newStatus === 'activo' ? 'activar' : 'desactivar'} al usuario \"${user.nombre}\"?`;\r\n        \r\n        const confirmed = await confirm(message, {\r\n          title: 'Cambiar estado',\r\n          confirmText: 'Sí, cambiar',\r\n          cancelText: 'Cancelar'\r\n        });\r\n        \r\n        if (confirmed) {\r\n          loading.value = true;\r\n          const response = await cambiarEstadoUsuario(user.id, newStatus);\r\n          \r\n          if (response && response.success) {\r\n            // Actualizar solo el estado del usuario en el array local\r\n            const index = users.value.findIndex(u => u.id === user.id);\r\n            if (index !== -1) {\r\n              users.value[index].estado = newStatus;\r\n            }\r\n            await alert(`Usuario ${newStatus === 'activo' ? 'activado' : 'desactivado'} correctamente`);\r\n          } else {\r\n            throw new Error('Error al cambiar estado');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al cambiar estado del usuario:', error);\r\n        await alert('Error al cambiar el estado del usuario: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Eliminar usuario\r\n    const deleteUser = async (user) => {\r\n      try {\r\n        const confirmed = await confirm(`¿Estás seguro de eliminar al usuario \"${user.nombre}\"?`, {\r\n          title: 'Confirmar eliminación',\r\n          confirmText: 'Sí, eliminar',\r\n          cancelText: 'Cancelar'\r\n        });\r\n        \r\n        if (confirmed) {\r\n          loading.value = true;\r\n          const response = await deleteUser(user.id);\r\n          \r\n          if (response && response.success) {\r\n            // Eliminar usuario del array local\r\n            users.value = users.value.filter(u => u.id !== user.id);\r\n            await alert(`Usuario eliminado correctamente`);\r\n          } else {\r\n            throw new Error('Error al eliminar usuario');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al eliminar usuario:', error);\r\n        await alert('Error al eliminar el usuario: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Guardar usuario\r\n    const saveUser = async () => {\r\n      try {\r\n        // Validaciones básicas\r\n        if (!userForm.value.nombre || !userForm.value.email) {\r\n          await alert('Por favor complete todos los campos obligatorios');\r\n          return;\r\n        }\r\n        \r\n        if (!isEditing.value && !userForm.value.password) {\r\n          await alert('Debe proporcionar una contraseña para el nuevo usuario');\r\n          return;\r\n        }\r\n        \r\n        if (!userForm.value.roles || userForm.value.roles.length === 0) {\r\n          await alert('Debe seleccionar al menos un rol para el usuario');\r\n          return;\r\n        }\r\n        \r\n        loading.value = true;\r\n        let response;\r\n        \r\n        if (isEditing.value) {\r\n          // Actualizar usuario existente\r\n          response = await updateUser(userForm.value.id, userForm.value);\r\n        } else {\r\n          // Crear nuevo usuario\r\n          response = await createUser(userForm.value);\r\n        }\r\n        \r\n        if (response && response.success) {\r\n          await fetchUsers(); // Recargar la lista de usuarios\r\n          showModal.value = false;\r\n          await alert(`Usuario ${isEditing.value ? 'actualizado' : 'creado'} correctamente`);\r\n        } else {\r\n          throw new Error('Error al guardar usuario');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al guardar usuario:', error);\r\n        await alert('Error al guardar el usuario: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Cerrar modal\r\n    const closeModal = () => {\r\n      showModal.value = false;\r\n    };\r\n    \r\n    return {\r\n      users,\r\n      loading,\r\n      searchTerm,\r\n      roleFilter,\r\n      statusFilter,\r\n      filteredUsers,\r\n      showModal,\r\n      isEditing,\r\n      userForm,\r\n      availableRoles,\r\n      debounceSearch,\r\n      applyFilters,\r\n      formatDate,\r\n      getRoleBadgeClass,\r\n      openCreateModal,\r\n      editUser,\r\n      toggleUserStatus,\r\n      deleteUser,\r\n      saveUser,\r\n      closeModal\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.users-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n/* Panel de control */\r\n.control-panel {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  margin-bottom: 30px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.search-box {\r\n  position: relative;\r\n  min-width: 250px;\r\n  flex: 1;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 40px 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 50px;\r\n  font-size: 15px;\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.05);\r\n}\r\n\r\n.search-btn {\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: none;\r\n  border: none;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.filter-select {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  min-width: 150px;\r\n}\r\n\r\n.add-user-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 30px;\r\n  padding: 10px 20px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.add-user-btn:hover {\r\n  background-color: #45a049;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 16px;\r\n}\r\n\r\n/* Tabla de usuarios */\r\n.users-table-container {\r\n  position: relative;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.loading-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(255,255,255,0.8);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 10;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  border: 3px solid #f3f3f3;\r\n  border-top: 3px solid #4CAF50;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.users-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.users-table th, .users-table td {\r\n  padding: 15px;\r\n  text-align: left;\r\n}\r\n\r\n.users-table th {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n  font-weight: 600;\r\n  white-space: nowrap;\r\n}\r\n\r\n.users-table tr {\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.users-table tbody tr:hover {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.inactive-row {\r\n  opacity: 0.7;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  padding: 30px;\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n/* Badges para roles y estados */\r\n.role-badge {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  margin: 2px;\r\n  border-radius: 50px;\r\n  font-size: 12px;\r\n  white-space: nowrap;\r\n}\r\n\r\n.superadmin-role {\r\n  background-color: #f3e5f5;\r\n  color: #7b1fa2;\r\n}\r\n\r\n.admin-role {\r\n  background-color: #e3f2fd;\r\n  color: #1976d2;\r\n}\r\n\r\n.employee-role {\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.status-badge {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 50px;\r\n  font-size: 12px;\r\n}\r\n\r\n.status-badge.active {\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.status-badge.inactive {\r\n  background-color: #ffebee;\r\n  color: #d32f2f;\r\n}\r\n\r\n/* Botones de acciones */\r\n.actions-cell {\r\n  white-space: nowrap;\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.action-btn {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background-color: #f5f5f5;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.action-btn:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.action-btn.edit:hover {\r\n  background-color: #ffc107;\r\n  color: white;\r\n}\r\n\r\n.action-btn.deactivate:hover {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.action-btn.activate:hover {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.action-btn.delete:hover {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n/* Modal para crear/editar usuario */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 100;\r\n}\r\n\r\n.modal-container {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 600px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.3);\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.modal-close {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #666;\r\n}\r\n\r\n.modal-close:hover {\r\n  color: #333;\r\n}\r\n\r\n.modal-body {\r\n  padding: 20px;\r\n}\r\n\r\n.user-form {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .user-form {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.form-group label {\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.form-group input, \r\n.form-group select {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.roles-checkboxes {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.role-checkbox {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-actions {\r\n  grid-column: span 2;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .form-actions {\r\n    grid-column: span 1;\r\n  }\r\n}\r\n\r\n.save-btn, .cancel-btn {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.save-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #f1f1f1;\r\n  color: #333;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background-color: #e1e1e1;\r\n}\r\n\r\n/* Responsive adjustments */\r\n@media (max-width: 992px) {\r\n  .control-panel {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .search-box, .filters, .add-user-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}