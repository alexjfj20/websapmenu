{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"public-menu\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"menu-content\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"error-message\"\n};\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Menú Público\", -1)), $options.menuId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [$data.loading ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Cargando menú con ID: \" + _toDisplayString($options.menuId), 1)) : $data.menu ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, _toDisplayString($data.menu.name), 1), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, _toDisplayString($data.error), 1), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.retryLoadMenu && $options.retryLoadMenu(...args))\n  }, \"Intentar nuevamente\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6))])) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, _toDisplayString($data.error), 1), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.retryLoadMenu && $options.retryLoadMenu(...args))\n  }, \"Intentar nuevamente\")])) : _createCommentVNode(\"\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"Cargando menú...\", -1)])))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$options","menuId","_hoisted_2","$data","loading","_hoisted_3","_toDisplayString","menu","_hoisted_4","name","error","_hoisted_5","onClick","_cache","args","retryLoadMenu","_hoisted_6","_hoisted_7","_createCommentVNode","_hoisted_8"],"sources":["F:\\Driver google\\VUE.JS-2\\websapmenu\\src\\views\\PublicMenu.vue"],"sourcesContent":["<template>\r\n  <div class=\"public-menu\">\r\n    <h1>Menú Público</h1>\r\n    <!-- Aquí iría el contenido del menú basado en el ID -->\r\n    <div v-if=\"menuId\">\r\n      <p v-if=\"loading\">Cargando menú con ID: {{ menuId }}</p>\r\n      <div v-else-if=\"menu\" class=\"menu-content\">\r\n        <h2>{{ menu.name }}</h2>\r\n        <div v-if=\"error\" class=\"error-message\">\r\n          <p>{{ error }}</p>\r\n          <button @click=\"retryLoadMenu\">Intentar nuevamente</button>\r\n        </div>\r\n        <div v-else>\r\n          <!-- Contenido del menú -->\r\n        </div>\r\n      </div>\r\n      <div v-else-if=\"error\" class=\"error-message\">\r\n        <p>{{ error }}</p>\r\n        <button @click=\"retryLoadMenu\">Intentar nuevamente</button>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <p>Cargando menú...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PublicMenu',\r\n  props: {\r\n    id: {\r\n      type: String,\r\n      required: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      menu: null,\r\n      loading: true,\r\n      error: null\r\n    }\r\n  },  \r\n  computed: {\r\n    menuId() {\r\n      // Usar el ID del prop, del parámetro de ruta o de la variable global\r\n      const fromProps = this.id;\r\n      const fromRoute = this.$route && this.$route.params ? this.$route.params.id : null;\r\n      const fromGlobal = window.MENU_PUBLIC_ID;\r\n      \r\n      return fromProps || fromRoute || fromGlobal;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadMenu();\r\n  },\r\n  methods: {\r\n    async loadMenu() {\r\n      if (!this.menuId) return;\r\n      \r\n      try {\r\n        this.loading = true;\r\n        this.error = null;\r\n        \r\n        // Usamos un formato adecuado para asegurar que recibimos JSON\r\n        const response = await fetch(`/api/menus/${this.menuId}`, {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n        }\r\n        \r\n        // Verificar que la respuesta es JSON válido\r\n        const contentType = response.headers.get('content-type');\r\n        if (!contentType || !contentType.includes('application/json')) {\r\n          throw new Error('La respuesta del servidor no es JSON válido');\r\n        }\r\n        \r\n        this.menu = await response.json();\r\n      } catch (error) {\r\n        console.error(\"Error al cargar el menú:\", error);\r\n        this.error = \"No se pudo cargar el menú. Inténtalo de nuevo más tarde.\";\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    retryLoadMenu() {\r\n      this.loadMenu();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.public-menu {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.error-message {\r\n  color: #d32f2f;\r\n  background-color: #ffebee;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.error-message button {\r\n  background-color: #d32f2f;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\n.error-message button:hover {\r\n  background-color: #b71c1c;\r\n}\r\n\r\n.menu-content {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAD1BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EAM4BD,KAAK,EAAC;;;EANlCC,GAAA;EAQ0BD,KAAK,EAAC;;;EARhCC,GAAA;AAAA;;EAAAA,GAAA;EAgB6BD,KAAK,EAAC;;;EAhBnCC,GAAA;AAAA;;uBACEC,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBJC,mBAAA,CAAqB,YAAjB,cAAY,QAELC,QAAA,CAAAC,MAAM,I,cAAjBJ,mBAAA,CAgBM,OApBVK,UAAA,GAKeC,KAAA,CAAAC,OAAO,I,cAAhBP,mBAAA,CAAwD,KAL9DQ,UAAA,EAKwB,wBAAsB,GAAAC,gBAAA,CAAGN,QAAA,CAAAC,MAAM,SACjCE,KAAA,CAAAI,IAAI,I,cAApBV,mBAAA,CASM,OATNW,UASM,GARJT,mBAAA,CAAwB,YAAAO,gBAAA,CAAjBH,KAAA,CAAAI,IAAI,CAACE,IAAI,OACLN,KAAA,CAAAO,KAAK,I,cAAhBb,mBAAA,CAGM,OAHNc,UAGM,GAFJZ,mBAAA,CAAkB,WAAAO,gBAAA,CAAZH,KAAA,CAAAO,KAAK,OACXX,mBAAA,CAA2D;IAAlDa,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEd,QAAA,CAAAe,aAAA,IAAAf,QAAA,CAAAe,aAAA,IAAAD,IAAA,CAAa;KAAE,qBAAmB,E,oBAEpDjB,mBAAA,CAEM,OAddmB,UAAA,G,KAgBsBb,KAAA,CAAAO,KAAK,I,cAArBb,mBAAA,CAGM,OAHNoB,UAGM,GAFJlB,mBAAA,CAAkB,WAAAO,gBAAA,CAAZH,KAAA,CAAAO,KAAK,OACXX,mBAAA,CAA2D;IAAlDa,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEd,QAAA,CAAAe,aAAA,IAAAf,QAAA,CAAAe,aAAA,IAAAD,IAAA,CAAa;KAAE,qBAAmB,E,KAlB1DI,mBAAA,W,oBAqBIrB,mBAAA,CAEM,OAvBVsB,UAAA,EAAAN,MAAA,QAAAA,MAAA,OAsBMd,mBAAA,CAAuB,WAApB,kBAAgB,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}